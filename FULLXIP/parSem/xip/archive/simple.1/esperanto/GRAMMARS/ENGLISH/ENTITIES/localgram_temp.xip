//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : localgram_temp.xip
//!   Date       : January 2005
//!   Author     : Caroline Hagege
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// This file contains local rules dedicated to temporal expressions
// See also C. Brun's files applied before (localdates.xip)


// EN COURS


IDrules:

//==================================== ADVs ========================================


// two years ago today/yesterday/tomorrow
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> dig[first:+], noun[period:+], adv[lemme:ago], noun[tempexpr:+,last:+] .

10> ADV[tempexpr:+,mwe:+,t_relat:+] -> num[first:+], noun[period:+], adv[lemme:ago], noun[tempexpr:+,last:+] .


10> ADV[tempexpr:+,mwe:+,t_relat:+] -> dig[first:+], noun[period:+], adv[form:fago,last:+].


//SC{NP{He} FV{left}} ADV{ten days ago}
//NP{Ethiopia 's government two weeks} TEST{ago said}
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> num[first:+], noun[period:+], adv[form:fago,last:+].

// a year ago today/tomorrow/yesterday
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> det[first:+,indef:+], noun[period:+], adv[form:fago], noun[tempexpr:+,last:+] .

//a year ago  - a week ago etc
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> det[first:+,indef:+], noun[period:+], adv[form:fago,last:+].

//a_few+QUANT decades ago
//some time ago
//many years ago
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> quant[first:+], noun[period:+], adv[form:fago,last:+].


//several+adj years ago
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> adj[first:+], noun[period:+], adv[form:fago,last:+].


// "long ago" or "not (that | so) long ago" are taken as ADV[tempadv:+]
// NOTE : other expressions with "ago" are treated in the chunker

10> ADV[tempexpr:+,mwe:+,t_relat:+] -> adv[form:fnot], (conj[form:fthat]), (adv[form:fso]), adv[form:flong], adv[form:fago,last:+] .
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> (adv[form:fso]), adv[form:flong], adv[form:fago,last:+] .

// decades ago, years ago
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> noun[pl:+,first:+,period:+], adv[form:fago,last:+] .



//"two days before/after/later
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> dig[first:+], noun[period], adv[time:+,last:+] | ?[det:~,tempexpr:~] |.
10> ADV[tempexpr:+,mwe:+,t_relat:+] -> num[first:+], noun[period], adv[time:+,last:+] | ?[det:~,tempexpr:~] |.


/////////////////////////////// NOMINAL EXPRESSIONS




// Temporal expresssion of the form "the 1980s" when they are preceeded by a preposition
10> NP[tempexpr:+,mwe:+,interval:+] -> | prep | det[def:+], noun[date:+,card:~] | ?[noun:~] | .


// (so) many times
10> NP[tempexpr:+,mwe:+,t_freq:+] -> adv[lemme:so], quant[lemme:many], noun[lemme:time] .
10> NP[tempexpr:+,mwe:+,t_freq:+] -> quant[lemme:many], noun[lemme:time]. 
// from time to time already treated in localdate
// time and again
10> ADV[tempexpr:+,mwe:+,t_freq:+] -> noun[lemme:time], conj[lemme:and], (noun[lemme:time]), adv[lemme:again] .
// time after time
10> ADV[tempexpr:+,mwe:+,t_freq:+] -> noun[lemme:time], adv[lemme:after], noun[lemme:time] .
// several times
10> NP[tempexpr:+,mwe:+,t_freq:+] -> quant[lemme:several], noun[lemme:time,last:+] .



//every/each day/week/month/year/Spring/time
//!!the last[preperiod:+] ADV{few weeks} 
//!!these ADV{few weeks}
//!!through ADV{all time}
//NP{The AP{same} revolution+NOUN every+QUANT year}
//a ADV{year more} - last:+
// CH 20 juillet
// Every 2 days
10> NP[tempexpr:+,mwe:+,t_freq:+] ->  quant[preperiod:+], (dig), noun[period:+,last:+].

10> NP[tempexpr:+,mwe:+,t_freq:+] ->  quant[preperiod:+], (num), noun[period:+,last:+].

// nadj[preperiod] + quant/num/dig period
// e.g. the last few weeks, the next two weeks...
10> NP[tempexpr:+,mwe:+,t_relat:+] -> det, nadj[preperiod:+], (dig), (num), (quant), (adj), noun[period:+] .

// recent years 
10> NP[tempexpr:+,mwe:+,t_relat:+] -> (det[first:+]), adj[period], noun[period:+,last:+] .
// late years
10> NP[tempexpr:+,mwe:+,t_relat:+] -> (det[first:+]), adj[time:+], noun[period:+,last:+] .

// CH 8th October
// NP's like the 50's
10> NP[tempexpr:+,t_absolut:+] -> det, dig, part . 


//CH 24 juillet. NP's like "(the) last/next year" have a special feature.
//They will be subject only if followed by a principal finite verb. 
//Otherwise they will be considered as adverbials. 

10> NP[tempexpr:+] -> (det), (quant), nadj[preperiod:+], ( AP+), noun[period:+,last:+].

// expressions dig minutes to dig - two minutes to four
// e.g. four minutes to five
10> NP[tempexpr:+,hour:+] -> num[card:+,first:+], (noun[lemme:minute]), prep[lemme:to], num[card:+,last:+] . 

// 2 days - two days
10> NP[tempexpr:+] -> num[card:+,first:+], adj*, noun[period:+,last:+].
10> NP[tempexpr:+] -> dig[card:+,first:+], adj*, noun[period:+,last:+] .


// all day, all week etc. all (the) afternoon
10> NP[tempexpr:+,t_relat:+] -> quant[predet:+], (det[def:+]), noun[period:+,last:+,t_relat=+].


// Friday evening
10> NP[tempexpr:+,t_relat:+] -> noun[day:+,t_relat=+], noun[posttime:+] .




Sequence: 


// in the past, in the future
13> NP[tempexpr:+,t_relat:+] = | prep | det[def:+], ?[lemme:past] .
13> NP[tempexpr:+,t_relat:+] = | prep | (det[def:+]), ?[lemme:future] | ?[noun:~,adj:~] | .



// Complex noun with hour:+ followed by another hour:+
// e.g. twelve o'clock midnight (found in corpus)
// adding feature t_absolut on the last element in order to have the feature available for dependency marking
15> NP[tempexpr:+,t_absolut:+] = noun[hour:+], noun[hour:+,t_absolut=+] .

// CH expressions with time_anchor e.g. beginning/end/middle of <tenpexpr>
20> NP[tempexpr:+,t_relat:+] = det, noun[time_anchor:+], prep[lemme:of], (det), noun[tempexpr:+].

20> NP[tempexpr:+,t_relat:+] = (det), noun[time_anchor:+], prep[lemme:of], NP[tempexpr:+].


// A digit (year:+) preceeded by preposition of which is preceeded by something that is not a digit forms a NP[tempexpr]
30> NP[tempexpr:+,t_absolut:+] = | ?[dig:~], prep[lemme:of] | dig[date:+,year:+] .

// A digit (year:+) preceeded by preposition TO preceeded by time_span noun forms a NP[tempexpr]
30> NP[tempexpr:+] = | ?[time_span:+], prep[lemme:to] | dig[date:+,year:+] .


// Build a NP with expressions "coming" + period
30 > NP[tempexpr:+] = | prep[lemme:in] | (det), adj[lemme:come,vprog:+], noun[period:+] .


// The expression "real time" is not a temporal expression.
30> nadj[mwe:+,tempexpr=~] = ?[lemme:real], ?[lemme:time,period=~,tempexpr=~] .



// "EVERY TIME" can be either a temporal np or a conjunction introducing a sub-clause.
//10> CONJ










