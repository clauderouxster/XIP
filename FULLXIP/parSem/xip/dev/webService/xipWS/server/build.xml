<project>
<!--
We can then use the apt tool of JDK 5.0 to process the annotated class and generate portable artifacts for service-side implementation of the web service. We use the Ant task version of apt that comes with the JAX-WS 2.0 RI:
http://today.java.net/pub/a/today/2006/09/19/asynchronous-jax-ws-web-services.html
-->
<target name="build-server-java" depends="setup">
        <apt    fork="true"
                debug="${debug}"
                verbose="${verbose}"
                destdir="${build.classes.home}"
                sourcedestdir="${build.classes.home}"
                sourcepath="${basedir}/src">
            <classpath>
                <path refid="jaxws.classpath"/>
                <pathelement location="${basedir}/src"/>
            </classpath>
            <option key="r" value="${build.home}"/>
            <source dir="${basedir}/src">
                <include name="**/server/*.java"/>
            </source>
        </apt>
 </target>


These are the JavaBeans required by JAXB 2.0 for marshalling and un-marshalling web service request and response messages in JAX/XML binding. To complete our web service development, we need to package the service-side artifacts into a .war archive so that it can be deployed into Tomcat. This is accomplished by the Ant task:

<target name="create-war">
   <war warfile="${build.war.home}/${ant.project.name}.war"
        webxml="etc/web.xml">
       <webinf dir="${basedir}/etc" includes="sun-jaxws.xml"/>
       <classes dir="${build.classes.home}" includes="**/*.class"/>
   </war>

</project>
