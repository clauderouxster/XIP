
RCS file: /opt/ParSem/cvs_repo/parSem/xip/dev/src/kif.cxx,v
Working file: kif.cxx
head: 1.756
branch:
locks: strict
access list:
symbolic names:
	XIP-13-00-B15-codex: 1.749
	XIP-13-00-B15-tmp: 1.749
	XIP-13-00-B14-tmp: 1.749
	XIP-13-00-B13-tmp: 1.748
	XIP-13-00-B12-tmp: 1.748
	XIP-13-00-B11-tmp: 1.748
	XIP-13-00-B10-tmp: 1.748
	XIP-13-00-B08-tmp: 1.747
	XIP-13-00-B07-tmp: 1.747
	XIP-13-00-B06-tmp: 1.743
	XIP-13-00-B03-wdsVisit: 1.721
	XIP-13-00-B03-tmp: 1.730
	XIP-13-00-B02-tmp: 1.717
	XIP-12-00-B04-tmp: 1.713
	XIP-12-00-B03-tmp: 1.712
	XIP-12-00-B02-tmp: 1.712
	XIP-11-0-B12-tmp: 1.711
	XIP-11-0-B11-tmp: 1.697
	XIP-11-0-B10-tmp: 1.697
	XIP-11-0-B08-tmp: 1.690
	XIP-11-0-B05-tmp: 1.684
	XIP-11-0-B04-Parc-Kyle-Dent: 1.675
	XIP-11-0-B04-tmp: 1.675
	XIP-11-0-B03-tmp: 1.674
	XIP-11-0-B02-tmp: 1.667
	XIP-10-02-B37-tmp: 1.660
	XIP-10-02-B36-delivery-Ravel: 1.654
	XIP-10-02-B36-delivery-IDS-09janv2013: 1.654
	XIP-10-02-B36-tmp: 1.654
	XIP-10-02-B35-tmp: 1.650
	XIP-10-02-B33-NunoMamede: 1.636
	XIP-10-02-B33-nunoMamede: 1.625
	XIP-10-02-B33-limsi: 1.625
	XIP-10-02-B33-tmp: 1.636
	XIP-10-02-B31-tmp: 1.615
	XIP-10-02-B30-tmp: 1.615
	XIP-10-02-B29-BarryGombertWebster: 1.602
	XIP-10-02-B29-tmp: 1.602
	XIP-10-02-B28-tmp: 1.601
	XIP-10-02-B27-tmp: 1.598
	XIP-10-02-B26-tmp: 1.584
	XIP-10-02-B23-tmp: 1.573
	XIP-10-02-B21-tmp: 1.570
	XIP-10-02-B20-tmp: 1.567
	XIP-10-02-B19-UCM-17juillet2012: 1.565
	XIP-10-02-B19-tmp-chronolines-16juillet2012: 1.565
	XIP-10-02-B19-tmp: 1.565
	XIP-10-02-B18-tmp: 1.562
	XIP-10-02-B16-tmp1: 1.555
	XIP-10-02-B16-tmp: 1.555
	XIP-10-02-B14-tmp: 1.552
	XIP-10-02-B13-tmp-limsi-pour2mois: 1.549
	XIP-10-02-B13-tmp: 1.549
	XIP-10-02-B07-tmp: 1.536
	XIP-10-01-B99-tmp: 1.520
	XIP-10-01-B92-universiteDeRouen-SDarmoni: 1.508
	XIP-10-01-B92-tmp: 1.508
	XIP-10-01-B91-tmp: 1.506
	XIP-10-01-B89-tmp: 1.505
	XIP-10-01-B79-tmp: 1.477
	XIP-10-01-B78-tmp: 1.476
	XIP-10-01-B77-tmp: 1.476
	XIP-10-01-B71-tmp: 1.424
	XIP-10-01-B69-tmp: 1.420
	XIP-10-01-B66-tmp: 1.410
	XIP-10-01-B65-tmp: 1.405
	XIP-10-01-B63-tmp: 1.402
	XIP-10-01-B61-tmp: 1.397
	XIP-10-01-B60-tmp: 1.393
	XIP-10-01-B58-NunoMamede: 1.377
	XIP-10-01-B58-tmp: 1.377
	XIP-10-01-B57-tmp: 1.369
	XIP-10-01-B55-tmp: 1.364
	XIP-10-01-B51-tmp: 1.355
	XIP-10-01-B50-tmp: 1.354
	XIP-10-01-B48-tmp: 1.328
	XIP-10-01-B47-tmp: 1.318
	XIP-10-01-B46-tmp: 1.318
	XIP-10-01-B44-tmp: 1.302
	XIP-10-01-B43-tmp: 1.292
	XIP-10-01-B32-tmp: 1.282
	XIP-10-01-B30-tmp: 1.279
	XIP-10-01-B28-tmp: 1.276
	XIP-10-01-B26-tmp: 1.274
	XIP-10-01-B20-tmp: 1.260
	XIP-10-01-B18-tmp: 1.248
	XIP-10-01-B17-tmp: 1.244
	XIP-10-01-B12-tmp: 1.231
	XIP-10-01-B08-tmp: 1.202
	XIP-10-01-B07-tmp: 1.202
	XIP-10-01-B06-tmp: 1.202
	XIP-10-00-B99-tmp: 1.195
	XIP-10-00-B97-tmp: 1.193
	XIP-10-00-B95-tmp: 1.187
	XIP-10-00-B94-tmp: 1.181
	XIP-10-00-B89-tmp: 1.165
	XIP-10-00-B87-tmp: 1.156
	XIP-10-00-B84-tmp: 1.153
	XIP-10-00-B75-tmp: 1.132
	XIP-10-00-B72-tmp: 1.125
	XIP-10-00-B71-tmp: 1.121
	XIP-10-00-B52-tmp: 1.71
	XIP-10-00-B50-tmp: 1.67
	XIP-10-00-B48-tmp: 1.62
	XIP-10-00-B47-tmp: 1.59
	XIP-10-00-B44-tmp: 1.51
	XIP-10-00-B43-tmp: 1.49
	XIP-10-00-B42-tmp: 1.44
	XIP-10-00-B35-tmp: 1.34
	XIP-10-00-B23-tmp: 1.18
	XIP-10-00-B18-tmp: 1.10
	XIP-10-00-B16-tmp: 1.9
	XIP-10-00-B14-tmp: 1.6
	XIP-10-00-B12-tmp: 1.5
	XIP-10-00-B11-tmp: 1.3
	XIP-10-00-B10-tmp: 1.2
keyword substitution: kv
total revisions: 756;	selected revisions: 756
description:
----------------------------
revision 1.756
date: 2014/03/19 16:40:34;  author: roux;  state: Exp;  lines: +24 -48

Build 02

On rajoute storevalue, pour remplacer les tests sur kifVector..
----------------------------
revision 1.755
date: 2014/03/19 14:01:52;  author: roux;  state: Exp;  lines: +16 -48

On rajoute storekey pour gerer les maps
----------------------------
revision 1.754
date: 2014/03/18 12:46:58;  author: roux;  state: Exp;  lines: +1 -3

build 1.7 01

On vire les threadowner partout. Desormais la creation d'un objet dans un thread n'a plus de marquage particulier
----------------------------
revision 1.753
date: 2014/02/28 14:49:33;  author: roux;  state: Exp;  lines: +66 -32


Correction d'un bug.

L'appel depuis XIP poussait quelque chose en haut de la pile qui etait assimile de facon erronnee a un KifCallFunction. On a rajoute un test pour verifier si l'objet etait bien de ce type: isaCall().

On a aussi rajoute des PopStack a des endroits qui en manquaient.

On rajoute dans la sortie python les offsets.
----------------------------
revision 1.752
date: 2014/02/28 11:04:55;  author: roux;  state: Exp;  lines: +30 -1

Deux bugs de corriges.

dans vector::String(), sx peut etre vide...

On reinitialise les callfunc dans toutes les fonctions while,until etc... pour eviter les mauvaises surprises dans les boucles.
----------------------------
revision 1.751
date: 2014/02/28 09:07:41;  author: roux;  state: Exp;  lines: +29 -59

Petite modification dans le calcul des expressions numeriques
----------------------------
revision 1.750
date: 2014/02/27 14:20:12;  author: roux;  state: Exp;  lines: +54 -17

Correction d'un gros bug dans le calcul des expressions. On rajoute Val...
----------------------------
revision 1.749
date: 2014/02/12 14:21:26;  author: roux;  state: Exp;  lines: +0 -20

Build 49

On rajoute la methode Items.
On rajoute la methode rulenumber pour les xipnode et les dependances.
On corrige un bug dans la construction de String pour les maps (beaucoup de petites erreurs)
On vire les vecteurs et les maps de BuildNumericalExpression
----------------------------
revision 1.748
date: 2014/01/23 13:22:12;  author: roux;  state: Exp;  lines: +4 -4

Build 45

Gros bug corrige qui survenait lors de l'affectation d'un conteneur avec une sous-partie de lui-meme. Desormais, on fait un Setpopped (qui comprend desormais 2 parametres: v et force) puis on fait le Clear. Enfin, on verifie si le conteneur etait une sous-partie en verifiant la valeur de pop et a ce moment on fait un Setpopped inverse
----------------------------
revision 1.747
date: 2014/01/13 09:56:11;  author: roux;  state: Exp;  lines: +116 -84

Nombreuses maj dans KiF. En particulier, amelioration des performances dans les calculs. Correction de bugs dans la gestion des predicats (en particulier correction dans la lecture des vecteurs avec decomposition), diminution de la taille de la pile dans l'examen des predicats.
----------------------------
revision 1.746
date: 2013/12/02 16:02:37;  author: roux;  state: Exp;  lines: +13 -5

Sous linux, l'appel de la fonction chartobyte pose probleme si la chaine est nulle. On teste donc avant la taille de notre chaine pour eviter les problemes
----------------------------
revision 1.745
date: 2013/12/02 14:38:59;  author: roux;  state: Exp;  lines: +0 -1

On rajoute spotfinalstate et on corrige un bug dans la gestion des etats envoyes par look dans automaton. Si on transmet une chaine vide, ca fait tout planter
----------------------------
revision 1.744
date: 2013/11/29 15:50:40;  author: roux;  state: Exp;  lines: +166 -22

On rajoute des storeInLoop partout pour tous les conteneurs. Correction de bug dans les operations KifCouple, encore des objets (a ici) non liberes.
----------------------------
revision 1.743
date: 2013/11/25 13:41:20;  author: roux;  state: Exp;  lines: +22 -22

On reprend les KifCreateFloat et KifCreateInteger pour en faire des switch avec correction d'erreur sur l'appel de FloatString (qui etait IntegerString)
----------------------------
revision 1.742
date: 2013/11/25 13:24:26;  author: roux;  state: Exp;  lines: +3 -0

Correction d'un bug dans la construction d'un map (a partir de KifBaseMap, on "oubliait" de construire la valeur).

Correction partout dans les Setvalue des possibilites de clefs temporaires qu'il faut desallouer.
Meme chose dans KifCouple
----------------------------
revision 1.741
date: 2013/11/22 16:38:58;  author: roux;  state: Exp;  lines: +2 -0

Deux petits bugs.

Dans l'affectation des noms de type.

Les key n'etaient pas relachee dans KifCouple
----------------------------
revision 1.740
date: 2013/11/18 13:18:47;  author: roux;  state: Exp;  lines: +14 -101

Correction de bugs dans les Index et dans les Setvalue (encore sur les float)
Rajout des Push(KifElement*,KifElement*) pour ameliorer les acces a KifBaseMap.

Amelioration de sparse
----------------------------
revision 1.739
date: 2013/11/15 13:24:30;  author: roux;  state: Exp;  lines: +67 -25

On change l'appel a la conversion
----------------------------
revision 1.738
date: 2013/11/15 12:32:46;  author: roux;  state: Exp;  lines: +2 -0

Correction sur la conversion des float.

Desormais, on peut plus facilement gerer les KifBaseMap et les transformer en map plus specialises.
----------------------------
revision 1.737
date: 2013/11/13 10:10:09;  author: roux;  state: Exp;  lines: +13 -13

On remplace dans les fonctions String(), les string res par des stringstream.
On vire dans les cout et les cerr les STR(...)
----------------------------
revision 1.736
date: 2013/11/07 14:58:04;  author: roux;  state: Exp;  lines: +6 -2

Build 06

Lorsque l'on place un parametre dans le stack via KifCallFunction::SetParameters, et que le nom est -1 (ce qui arrive quand ce n'est pas une variable mais une valeur), alors dans ce cas on cree un nom temporaire a la volee. De plus dans xipkif.cxx on ne cree plus de variables d'instance temporaires et surtout on n'appelle plus kifGlobals->Clean() source inutile d'erreur
----------------------------
revision 1.735
date: 2013/11/04 13:26:22;  author: roux;  state: Exp;  lines: +1 -4

On rajoute loadspacedtext.
On rajoute des tests sur les objets dans le garbage. On remplace join par joined dans les threads.
----------------------------
revision 1.734
date: 2013/10/29 11:09:24;  author: roux;  state: Exp;  lines: +82 -2

Rajout d'un operateur de stream. Modification de kifn.cxx dans lequel les messages sont extraits
----------------------------
revision 1.733
date: 2013/10/24 09:00:39;  author: roux;  state: Exp;  lines: +2 -0

On corrige quelques bugs. D'abord le premier, dans la fonction split le choix du vecteur de reception doit se faire APRES avoir recupere les parametres, sinon gros risque d'ecrasement des donnees.

On doit aussi mettre a jour icurrentfile dans kifGlobals dans AddFilename, fonction qui doit etre fait en tete de KifLoadin.
----------------------------
revision 1.732
date: 2013/10/23 14:33:11;  author: roux;  state: Exp;  lines: +5 -0

On rajoute des tests pour verifier la fin d'execution dans KifInstance et KifInstanceFunction
----------------------------
revision 1.731
date: 2013/10/18 14:30:31;  author: roux;  state: Exp;  lines: +0 -4


On rajoute des indexes specialises pour acceder aux elements des maps specialises pour acceler les operations.
----------------------------
revision 1.730
date: 2013/10/16 14:21:51;  author: roux;  state: Exp;  lines: +14 -1

Correction encore dans les predicats, quand le retour est un svector
----------------------------
revision 1.729
date: 2013/10/16 11:55:00;  author: roux;  state: Exp;  lines: +16 -0

Si la signature n'est pas presente, il faut revenir en arriere
----------------------------
revision 1.728
date: 2013/10/16 11:33:16;  author: roux;  state: Exp;  lines: +141 -30

On rajoute la gestion de la signature dans les fichiers
----------------------------
revision 1.727
date: 2013/10/15 14:58:03;  author: roux;  state: Exp;  lines: +1 -0

On repartit la charge entre differents fichiers. Desormais, les maps sont avec les maps et on a cree un fichier particulier a ete cree pour les automatons.
----------------------------
revision 1.726
date: 2013/10/15 14:22:02;  author: roux;  state: Exp;  lines: +7 -12

On gere un peu mieux les caracteres UTF16
----------------------------
revision 1.725
date: 2013/10/15 12:00:01;  author: roux;  state: Exp;  lines: +53 -50

Gros travail pour permettre de gerer les wstring.
----------------------------
revision 1.724
date: 2013/10/14 16:00:44;  author: roux;  state: Exp;  lines: +3 -3

On repartit les fichiers differement pour eviter les pb de compil sous windows. En particulier, on cree treemaps.cxx pour ne garder que les classes des treemaps
----------------------------
revision 1.723
date: 2013/10/14 09:46:12;  author: roux;  state: Exp;  lines: +187 -7

Rajout du type wfile ainsi que de KifBaseFile dont derivent KifFile et KifFileWide. KifFileWide utilise des wchar_t comme objets
----------------------------
revision 1.722
date: 2013/10/10 15:44:07;  author: roux;  state: Exp;  lines: +14 -1


Desormais un frame peut etre utilise a cheval sur plusieurs fichiers. On rajoute le type private pour les frames. On gere les frames de facon globale sauf quand ils sont private. Les popped dans les Provide etaient forces a zero lorsqu'ils valaient 1. Cela a eu des consequences sur les operations, des valeurs pouvaient se trouver reaffectees en cours d'execution.
----------------------------
revision 1.721
date: 2013/10/07 16:21:27;  author: roux;  state: Exp;  lines: +50 -12

build 20

On gere maintenant les constructions de Loop en stockant en fonction du type de l'objet pour gerer les locks specifiques (style container).
Correction d'un bug. Lorsque le garbage est appele dans la construction enchassee d'un conteneur v=[a.Appel(),b.Appel()], l'appel du garbage pouvait amener a un segmentation fault. Le vecteur courant pouvait etre detruit. Desormais, les popped ne sont plus modifiee du tout
----------------------------
revision 1.720
date: 2013/10/02 14:13:48;  author: roux;  state: Exp;  lines: +2 -6

Correction d'un bug dans KifGlobalThread::Add, on testait avec <= cursormax au lieu de <cursormax. On vire les popping=false dans Modify et on detruit e uniquemnet sous popping
----------------------------
revision 1.719
date: 2013/10/01 12:42:34;  author: roux;  state: Exp;  lines: +39 -20

On rajoute des Release un peu partout.

On rajoute un flag dans v_tokenize pour ou non utiliser le '.' comme separateur
----------------------------
revision 1.718
date: 2013/10/01 10:00:23;  author: roux;  state: Exp;  lines: +46 -43

Correction de plusieurs bugs. Premier bug, dans KifFunction::Execution, le Release sur returnval doit etre suivi d'une modification de returnval lui-meme, sinon on renvoie une valeur nettoyee qui risque un renettoyage derriere dans KifFrame::Run.
Les stackelements n'etaient pas detruit.
On ne faisait pas de release dans SEQUENCE::Execute sur res.

Gros bug aussi sur le nettoyage des elements KifDomain, ou l'on detruisait le framelock alors qu'il etait en cours d'utilisation dans le lock
----------------------------
revision 1.717
date: 2013/09/20 13:28:20;  author: roux;  state: Exp;  lines: +6 -1

Correction de bug:

a) On change desormais le popped de la variable en renvoie juste avant un Garbage.
b) Dans le garbage seules les popped sont mis a zero
c) On fait tres attention avec le fmap renvoye par la fonction associee a un automate, on recupere sa valeur et on la release avant qu'il y ait un probleme. On recupere aussi directement ses valeurs

d) On rajoute un _locker dans KifAutomaton
e) On rajoute "popping" dans gcsize

f) Dans kifmaps, tous les nettoyages (aussi dans kifcontainer.cxx) desormais testent popped avant de changer la valeur dans le conteneur du popped des elements dans le conteneur
----------------------------
revision 1.716
date: 2013/09/13 15:20:02;  author: roux;  state: Exp;  lines: +2 -466

On redistribue le code sur kifglobalthead.cxx et kifmaps.cxx. On rajoute aussi iimap et ifmap
----------------------------
revision 1.715
date: 2013/08/30 09:47:16;  author: roux;  state: Exp;  lines: +1 -0

On rajoute un ke->Release dans KIFIN, pour aussi virer un objet temporaire... Dans kifmain.cxx, pour le -p, on recree un kifcode pour chaque iteration.
----------------------------
revision 1.714
date: 2013/08/21 12:35:17;  author: roux;  state: Exp;  lines: +16 -9

On a integre dans le parseur le travail de Farhad. Desormais, on peut rajouter trois lignes dans un GRM pour indiquer les fichiers dont on a besoin pour charger le modele. On aussi rajouter dans la methode GlobalParseur::Parse les lignes necessaires pour appliquer le tagger sur une suite de mots.
----------------------------
revision 1.713
date: 2013/08/01 07:58:04;  author: roux;  state: Exp;  lines: +334 -183

On associe aux conteneurs et aux strings des locks personnels.
----------------------------
revision 1.712
date: 2013/07/17 13:26:06;  author: roux;  state: Exp;  lines: +51 -14

On modifie desormais la facon dont on accede aux fichiers depuis un GRM. On utilise desormais une classe Fichiergrm pour garder la trace de tous les fichiers necessaires. On rajoute aussi la methode inkif ce qui a un impact sur les boucles for.
----------------------------
revision 1.711
date: 2013/07/10 12:47:57;  author: roux;  state: Exp;  lines: +2 -1

On modifie legerement l'initialisation d'un statique, en rajoutant un init=false pour forcer l'initialisation.
----------------------------
revision 1.710
date: 2013/07/10 12:19:53;  author: roux;  state: Exp;  lines: +26 -1

ON rajoute une methode copy pour les variables statiques.
----------------------------
revision 1.709
date: 2013/07/10 09:07:01;  author: roux;  state: Exp;  lines: +18 -0


Desormais les variables constantes sont gardees au plus au niveau dans KifGlobalThread dans kconstants.
----------------------------
revision 1.708
date: 2013/07/05 14:17:11;  author: roux;  state: Exp;  lines: +63 -24

On a tout d'abord corrige le nettoyage du popped dans KifVariable::Resetreference, qui n'avait rien a faire la et creait des problemes de destruction d'objets pourtant proteges. De plus, nous nettoyons maintenant les retours non utilises de fonction. Enfin, dans le cas d'une sequence avec une erreur, on renvoie desormais un kifNULL. Il arrivait que le pointeur renvoye ne contienne rien, ce qui posait probleme au nettoyage dans KifFunction::Execute
----------------------------
revision 1.707
date: 2013/07/04 08:45:35;  author: roux;  state: Exp;  lines: +62 -58

Remplacement des filestack, linestack et namestack par un stackelement qui contient des Stackelement. De meme KifInstructionStack cree ces Stackelement.
----------------------------
revision 1.706
date: 2013/07/03 14:38:38;  author: roux;  state: Exp;  lines: +205 -21


Build 11

Correction d'un bug lie a un manque d'initialisation dans les regles tokenselection.

Rajout d'un for in range(...) environ 25% plus rapide. De plus, on a multiplie par deux la vitesse de toutes les boucles en minimisant les Push et les Pop. On ne les fait plus qu'une seule fois.
----------------------------
revision 1.705
date: 2013/06/24 09:08:15;  author: roux;  state: Exp;  lines: +1 -514

Reorganisation des fichiers a cause de windows qui parfais s'etouffe lorsque trop de fonctions sont declarees dans les .h.
----------------------------
revision 1.704
date: 2013/06/19 15:12:47;  author: roux;  state: Exp;  lines: +2 -46

Rajout du type table.
----------------------------
revision 1.703
date: 2013/06/18 08:11:01;  author: roux;  state: Exp;  lines: +16 -4

Rajout du ++ et -- pour des conteneurs de valeurs
----------------------------
revision 1.702
date: 2013/06/17 13:27:31;  author: roux;  state: Exp;  lines: +9 -20

Petite correction sur le renvoie des valeurs dans une operation numerique
----------------------------
revision 1.701
date: 2013/06/17 12:36:50;  author: roux;  state: Exp;  lines: +83 -17

On rajoute la possibilite d'ajouter sur des clefs non presentes dans un conteneur de valeurs
----------------------------
revision 1.700
date: 2013/06/14 14:56:26;  author: roux;  state: Exp;  lines: +1 -1

On modifie InitKifLib, pour l'initialisation ait lieu quand les deux pointeurs sont differents...
----------------------------
revision 1.699
date: 2013/06/12 15:06:06;  author: roux;  state: Exp;  lines: +10 -6

Correction du fonctionnement des intervals avec chaines de caractere comme index
----------------------------
revision 1.698
date: 2013/06/11 09:45:57;  author: roux;  state: Exp;  lines: +0 -44

On rajoute des fonctions supplementaires pour reinitialiser kiGlobals et les libs associees
----------------------------
revision 1.697
date: 2013/05/27 09:39:18;  author: roux;  state: Exp;  lines: +3 -0

On rajoute un include
----------------------------
revision 1.696
date: 2013/05/14 13:55:45;  author: roux;  state: Exp;  lines: +3 -2

On verifie de facon plus precise la compatibilite argument/parametre
----------------------------
revision 1.695
date: 2013/05/14 09:43:22;  author: roux;  state: Exp;  lines: +1 -0


Nombreuses modifications:

tout d'abord dans kifcontainer.cxx, on repare le fonctionnement des Pop pour des valeurs negatives. Le dernier element n'etait pas retire.

Dans kiflibs.cxx, on corrige un bug avec les string& name=..., ou une fausse manipulation pouvait ecraser un noeud x_node. On corrige aussi la compilation de FRAME::FUNCTION...

Dans kifmain.cxx, on ameliore l'usage des options.

Dans kifraw, on rajoute la possibilite dans insert de rajouter des blancs partout dans une chaine.

On ameliore enfin l'indentation et on corrige un bug dans v_tokenize (quand une chaine commmence avec un chiffre)
----------------------------
revision 1.694
date: 2013/04/30 14:48:44;  author: roux;  state: Exp;  lines: +3 -0

Ajustement dans TestNumericalBloc... Si l'on commence une expression avec autre chose qu'une chaine avec des chaines au milieu alors on ne doit pas la considerer comme une expression numerique...
----------------------------
revision 1.693
date: 2013/04/18 14:06:08;  author: roux;  state: Exp;  lines: +6 -3

On rajoute un test pour verifier si le thread qui se termine est un thread de nom run_as_thread. Ce qui nous permet alors de finir l'execution et de lancer la fonction de terminaison si celle-ci a ete fournie
----------------------------
revision 1.692
date: 2013/04/17 16:03:24;  author: roux;  state: Exp;  lines: +1 -3

Petite erreur dans la gestion des contextes dans APPLYOPERATION
----------------------------
revision 1.691
date: 2013/04/16 15:44:30;  author: roux;  state: Exp;  lines: +4 -0

Normalisation dans win32
----------------------------
revision 1.690
date: 2013/04/05 14:34:26;  author: roux;  state: Exp;  lines: +46 -7

Correction dans la lecture des chaines depuis un fichier
----------------------------
revision 1.689
date: 2013/04/05 09:51:33;  author: roux;  state: Exp;  lines: +10 -1

Dans le cas d'une recherche de position dans une chaine avec utilisation d'une sous-chaine, on considere le deuxieme indexe, si celui-ci est numerique, comme un deplacement par rapport a la fin de la chaine.
----------------------------
revision 1.688
date: 2013/04/04 14:57:48;  author: roux;  state: Exp;  lines: +2 -0

On extrait kifinit.h de kif.h, ce qui a des effets sur tous les fichiers
----------------------------
revision 1.687
date: 2013/03/26 16:32:50;  author: roux;  state: Exp;  lines: +7 -0

On continue les nettoyages de donnees. Ici, quand on appelle une fonction kparam peut tres bien contenir une valeur temporaire que l'on retire. On rajoute aussi les cases disponibles dans le garbage comme reponse de garbagesurvey
----------------------------
revision 1.686
date: 2013/03/25 17:05:48;  author: roux;  state: Exp;  lines: +75 -241

Nettoyage supplementaire de structure. En particulier, les KifBoolean remplaces par des kifTRUE et kifFALSE.
Nombreuses erreurs de relachement de valeur dans les operations et les couples. En particulier dans les executions specialisees d'operation
----------------------------
revision 1.685
date: 2013/03/22 15:56:05;  author: roux;  state: Exp;  lines: +1 -1

On rajoute un parametre cleandata, pour permettre la destruction de data dans KifCode. De plus KifCodeParseur, si on lui donne un parametre NULL, cree un GlobalParseur. Dans tokenplus, on detruit les fsts directement sans passer par la fonction delete_chck dont on se demande a quoi elle sert vraiment.
----------------------------
revision 1.684
date: 2013/03/21 13:05:19;  author: roux;  state: Exp;  lines: +0 -2

Reorganisation des fichiers d'include.
----------------------------
revision 1.683
date: 2013/03/21 12:22:21;  author: roux;  state: Exp;  lines: +0 -1538

eorganisation des fichiers
Reorganisation des fichiers poru que toutes les methodes Pre soit dans Kifraw. De plus, on vire toute les methodes utilisees lors de la compilation qui restaient encore dans kif.cxx dans kiflibs. Rajout aussi de la methode writeln pour file
----------------------------
revision 1.682
date: 2013/03/21 08:20:38;  author: roux;  state: Exp;  lines: +10 -5

Derniers ajustements dans applyfunction pour renvoyer une reponse tout en se debarassant de a sans degat pour ret.
----------------------------
revision 1.681
date: 2013/03/20 16:32:55;  author: roux;  state: Exp;  lines: +5 -1

Correction d'un bug dans applyfunction. Quand a etait un conteneur dont ret etait extrait, si a etait un conteneur temporaire, alors le "Release" de a pouvait conduire a une destruction de ret. Desormais, on protege ret en incrementant sa reference temporairement.
----------------------------
revision 1.680
date: 2013/03/20 12:57:33;  author: roux;  state: Exp;  lines: +26 -19

Correction:

Tout d'abord dans la facon dont les vector, map et list sont liberes. Il faut tenir compte de la valeur de la reference. Si celle-ci est a -1, cela veut dire qu'il ne faut retirer qu'une couche de reference dans le conteneur. Si elle est a 0, deux couches...

On vire aussi kifXMLNode qui fait doublon avec Kifxml et dont on ne se sert nulle part vraiment. Cela introduisait aussi un bug dans l'affichage de garbagesurvey. Correction du fonctionnement des lectures dans les fichiers. On peut desormais rajouter un compteur pour toutes les formes de lecture
----------------------------
revision 1.679
date: 2013/03/18 17:04:10;  author: roux;  state: Exp;  lines: +3 -3

Ajustement sur les gestion memoire interne, au niveau principalement des predicats.
Amelioration du nettoyage des vector, list et map a travers une fonction dans laquelle values est chaque fois proteges. Meme chose avec Setreference.
----------------------------
revision 1.678
date: 2013/03/15 15:33:05;  author: roux;  state: Exp;  lines: +0 -5

Correction de bugs lies a la liberation de memoire dans les predicats. En particulier, il a fallu virer du code le fait de faire un Setreference suivi d'un Resetreference d'un domain de frame
----------------------------
revision 1.677
date: 2013/03/14 16:48:14;  author: roux;  state: Exp;  lines: +0 -36

On detruit dans KifGlobalThread les elements dans le garbage et les garbages specialises qui trainent encore...
----------------------------
revision 1.676
date: 2013/03/13 13:58:22;  author: roux;  state: Exp;  lines: +14 -1

correction de deux bugs.

Dans kifpredicate.cxx, il restait encore des erreurs pour le choix du bon lieu de recuperation des predicats.

Dans kif.cxx, dans le cas de l'usage d'un contexte au sein d'un calcul, on se retrouvait avec ce contexte ecrase. En effet, dans le cas d'une initialisation avec le contexte lui-meme, il etait d'abord declare comme Evaluate (donc on pouvait l'utiliser pour y stocker des valeurs en l'ecrasant). Mais dans certains cas, il ne faut surtout pas y toucher. Comme par exemple dans une operation l'impliquant.
----------------------------
revision 1.675
date: 2013/03/01 15:19:20;  author: roux;  state: Exp;  lines: +10 -13


Remplacement des strcat et strcpy par des stracat_s et strcpy_s
----------------------------
revision 1.674
date: 2013/02/26 08:22:35;  author: roux;  state: Exp;  lines: +1 -1


Dans testutf8.cxx, on modifie v_tokenize pour pouvoir detecter des chiffres avec exposant. tokenize peut desormais n'avoir aucun argument. Rectification du parse des tuples qui venaient empieter sur les appels de fonction a parametre complexe.
----------------------------
revision 1.673
date: 2013/02/22 12:18:08;  author: roux;  state: Exp;  lines: +2 -0

On corrige la facon dont on considere le 0 dans les chaines et les conteneurs
----------------------------
revision 1.672
date: 2013/02/22 08:46:32;  author: roux;  state: Exp;  lines: +1 -1

Desormais, 0 est considere comme un index et plus un deplacement dans les extractions de chaines et de conteneurs
----------------------------
revision 1.671
date: 2013/02/20 16:44:09;  author: roux;  state: Exp;  lines: +13 -11


Build 03

On rajoute dans xipkif.cxx la possibilite d'extraire les mots d'un transducteur.
Correction d'un bug dans kifpredicate.cxx, il faut aussi tester si la variable appartient au domaine.
De plus, on renvoie maintenant la valeur fail lorsque l'unification echoue.
Les map et vecteur de valeur renvoie un entier ou un flottant 0 plutot que kifNOELEMENT
La division se fait maintenant uniquement avec des floats dans KifInteger, cela evite bien des soucis
----------------------------
revision 1.670
date: 2013/02/15 16:29:14;  author: roux;  state: Exp;  lines: +1 -0

On rajoute la fonction predicatedump et on rajoute une protection dans disamb.cxx pour eviter les problemes
----------------------------
revision 1.669
date: 2013/02/15 12:03:10;  author: roux;  state: Exp;  lines: +6 -1


Rajout de assert et retract dans le prolog de KiF
----------------------------
revision 1.668
date: 2013/02/12 14:23:10;  author: roux;  state: Exp;  lines: +64 -23


Petite modif dans ntm.cxx pour remettre a zero wbf et vtree apres leur destruction, ce qui evite certains accidents dans les debuggers.
----------------------------
revision 1.667
date: 2013/02/06 12:53:34;  author: roux;  state: Exp;  lines: +21 -1

On vire les sprintf() de createaut.cxx pour les remplacer par des sprintf_s..

On rajoute un predicatedatabase qui permet de savoir si des regles de base de donnees sont accrochees a un predicat.
Ce qui permet une meilleure prise en compte du cache et de l'indexation interne

Indexation desormais sur clef dans les switch
----------------------------
revision 1.666
date: 2013/02/05 11:16:21;  author: roux;  state: Exp;  lines: +20 -10


Petites rectifications sur les boucles instructions.size(), ou l'on evite de recalculer celle-ci a tout coup.

Correction d'un gros bug dans les listes de listes (ou tout objet encapsule), l'utilisation de Select dans ces situations est tout bonnement une cata, puisqu'on se retrouve a des niveaux differents dans la recursion avec le meme objet lui-meme integre dans lui-meme...
----------------------------
revision 1.665
date: 2013/02/04 16:23:35;  author: roux;  state: Exp;  lines: +1 -0

On rajoute "is" comme operateur d'affectation pour les afficionados de prolog
----------------------------
revision 1.664
date: 2013/02/04 16:10:57;  author: roux;  state: Exp;  lines: +37 -0

Rajout de kifOperatorString et modification de l'affichage de la trace
----------------------------
revision 1.663
date: 2013/02/04 15:39:16;  author: roux;  state: Exp;  lines: +6 -2

On rajoute la reentrance des arbres dans xip depuis kif.
On rajoute une fonction c_is_number qui renvoie un entier ou float si la chaine en est un

On rajoute les predicats de base de donnees ainsi que les maps comme structure unifiable
----------------------------
revision 1.662
date: 2013/02/01 11:18:28;  author: roux;  state: Exp;  lines: +6 -2

//On change quelques comportements, en particulier on permet l'utilisation traditionnelle de | dans les listes prolog
----------------------------
revision 1.661
date: 2013/01/31 16:25:23;  author: roux;  state: Exp;  lines: +29 -11


Rajout de la persistence dans les predicats. Rajout de la division en liste. Rajout du type predicatevar
----------------------------
revision 1.660
date: 2013/01/24 17:46:06;  author: roux;  state: Exp;  lines: +23 -6

Correction sur les Setpopped et les popped
----------------------------
revision 1.659
date: 2013/01/24 15:00:04;  author: roux;  state: Exp;  lines: +7150 -14464

Build 37 et 02

Rajout des fichiers kifpredicate.cxx et kifcontainer.cxx qui organisent differemment un code devenu trop gros...
Correction d'un bug dans varlibxml.cxx autour de l'annotation interne.

Correction d'un bug autour de de popped qui empechait lors de la sortie d'une fonction de liberer proprement les valeurs.
Rajout de methodes autour des predicats.
----------------------------
revision 1.658
date: 2013/01/09 16:59:34;  author: roux;  state: Exp;  lines: +3 -9

On vire les release dans les errors
----------------------------
revision 1.657
date: 2013/01/08 16:14:31;  author: roux;  state: Exp;  lines: +12 -4

Quelques release de plus
----------------------------
revision 1.656
date: 2013/01/08 16:09:52;  author: roux;  state: Exp;  lines: +49 -1

On rajoute le iterator++, mal place dans KifIteration. Desormais on peut aussi tester une fin d'iteration sur it!=empty | false | null. On rajoute aussi do{}while();
----------------------------
revision 1.655
date: 2013/01/07 16:19:16;  author: roux;  state: Exp;  lines: +95 -234

Retrait de Providevector, Providelist et Providemap de kifGlobals. Desormais, ces elements sont traites dans le garbage global.
----------------------------
revision 1.654
date: 2013/01/04 11:05:21;  author: roux;  state: Exp;  lines: +27 -1

Correction lorsque l'on boucle sur des instances de classe
----------------------------
revision 1.653
date: 2013/01/04 09:48:53;  author: roux;  state: Exp;  lines: +7 -1

Meilleur controle de la facon d'initialiser le thread principal
----------------------------
revision 1.652
date: 2013/01/03 14:47:33;  author: roux;  state: Exp;  lines: +31 -3

Build 05

On rajoute de quoi tester le main thread. Plus un petit verrou dans Error() et ErrorId(), plus que necessaire... La fonction random peut desormais prendre une valeur
----------------------------
revision 1.651
date: 2013/01/02 14:31:03;  author: roux;  state: Exp;  lines: +2 -4

On retire la possibilite d'executer des regles depuis KiF. Tout cela est plus efficacement remplace par addendum.
----------------------------
revision 1.650
date: 2012/12/10 15:47:56;  author: roux;  state: Exp;  lines: +3 -6

On revient a une version plus simple de kthread dans KifCallFunctionPredefined dans le cas d'un thread.
----------------------------
revision 1.649
date: 2012/12/10 13:43:55;  author: roux;  state: Exp;  lines: +43 -56

Build 35

Correction dans la destruction d'un genereGraphe, on ne peut detruire l'element que s'il n'a plus de fils. On risque sinon de se retrouver avec un parent detruit. Dans kif.cxx, meilleure gestion encore des KifCouple. Ils sont desormais construit comme objet sur la pile et nettoye lors de la destruction de celle-ci
----------------------------
revision 1.648
date: 2012/12/07 14:22:11;  author: roux;  state: Exp;  lines: +2 -2

Modification de la gestion des erreurs en renvoyant maintenant kifRAISEERROR... On retire aussi l'erreur sur l'affectation de kifNOELEMENT
----------------------------
revision 1.647
date: 2012/12/07 12:21:33;  author: roux;  state: Exp;  lines: +14 -15

On renvoie plutot kifRAISEERROR comme valeur en cas d'erreur que le pointeur dans errorptr, qui risque trop d'etre happe par le mecanisme de destruction de KiF.
----------------------------
revision 1.646
date: 2012/12/06 15:56:57;  author: roux;  state: Exp;  lines: +2 -2

On remonte une exception lorsque l'on tente d'affecter une valeur empty
----------------------------
revision 1.645
date: 2012/12/06 15:06:24;  author: roux;  state: Exp;  lines: +90 -49

Gros travail sur empty. Desormais, la valeur empty ne peut etre stockee. De plus, on a rajoute la notion de StringForDisplay utilise uniquement dans les Print, pour pouvoir afficher cette valeur, sans perturber le fonctionnement de String pour lequel ON ne veut pas renvoyer autre chose que du blanc dans le cas de null et empty...
----------------------------
revision 1.644
date: 2012/12/06 12:14:48;  author: roux;  state: Exp;  lines: +170 -153

Build 2

Meilleure gestion des KifCouple qui desormais ont leur propre garbage. Le nettoyage se fait soit dans Execute ou Setvalue et permet de gerer efficacement les destructions et les reutilisations de KifCouple. Dans ~KifGlobalThread, on a rajoute une boucle pour detruire les valeurs non utilisees.
----------------------------
revision 1.643
date: 2012/12/05 09:29:16;  author: roux;  state: Exp;  lines: +2 -2

Petits ajustements sur la facon dont on gere les KifCouple dans le calcul des instances. On vire desormais la variable couple de KifInstance pour en faire une variable locale a l'execution
----------------------------
revision 1.642
date: 2012/12/04 17:17:16;  author: roux;  state: Exp;  lines: +12 -2

On protege mieux les appels a couple
----------------------------
revision 1.641
date: 2012/12/04 16:47:20;  author: roux;  state: Exp;  lines: +32 -56

Build 11

Correction dans kifraw.cxx, la fonction IteratorSetvalue a bizarrement disparu, une fausse manoeuvre j'espere.
On a deplace dans testutf8.cxx les methodes Trim et v_split dont l'usage est assez sensible.

On rajoute une methode dans xipkif.cxx pour executer depuis java un bout de code kif.

Enfin dans kif.cxx on retire desormais les locks des threads quand ils sortent si le menage avec des unlocks n'avait pas ete fait
----------------------------
revision 1.640
date: 2012/11/28 15:44:06;  author: roux;  state: Exp;  lines: +49 -49

Build 9

On vire toutes les references a XXX(999) pour remplacer l'arret d'un programme KiF depuis l'exterieur par la variable executionbreak. Cette variable est associee avec la possibilite de lancer une fonction de nettoyage depuis le thread principal.
----------------------------
revision 1.639
date: 2012/11/27 16:33:41;  author: roux;  state: Exp;  lines: +32 -9

Build 9

Correction sur la gestion du self, lorsque l'on range une valeur, il faut evidemment lui faire un Setreference, en revanche lors d'un Resetreference sur un self, il ne faut pas oublier de decrementer clean. Desormais, les objets places dans le self ont un compteur associe clean qui garde le nombre de fois qu'un objet dans le self a ete incremente pour le decrementer d'autant.
----------------------------
revision 1.638
date: 2012/11/23 14:41:51;  author: roux;  state: Exp;  lines: +166 -34

On rajoute le type byte. Et on ameliore quelques fontions. On rajoute aussi le removefeature par les methodes commentees
----------------------------
revision 1.637
date: 2012/11/22 14:36:58;  author: roux;  state: Exp;  lines: +9 -55

Build 34

On deplace l'interpretation des entites dans testutf8.cxx, ou ils se doivent d'etre. Desormais, on peut non seulement interpreter les metacaracteres dans une chaine mais aussi generer une chaine HTML a partir d'une chaine normale.

On vire aussi les strlen dans des boucles.
----------------------------
revision 1.636
date: 2012/11/21 14:18:54;  author: roux;  state: Exp;  lines: +3 -11

On vire desormais carac_equiv de testutf8.cxx ou il n'a rien a faire. On rajoute la methode PreEvaluateMeta. On reprend le traitement des chaines et les caracteres metas. La methode carac_equiv n'est utilise que dans transduct.cxx
----------------------------
revision 1.635
date: 2012/11/19 16:37:29;  author: roux;  state: Exp;  lines: +10 -8

Pour un apply sur a container value, on utilise desormais IteratorSetValue pour replacer la nouvelle valeur a son endroit. Aussi, on renvoie kifNOELEMENT pour next, etc.
----------------------------
revision 1.634
date: 2012/11/19 15:35:52;  author: roux;  state: Exp;  lines: +358 -42

Build 7

On rajoute and,or pour KifMapString et KifVectorString, ainsi que xorset pour les maps et autres vecteurs, listes
----------------------------
revision 1.633
date: 2012/11/16 16:00:28;  author: roux;  state: Exp;  lines: +0 -8

Retour en arriere
----------------------------
revision 1.632
date: 2012/11/16 15:51:53;  author: roux;  state: Exp;  lines: +0 -6

On retire mainthreadid
----------------------------
revision 1.631
date: 2012/11/16 15:35:57;  author: roux;  state: Exp;  lines: +41 -44

On rajoute Topid, pas la peine de refaire un GetThreadId si c'est deja fait
----------------------------
revision 1.630
date: 2012/11/16 12:25:42;  author: roux;  state: Exp;  lines: +5 -2

Petit ajustement sur le debugging dans Run
----------------------------
revision 1.629
date: 2012/11/16 12:22:22;  author: roux;  state: Exp;  lines: +97 -537

Build 6

On retire les methodes Evalue un peu trop rodondante et finalement pas tres utiles. On modifie KifInstructionStack qui n'est plus recree a chaque iteration.
----------------------------
revision 1.628
date: 2012/11/15 15:22:10;  author: roux;  state: Exp;  lines: +79 -54

On ameliore l'appel au debuggage en utilisant un pointeur plutot qu'un appel
----------------------------
revision 1.627
date: 2012/11/15 09:57:57;  author: roux;  state: Exp;  lines: +13 -5

On change le fonctionnement de la sortie de fonction avec deux variables, l'une pour definir la profondeur de la recursion (kiffunctioncount) et l'autre le point ou l'on s'arrete, generalement cette position -1
----------------------------
revision 1.626
date: 2012/11/14 16:29:08;  author: roux;  state: Exp;  lines: +7 -9

On reutilise kinfunction de facon differente, il avait perdu tout role. Desormais, cette variable vaut true des que l'on entre dans une fonction. Elle devient faux, juste apres...
----------------------------
revision 1.625
date: 2012/11/13 10:45:01;  author: roux;  state: Exp;  lines: +8 -3

Rien
----------------------------
revision 1.624
date: 2012/11/12 16:21:32;  author: roux;  state: Exp;  lines: +12 -0

Aussi pour les map
----------------------------
revision 1.623
date: 2012/11/12 16:20:28;  author: roux;  state: Exp;  lines: +15 -0

Dans les Setvalue des vecteurs, une valeur kifNULL ne signifie pas une erreur
----------------------------
revision 1.622
date: 2012/11/12 14:42:01;  author: roux;  state: Exp;  lines: +3 -4

Apres un resize, on fait une affectation directe
----------------------------
revision 1.621
date: 2012/11/12 14:38:46;  author: roux;  state: Exp;  lines: +11 -4

On fait des resize dans les Copy des vecteurs
----------------------------
revision 1.620
date: 2012/11/12 14:23:22;  author: roux;  state: Exp;  lines: +436 -330

Acces direct au donnee
----------------------------
revision 1.619
date: 2012/11/12 09:49:41;  author: roux;  state: Exp;  lines: +5 -2

Petites corrections sur la generation des KifBaseString placee dans des vecteurs. On ne passe plus par Push qui entrainait la creation d'un KifString via atom
----------------------------
revision 1.618
date: 2012/11/09 15:29:31;  author: roux;  state: Exp;  lines: +51 -15

Rajout des chaines de type: @" .... "@
----------------------------
revision 1.617
date: 2012/11/09 13:41:01;  author: roux;  state: Exp;  lines: +5 -0

On rajoute des Release pour KifIteration* itr manquant
----------------------------
revision 1.616
date: 2012/11/08 13:36:39;  author: roux;  state: Exp;  lines: +103 -259

On corrige les initialisations de Value map et vectors
----------------------------
revision 1.615
date: 2012/11/05 10:12:47;  author: roux;  state: Exp;  lines: +8 -5



On remplace Return par _return. On rajoute la notion d'erreur provenant de la compilation, pour eviter les duplications de ligne dans le texte
----------------------------
revision 1.614
date: 2012/10/25 16:00:46;  author: roux;  state: Exp;  lines: +17 -4

On rajoute min et max pour les conteneurs, mais aussi avec n elements
----------------------------
revision 1.613
date: 2012/10/25 15:22:16;  author: roux;  state: Exp;  lines: +10 -4

On rajoute min et max
----------------------------
revision 1.612
date: 2012/10/25 13:38:08;  author: roux;  state: Exp;  lines: +149 -3

Rajout de Merge pour toutes les formes de vectors et de map
----------------------------
revision 1.611
date: 2012/10/19 11:18:57;  author: roux;  state: Exp;  lines: +457 -349

Modification de PreOrd pour renvoyer un entier pour une chaine de 1 caractere. Methods est modifie dans xipkif et kifsparse on renvoie et on gere des ValueContainer
----------------------------
revision 1.610
date: 2012/10/18 10:09:19;  author: roux;  state: Exp;  lines: +27 -5

On rajoute tous les Selectmap possibles plus une fonction dans testutf8.cxx pour prendre un vector de long en parametres dans PreOrd, de facon a utiliser directement le vecteur d'un KifVectorInteger
----------------------------
revision 1.609
date: 2012/10/17 15:53:06;  author: roux;  state: Exp;  lines: +3 -3

Choix d'un vecteur
----------------------------
revision 1.608
date: 2012/10/17 15:37:07;  author: roux;  state: Exp;  lines: +15 -80

On rajoute la selection sur les ValueVector
----------------------------
revision 1.607
date: 2012/10/17 14:32:15;  author: roux;  state: Exp;  lines: +4 -0

On rajoute un Release dans orset et andset de KifVector
----------------------------
revision 1.606
date: 2012/10/17 13:54:03;  author: roux;  state: Exp;  lines: +33 -1

rajout d'un resetreference pour self plus un clean pour indiquer le lachage du truc. Quelques ajustements avec les ValueVector
----------------------------
revision 1.605
date: 2012/10/17 12:35:19;  author: roux;  state: Exp;  lines: +2852 -1916

KiF 1.06 build 01

On rajoute les types: ivector, svector et fvector. De plus on renvoie ces objets depuis nombre de fonctions. Acceleration maximale.
On utilise aussi massivement les KifIteration natifs pour boucler sur des conteneurs sans se poser des questions
----------------------------
revision 1.604
date: 2012/10/15 14:34:54;  author: roux;  state: Exp;  lines: +10 -9

Desormais idstdin a un code qui suit pi et e
----------------------------
revision 1.603
date: 2012/10/15 12:33:13;  author: roux;  state: Exp;  lines: +28 -2

On rajoute le caractere grec pi comme variable et on initialisate correctement dans KifGlobalThread les locks
----------------------------
revision 1.602
date: 2012/10/10 14:17:07;  author: roux;  state: Exp;  lines: +47 -43

Refonte des verrous communs. Jusque la ils etaient stockes dans table un static dans la classe ThreadLock, mais pour des raisons de partage de memoire entre bibs, cela ne fonctionne pas. On a donc deplace cette table dans KifGlobalThread avec comme nom tableofcommonlocks
----------------------------
revision 1.601
date: 2012/10/08 15:24:19;  author: roux;  state: Exp;  lines: +2 -2

On deplace le ThreadLock
----------------------------
revision 1.600
date: 2012/10/08 14:32:29;  author: roux;  state: Exp;  lines: +47 -7

Petite modif pour rajouter un Cleanallerror
----------------------------
revision 1.599
date: 2012/10/05 09:44:27;  author: roux;  state: Exp;  lines: +3 -5

On verifie que dans une SEQUENCE de 1 element, celui-ci ne soit pas une variable. On retire les release sur des res qui ne servent a priori a rien. On rajoute Return de facon a disposer d'un repars
----------------------------
revision 1.598
date: 2012/10/02 14:37:35;  author: roux;  state: Exp;  lines: +2 -2

Desormais, on ne reutilise un vecteur ou un map que s'il n'est pas sureference
----------------------------
revision 1.597
date: 2012/10/02 14:22:46;  author: roux;  state: Exp;  lines: +2 -2

On indente le code dans kifn.cxx (pas important) et on corrige un bug genant dans KifVector (Evalue et Execute) sur l'utilisation lors de l'extraction d'un sous-vecteur de Selectvector QUI ne doit surtout pas etre utilise dans ce contexte (puisqu'il peut detruire le vecteur courant)
----------------------------
revision 1.596
date: 2012/09/28 15:08:57;  author: roux;  state: Exp;  lines: +0 -5

On retire les Garbage dans les while, for et autre forin
----------------------------
revision 1.595
date: 2012/09/27 16:03:36;  author: roux;  state: Exp;  lines: +45 -10

On lance desormais les threads sous windows avec _beginthreadex
----------------------------
revision 1.594
date: 2012/09/26 14:26:04;  author: roux;  state: Exp;  lines: +12 -0

Rajout de _pi et _e et suppression d'un message KIFREGEX
----------------------------
revision 1.593
date: 2012/09/26 09:02:20;  author: roux;  state: Exp;  lines: +80 -11

Rajout de la possibilite d'extraire un sous-vecteur sur la base de deux chaines. Desormais tokenize prend deux parametres pour gerer les nombres (en liste en particulier) et enfin on retire #,$ etc de la liste des ponctuations
----------------------------
revision 1.592
date: 2012/09/24 15:16:15;  author: roux;  state: Exp;  lines: +3 -0

On rajoute PreTokenize avec des methodes de conversion pour les ponctuations
----------------------------
revision 1.591
date: 2012/09/21 08:51:27;  author: roux;  state: Exp;  lines: +1 -1

Dans le split on fait le Selectvector a la fin
----------------------------
revision 1.590
date: 2012/09/20 16:31:43;  author: roux;  state: Exp;  lines: +1 -2

Petite modification dans kif.cxx pour "popped" la valeur et eviter qu'elle ne soit detruite trop tot. On inverse aussi la recuperation de la chaine et celle du vecteur...
----------------------------
revision 1.589
date: 2012/09/20 15:55:59;  author: roux;  state: Exp;  lines: +2 -0


Dnas le cas d'un appel de fonction via un bloc (appel a une fonction predefinie), parametre[0], il faut rereference la variable avant l'appel, car si elle a ete extraite d'un conteneur qui peut etre mis a zero (v=v[0].split()), on perd desormais la valeur de la chaine (remise a zero depuis peu dans KifString::Resetreference)
----------------------------
revision 1.588
date: 2012/09/20 15:01:38;  author: roux;  state: Exp;  lines: +12 -29

On retire les fins de fonction dans les while et le reste
----------------------------
revision 1.587
date: 2012/09/19 13:59:01;  author: roux;  state: Exp;  lines: +1 -0

On rajoute une fonction d'affichage en plus du reste. De cette facon on peut appeler une fonction depuis n'importe ou pendant le traitement du print
----------------------------
revision 1.586
date: 2012/09/18 14:26:34;  author: roux;  state: Exp;  lines: +85 -58

On regle un probleme lorsque l'on relache un conteneur. Dans certins cas toutes les valeurs n'etaient pas relachees, du fait d'une boucle manquante lorsque la reference du conteneur passait a zero
----------------------------
revision 1.585
date: 2012/09/17 16:00:53;  author: roux;  state: Exp;  lines: +21 -9

build 27,09

Correction de deux bugs dans KiF.
a) On detruit correctement les KifError
b) On fait deriver KifVariableDeclaration de KifPosition ainsi que KifConst

dans XIP

On corrige l'erreur sur les split rules, on ne tenait pas compte de l'erreur sur le where, les else etaient en mauvaise ordre
----------------------------
revision 1.584
date: 2012/09/13 14:46:03;  author: roux;  state: Exp;  lines: +22 -14

On rajoute des stacking pour garder la trace de la position
----------------------------
revision 1.583
date: 2012/09/13 14:19:18;  author: roux;  state: Exp;  lines: +22 -30

On repere les sequences qui ne comprennent qu'un seul element pour eliminer un appel inutile
----------------------------
revision 1.582
date: 2012/09/12 16:01:41;  author: roux;  state: Exp;  lines: +4 -2

Bof...
----------------------------
revision 1.581
date: 2012/09/12 16:00:20;  author: roux;  state: Exp;  lines: +2 -4

On vire une variable
----------------------------
revision 1.580
date: 2012/09/12 15:59:03;  author: roux;  state: Exp;  lines: +2 -2

Encore une simplificiation
----------------------------
revision 1.579
date: 2012/09/12 15:57:31;  author: roux;  state: Exp;  lines: +4 -4

Quelques simplifications
----------------------------
revision 1.578
date: 2012/09/12 15:56:38;  author: roux;  state: Exp;  lines: +6 -6

On rajoute un lock sur la duplication du vecteur
----------------------------
revision 1.577
date: 2012/09/12 15:53:22;  author: roux;  state: Exp;  lines: +1 -1

On protege l'acces au debugger depuis des threads avec un lock
----------------------------
revision 1.576
date: 2012/09/12 15:47:43;  author: roux;  state: Exp;  lines: +12 -0

On duplique les KifBaseVector comme valeur
----------------------------
revision 1.575
date: 2012/09/12 14:17:18;  author: roux;  state: Exp;  lines: +2 -2

Petite amelioration
----------------------------
revision 1.574
date: 2012/08/30 07:59:38;  author: roux;  state: Exp;  lines: +36 -6

Copie des autres map
----------------------------
revision 1.573
date: 2012/08/29 15:50:00;  author: roux;  state: Exp;  lines: +26 -8

On rajoute la duplication d'un map via m[:]
----------------------------
revision 1.572
date: 2012/08/28 08:01:52;  author: roux;  state: Exp;  lines: +4 -0

Dans WIN32, les \n sont des \r\n
----------------------------
revision 1.571
date: 2012/08/27 16:47:08;  author: roux;  state: Exp;  lines: +6 -0

On rajoute _endl
----------------------------
revision 1.570
date: 2012/08/27 12:41:36;  author: roux;  state: Exp;  lines: +6 -35

Correction d'un bug dans la construction du root. Quand la meme variable est utilisee plusieurs fois, il faut la dupliquer
----------------------------
revision 1.569
date: 2012/08/22 13:01:12;  author: roux;  state: Exp;  lines: +5 -5

Petites modifications dans l'evaluation d'une chaine pour en faire un vecteur ou un map. On retire le dom de l'appel de KifBrowse pour eviter de ranger cet element dedans.
----------------------------
revision 1.568
date: 2012/07/19 12:39:45;  author: roux;  state: Exp;  lines: +6 -6

Quelques corrections mineures. On remplace les tests: type==kifVector par aVector()
----------------------------
revision 1.567
date: 2012/07/10 12:26:20;  author: roux;  state: Exp;  lines: +374 -101

Rajout des types imap etc... Remplacement de max par maxc dans kiflibs. dans xipkif.cxx on remplace les KifString par des KifBaseString
----------------------------
revision 1.566
date: 2012/07/05 14:11:15;  author: roux;  state: Exp;  lines: +2031 -3

Build 1

Rajout des types: smap, imap et fmap pour gerer des maps specialises, chaine, entier et reel
----------------------------
revision 1.565
date: 2012/06/25 11:58:08;  author: roux;  state: Exp;  lines: +35 -22

Tout d'abord, modif importante, desormais un acces a une mauvaise clef dans un conteneur renvoie une exception. Enfin, on gere un peu mieux les operations sur des vecteurs issues de matrices.
----------------------------
revision 1.564
date: 2012/06/20 08:28:58;  author: roux;  state: Exp;  lines: +204 -203

Correction d'un bug dans l'annotation XML. Modification legere dans le comportement de KiF. En particulier correction d'un bug rajoute lorsque l'on affiche une chaine. Le release rajoute il y a peu etait une erreur
----------------------------
revision 1.563
date: 2012/06/18 09:09:32;  author: roux;  state: Exp;  lines: +21 -21


Difference dans le calcul de Atom pour KifBase... ou la duplication est systematique. En revanche, ce n'est pas le cas pour les classes meres.
----------------------------
revision 1.562
date: 2012/06/15 12:21:59;  author: roux;  state: Exp;  lines: +10 -6

Modification pour nettoyer encore plus de structures
----------------------------
revision 1.561
date: 2012/06/15 09:53:36;  author: roux;  state: Exp;  lines: +17 -11

On peut aussi liberer val
----------------------------
revision 1.560
date: 2012/06/11 15:54:45;  author: roux;  state: Exp;  lines: +129 -53

On rajoute map et vector aux methodes Map et Vector de facon a eviter les multiplications de copie
----------------------------
revision 1.559
date: 2012/06/11 14:34:08;  author: roux;  state: Exp;  lines: +2 -1

On retire des traces de doigts
----------------------------
revision 1.558
date: 2012/06/11 14:31:00;  author: roux;  state: Exp;  lines: +1 -2

On rajoute kifsparseline comme type
----------------------------
revision 1.557
date: 2012/06/07 08:04:45;  author: roux;  state: Exp;  lines: +2 -2

Correction d'un bug, dans le cas d'une boucle FORIN, il fallait tester si dom n'etait pas le domaine de base.
----------------------------
revision 1.556
date: 2012/06/01 11:26:41;  author: roux;  state: Exp;  lines: +322 -255


build 18

Trop de modifs pour toutes les decrire, essentiellement dans KiF. En revanche, correction d'un bug systeme dans mathemat.cxx, un strcpy(tampon,tampon+1) qui donnait un resultat bizarre.
----------------------------
revision 1.555
date: 2012/02/24 16:17:33;  author: roux;  state: Exp;  lines: +2 -2

Correction d'un bug dans les templates. Les methodes de calcul ont trois parametres et non deux. On utilise desormais VECTE en lieu et place de VECTA
----------------------------
revision 1.554
date: 2012/02/21 14:31:34;  author: roux;  state: Exp;  lines: +1 -1

Build 16

Correction d'un bug dans le chargement des fichers cryptes et des fichiers parametres non cryptes. hash devient aussi une fonction et non une simple methode
----------------------------
revision 1.553
date: 2012/02/14 08:31:10;  author: roux;  state: Exp;  lines: +15 -14

Modification dans le traitement des intervals et dans l'adjonction de kifZERO. Modification de ontologies.cxx pour etre plus efficace
----------------------------
revision 1.552
date: 2012/02/08 08:45:34;  author: roux;  state: Exp;  lines: +38 -38

On remplace le type matrix par weka
----------------------------
revision 1.551
date: 2012/02/06 09:41:21;  author: roux;  state: Exp;  lines: +2 -18

Desormais les regex sont traites comme une lib externe et toute mention en ait retire des fichiers de base
----------------------------
revision 1.550
date: 2012/02/02 10:26:11;  author: roux;  state: Exp;  lines: +1 -1

Desormais kstart est un KifBaseFrame pour eviter des destructions intempestives via Resetreference
----------------------------
revision 1.549
date: 2012/01/26 13:36:49;  author: roux;  state: Exp;  lines: +0 -5

Petite erreur dans l'interpretation ancienne des APPLYOPERATION. La necessite ancienne de tester le type de val n'a plus de sens
----------------------------
revision 1.548
date: 2012/01/25 15:22:12;  author: roux;  state: Exp;  lines: +37 -1

Modification sur la facon de gerer les in dans des vecteurs ou des maps
----------------------------
revision 1.547
date: 2012/01/24 10:11:53;  author: roux;  state: Exp;  lines: +4 -6

Pas de modif notable
----------------------------
revision 1.546
date: 2012/01/23 16:19:48;  author: roux;  state: Exp;  lines: +28 -23

Il se peut que dans INITIALISATION, instructions soit vide
----------------------------
revision 1.545
date: 2012/01/23 12:36:59;  author: roux;  state: Exp;  lines: +2 -0

On protege contre un garbage lors d'un gcsize()
----------------------------
revision 1.544
date: 2012/01/23 12:33:13;  author: roux;  state: Exp;  lines: +62 -35

Build 17

Quelques modifications importantes. Tout d'abord dans RemoveThreadidReference, il faut absolument utiliser des lock de type kifPString pour etre en phase avec les Provide. Autre modif, dans Loadfile on utilise locals pour mettre a jour les references, ce qui est a la fois beaucoup plus precis et corrige des problemes.
----------------------------
revision 1.543
date: 2012/01/17 16:00:25;  author: roux;  state: Exp;  lines: +3 -2

On corrige un bug, dans KifElement* KifCallFunctionPredefined::Declaration(short n), on renvoyait systematiquement un kifGlobals->kifBaseFunctions[n]; ce qui dans certains cas creait un element NULL dans ce map...
----------------------------
revision 1.542
date: 2012/01/16 15:43:56;  author: roux;  state: Exp;  lines: +6 -3

Bug 15

Correction d'un bug dans l'appel d'une fonction d'un lib externe portant le meme nom qu'une fonction predefinie
----------------------------
revision 1.541
date: 2012/01/13 15:38:22;  author: roux;  state: Exp;  lines: +8 -16

On remplace des kv= par des return directs
----------------------------
revision 1.540
date: 2012/01/11 17:34:28;  author: roux;  state: Exp;  lines: +60 -32

Build 09, build 13

Correction dans fltk de la gestion des styles, on pouvait se retrouver a taper dans des cases au-dela des indexes, d'ou plantage. Petite correction sur le relachement des threads locks. Ajout de la methode buffer pour recuperer le buffer interne dans XIP
----------------------------
revision 1.539
date: 2012/01/09 14:07:10;  author: roux;  state: Exp;  lines: +12 -10

On modifie les appels de type FRAME::function qui deviennent partie de la sous-frame.
On appelle desormais aussi ResetOnNull pour tous les objets temporaires, en particulier dans AFFECTATION et dans l'appel d'une fonction enchainee applyfunc depuis un appel de fonction
----------------------------
revision 1.538
date: 2012/01/06 13:52:08;  author: roux;  state: Exp;  lines: +104 -125

Build 08, 11

Modification de la pile qui prend desormais en compte les instructions et pas seulement les appels fonctions. La variable functionstacks en particulier disparait au profit de trois nouvelles variables: linestack, filestack et namestack. Les maj de ces piles ne se font que dans les blocs sequences et fonctions.
----------------------------
revision 1.537
date: 2012/01/04 16:46:21;  author: roux;  state: Exp;  lines: +5 -1

Petite correction de nouveau sur les arites... Dans le cas d'une fonction provenant d'une bibliotheque, le nombre de parametres doit etre reduit de un si cette fonction est de type selfinsert...
----------------------------
revision 1.536
date: 2012/01/02 16:28:46;  author: roux;  state: Exp;  lines: +13 -6

On renvoie maintenant un message d'erreur si la fonction associe a setdebug renvoie false
----------------------------
revision 1.535
date: 2012/01/02 14:46:15;  author: roux;  state: Exp;  lines: +14680 -13960

Build 07,09

On rajoute kifxml, plus de nouvelles instructions pour gerer les sessions kif
----------------------------
revision 1.534
date: 2011/12/06 15:03:13;  author: roux;  state: Exp;  lines: +30 -14

Desormais, on garde la trace dans locals des elements crees lors du chargement. Les arguments sont aussi geres depuis KifGlobalThread et non plus depuis KifCode. De meme pour les loquets. On vire aussi current_wait qui n'a plus de sens
----------------------------
revision 1.533
date: 2011/12/05 10:11:12;  author: roux;  state: Exp;  lines: +19 -9

Build 5,5

On place locktables dans KifGlobalThread. On replace le message d'erreur dans Cleanerrorid qui devient une methode de cette classe. utf8 n'apparait plus dans KifCode...
----------------------------
revision 1.532
date: 2011/12/02 10:13:34;  author: roux;  state: Exp;  lines: +59 -0

Rajout de Kifstdin pour gerer le standard input
----------------------------
revision 1.531
date: 2011/12/01 14:46:56;  author: roux;  state: Exp;  lines: +59 -76

Rajout d'un destructeur KifGlobalThread. De plus, les kifNULL (etc...) sont maintenant des define sur kifGlobals->gNULL (etc...
----------------------------
revision 1.530
date: 2011/11/30 16:52:34;  author: roux;  state: Exp;  lines: +0 -1

On retire un lock inutile
----------------------------
revision 1.529
date: 2011/11/30 13:31:19;  author: roux;  state: Exp;  lines: +191 -149

Build 03

Modification des locks et de leur placement
----------------------------
revision 1.528
date: 2011/11/25 15:25:04;  author: roux;  state: Exp;  lines: +32 -18

On modifie le fonction de KifWaitingFor qui renvoie false quand le temps a ete entierement ecoule
----------------------------
revision 1.527
date: 2011/11/21 14:19:53;  author: roux;  state: Exp;  lines: +14 -0

On rajoute la methode ExchangeError qui permet de recuperer une erreur dans la tache principale pour en faire une erreur dans le thread courant. On utilise ca essentiellement dans l'interface graphique, ou le traitement est transmis via awake au thread principal, mais ou l'erreur doit etre traite dans le thread lui-meme.
----------------------------
revision 1.526
date: 2011/11/18 13:45:07;  author: roux;  state: Exp;  lines: +5 -7

Build 04, build 99

On reconstruit le parseur pour que les fonctions declarees dans le programme appelant le parseur ait precedence sur celle decrite dans la grammaire. De cette facon, on peut declarer des fonctions KiF dans le programme appelant accessible depuis la grammaire. Pour cela, on a autorise la derivation de KifCode pour les fonctions Get, Getbasic et on a introduit Newinstance qui est appele depuis KifLoad (desormais aussi declaree dans KifCode). On a aussi rajoute un champ loader dans KifCode qui est renseigne par Setloader.
----------------------------
revision 1.525
date: 2011/11/15 15:39:29;  author: roux;  state: Exp;  lines: +65 -51

On remplace par Succeed le test en sortie de IN. De plus, desormais le test autrefois maladroit dans KifString::in pour vider un conteneur est transfere dans KIFIN, qui en cas d'echec renvoie kifNULL pour les conteneurs, ce qui a pour effet de les vider
----------------------------
revision 1.524
date: 2011/11/14 14:14:54;  author: roux;  state: Exp;  lines: +2747 -2871

build 02, 97

On vire un certain nombre de variables globales residuelles qui sont placees dans KifGlobalThread
----------------------------
revision 1.523
date: 2011/11/09 16:15:25;  author: roux;  state: Exp;  lines: +2 -2

Le _loader a un type kifLoader dont il faut tenir compte
----------------------------
revision 1.522
date: 2011/11/09 15:28:27;  author: roux;  state: Exp;  lines: +1063 -1068

On fait passer beaucoup de chose depuis KifCode dans KifGlobalThread, ce qui reduit la vitesse de chargement et la taille memoire
----------------------------
revision 1.521
date: 2011/11/08 14:11:44;  author: roux;  state: Exp;  lines: +46 -24

Build 10.02 01
Build 95

Correction de bug dans la facon dont parseur et kifcode etait geree.
----------------------------
revision 1.520
date: 2011/11/03 16:32:05;  author: roux;  state: Exp;  lines: +2 -1

En cas de session pas d'attente
----------------------------
revision 1.519
date: 2011/11/03 13:59:53;  author: roux;  state: Exp;  lines: +3 -35

Desormais dans inType on teste l'index et la fonction associee. inTypeFull qui faisait cela est retire
----------------------------
revision 1.518
date: 2011/11/03 10:28:02;  author: roux;  state: Exp;  lines: +34 -1

On teste aussi index et fonctions dans BuildNumerical
----------------------------
revision 1.517
date: 2011/11/02 09:54:59;  author: roux;  state: Exp;  lines: +1 -1

Retour en arriere
----------------------------
revision 1.516
date: 2011/11/02 09:53:49;  author: roux;  state: Exp;  lines: +1 -1

Pour rien
----------------------------
revision 1.515
date: 2011/11/02 09:04:22;  author: roux;  state: Exp;  lines: +28 -14

Modification du fonctionnement des sessions et rajout de getstd et geterr
----------------------------
revision 1.514
date: 2011/10/28 14:58:13;  author: roux;  state: Exp;  lines: +198 -205

Build 98,89

On rajoute desormais un parametre aux fonctions predefinies ou externes qui contient leur nombre de parametres en binaire. On rajoute aussi P_NONE,P_ONE... etc qui permettent de fournir ces infos.
----------------------------
revision 1.513
date: 2011/10/26 12:48:39;  author: roux;  state: Exp;  lines: +0 -4

Dans le cas de windows, on cesse la transformation des \n en \r\n
----------------------------
revision 1.512
date: 2011/10/24 08:47:04;  author: roux;  state: Exp;  lines: +20 -13

Build 97,86

Rajout d'un parametre a c_char_reverse pour calculer la taille de la chaine en caracteres
Rajout de la methode bytes qui renvoie un vecteur d'octets pour une chaine ou la chaine a partir d'un vector d'octets
Correction de l'iteration dans une chaine, qui ne tenait pas vraiment compte des caracteres UTF8
----------------------------
revision 1.511
date: 2011/10/19 16:12:59;  author: roux;  state: Exp;  lines: +0 -234

Build 95,86

Correction d'un bug. Desormais, les pre-initialisations d'objets non basiques sont faites a 1. Dans le cas d'un vecteur cela pouvait avoir des effets devastateurs. De plus, le kifcode dans le cas d'un lancement de kif depuis XIP, n'est plus rattache a parseur. Un kifcode special est donc cree dans ce cas si un fichier KIF est present dans la grammaire. De plus, la recherche d'une fonction se fait maintenant sur tous les kifcode en memoire et non sur le seul charge dans XIP.
----------------------------
revision 1.510
date: 2011/10/18 13:58:58;  author: roux;  state: Exp;  lines: +7 -2

En mode debug, on recupere le nom de la methode
----------------------------
revision 1.509
date: 2011/10/17 13:59:16;  author: roux;  state: Exp;  lines: +37 -6

Build 94
Build 85

Tout d'abord correction de bugs. Desormais il faut aussi garder la trace des fonctions declarees dans les bibs. De plus, si un nom de fonction est commun aux fonctions predefinies et aux biblios, il faut etablir une priorite. Desormais, un test est fait a deux endroits:

dans Execute de CallFunctionPredefined, ou on verifie si l'objet courant n'est declaree dans une biblio, dans ce cas, on execute cette methode en priorite
dans ApplySelfInsertFunction, ou on verifie s'il ne s'agit pas d'une fonction predefinie...

Desormais, find (et rfind) permet de renvoyer un vecteur de position
----------------------------
revision 1.508
date: 2011/10/13 12:23:57;  author: roux;  state: Exp;  lines: +3 -3

On renomme replacergxip par replaceregexip
----------------------------
revision 1.507
date: 2011/10/13 11:32:11;  author: roux;  state: Exp;  lines: +29 -27

Build 92
Rajout de l'annotation dans fltk
----------------------------
revision 1.506
date: 2011/10/12 14:19:52;  author: roux;  state: Exp;  lines: +69 -60

Build 90, 83

Desormais, les fonctions ne sont plus ecrites dans les KifDomain mais uniquement dans les KifFrames. Correction de bugs dans la gestion des options, plus rajout de la possibilite de ne pas utiliser les options sur la ligne de commandes
----------------------------
revision 1.505
date: 2011/10/11 08:01:37;  author: roux;  state: Exp;  lines: +61 -6

Correction sur le fonction de append pour les fichiers
----------------------------
revision 1.504
date: 2011/10/10 09:34:21;  author: roux;  state: Exp;  lines: +14 -14

Build 87

On a vire la moindre reference a UTF8 dans les appels de conversion.h
----------------------------
revision 1.503
date: 2011/10/10 09:01:45;  author: roux;  state: Exp;  lines: +64 -134

Modification du controle des caracteres UTF8. On vire les tables. chr peut desormais aussi accepter un code unicode
----------------------------
revision 1.502
date: 2011/10/07 14:57:28;  author: roux;  state: Exp;  lines: +53 -27

Amelioration de la detection UTF8 et rajout d'un flag utf8 dans KifString
----------------------------
revision 1.501
date: 2011/10/07 11:11:52;  author: roux;  state: Exp;  lines: +176 -3388

Build 80

Redistribution du code de KifCode dans kiflibs.cxx
----------------------------
revision 1.500
date: 2011/10/07 08:44:37;  author: roux;  state: Exp;  lines: +2 -239

Rajout de kiflibs.cxx. Modification de la fonction de terminaison qui n'a plus de version. Le chargement et la version de KiF sont desormais dans kifversion.h et kiflibs.cxx
----------------------------
revision 1.499
date: 2011/10/07 08:01:28;  author: roux;  state: Exp;  lines: +4 -0

Rajout de charposition
----------------------------
revision 1.498
date: 2011/10/07 07:50:58;  author: roux;  state: Exp;  lines: +24 -10

On ameliore les performances de l'extraction de sous-chaine
----------------------------
revision 1.497
date: 2011/10/06 13:50:48;  author: roux;  state: Exp;  lines: +47 -11

Build 88
Build 78

Correction sur la recherche de chaines dans le cas de l'UTF8. L'utilisation de find et rfind n'est pas suffisante. Il faut utiliser plutot c_find et c_rfind.
----------------------------
revision 1.496
date: 2011/10/05 15:33:07;  author: roux;  state: Exp;  lines: +30 -0

Build 78

On rajoute la possibilite d'intercepter une clef avec une fonction associee a un map
----------------------------
revision 1.495
date: 2011/10/05 14:15:56;  author: roux;  state: Exp;  lines: +3 -1

On vide le vecteur apres un in dans string sans reponse
----------------------------
revision 1.494
date: 2011/10/05 13:17:25;  author: roux;  state: Exp;  lines: +2 -0

Dans le in d'un KifString, quand le recepteur est un container, on renvoie contextualpattern (le conteneur en question)
----------------------------
revision 1.493
date: 2011/10/04 14:52:08;  author: roux;  state: Exp;  lines: +6 -0

Build 77

Ecrire dans une constante renvoie une exception
----------------------------
revision 1.492
date: 2011/09/30 13:53:20;  author: roux;  state: Exp;  lines: +66 -151

Build 76

Travail sur le in des map, list et vector, pour qu'ils puissent interpreter correctement un test d'un conteneur dans un conteneur de conteneur
----------------------------
revision 1.491
date: 2011/09/26 09:09:08;  author: roux;  state: Exp;  lines: +4 -0

Dans le cas d'un mode debug, il faut faire attention a bien creer kifGlobals
----------------------------
revision 1.490
date: 2011/09/23 13:42:12;  author: roux;  state: Exp;  lines: +12 -0

Le KifCleaning comprend aussi un KifFinalClean qui permet de remettre toutes les pendules a l'heure
----------------------------
revision 1.489
date: 2011/09/22 16:08:56;  author: roux;  state: Exp;  lines: +13 -13

Build 74

Correction d'un gros bug dans le traitement des variables associes a une methode. Cette variable ne recevait pas le bon newinstance en fonction de son appartenance a une fonction ou a un domaine
----------------------------
revision 1.488
date: 2011/09/22 11:37:29;  author: roux;  state: Exp;  lines: +26 -15

On rajoute des normalisations de fichiers partout
----------------------------
revision 1.487
date: 2011/09/22 08:35:32;  author: roux;  state: Exp;  lines: +16 -8

Build 73

On rajoute des expressions dans les intervals. On supprime les expressions numeriques sur des kifIN, on generalise le KifElement::in qui ne renvoie pas systematiquement kifNULL, sauf si le type de b est le meme que celui de contextualpattern.
----------------------------
revision 1.486
date: 2011/09/21 14:28:53;  author: roux;  state: Exp;  lines: +37 -31

Dans le cas d'un map que l'on initialise avec des operations de type plus et autre, on traite desormais les cas ou a n'est pas le map lui-meme
----------------------------
revision 1.485
date: 2011/09/21 09:27:49;  author: roux;  state: Exp;  lines: +1 -0

Initialisation des infos de lignes dans  sequence
----------------------------
revision 1.484
date: 2011/09/20 15:47:48;  author: roux;  state: Exp;  lines: +1 -1

Build 72

Correction lors de l'initialisation avec un in. On doit le traiter comme l'affectation
----------------------------
revision 1.483
date: 2011/09/20 14:56:37;  author: roux;  state: Exp;  lines: +23 -49

On tient compte aussi de pos dans la compilation des fichiers
----------------------------
revision 1.482
date: 2011/09/19 07:48:19;  author: roux;  state: Exp;  lines: +64 -23

Build 71
Rajout de KIFLIBS
----------------------------
revision 1.481
date: 2011/09/14 13:27:59;  author: roux;  state: Exp;  lines: +18 -6

On rajoute un troisieme parametre a use
----------------------------
revision 1.480
date: 2011/09/14 12:01:50;  author: roux;  state: Exp;  lines: +41 -16

On execute desormais les fonctions predefinies a travers ApplySelfInsertFunction de facon a pouvoir intercepter les cas particuliers pour les frames et les declarations externes
----------------------------
revision 1.479
date: 2011/09/14 08:23:42;  author: roux;  state: Exp;  lines: +16 -3

Build 70

On place le test des fonctions externes en amont.
----------------------------
revision 1.478
date: 2011/09/13 13:37:29;  author: roux;  state: Exp;  lines: +4 -2

Build 69

Dans le cas de methodes comme value, begin ou end, il est possible d'avoir dans les libs des methodes portant le meme nom
----------------------------
revision 1.477
date: 2011/09/07 15:12:52;  author: roux;  state: Exp;  lines: +672 -672

Modif dans KiF
----------------------------
revision 1.476
date: 2011/08/12 14:48:17;  author: roux;  state: Exp;  lines: +4 -2

Modif du message d'erreur. n est desormais un entier et non une chaine
----------------------------
revision 1.475
date: 2011/08/12 14:02:52;  author: roux;  state: Exp;  lines: +14 -9

Build 60

Correction d'un bug qui permettait a des constantes de voir leur valeur modifiee
----------------------------
revision 1.474
date: 2011/08/12 11:48:52;  author: roux;  state: Exp;  lines: +4 -0

On rajoute UNIX64
----------------------------
revision 1.473
date: 2011/08/12 09:02:47;  author: roux;  state: Exp;  lines: +17 -3

use peut prendre un autre parametre pour charger en fonction de la plateforme
----------------------------
revision 1.472
date: 2011/08/12 08:44:09;  author: roux;  state: Exp;  lines: +14 -1

On rajoute _OS comme variable pour donner la plateforme
----------------------------
revision 1.471
date: 2011/08/11 15:52:45;  author: roux;  state: Exp;  lines: +4 -6

Encore une correction sur le dereferencement
----------------------------
revision 1.470
date: 2011/08/11 15:50:32;  author: roux;  state: Exp;  lines: +3 -2

Petite modif pour eviter de dereferencer un objet de trop
----------------------------
revision 1.469
date: 2011/08/11 13:34:05;  author: roux;  state: Exp;  lines: +6 -9

Correction de bug sur les references pour les frames
----------------------------
revision 1.468
date: 2011/08/11 13:13:55;  author: roux;  state: Exp;  lines: +44 -32

Correction de la gestion des objets et de leurs references
----------------------------
revision 1.467
date: 2011/08/08 12:04:06;  author: roux;  state: Exp;  lines: +26 -10

Build 59

On rajoute la notion de const
----------------------------
revision 1.466
date: 2011/08/05 15:14:08;  author: roux;  state: Exp;  lines: +6 -2

Plus subtile pour le traitement de kifthis
----------------------------
revision 1.465
date: 2011/08/05 15:11:52;  author: roux;  state: Exp;  lines: +1 -1

Dans le cas de kifThis, on peut aussi aller chercher la valeur dans Beforetop
----------------------------
revision 1.464
date: 2011/08/05 13:03:15;  author: roux;  state: Exp;  lines: +41 -15

Definition d'un type Base pour les vecteurs. Desormais les seules methodes qui ont DuplicateHardedCodedParameter sont les methodes de base, plus KifBoolean
----------------------------
revision 1.463
date: 2011/08/03 15:48:24;  author: roux;  state: Exp;  lines: +194 -194

Build 56

MOdification de la gestion des piles diverses desormais sous la seule houlette de KifGlobalThread.
Cela resoud un probleme d'acces depuis les biblios externes qui ne pointaient pas sur la bonne pile ayant leur propre version
----------------------------
revision 1.462
date: 2011/08/02 13:04:35;  author: roux;  state: Exp;  lines: +2 -0

Rajout du complement pour les booleens
----------------------------
revision 1.461
date: 2011/08/02 08:21:48;  author: roux;  state: Exp;  lines: +18 -21

Petit ajustement.
Desormais dans le debugger on peut faire g label ou b label
----------------------------
revision 1.460
date: 2011/08/01 16:01:30;  author: roux;  state: Exp;  lines: +150 -110

Build 77
Build 55

Ajustement des lignes pour debug et erreur. Desormais, CurrentInfo sauve les infos dans debugcurrent
----------------------------
revision 1.459
date: 2011/08/01 14:12:00;  author: roux;  state: Exp;  lines: +38 -2

Build 55

Rajout des labels
----------------------------
revision 1.458
date: 2011/08/01 10:22:58;  author: roux;  state: Exp;  lines: +6 -2

Petite correction avant l'appel a GetInstances, on veut pas pomper les instances d'un objet ancien
----------------------------
revision 1.457
date: 2011/08/01 09:01:17;  author: roux;  state: Exp;  lines: +38 -0

Build 54

Modification de KiF avec utilisation de GetInstances (pour eviter les duplications inutiles)
Correction d'un bug dans la recup des instances de dom
----------------------------
revision 1.456
date: 2011/07/29 08:19:22;  author: roux;  state: Exp;  lines: +9 -4

On rajoute un parametre a pause
----------------------------
revision 1.455
date: 2011/07/29 08:08:09;  author: roux;  state: Exp;  lines: +40 -3

Modification de pause qui prend maintenant un float en entree et fonctionne sur la base de timeval.
----------------------------
revision 1.454
date: 2011/07/28 09:35:32;  author: roux;  state: Exp;  lines: +1 -1

Mauvais return
----------------------------
revision 1.453
date: 2011/07/28 09:34:45;  author: roux;  state: Exp;  lines: +5 -1

On rajoute un test dans KifDomain::Setvalue, pour renvoyer un message d'erreur en cas d'objet qui n'est pas un map ou une frame.
----------------------------
revision 1.452
date: 2011/07/27 15:17:30;  author: roux;  state: Exp;  lines: +7 -30


Simplification de l'appel du constructeur d'un frame avec possibilite d'initialisation a partir d'un autre frame
----------------------------
revision 1.451
date: 2011/07/27 13:26:17;  author: roux;  state: Exp;  lines: +10 -17

Petits ajustements. localloop devient un objet
----------------------------
revision 1.450
date: 2011/07/27 13:08:56;  author: roux;  state: Exp;  lines: +202 -127

Build 55

Explosion de while en trois: while, forin et filein. Precalcul de certains champs
----------------------------
revision 1.449
date: 2011/07/27 09:36:27;  author: roux;  state: Exp;  lines: +8 -3

Build 53

On permet l'utilisation d'expressions multiples dans les for
----------------------------
revision 1.448
date: 2011/07/26 15:46:29;  author: roux;  state: Exp;  lines: +38 -3

Build 51

On rajoute une fonction associee a switch
----------------------------
revision 1.447
date: 2011/07/26 09:33:17;  author: roux;  state: Exp;  lines: +43 -10

Un ajustement et une correction:

Dans le cas d'un in dans un objet cree a la volee, on met a jour les references temporairement pour proteger l'objet.

Dans le cas d'une creation de fichiers, on renvoie maintenant une exception si le fichier est inconnu
----------------------------
revision 1.446
date: 2011/07/26 09:01:06;  author: roux;  state: Exp;  lines: +24 -26

Build 51

Desormais, on utilise for pour boucler sur des valeurs et non while...
----------------------------
revision 1.445
date: 2011/07/25 09:38:20;  author: roux;  state: Exp;  lines: +0 -10

Petite modif de GCSize, il n'est pas necessaire d'accumuler les curseurs...
----------------------------
revision 1.444
date: 2011/07/25 09:27:47;  author: roux;  state: Exp;  lines: +97 -0

GCSize renvoie maintenant la fusion de tous les kifcode en memoire
----------------------------
revision 1.443
date: 2011/07/22 13:46:21;  author: roux;  state: Exp;  lines: +1 -0

On protege les variables dans SEQUENCE creees localement et renvoyees comme reponse en les Poppant...
----------------------------
revision 1.442
date: 2011/07/22 13:10:49;  author: roux;  state: Exp;  lines: +3 -3

Correction d'un message d'erreur
----------------------------
revision 1.441
date: 2011/07/21 09:10:49;  author: roux;  state: Exp;  lines: +8 -0

Build 76 (XIP)
Build 50 (KiF)

Rajout d'une methode test pour tester les clefs
----------------------------
revision 1.440
date: 2011/07/20 15:40:26;  author: roux;  state: Exp;  lines: +3 -9

On revient en arriere. Plus de test sur les null
----------------------------
revision 1.439
date: 2011/07/20 15:25:18;  author: roux;  state: Exp;  lines: +9 -3

On force la comparaison avec null
----------------------------
revision 1.438
date: 2011/07/19 12:20:54;  author: roux;  state: Exp;  lines: +207 -3

Reintegration de la compilation dans KiF
----------------------------
revision 1.437
date: 2011/07/19 09:36:20;  author: roux;  state: Exp;  lines: +2 -2

On restreint le vecteur dans exposed uniquement aux fonctions qui ne sont pas private
----------------------------
revision 1.436
date: 2011/07/18 16:04:04;  author: roux;  state: Exp;  lines: +306 -256

Rajout de exposed pour kif
----------------------------
revision 1.435
date: 2011/07/18 13:42:48;  author: roux;  state: Exp;  lines: +4 -2

Build 49

Utilisation de Statique() pour initialiser la valeur statique de popped. Cette notion est importante pour dupliquer les objets definis en dur dans les appels de fonction: mafonction([1,2,3]);
~
~
~
~
~
~
~
~
----------------------------
revision 1.434
date: 2011/07/13 11:35:22;  author: roux;  state: Exp;  lines: +23 -12

Build 47

Correction d'un bug sur la compilation des "in" dont la partie gauche est un calcul. Le calcul n'etait pas pris en compte
----------------------------
revision 1.433
date: 2011/07/12 15:00:01;  author: roux;  state: Exp;  lines: +1 -1

Rajout dans compatibleArgument d'un return(false) pour tout compte
----------------------------
revision 1.432
date: 2011/07/12 14:57:11;  author: roux;  state: Exp;  lines: +4 -3

Dans la correction des appels de fonctions pre-declarees, il faut bien verifier qu'il s'agit d'une pre-declaration
----------------------------
revision 1.431
date: 2011/07/12 14:37:04;  author: roux;  state: Exp;  lines: +39 -5

Build 47

On assouplit les regles de correspondance entre arguments et parametres
----------------------------
revision 1.430
date: 2011/07/12 13:06:02;  author: roux;  state: Exp;  lines: +3 -14

On reprend un petit peu le code pour mieux afficher les choses et placer les elements de facon plus subtile
----------------------------
revision 1.429
date: 2011/07/12 12:59:55;  author: roux;  state: Exp;  lines: +72 -46

On rajoute des null si necessaire dans une liste ou un vecteur quand la valeur est au-dela de la borne
----------------------------
revision 1.428
date: 2011/07/12 12:46:07;  author: roux;  state: Exp;  lines: +12 -2

On rajoute kifcode aux elements de type kifNULL
----------------------------
revision 1.427
date: 2011/07/11 08:06:07;  author: roux;  state: Exp;  lines: +4 -1

Build 46

On verifie les post-declarations de fonctions pour eviter de creer pour rien une pre-declaration
----------------------------
revision 1.426
date: 2011/07/07 11:56:47;  author: roux;  state: Exp;  lines: +103 -89

On remplace applyinitial par le beaucoup plus parlant constructor
----------------------------
revision 1.425
date: 2011/07/07 09:47:24;  author: roux;  state: Exp;  lines: +5 -0

Rajout de applyinitial dans la template.
Petite correction pour obtenir les bonnes lignes
----------------------------
revision 1.424
date: 2011/07/07 08:22:16;  author: roux;  state: Exp;  lines: +1 -1

maj du msg d'erreur
----------------------------
revision 1.423
date: 2011/07/07 08:19:57;  author: roux;  state: Exp;  lines: +10 -3

On utilise plutot des chaines pour definir le mode de lecture ou d'ecriture d'un fichier
----------------------------
revision 1.422
date: 2011/07/06 13:52:12;  author: roux;  state: Exp;  lines: +25 -29

Rajout de la possibilite de charger un fichier a la creation de l'objet file.
Remplacement des sprintf par des sprintf_s et des strcat par des strcat_s
----------------------------
revision 1.421
date: 2011/07/06 09:57:13;  author: roux;  state: Exp;  lines: +7 -11

Build 44

Correction d'un bug lors du chargement loadin depuis un autre fichier. On perdait le fx du fichier appelant.
----------------------------
revision 1.420
date: 2011/07/04 10:09:44;  author: roux;  state: Exp;  lines: +1 -180

On retire la compilation
----------------------------
revision 1.419
date: 2011/07/01 12:50:09;  author: roux;  state: Exp;  lines: +29 -22

Modification des transformations en vector et en map.
----------------------------
revision 1.418
date: 2011/07/01 09:24:33;  author: roux;  state: Exp;  lines: +78 -46

Build 43

On integre mieux baseline dans le numero d'erreur. Correction d'un bug dans le fonctionnement des iterations de vector et de list.
----------------------------
revision 1.417
date: 2011/06/30 15:29:44;  author: roux;  state: Exp;  lines: +3 -2

Build 42

Desormais, on utilise Filename pour recuperer le nom de fichier. Cela permet de tester la validite du numero de fichier
----------------------------
revision 1.416
date: 2011/06/30 15:16:29;  author: roux;  state: Exp;  lines: +8 -11

Rajout de initialize que l'on utilise entre autre dans le parse des maps et des vecteurs.
----------------------------
revision 1.415
date: 2011/06/30 14:14:07;  author: roux;  state: Exp;  lines: +6 -2


Correction d'un bug. Nous ne transmettions pas aux libraries, le pointeur sur le debugger.
----------------------------
revision 1.414
date: 2011/06/30 12:36:37;  author: roux;  state: Exp;  lines: +2 -0

Rajout de join pour les maps
----------------------------
revision 1.413
date: 2011/06/30 09:43:18;  author: roux;  state: Exp;  lines: +20 -35

Nouvelle version du compilateur. Legerement plus rapide. On a demenage loadtoken dans x_node.h et remplacer le lourd et inadequat read(1) par un get plus geler. A noter, une derivation particuliere de la table des caracteres pour eviter que #1 soit une seule chaine.
----------------------------
revision 1.412
date: 2011/06/29 14:48:38;  author: roux;  state: Exp;  lines: +25 -13

Build 68 (XIP)
Build 40 (KiF)


Amelioration du compilateur KiF: 400 fois plus rapide
----------------------------
revision 1.411
date: 2011/06/28 10:04:42;  author: roux;  state: Exp;  lines: +2 -2

Modification de la lecture et de la compilation d'un fichier. On lit desormais en mode FULL, depuis qu'on a integre le test sur la fin de fichier EOF
----------------------------
revision 1.410
date: 2011/06/24 15:36:02;  author: roux;  state: Exp;  lines: +10 -1

Build 66(XIP)
Build 39 (KiF)

Modification dans le comportement des variables XIP lors de l'appel au sein de fonction. Desormais, on ne duplique inutilement plus ces variables, on les transmet directement.
De plus, on fait la difference entre les variables de chaine et celles contenant
 une chaine a calculer.
Modification de l'affichage de KifMapPtr et KifVectorStringPtr.
Enfin, rajout de theType pour renvoyer le type qui sert au calcul de comparaison
 des types. Desormais, lorsque une fonction depuis XIP appelle KiF avec une vari
able dictionary ou string[], les types KiF associes KifMapPtr etc... renvoie kif
Map ou kifVector.
----------------------------
revision 1.409
date: 2011/06/24 12:32:09;  author: roux;  state: Exp;  lines: +17 -1

Modif de la generation d'une chaine pour un objet KifBits
----------------------------
revision 1.408
date: 2011/06/23 15:01:03;  author: roux;  state: Exp;  lines: +98 -20

Build 38

Correction sur KifBits et KifBit.
----------------------------
revision 1.407
date: 2011/06/23 12:38:56;  author: roux;  state: Exp;  lines: +1 -3

Petite correction, kf etait utilise dans PreApply a la fois comme le vecteur et comme le receptacle des elements du vecteur.
----------------------------
revision 1.406
date: 2011/06/23 12:26:40;  author: roux;  state: Exp;  lines: +3 -1

Build 37

Correction d'un bug dans PreApply. On ne reinitialisait pas le parametre avec la bonne valeur.
----------------------------
revision 1.405
date: 2011/06/23 09:57:57;  author: roux;  state: Exp;  lines: +4 -0

On rajoute extract pour les chaines.
On corrige le renvoie des chaines converties. On ne renvoyait pas la bonne chaine
----------------------------
revision 1.404
date: 2011/06/21 16:00:01;  author: roux;  state: Exp;  lines: +15 -5

Rajout des methodes sortint, sortfloat etc...
----------------------------
revision 1.403
date: 2011/06/21 15:04:52;  author: roux;  state: Exp;  lines: +199 -3

Rajout du type bits
----------------------------
revision 1.402
date: 2011/06/17 13:43:27;  author: roux;  state: Exp;  lines: +6 -0

Quelques modifications sur la place du test de l'erreur (et eviter des maj en cas d'erreur d'une variable)
Desormais, on peut aussi renvoyer un vecteur de noeuds dans parameters pour dependency
----------------------------
revision 1.401
date: 2011/06/17 13:03:30;  author: roux;  state: Exp;  lines: +7 -1

Rajout d'une methode pour nettoyer les piles d'execution de KiF, apres un nettoyage de la grammaire.
----------------------------
revision 1.400
date: 2011/06/16 15:15:40;  author: roux;  state: Exp;  lines: +1 -0

Build 62

On peut desormais implanter une fonction dans un programme KiF qui appelle XIP de facon a recuperer les resultats
----------------------------
revision 1.399
date: 2011/06/15 16:06:52;  author: roux;  state: Exp;  lines: +4 -1

Build 34
Correction dans EvaluateMap. On renvoie un KifMap construit a partir du KifRawMap
----------------------------
revision 1.398
date: 2011/06/15 08:10:54;  author: roux;  state: Exp;  lines: +17 -1

Build 33

Dans le cas d'un appel depuis une methode pre-definie comme print, il n'est pas necessaire de dupliquer les objets statique comme dans un appel standard
----------------------------
revision 1.397
date: 2011/06/14 15:59:48;  author: roux;  state: Exp;  lines: +9 -1

Rajout de BuildNumericalExpression dans KifParseBoolean.
----------------------------
revision 1.396
date: 2011/06/14 15:35:22;  author: roux;  state: Exp;  lines: +13 -26

Simplification du calcul numerique qui n'est plus fait en recursion mais apres coup
----------------------------
revision 1.395
date: 2011/06/14 14:30:07;  author: roux;  state: Exp;  lines: +182 -122

Build 61 (XIP)
Build 32 (KiF)

Dans KiF, rajout des maps avec des clefs calculables. Atom() renvoie une copie dans le cas d'une description d'un objet dans le code, par exemple un vecteur.

Deplacement dans XIP (voir parseur.cxx) du calcul de l'etiquette fait trop tard...
----------------------------
revision 1.394
date: 2011/06/10 13:45:19;  author: roux;  state: Exp;  lines: +183 -157

On simplifie le code avec les fonctions aVector et aContainer plutot que de tester sur tous les types possibles
----------------------------
revision 1.393
date: 2011/06/09 15:19:04;  author: roux;  state: Exp;  lines: +4 -4

On remplace switch avec invert dans les fractions
----------------------------
revision 1.392
date: 2011/06/09 15:13:07;  author: roux;  state: Exp;  lines: +2 -0

Rajout de la documentation sur switch
----------------------------
revision 1.391
date: 2011/06/09 15:08:19;  author: roux;  state: Exp;  lines: +4 -2

On utilise desormais fabs au lieu de abs pour les nombres flottant.
Rajout de l'option switch
----------------------------
revision 1.390
date: 2011/06/09 13:26:52;  author: roux;  state: Exp;  lines: +1 -1

Gestion des espaces de regles pour les lexiques en couche
----------------------------
revision 1.389
date: 2011/06/08 16:47:21;  author: roux;  state: Exp;  lines: +1 -1

On affiche avec une plus grande precision apres la virgule les nombres flottants
----------------------------
revision 1.388
date: 2011/06/08 16:03:19;  author: roux;  state: Exp;  lines: +4 -2

Petite modification dans l'initialisation du garbage. Du fait de la liberation des nombres dans le calcul de KifRoot, il peut y avoir maintenant des elements a NULL dans le garbage.
----------------------------
revision 1.387
date: 2011/06/08 15:43:50;  author: roux;  state: Exp;  lines: +7 -2

On rajoute dans le calcul de la fraction, le nb de chiffres a partir duquelle commencer le calcul (log10(abs(nb))
----------------------------
revision 1.386
date: 2011/06/08 14:57:06;  author: roux;  state: Exp;  lines: +54 -19

Build 27

Calcul plus subtil des transformations en fraction
----------------------------
revision 1.385
date: 2011/06/07 15:21:18;  author: roux;  state: Exp;  lines: +2 -2

Build 26

Simplification des fractions systematique. Correction du signe
----------------------------
revision 1.384
date: 2011/06/06 16:04:44;  author: roux;  state: Exp;  lines: +70 -53

Build 25,

Desormais, exclusive et protected sont des flags qui viennent s'ajouter au mot clef thread.
On se debarrasse aussi des elements tels que nombres et chaines lors de la construction du KifRoot. Ils sont remis dans le garbage plutot q
ue d'y rester inutilises.
Correction d'un bug dans Mac Os, ou pthread_detach est incompatible avec pthread_join
~
----------------------------
revision 1.383
date: 2011/06/01 14:47:18;  author: roux;  state: Exp;  lines: +1 -1

Linux n'aime pas l'exportation des fonctions inline
----------------------------
revision 1.382
date: 2011/06/01 14:19:20;  author: roux;  state: Exp;  lines: +193 -162

Build 24

Desormais le debuggage est gere a travers un objet KifDebugInfo. On peut aussi gerer les breakpoint par fichier
----------------------------
revision 1.381
date: 2011/05/31 16:24:07;  author: roux;  state: Exp;  lines: +425 -189

Build 59
Build 23(KiF)

Nombre de variables de KifCode sont devenues globales, en particulier le debuggage.
Rajout d'un map special pour gerer une pile uniquement composee de fonctions pour aussi la gestion des erreurs
qui inclue desormais un affichage de la pile.
Debuggage pris en compte de meilleure facon dans XIP.
Meilleures gestions de noms de fichier KiF.

Correction d'un bug dans XIP lors du partage d'un noeud fictif entre deux nouvelles dependances.
----------------------------
revision 1.380
date: 2011/05/27 15:07:18;  author: roux;  state: Exp;  lines: +7 -3

Petite correction dans Get. Dans le cas d'une variable dom qui n'appartient pas au meme KifCode que le KifCode courant et qui de plus est le kstart de cet autre KiFCode, on ne l'utilise pas pour determiner la variable evaluee
----------------------------
revision 1.379
date: 2011/05/27 14:46:14;  author: roux;  state: Exp;  lines: +168 -135

Build 22

Correction de bugs dans KiF:

Tout d'abord l'ordre des elements dans un KifFrame est desormais calcule a la compilation, ce qui permet de conserver l'ordre de declaration des variables dans la frame.

On a de plus rajoute la notion de statique pour les popped. Les elements statiques sont des declarations dans les appels de fonction pour lesquels il nous faut une duplication pour eviter les modifications intempestives.
----------------------------
revision 1.378
date: 2011/05/26 16:39:37;  author: roux;  state: Exp;  lines: +13 -5

Build 21

Correction d'un bug lors du parse d'une expression d'un in dans un vecteur donne en dur, il ne s'agissait pas forcement d'une instance. Autre bug, le not devant une fonction n'etait pas pris en compte.
----------------------------
revision 1.377
date: 2011/05/26 12:55:04;  author: roux;  state: Exp;  lines: +27 -27

Build 58

Erreur: replace ne prend pas un automate en parametre.
----------------------------
revision 1.376
date: 2011/05/25 14:50:05;  author: roux;  state: Exp;  lines: +8 -3

Build 20

Rajout de parenthreadid comme instruction, avec une meilleure allocation des numeros d'id de threads...
----------------------------
revision 1.375
date: 2011/05/25 08:59:26;  author: roux;  state: Exp;  lines: +30 -19

Correction sur les references dans Setvalue de KifVariable
----------------------------
revision 1.374
date: 2011/05/24 14:12:20;  author: roux;  state: Exp;  lines: +47 -124

Build 19

Correction d'un bug lie a la remise a zero de threadowner dans les Resetreference. Ce simple choix provoquait des conflits dans l'utilisation des variables qui pouvaient se retrouver malencontreusement partages par deux threads differents.
----------------------------
revision 1.373
date: 2011/05/23 12:25:29;  author: roux;  state: Exp;  lines: +20 -29

Build 18

Nous utilisons desormais pthread_join pour attendre la fin d'un thread en concordance avec un tableau de pthread dont la taille lorsque l'on entre dans waitonfalse est forcement deja fixee. Lorsqu'un thread se termine on position dans ce tableau le thread a NULL, grace a joinpos qui enregistre sa position dans le vecteur. Dans le join on teste si la case est ou non a NULL pour eviter d'effecture un join sur une thread deja terminee
----------------------------
revision 1.372
date: 2011/05/20 17:38:14;  author: roux;  state: Exp;  lines: +54 -26

Rajout de l'option join et de l'instruction waitonjoin
----------------------------
revision 1.371
date: 2011/05/20 09:02:33;  author: roux;  state: Exp;  lines: +13 -6

On dispose desormais d'un nouveau type: exclusive qui fonctionne au niveau d'une instance
----------------------------
revision 1.370
date: 2011/05/19 09:58:06;  author: roux;  state: Exp;  lines: +14 -0

Build 15

Les fonctions externes (via load()) etaient desactivees.
----------------------------
revision 1.369
date: 2011/05/17 14:24:39;  author: roux;  state: Exp;  lines: +3 -1

Rajout d'une initialisation dans KifInitLib
----------------------------
revision 1.368
date: 2011/05/17 10:09:43;  author: roux;  state: Exp;  lines: +1 -7

On retire KIF_DLL de la compilation standard
----------------------------
revision 1.367
date: 2011/05/17 09:39:51;  author: roux;  state: Exp;  lines: +114 -75

Build 13
Build 56

Desormais on gere les exceptions et les thread id au niveau global. Toutes les methodes autrefois declarees dans KiFCode deviennnent globales.
----------------------------
revision 1.366
date: 2011/05/16 16:43:42;  author: roux;  state: Exp;  lines: +24 -70

Build 12
Correction de bug sur la facon de gerer kifThreadControl, devenu desormais un pointeur pour etre accessible depuis les libs.
----------------------------
revision 1.365
date: 2011/05/16 15:20:06;  author: roux;  state: Exp;  lines: +20 -1

Build 12
Gros bug sur la gestion des exceptions. Errorptr testait l'existence de l'id a l'envers...
----------------------------
revision 1.364
date: 2011/05/16 13:59:31;  author: roux;  state: Exp;  lines: +20 -1

Rajout de la possibilite de definir un long() dans une frame
----------------------------
revision 1.363
date: 2011/05/16 13:05:34;  author: roux;  state: Exp;  lines: +77 -12

Build 11
Rajout de KifLong. Desormais, sort peut s'utiliser sans une fonction argument.
----------------------------
revision 1.362
date: 2011/05/13 15:34:29;  author: roux;  state: Exp;  lines: +100 -67

Build 55

Desormais les erreurs sont localisees dans les threads
----------------------------
revision 1.361
date: 2011/05/13 13:33:48;  author: roux;  state: Exp;  lines: +380 -5

Build 54
Build 09

Rajout du type bit.
Rajout de l'hexadecimal.
----------------------------
revision 1.360
date: 2011/05/12 09:45:20;  author: roux;  state: Exp;  lines: +1 -3

Build 08

KifFunction a maintenant un champ top qui correspond au premier element d'une suite de fonctions. On s'en sert pour verifier si une fonction appartient ou non a une derivation de frame
----------------------------
revision 1.359
date: 2011/05/12 09:24:40;  author: roux;  state: Exp;  lines: +38 -24

Build 53

Modification du comportement des sous-frames. Les fonctions associees n'etaient pas correctement appele dans le cas ou la frame dont depend l'objet KifDomain (voir KifFunctionInstance) differait de celle de la fonction choisie. Ce cas de figure survient lors de l'appel d'une fonction avec un objet en parametre different du type de l'objet en argument, mais ou l'objet en parametre est une derivation de l'objet en argument. Dans ce cas, il faut modifier le body pour que le choix soit de nouveau fait dynamiquement...
----------------------------
revision 1.358
date: 2011/05/10 10:10:42;  author: roux;  state: Exp;  lines: +0 -3

Build 52

Modification pour faire de KifStringPtr et KifFloatPtr des classes a part entiere
----------------------------
revision 1.357
date: 2011/05/10 08:33:25;  author: roux;  state: Exp;  lines: +8 -6

La mise a jour de basegarbage est desormais faite dans Loadfile a la fin du chargement.
----------------------------
revision 1.356
date: 2011/05/09 15:50:34;  author: roux;  state: Exp;  lines: +212 -193

Travail sur les references et les popped. Desormais un objet est toujours cree en tant que popped.
----------------------------
revision 1.355
date: 2011/05/05 15:28:07;  author: roux;  state: Exp;  lines: +7 -0

Build 99

Rajout de l'affectation d'un call avec un autre call
----------------------------
revision 1.354
date: 2011/05/05 09:37:31;  author: roux;  state: Exp;  lines: +1 -1

Mise a jour de kifmain pour afficher l'utilisation de KIF_REGEX. Retour sur la declaration de ComputeFraction
----------------------------
revision 1.353
date: 2011/05/04 15:54:01;  author: roux;  state: Exp;  lines: +1 -7

Build 98

Modifs mineures pour les libs kif
----------------------------
revision 1.352
date: 2011/05/04 09:15:24;  author: roux;  state: Exp;  lines: +2 -4

Rajout de addendum dans XIPKIF. Correction dans le code de waitonfalse
----------------------------
revision 1.351
date: 2011/05/03 15:08:36;  author: roux;  state: Exp;  lines: +0 -3

On retire les lock dans PreWaitOnFalse
----------------------------
revision 1.350
date: 2011/05/03 15:04:41;  author: roux;  state: Exp;  lines: +233 -126

build 97

Correction d'un bug dans les comparaisons d'expressions calculees.

Simplification de la gestion des waitonfalse. On n'utilise plus de blocked, qui n'est pas necessaire...
----------------------------
revision 1.349
date: 2011/04/28 17:05:40;  author: roux;  state: Exp;  lines: +47 -23

On remplace les short pour les threadid par des int (probleme de recouvrement des strings, certains id devenait negatif)
De plus, on a modifie le RemoveThreadidReference, de facon a ce que la section sur used soit explore avant toute autre modification pour eviter les problemes de lock
----------------------------
revision 1.348
date: 2011/04/28 16:26:51;  author: roux;  state: Exp;  lines: +8 -8

Desormais on ne peut plus appliquer de fonctions associes sur l'objet seul
----------------------------
revision 1.347
date: 2011/04/28 15:55:20;  author: roux;  state: Exp;  lines: +315 -190

Build 92

Simplification du mecanisme de lancement d'un thread. Desormais, le calcul des arguments se fait AVANT le lancement du thread, ce qui permet de simplifier le mecanisme de synchronisation un peu batard utilise jusqu'a present
----------------------------
revision 1.346
date: 2011/04/27 09:38:48;  author: roux;  state: Exp;  lines: +34 -18

Build 90

Modification et simplification de la compilation. L'arbre est nettoye de nombreux champs.
----------------------------
revision 1.345
date: 2011/04/26 15:52:35;  author: roux;  state: Exp;  lines: +6 -6

On passe a des unsigned short dans la compilation
----------------------------
revision 1.344
date: 2011/04/26 15:33:47;  author: roux;  state: Exp;  lines: +392 -154

Build 49
Build 89

Rajout des fonctions []. Rajout de la pre-compilation.
----------------------------
revision 1.343
date: 2011/04/22 14:34:28;  author: roux;  state: Exp;  lines: +29 -24

restriction plus grande dans le cas de strict
----------------------------
revision 1.342
date: 2011/04/22 14:28:04;  author: roux;  state: Exp;  lines: +30 -22

On rajoute la conversion en vecteur ou en map d'une chaine ou d'une frame dans les parametres d'appel d'une fonction
----------------------------
revision 1.341
date: 2011/04/22 14:03:07;  author: roux;  state: Exp;  lines: +27 -0

On rajoute le map transforme en objet
----------------------------
revision 1.340
date: 2011/04/22 13:44:55;  author: roux;  state: Exp;  lines: +0 -1

Desormais les frames ne peuvent plus faire partie d'une expression numerique
----------------------------
revision 1.339
date: 2011/04/21 16:31:30;  author: roux;  state: Exp;  lines: +5 -0

On rajoute OR et AND
----------------------------
revision 1.338
date: 2011/04/21 16:17:58;  author: roux;  state: Exp;  lines: +12 -0

Rajout de applyincrement pour plusplus
----------------------------
revision 1.337
date: 2011/04/21 16:12:59;  author: roux;  state: Exp;  lines: +49 -0

Rajout des derivations plus etc...
----------------------------
revision 1.336
date: 2011/04/21 15:25:54;  author: roux;  state: Exp;  lines: +1 -0

Les frames ne doivent pas provoquer d'echec pour l'interpretation d'une expression numerique
----------------------------
revision 1.335
date: 2011/04/21 14:50:20;  author: roux;  state: Exp;  lines: +45 -62

Build 85

Modification de KifDomain::Execute qui renvoie uniquement this maintenant. Modification des noms (applyfullfunc et applyone) qui deviennent applycomparatorfunction et applycomparison
----------------------------
revision 1.334
date: 2011/04/21 12:11:41;  author: roux;  state: Exp;  lines: +18 -21

Correction mineure. Lors d'un .map() ou .vector(), dans le cas d'une frame, nous vidions le vecteur recupere (ou le map), ce qui est une erreur.
----------------------------
revision 1.333
date: 2011/04/21 11:55:17;  author: roux;  state: Exp;  lines: +71 -30

Build 83

Cast a base de frame, de vector et de map rajoutes
----------------------------
revision 1.332
date: 2011/04/20 15:53:52;  author: roux;  state: Exp;  lines: +65 -21

Build 82

Il est desormais possible de rajouter des cast dynamiques d'un frame dans un autre
----------------------------
revision 1.331
date: 2011/04/20 14:07:08;  author: roux;  state: Exp;  lines: +1 -1

On transforme file en variable. On rajoute un Basic dans sa declaration. Modification aussi de l'ouverture de FILE pour tous les objets
----------------------------
revision 1.330
date: 2011/04/19 10:05:01;  author: roux;  state: Exp;  lines: +2 -1

Correction mineure pour permettre a un parametre d'etre un self dans un appel sans que l'on connaisse son type exact. Relaxation des contraintes sur l'equivalence des parametres.
----------------------------
revision 1.329
date: 2011/04/18 15:54:48;  author: roux;  state: Exp;  lines: +11 -5

Modification de la comparaison de noeuds tree et rajout de l'appel d'un increment depuis une fonction
----------------------------
revision 1.328
date: 2011/04/18 09:29:18;  author: roux;  state: Exp;  lines: +338 -229

Build 48

Correction d'un bug pour le next (qui ne fait pas appel a PreParseurNext) et arrret d'une boucle sur error (for et while)
----------------------------
revision 1.327
date: 2011/04/08 13:33:27;  author: roux;  state: Exp;  lines: +19 -25

On retire un lock de trop dans WHILE
----------------------------
revision 1.326
date: 2011/04/08 12:30:17;  author: roux;  state: Exp;  lines: +10 -5

Correction du debugger avec ajout de $$ pour une fin definitive
----------------------------
revision 1.325
date: 2011/04/08 12:14:38;  author: roux;  state: Exp;  lines: +31 -4

Rajout des fonctions au nombre indetermine d'arguments
----------------------------
revision 1.324
date: 2011/04/08 09:15:15;  author: roux;  state: Exp;  lines: +95 -381

Modification de break, return et continue qui ont desormais leur propre classe.
----------------------------
revision 1.323
date: 2011/04/07 09:54:01;  author: roux;  state: Exp;  lines: +65 -68

Modification de quelques noms pour etre plus coherent
----------------------------
revision 1.322
date: 2011/04/07 08:11:09;  author: roux;  state: Exp;  lines: +1 -1

Remplacement de synchronized par protected
----------------------------
revision 1.321
date: 2011/04/06 14:46:20;  author: roux;  state: Exp;  lines: +227 -105

Rajout de synchronized, de lock, unlock, waitonfalse et synchronous
----------------------------
revision 1.320
date: 2011/04/04 12:30:51;  author: roux;  state: Exp;  lines: +272 -102

Type fraction avec amelioration de la transformation d'un float en fraction avec simplification integree
----------------------------
revision 1.319
date: 2011/04/01 14:34:23;  author: roux;  state: Exp;  lines: +159 -77

Rajout de fraction... Correction d'un petit bug dans le cas des classes qui implementent leur propre fonction initial.
----------------------------
revision 1.318
date: 2011/03/31 15:41:34;  author: roux;  state: Exp;  lines: +1 -0

Rajout de random()
----------------------------
revision 1.317
date: 2011/03/31 15:09:16;  author: roux;  state: Exp;  lines: +2 -96

On deplace les informations a propos des methodes XIP dans xipkif.cxx. De plus on detruit les informations relatives aux libs KiF qui n'avaient rien a faire la (redondante d'ailleurs)
----------------------------
revision 1.316
date: 2011/03/31 14:18:20;  author: roux;  state: Exp;  lines: +48 -29

On remet a l'honneur la destruction des elements dont la reference est 0. On rajoute quand meme un champ popped pour que les elements provenant d'un pop de vecteur ou autre ne soit pas impacte par cette destruction
----------------------------
revision 1.315
date: 2011/03/30 14:55:58;  author: roux;  state: Exp;  lines: +1 -0

Rajout de setbreakpoint
----------------------------
revision 1.314
date: 2011/03/30 14:43:21;  author: roux;  state: Exp;  lines: +0 -7

Retour
----------------------------
revision 1.313
date: 2011/03/30 14:29:37;  author: roux;  state: Exp;  lines: +5 -0

Le destruction de KifInstruction a ete deplace
----------------------------
revision 1.312
date: 2011/03/30 14:26:53;  author: roux;  state: Exp;  lines: +372 -214

Rajout de la partie signaux pour Mac et Linux.
Rajout d'un delais dans la creation des objets dans les frames.
Rajout de la possibilite des appels a des fonctions chez les parents d'une frame
----------------------------
revision 1.311
date: 2011/03/25 14:29:17;  author: roux;  state: Exp;  lines: +319 -89

Rajout de private.
Modification des threads. Desormais, on utilise des signaux ou des evenements pour les wait et les temps entre threads
----------------------------
revision 1.310
date: 2011/03/18 16:07:48;  author: roux;  state: Exp;  lines: +166 -96

Correction de bugs dans le multi-tache. En particulier, desormais les donnees recoivent l'identifiant du thread qui les a demande. Desormais, seul un thread peut liberer des donnees qu'il a demande sans les avoir pour autant reference.
----------------------------
revision 1.309
date: 2011/03/16 14:17:01;  author: roux;  state: Exp;  lines: +4 -4

Le buffer passe a 4096
----------------------------
revision 1.308
date: 2011/03/16 13:52:09;  author: roux;  state: Exp;  lines: +56 -6

Rajout de la definition multiple de variable plus rajout d'une fonction Atom pour les call de facon a sauver dans un vecteur un KifFunction
----------------------------
revision 1.307
date: 2011/03/15 14:20:18;  author: roux;  state: Exp;  lines: +5 -5

Ajustement pour Mac
----------------------------
revision 1.306
date: 2011/03/15 14:05:42;  author: roux;  state: Exp;  lines: +26 -8

Build 46

Elargissement de apply a des fonctions dans des vecteurs directement.
Modification des regles de marquage pour pouvoir modifier des lectures
----------------------------
revision 1.305
date: 2011/03/14 17:00:25;  author: roux;  state: Exp;  lines: +16 -7

On ameliore Read et Readline
----------------------------
revision 1.304
date: 2011/03/14 16:47:27;  author: roux;  state: Exp;  lines: +147 -87

Rajout des traitements autour des objets KifCall qui desormais peuvent selectionner dynamiquement les bonnes fonctions.
Amelioration de la lecture des fichiers en utilisant fgets
----------------------------
revision 1.303
date: 2011/03/11 16:13:06;  author: roux;  state: Exp;  lines: +223 -88

Build 45

Multiple definitions de fonction est maintenant possible. Controle plus strict des parametres. Rajout du type strict. Amelioration de parametre dans le cas d'une formule mathematique en entree
----------------------------
revision 1.302
date: 2011/03/10 16:02:17;  author: roux;  state: Exp;  lines: +4 -4

Correction du multi-tache. Les id des threads appelant doivent aussi etre transmis aux threads fils pour qu'ils puissent acceder a la bonne pile d'execution.
----------------------------
revision 1.301
date: 2011/03/10 14:33:12;  author: roux;  state: Exp;  lines: +16 -8

Correction d'un bug dans les threads appelant les threads
----------------------------
revision 1.300
date: 2011/03/10 10:45:28;  author: roux;  state: Exp;  lines: +325 -587

Correction de bugs dans la gestion des kifTypeSTRING etc... qui passe desormais sous KifCode.
----------------------------
revision 1.299
date: 2011/03/07 17:09:59;  author: roux;  state: Exp;  lines: +2 -2

On retire un compteur
----------------------------
revision 1.298
date: 2011/03/07 17:05:34;  author: roux;  state: Exp;  lines: +2 -2

On remet sizevector a 50
----------------------------
revision 1.297
date: 2011/03/07 17:02:35;  author: roux;  state: Exp;  lines: +219 -111

Correction et amelioration des gestions de Provide. Rajout du traitement des fonctions associees dans les frames
----------------------------
revision 1.296
date: 2011/03/04 16:35:25;  author: roux;  state: Exp;  lines: +257 -185

Meilleure vitesse dans la lecture des fichiers. Meilleure gestion de la memoire
----------------------------
revision 1.295
date: 2011/03/02 16:20:44;  author: roux;  state: Exp;  lines: +730 -243

Modification de Kif pour partager toutes les pointeurs sur des KifString, Integer,Float, Vector et Map.
Rajout de la possibilite d'appeler une fonction dans un with via un call.
----------------------------
revision 1.294
date: 2011/02/28 17:21:24;  author: roux;  state: Exp;  lines: +115 -102

Amelioration
----------------------------
revision 1.293
date: 2011/02/28 13:39:30;  author: roux;  state: Exp;  lines: +53 -4

Modification de loadin et amelioration de range
----------------------------
revision 1.292
date: 2011/02/24 16:15:27;  author: roux;  state: Exp;  lines: +2 -2

On permet d'appeler ord et chr comme des fonctions et non comme des simples methodes
----------------------------
revision 1.291
date: 2011/02/24 15:43:35;  author: roux;  state: Exp;  lines: +19 -15

Rajout de utf8 partout dans les expressions utf8. Correction d'un bug sur les offsets dans toklook, correction d'un bug dans le decoupage en token a l'interieur des expressions de NTM
----------------------------
revision 1.290
date: 2011/02/22 16:36:00;  author: roux;  state: Exp;  lines: +502 -269

Build 39

Multiples ajustement dans kif pour augmenter la vitesse d'execution. En particulier, une meilleure gestion des instances.
Deux corrections dans XIP pour les offsets, dont un bug potentiel dans la gestion des lemmes associees a des variables
----------------------------
revision 1.289
date: 2011/02/17 16:24:35;  author: roux;  state: Exp;  lines: +154 -102

Amelioration des expressions booleennes dans kif. Modification d'un message d'erreur dans avlfonc.cxx pour donner le numero de la regle de reconstruction
----------------------------
revision 1.288
date: 2011/02/16 17:08:04;  author: roux;  state: Exp;  lines: +55 -51

Modification du comportement des expressions booleennes pour qu'elles integrent des sous-blocs.
----------------------------
revision 1.287
date: 2011/02/15 09:31:46;  author: roux;  state: Exp;  lines: +26 -22

Build 37

Correction des offsets dans toklookup pour les caracteres
----------------------------
revision 1.286
date: 2011/02/14 14:57:16;  author: roux;  state: Exp;  lines: +564 -399

Modif dans KiF pour utiliser des short au lieu de string.
Correction d'un bug sur les offsets lors de l'utilisation de languageguesser
----------------------------
revision 1.285
date: 2011/02/11 15:45:32;  author: roux;  state: Exp;  lines: +98 -236

Simplification de KiF et isolation encore plus grande des composants KiF et XIP.
FileAssociation renvoie desormais une valeur
----------------------------
revision 1.284
date: 2011/02/10 16:22:44;  author: roux;  state: Exp;  lines: +185 -78

Build 34

Amelioration de kif. Rajout de ThreadLock dans les Pop
----------------------------
revision 1.283
date: 2011/02/09 16:17:13;  author: roux;  state: Exp;  lines: +591 -2829

Amelioration des perfs de KiF. Toutes les fonctions Pre... sont desormais dans kifraw.cxx et plus dans kif.cxx
----------------------------
revision 1.282
date: 2011/02/04 16:46:23;  author: roux;  state: Exp;  lines: +1 -0

On rajoute KifRecreatePredefined pour remplacer une fonction par une autre
----------------------------
revision 1.281
date: 2011/02/04 16:18:47;  author: roux;  state: Exp;  lines: +431 -161

Modif dans kif pour acceler
----------------------------
revision 1.280
date: 2011/02/04 09:33:20;  author: roux;  state: Exp;  lines: +501 -514

Build 32

Quelques modifs dans KiF
----------------------------
revision 1.279
date: 2011/01/28 16:01:46;  author: roux;  state: Exp;  lines: +8 -8

Build 30

Rajout de l'option -decrypte
----------------------------
revision 1.278
date: 2011/01/28 09:11:12;  author: roux;  state: Exp;  lines: +1 -37

Modification des includes dans kif
----------------------------
revision 1.277
date: 2011/01/26 17:09:14;  author: roux;  state: Exp;  lines: +666 -656

Build 29

Simplification et nettoyage du code de kif. le PRINT dans XIP peut desormais prendre plusieurs parametres
----------------------------
revision 1.276
date: 2011/01/26 10:47:23;  author: roux;  state: Exp;  lines: +267 -605

Simplification des operations dans kif.
Correction d'un bug sur la longueur de la chaine
----------------------------
revision 1.275
date: 2011/01/25 17:11:24;  author: roux;  state: Exp;  lines: +30 -3

Build 27

Rajout de plusplus et minusminus
----------------------------
revision 1.274
date: 2011/01/25 09:06:50;  author: roux;  state: Exp;  lines: +355 -21

Build 26

Amelioration des performances de l'execution des expressions numeriques
----------------------------
revision 1.273
date: 2011/01/21 15:54:31;  author: roux;  state: Exp;  lines: +48 -9

Rajout du private et mode session corrige en cas d'erreur
----------------------------
revision 1.272
date: 2011/01/21 14:19:17;  author: roux;  state: Exp;  lines: +73 -5

Rajout des instructions pour evaluer un bout de code en local
----------------------------
revision 1.271
date: 2011/01/21 10:25:50;  author: roux;  state: Exp;  lines: +123 -1

Rajout de Push et des indexes dans les lists.
----------------------------
revision 1.270
date: 2011/01/21 10:00:15;  author: roux;  state: Exp;  lines: +2 -2

Petite faute d'orthographe
----------------------------
revision 1.269
date: 2011/01/21 09:58:25;  author: roux;  state: Exp;  lines: +3 -2

Rajout des informations de apply dans list
----------------------------
revision 1.268
date: 2011/01/21 09:56:26;  author: roux;  state: Exp;  lines: +7 -0

On rajoute apply a list
----------------------------
revision 1.267
date: 2011/01/21 09:48:12;  author: roux;  state: Exp;  lines: +1555 -87

Rajout du type list. Modification de la methode List en Methods
----------------------------
revision 1.266
date: 2011/01/18 17:02:23;  author: roux;  state: Exp;  lines: +74 -48

Build 24
Transformation des IF, SWITCH etc en classe. text2xml avec conversion integree
----------------------------
revision 1.265
date: 2011/01/17 17:22:29;  author: roux;  state: Exp;  lines: +12 -2

On rajoute un Pushlocal pour controler le rajout dans la pile de kstart
----------------------------
revision 1.264
date: 2011/01/17 15:36:33;  author: roux;  state: Exp;  lines: +69 -35

Build 23

Evaluation des chaines rajoutee
----------------------------
revision 1.263
date: 2011/01/17 13:44:55;  author: roux;  state: Exp;  lines: +764 -145

Build 23

On rajoute les commentaires dans les fonctions
----------------------------
revision 1.262
date: 2011/01/11 17:46:16;  author: roux;  state: Exp;  lines: +8 -5

Partage d'un thread
----------------------------
revision 1.261
date: 2011/01/11 15:06:21;  author: roux;  state: Exp;  lines: +37 -5

Build 21

Les methodes de KifFile ne sont plus exprimes dans kif.h
----------------------------
revision 1.260
date: 2011/01/10 16:51:21;  author: roux;  state: Exp;  lines: +1 -0

Rajout d'un ThreadLock dans Trigger
----------------------------
revision 1.259
date: 2011/01/10 10:50:53;  author: roux;  state: Exp;  lines: +90 -27

Rajout des methodes Init_TemplateName, Template_Terminate. Rajout des KifThreadLock pour creer des Locks temporaires. Correction d'un bug sur la declaration multiple d'une variable. Desormais on verifie qu'une variable n'a pas ete declaree deux fois. Rajout de Setvalue dans KifKif de facon a donner la main sur le module appelant et passant this comme parametre
----------------------------
revision 1.258
date: 2011/01/07 16:19:56;  author: roux;  state: Exp;  lines: +36 -19

On verifie que les bibs ne soient pas charge deux fois
----------------------------
revision 1.257
date: 2011/01/07 14:54:37;  author: roux;  state: Exp;  lines: +1 -1

Petite accolade en trop
----------------------------
revision 1.256
date: 2011/01/07 14:53:05;  author: roux;  state: Exp;  lines: +4 -1

On interdit les waits dans les catch
----------------------------
revision 1.255
date: 2011/01/07 14:46:27;  author: roux;  state: Exp;  lines: +34 -5

Oubli du traitement de break et continue dans le bloc catch
----------------------------
revision 1.254
date: 2011/01/06 17:13:24;  author: roux;  state: Exp;  lines: +4 -4

Il faut renvoyer des pointeurs KifRaisError
----------------------------
revision 1.253
date: 2011/01/06 16:48:34;  author: roux;  state: Exp;  lines: +6 -0

Rajout des options de parse
----------------------------
revision 1.252
date: 2011/01/06 12:41:12;  author: roux;  state: Exp;  lines: +73 -10

Modification de get et de getc.
----------------------------
revision 1.251
date: 2011/01/05 17:09:49;  author: roux;  state: Exp;  lines: +16 -9

On rajoute d'autres lock
----------------------------
revision 1.250
date: 2011/01/05 17:05:35;  author: roux;  state: Exp;  lines: +22 -0

On rajoute des locks dans WaitOnThread dans KifCallFunction
----------------------------
revision 1.249
date: 2011/01/05 16:20:52;  author: roux;  state: Exp;  lines: +1266 -353

Beaucoup de modifications:

rajout des threads et des sockets
rajout d'une recherche d'une souschaine en mode utf8
----------------------------
revision 1.248
date: 2010/12/16 16:08:17;  author: roux;  state: Exp;  lines: +4 -6

Dans le same de KifMap, on passe par la clef it->first plutot qu'une boucle en parallele sur les deux maps
----------------------------
revision 1.247
date: 2010/12/16 15:57:33;  author: roux;  state: Exp;  lines: +36 -0

Build 18

Rajout d'une comparaison entre vector et map
----------------------------
revision 1.246
date: 2010/12/16 14:18:42;  author: roux;  state: Exp;  lines: +4 -2

Bug dans applyfuncinframe, dom peut etre NULL lors de la creation d'un objet
----------------------------
revision 1.245
date: 2010/12/16 10:35:04;  author: roux;  state: Exp;  lines: +28 -4

Petite modification de l'iterator d'arbre qui renvoie en valeur un noeud de l'arbre...
----------------------------
revision 1.244
date: 2010/12/16 09:13:35;  author: roux;  state: Exp;  lines: +4 -4

On garde ktree dans KifTree:in plutot que sa valeur dans un vector ou un map
----------------------------
revision 1.243
date: 2010/12/15 16:34:14;  author: roux;  state: Exp;  lines: +24 -10

On permet des intervals sur les chaines jusqu'a une sous-chaine
----------------------------
revision 1.242
date: 2010/12/15 15:41:30;  author: roux;  state: Exp;  lines: +2 -2

On retire le kif de la chaine a parser
----------------------------
revision 1.241
date: 2010/12/15 14:35:46;  author: roux;  state: Exp;  lines: +105 -1

Build 16

Rajout d'un iterator pour tree
----------------------------
revision 1.240
date: 2010/12/14 16:47:47;  author: roux;  state: Exp;  lines: +318 -6

Build 16

Rajout de tree
----------------------------
revision 1.239
date: 2010/12/13 14:58:16;  author: roux;  state: Exp;  lines: +7 -7

Petite simplification autour de this. Desormais, il est impossible d'appeler this... De plus, il y avait un petit soucis dans le rangement de l'objet this, ranger deux fois: kf->Add(new KifThis(ke,kf)); kf etant present deux fois, il etait appele une premiere fois avec Add dans le constructeur de KifElement et une deuxieme fois explicitement.
----------------------------
revision 1.238
date: 2010/12/13 14:06:07;  author: roux;  state: Exp;  lines: +10 -2

Rajout de commentaires
----------------------------
revision 1.237
date: 2010/12/13 10:01:53;  author: roux;  state: Exp;  lines: +5 -3

Build 15

Quelques corrections sur KifSelf, avec en particulier la duplication necessaire d'un KifSelf dans Copy.
Modification de Different et de Same pour la comparaison de deux frames. Desormais, nous avons un comportement par defaut.
----------------------------
revision 1.236
date: 2010/12/10 15:17:10;  author: roux;  state: Exp;  lines: +1 -2

Petit bug. Dans l'affectation d'une fonction au garbage, il faut retirer le test desormais inutile sur les methodes (et non les fonctions comme avant)
----------------------------
revision 1.235
date: 2010/12/10 13:48:50;  author: roux;  state: Exp;  lines: +4 -2

Correction d'un bug qui empechait l'utilisation d'un interval sur le resultat d'une fonction
----------------------------
revision 1.234
date: 2010/12/10 11:08:26;  author: roux;  state: Exp;  lines: +9 -21

Petite rectification sur les appels de BLOCBOOLEAN, DIFFERENT etc...
----------------------------
revision 1.233
date: 2010/12/10 10:19:56;  author: roux;  state: Exp;  lines: +46 -25

On permet maintenant des autoruns dans une frame sans _initial
----------------------------
revision 1.232
date: 2010/12/10 09:44:49;  author: roux;  state: Exp;  lines: +28 -17

Build 14

Rajout de autorun dans les frames
----------------------------
revision 1.231
date: 2010/12/09 15:43:39;  author: roux;  state: Exp;  lines: +5 -3

Pour gethostuuid est une fonction C
----------------------------
revision 1.230
date: 2010/12/09 15:35:27;  author: roux;  state: Exp;  lines: +5 -0


Rajout de gethostuuid(uuid_t id, const struct timespec *wait) comme fausse fonction pour Apple
----------------------------
revision 1.229
date: 2010/12/09 13:47:32;  author: roux;  state: Exp;  lines: +57 -5

Rajout de waitall
----------------------------
revision 1.228
date: 2010/12/08 15:19:46;  author: roux;  state: Exp;  lines: +5 -1


Rajout d'un test pour ne pas declarer de autorun dans une frame
----------------------------
revision 1.227
date: 2010/12/08 15:13:44;  author: roux;  state: Exp;  lines: +16 -4

Rajout de autorun
----------------------------
revision 1.226
date: 2010/12/08 14:02:25;  author: roux;  state: Exp;  lines: +8 -24

On remet les PreConvert comme avant. Desormais, l'appel a string tout seul ne peut plus fonctionner
----------------------------
revision 1.225
date: 2010/12/08 13:45:53;  author: roux;  state: Exp;  lines: +329 -306

Meilleur controle de type avec rajout de kifMethods
----------------------------
revision 1.224
date: 2010/12/08 11:01:50;  author: roux;  state: Exp;  lines: +1 -0

Il faut aussi appeler loadtoken pour le parsage d'une chaine de caracteres KiF
----------------------------
revision 1.223
date: 2010/12/08 10:11:23;  author: roux;  state: Exp;  lines: +24 -8

Modification de la conversion en chaine ou le reste pour un KifDomain
----------------------------
revision 1.222
date: 2010/12/08 09:16:53;  author: roux;  state: Exp;  lines: +14 -0

Rajout d'un entete lors du lancement de KiF
----------------------------
revision 1.221
date: 2010/12/08 08:43:53;  author: roux;  state: Exp;  lines: +24 -6

Build 11

Correction d'un bug lors de l'appel de l'initialisation d'une variable au sein d'une fonction dans une frame
----------------------------
revision 1.220
date: 2010/12/07 13:49:21;  author: roux;  state: Exp;  lines: +0 -3

On place le include<sys/time.h> dans kifinit.h
----------------------------
revision 1.219
date: 2010/12/07 10:55:07;  author: roux;  state: Exp;  lines: +4 -1

Ouverture du fichier en mode binaire
----------------------------
revision 1.218
date: 2010/12/07 10:14:10;  author: roux;  state: Exp;  lines: +3 -3

Modification de KifTime, les calculs se font desormais avec unsigned long et des doubles.
----------------------------
revision 1.217
date: 2010/12/06 16:55:05;  author: roux;  state: Exp;  lines: +2 -1

Nouveau bug dans KifVector::Setvalue. Atom() renvoie un nouvel objet dans certains cas qu'il faut evidement reference, ce qui n'etait pas le cas. Le referencement se faisait avant l'utilisation de Atom(), ce qui creait un objet vide.
----------------------------
revision 1.216
date: 2010/12/06 16:48:08;  author: roux;  state: Exp;  lines: +3 -5

Petit bug dans PreInsert, il manquait un increment de la reference pour le insert dans vector
----------------------------
revision 1.215
date: 2010/12/06 16:16:47;  author: roux;  state: Exp;  lines: +4 -1

Petite correction, sir callfunc==NULL dans PreWaiting, il ne peut pas afficher son nom
----------------------------
revision 1.214
date: 2010/12/06 15:45:35;  author: roux;  state: Exp;  lines: +95 -49

Petites modifications pour que le wait puisse s'executer dans le corps principal. De plus, le wait s'arrete desormais au frontiere d'une fonction. Enfin, le nom est transmis via current_wait et non plus via un retour de variable.
----------------------------
revision 1.213
date: 2010/12/06 13:24:14;  author: roux;  state: Exp;  lines: +163 -36

Rajout d'une variable states pour garder la trace des etats lors d'un WAIT.
----------------------------
revision 1.212
date: 2010/12/03 13:30:59;  author: roux;  state: Exp;  lines: +62 -20

wait peut avoir plusieurs parametres
----------------------------
revision 1.211
date: 2010/12/03 10:23:13;  author: roux;  state: Exp;  lines: +19 -3

Pour cast, il faut d'abord dupliquer le map et les vector de KifWaitStates, avant d'effectuer l'execution pour eviter les problemes de wait apres un wait
----------------------------
revision 1.210
date: 2010/12/03 09:49:23;  author: roux;  state: Exp;  lines: +2 -2

Petite modification
----------------------------
revision 1.209
date: 2010/12/03 08:56:58;  author: roux;  state: Exp;  lines: +49 -0

Rajout de l'option kill pour tuer des taches en cours
----------------------------
revision 1.208
date: 2010/12/02 17:24:06;  author: roux;  state: Exp;  lines: +7 -4

catch sans variable permis avec un bloc
----------------------------
revision 1.207
date: 2010/12/02 17:01:34;  author: roux;  state: Exp;  lines: +33 -4

Modification pour que ca compile sous Unix (map<...> >).
Enregistement du contexte des variables de la fonction en plus
----------------------------
revision 1.206
date: 2010/12/02 16:16:35;  author: roux;  state: Exp;  lines: +159 -1

Rajout de wait et cast
----------------------------
revision 1.205
date: 2010/12/02 09:35:56;  author: roux;  state: Exp;  lines: +57 -18

Build 10

desormais, on controle mieux les variables et fonctions introduites par un "." dans le langage KiF.
----------------------------
revision 1.204
date: 2010/12/01 13:54:49;  author: roux;  state: Exp;  lines: +17 -1

Meilleur controle des declarations
----------------------------
revision 1.203
date: 2010/11/30 16:35:59;  author: roux;  state: Exp;  lines: +204 -88

Build 9

On retire le tableau mot dans InitTraits.
Meilleur verification des variables dans KiF
----------------------------
revision 1.202
date: 2010/11/19 11:21:37;  author: roux;  state: Exp;  lines: +2 -14

Petite modif sur l'ajout ou la difference de KifTime
----------------------------
revision 1.201
date: 2010/11/17 17:43:34;  author: roux;  state: Exp;  lines: +4 -2

Ajustement pour Linux du Trim sur sx
----------------------------
revision 1.200
date: 2010/11/17 17:39:04;  author: roux;  state: Exp;  lines: +181 -35

On rajoute le type time et date. On retire les messages dans testinpututf8
----------------------------
revision 1.199
date: 2010/11/17 15:50:50;  author: roux;  state: Exp;  lines: +97 -70

Build 04

Amelioration des performances de KiF
----------------------------
revision 1.198
date: 2010/11/05 15:18:29;  author: roux;  state: Exp;  lines: +26 -8

Build 02

Amelioration des performances du compilateur KiF
----------------------------
revision 1.197
date: 2010/11/03 10:30:51;  author: roux;  state: Exp;  lines: +3 -2

Oblige de passer par une variable intermediaire dans linux dans l'appel du Push dans Setvalue de KifMap
----------------------------
revision 1.196
date: 2010/11/03 10:21:43;  author: roux;  state: Exp;  lines: +12 -33


Ajustement des references des elements dans un vecteur ou un map
----------------------------
revision 1.195
date: 2010/11/02 08:53:49;  author: roux;  state: Exp;  lines: +5 -3

On rajoute un parametre a KifCode::Evaluate, de facon a pouvoir ajouter des variables predefinies.
----------------------------
revision 1.194
date: 2010/10/28 14:26:58;  author: roux;  state: Exp;  lines: +207 -142

Build 98

Remise a plat du fonction de KiF pour les operations
----------------------------
revision 1.193
date: 2010/10/27 15:49:31;  author: roux;  state: Exp;  lines: +2 -2

#(x) est desormais le complement de bits
----------------------------
revision 1.192
date: 2010/10/27 15:41:24;  author: roux;  state: Exp;  lines: +4 -4


L'operateur de puissance est: ^^
----------------------------
revision 1.191
date: 2010/10/27 15:19:15;  author: roux;  state: Exp;  lines: +94 -84

On simplifie la construction des expressions booleennes desormais moins profonde en memoire
----------------------------
revision 1.190
date: 2010/10/27 12:25:22;  author: roux;  state: Exp;  lines: +90 -2


On rajoute l'operateur: # pour le xor
----------------------------
revision 1.189
date: 2010/10/26 14:24:22;  author: roux;  state: Exp;  lines: +5 -5

Rajout de la mention exported
----------------------------
revision 1.188
date: 2010/10/26 13:24:58;  author: roux;  state: Exp;  lines: +7 -7

Petites modifs pour pouvoir executer un script
----------------------------
revision 1.187
date: 2010/10/25 13:52:52;  author: roux;  state: Exp;  lines: +2 -1

Legere modif. Linux a du mal avec les String&
----------------------------
revision 1.186
date: 2010/10/25 13:48:26;  author: roux;  state: Exp;  lines: +60 -55

Rajout d'un Atom. Cette fonction duplique les valeurs lorsqu'il s'agit d'un atome tel que string, int, float, time ou Boolean
----------------------------
revision 1.185
date: 2010/10/25 10:06:12;  author: roux;  state: Exp;  lines: +66 -65

On rajoute hmap a la place de map quand c'est possible
----------------------------
revision 1.184
date: 2010/10/22 14:58:50;  author: roux;  state: Exp;  lines: +32 -13


Correction d'un bug pour l'evaluation des expressions a la racine
----------------------------
revision 1.183
date: 2010/10/22 14:05:35;  author: roux;  state: Exp;  lines: +250 -93


On rajoute un historique
----------------------------
revision 1.182
date: 2010/10/21 16:30:30;  author: roux;  state: Exp;  lines: +53 -20


Quelques modifications sur serveur que l'on desactive desormais partout
----------------------------
revision 1.181
date: 2010/10/20 08:13:38;  author: roux;  state: Exp;  lines: +3 -3

On modifie Loop pour rajouter un test sur le fait que a soit une variable
----------------------------
revision 1.180
date: 2010/10/19 15:50:03;  author: roux;  state: Exp;  lines: +1 -1


Ajustement dans le debugger
----------------------------
revision 1.179
date: 2010/10/19 14:59:13;  author: roux;  state: Exp;  lines: +399 -88

Build 95

Modification du comportement du in avec de legeres corrections
----------------------------
revision 1.178
date: 2010/10/15 14:14:41;  author: roux;  state: Exp;  lines: +75 -36

Build 93

Rajout de Swedish dans la liste des langues connues et placement des regex sous KIF_REGEX
----------------------------
revision 1.177
date: 2010/10/14 16:02:13;  author: roux;  state: Exp;  lines: +16 -20


Quelques modifications dans Setvalue pour tenir compte de la reference pour map et vector dans le rajout d'un element
----------------------------
revision 1.176
date: 2010/10/14 15:46:17;  author: roux;  state: Exp;  lines: +15 -6

Build 92

Petites corrections:

Tout d'abord bug. Avant l'appel au garbage dans CallFunction, il vaut mieux proteger la variable de retour...
Aussi, lorsque l'on rajoute une valeur dans un map ou un vector, sa valeur depend de la reference courrante.

On retire aussi : et ~: comme comparateurs. Trop ambigue
----------------------------
revision 1.175
date: 2010/10/14 08:09:32;  author: roux;  state: Exp;  lines: +1 -1


Petite erreur dans la recopie du nom avec rajout de .so
----------------------------
revision 1.174
date: 2010/10/14 08:06:19;  author: roux;  state: Exp;  lines: +22 -3

Normalisation des noms de fichiers dans le chargement des libs
----------------------------
revision 1.173
date: 2010/10/13 15:31:44;  author: roux;  state: Exp;  lines: +3 -4


Utilisation de result.position() a la place de size
----------------------------
revision 1.172
date: 2010/10/13 15:19:33;  author: roux;  state: Exp;  lines: +31 -16


On met des try/catch autour des regex
----------------------------
revision 1.171
date: 2010/10/13 15:13:18;  author: roux;  state: Exp;  lines: +30 -26


Les regex sous linux s'appellent boost
----------------------------
revision 1.170
date: 2010/10/13 13:06:23;  author: roux;  state: Exp;  lines: +111 -5

Rajout des expressions regulieres
----------------------------
revision 1.169
date: 2010/10/13 08:22:58;  author: roux;  state: Exp;  lines: +49 -5

Build 91

On rajoute les methodes keys et values pour les map. On transforme la methode Get en Nextin plus parlant.
----------------------------
revision 1.168
date: 2010/10/12 15:20:22;  author: roux;  state: Exp;  lines: +14 -2

On rajoute le while et in pour les strings, les vecteurs et les maps
----------------------------
revision 1.167
date: 2010/10/11 15:30:20;  author: roux;  state: Exp;  lines: +1 -1


Retire tout test sur kifNULL dans vector et map
----------------------------
revision 1.166
date: 2010/10/11 14:44:38;  author: roux;  state: Exp;  lines: +2 -9


Modif. On retire la contrainte sur la valeur pour les affectations dans map, vector
----------------------------
revision 1.165
date: 2010/10/07 09:38:09;  author: roux;  state: Exp;  lines: +2 -1


Mise a jour de trigger en fonction de la taille de garabge
----------------------------
revision 1.164
date: 2010/10/06 14:17:25;  author: roux;  state: Exp;  lines: +0 -2


Modification de la copie d'une variable
----------------------------
revision 1.163
date: 2010/10/06 12:56:35;  author: roux;  state: Exp;  lines: +21 -9

On modifie les references des parametres dans applyf...
----------------------------
revision 1.162
date: 2010/10/06 10:18:53;  author: roux;  state: Exp;  lines: +4 -1


Correction mineure, avant un appel de fonction associe a une variable, on incremente la reference de la nouvelle valeur pour eviter (dans le cas des vectors et des maps) de perdre son contenu apres application...
----------------------------
revision 1.161
date: 2010/10/06 10:05:02;  author: roux;  state: Exp;  lines: +44 -24

Build 89

Nous exploitons mieux autoself dans le cas des vectors et des maps pour eviter ou forcer la creation d'un vector ou d'un map supplementaire. Rajout aussi d'un test pour eviter la creation non necessaire d'un vector ou d'un map lors de l'affectation d'un map ou d'un vecteur
----------------------------
revision 1.160
date: 2010/10/05 11:43:22;  author: roux;  state: Exp;  lines: +5 -3

Correction d'un bug dans AFFECTATION. Dans le cas d'une frame, il fallait recuperer la nouvelle frame pour l'initialiser
----------------------------
revision 1.159
date: 2010/10/04 15:10:41;  author: roux;  state: Exp;  lines: +1 -0


On rajoute bool aussi comme type
----------------------------
revision 1.158
date: 2010/10/04 14:32:53;  author: roux;  state: Exp;  lines: +11 -7


Modification du rangement dans un vecteur de valeurs a evaluer
----------------------------
revision 1.157
date: 2010/10/04 12:23:33;  author: roux;  state: Exp;  lines: +35 -30


Build 88

Petite modif dans PLUS etc...
----------------------------
revision 1.156
date: 2010/10/01 14:43:57;  author: roux;  state: Exp;  lines: +122 -51

Correction de bugs dans l'addition avec trasnmission du contexte
----------------------------
revision 1.155
date: 2010/10/01 12:25:38;  author: roux;  state: Exp;  lines: +12 -0


Rajout de exit
----------------------------
revision 1.154
date: 2010/09/30 14:28:03;  author: roux;  state: Exp;  lines: +1431 -729


Build 85

Correction de bugs pour les appels depuis XIP ainsi simplification des entetes de fonction Pre*.
Pour les bugs, il a fallut rajouter un Newinstance pour chacun des types ..Ptr
----------------------------
revision 1.153
date: 2010/09/28 15:28:46;  author: roux;  state: Exp;  lines: +842 -323

Rajout de l'operateur notin plus refonte de l'execution des instructions en passant par un tableau
----------------------------
revision 1.152
date: 2010/09/27 12:24:08;  author: roux;  state: Exp;  lines: +1 -1

Desormais, KifTime::Copy reinitialise le temps
----------------------------
revision 1.151
date: 2010/09/27 09:37:21;  author: roux;  state: Exp;  lines: +33 -12

Build 84

Utilisation dans traitement.cxx des primitives conversion.h pour gerer les majuscules.
Modification du nom du point d'entree des biblios qui integrent desormais aussi le nom de la biblio
----------------------------
revision 1.150
date: 2010/09/23 15:51:32;  author: roux;  state: Exp;  lines: +63 -35


Build 83

Modification et simplification du garbage (plus de tableau deleted). Modification pour stabiliser la compilation des FST
----------------------------
revision 1.149
date: 2010/09/22 15:24:55;  author: roux;  state: Exp;  lines: +206 -121


Build 82

Rajout des fonctions de garbage. Modification de plus etc avec un Boolean pour savoir s'il s'agit d'un operation sur lui-meme. Modification des appels a FST
----------------------------
revision 1.148
date: 2010/09/21 14:48:14;  author: roux;  state: Exp;  lines: +6 -0

Rajout methodes pour pas a pas dans creation FST. compilenet les appelle d'ailleurs aussi
----------------------------
revision 1.147
date: 2010/09/20 15:40:27;  author: roux;  state: Exp;  lines: +1 -1


Modification pour permettre la definition de String, Integer etc...
----------------------------
revision 1.146
date: 2010/09/20 14:39:19;  author: roux;  state: Exp;  lines: +9 -1

Build 80

definition de quelques methodes (en particulier Newfield) pour aider a la derivation d'un template de type frame
----------------------------
revision 1.145
date: 2010/09/17 15:44:00;  author: roux;  state: Exp;  lines: +2 -6


Reorganisation des KifObject et de KifDomain. On rajoute les objets KifObjectInstruction et KifDomainInstruction
----------------------------
revision 1.144
date: 2010/09/16 14:32:00;  author: roux;  state: Exp;  lines: +2 -3


On retire VERSION_XIP pour ne garder que VERSION_XIP_BUILD. On rajoute Clear comme methode generique...
----------------------------
revision 1.143
date: 2010/09/15 15:22:40;  author: roux;  state: Exp;  lines: +40 -5


Format s'applique desormais a time. De plus, hour renvoie le chiffre des heures, minute, second
----------------------------
revision 1.142
date: 2010/09/15 14:20:41;  author: roux;  state: Exp;  lines: +32 -12


Rajout de polynomial
----------------------------
revision 1.141
date: 2010/09/15 12:42:43;  author: roux;  state: Exp;  lines: +277 -253


Rajout d'un bloc dans le catch.
----------------------------
revision 1.140
date: 2010/09/14 15:33:55;  author: roux;  state: Exp;  lines: +9 -85

On deplace les methodes listdirectory, realpath etc... vers kifsys
----------------------------
revision 1.139
date: 2010/09/14 15:08:26;  author: roux;  state: Exp;  lines: +6 -6


On utilise plutot Garbage que Trigger puis Clean
----------------------------
revision 1.138
date: 2010/09/14 15:05:15;  author: roux;  state: Exp;  lines: +8 -2

On exporte desormais une version de Garbage() pour appeler le GC apres un trigger. L'ancienne version devient FinalGarbage
----------------------------
revision 1.137
date: 2010/09/14 14:54:58;  author: roux;  state: Exp;  lines: +2 -2

Ajustement
----------------------------
revision 1.136
date: 2010/09/14 12:00:00;  author: roux;  state: Exp;  lines: +32 -0

Grosse correction de bug. Dans KifFunctionDeclaration, le champ function avait disparu puisque desormais dans KifVariableDeclaration. Il faut evidemment le remettre en place avec un nouveau nom.
----------------------------
revision 1.135
date: 2010/09/14 07:55:21;  author: roux;  state: Exp;  lines: +4 -3


Rajout d'un numero de version KiF
----------------------------
revision 1.134
date: 2010/09/13 15:54:03;  author: roux;  state: Exp;  lines: +7 -0

On rajoute la possibilite de creer des variables au niveau superieur
----------------------------
revision 1.133
date: 2010/09/13 15:03:07;  author: roux;  state: Exp;  lines: +151 -137


Modification des noms de fonctions pour permettre un developpement plus simple de nouvelles fonctionnalites
----------------------------
revision 1.132
date: 2010/09/10 15:19:12;  author: roux;  state: Exp;  lines: +29 -7


On rajoute les fonctions attachees a une variable
----------------------------
revision 1.131
date: 2010/09/10 14:05:43;  author: roux;  state: Exp;  lines: +9 -0


Simplification de KifCallMethod qui ne contient plus que le nom de la methode a appeler. Rajout de version dans kif.cxx
----------------------------
revision 1.130
date: 2010/09/10 11:21:39;  author: roux;  state: Exp;  lines: +17 -7

Rajout et modifications legeres pour permettre le developpement de lib kif
----------------------------
revision 1.129
date: 2010/09/09 09:21:43;  author: roux;  state: Exp;  lines: +35 -328


Rajout des entetes. kifraw.cxx contient les implementations pour une utilisation de KiF sans XIP.
----------------------------
revision 1.128
date: 2010/09/09 08:33:36;  author: roux;  state: Exp;  lines: +10 -0


Deplacement des KifTime Copy et Newinstance
----------------------------
revision 1.127
date: 2010/09/09 08:03:27;  author: roux;  state: Exp;  lines: +16 -15

Build 74

Quelques modifications pour permettre l'edition de lien avec une DLL, pendant la generation d'une bib KiF
----------------------------
revision 1.126
date: 2010/09/08 15:13:02;  author: roux;  state: Exp;  lines: +679 -3215


Grosse restructuration de KiF, de facon a placer les parties XIP de KiF dans xipkif.cxx. On rajoute aussi la possibilite de charger une lib
----------------------------
revision 1.125
date: 2010/08/27 14:27:27;  author: roux;  state: Exp;  lines: +28 -38


buffer est desormais declare dans KifCode. Correction d'un bug a la lecture d'un && ou d'un ||
----------------------------
revision 1.124
date: 2010/08/27 13:55:07;  author: roux;  state: Exp;  lines: +63 -14


Rajout de format
----------------------------
revision 1.123
date: 2010/08/27 11:45:50;  author: roux;  state: Exp;  lines: +6 -6


Modification de && en & et de & en &&
----------------------------
revision 1.122
date: 2010/08/27 08:59:02;  author: roux;  state: Exp;  lines: +94 -39


Rajout de parsexml
----------------------------
revision 1.121
date: 2010/08/26 14:29:21;  author: roux;  state: Exp;  lines: +11 -2

Correction d'un bug dans le cas de la creation d'un FST. Initialisation globale des variables initales de la reference a 1024 pour eviter les risques de destruction.
----------------------------
revision 1.120
date: 2010/08/26 09:53:36;  author: roux;  state: Exp;  lines: +7 -1


Il manquait l'initialisation du parseur dans parsefile et dans parse cette initialisation etait mal faite
----------------------------
revision 1.119
date: 2010/08/26 09:44:00;  author: roux;  state: Exp;  lines: +1 -1

Rajout de STR autour du nom de fichier
----------------------------
revision 1.118
date: 2010/08/26 09:39:26;  author: roux;  state: Exp;  lines: +26 -0


Rajout de parsefile
----------------------------
revision 1.117
date: 2010/08/26 08:46:19;  author: roux;  state: Exp;  lines: +5 -5


KifConst
----------------------------
revision 1.116
date: 2010/08/26 08:03:49;  author: roux;  state: Exp;  lines: +1 -1

initial devient _initial
----------------------------
revision 1.115
date: 2010/08/25 13:53:20;  author: roux;  state: Exp;  lines: +18 -0


Rajout de isdigit
----------------------------
revision 1.114
date: 2010/08/25 12:19:59;  author: roux;  state: Exp;  lines: +52 -0

Modification des Execute pour refuser les indexes
----------------------------
revision 1.113
date: 2010/08/25 12:07:18;  author: roux;  state: Exp;  lines: +37 -0


Erreur desormais lorsque l'on calcule un index sur un int, un boolean, un float ou un time
----------------------------
revision 1.112
date: 2010/08/25 11:43:13;  author: roux;  state: Exp;  lines: +9 -4


On renvoie un Integer pour listdirectory
----------------------------
revision 1.111
date: 2010/08/25 10:00:33;  author: roux;  state: Exp;  lines: +63 -6


Build 71

Rajout des manipulations sur les chemins
----------------------------
revision 1.110
date: 2010/08/24 15:21:05;  author: roux;  state: Exp;  lines: +13 -0


Rajout de Boolean
----------------------------
revision 1.109
date: 2010/08/24 15:14:30;  author: roux;  state: Exp;  lines: +11 -3


Rajout des convertisseurs pour Vector et Map. Correction d'un bug dans les conversions (qui pointaient tous vers la meme fonction)
----------------------------
revision 1.108
date: 2010/08/24 13:34:49;  author: roux;  state: Exp;  lines: +98 -5

Rajout des methodes: XipKifLoad et XipKifExecute
----------------------------
revision 1.107
date: 2010/08/24 13:06:04;  author: roux;  state: Exp;  lines: +6 -0


Build 70

Modification de l'initialisation du declencheur: KifSetTrigger qui s'applique desormais a tous les elements.
----------------------------
revision 1.106
date: 2010/08/24 09:41:51;  author: roux;  state: Exp;  lines: +33 -5


Modifications mineures au niveau du calcul des lignes.
Rajout de paths et de args[0] qui contient desormais le chemin courant.
----------------------------
revision 1.105
date: 2010/08/23 15:35:28;  author: roux;  state: Exp;  lines: +150 -39


Build 69

Lecture d'un fichier KiF sans GlobalParseur attache
----------------------------
revision 1.104
date: 2010/08/23 13:43:59;  author: roux;  state: Exp;  lines: +61 -2

Build 68

Rajout du type kif, qui permet de charger une nouvelle bibliotheque.
----------------------------
revision 1.103
date: 2010/08/23 09:08:00;  author: roux;  state: Exp;  lines: +4 -4


Desormais, on utilise bd->idkifcode pour effectur le Push et Pop dans la pile d'execution, de facon a pour executer des fonctions dans un autre espace...
----------------------------
revision 1.102
date: 2010/08/23 08:44:32;  author: roux;  state: Exp;  lines: +93 -26


Build 67

Rajout de la declaration anticipee de function et de frame.
Correction d'un bug dans le nettoyage des Sequence
Rajout de la possibilite d'appeler une fonction depuis un objet parser dans une autre grammaire
Renvoie d'une erreur quand une declaration de fonction echoue a l'execution
----------------------------
revision 1.101
date: 2010/08/20 15:32:36;  author: roux;  state: Exp;  lines: +18 -6


Quelques return NULL manquant
----------------------------
revision 1.100
date: 2010/08/20 14:50:39;  author: roux;  state: Exp;  lines: +87 -17


Rajout des conversions int, string, boolean, float
----------------------------
revision 1.99
date: 2010/08/20 09:31:18;  author: roux;  state: Exp;  lines: +39 -14

Build 66

Deux corrections.
D'abord, on retire le +1 de tous les calculs de line. Ce +1 a ete corrige dans x_linenumber
Ensuite, on reprend les tests de verification des fonctions. On rajoute en particulier dans KifSelf une section declaration.
----------------------------
revision 1.98
date: 2010/08/20 07:13:16;  author: roux;  state: Exp;  lines: +2 -2


On remplace ke par pattern dans l'appel dans kifIN
----------------------------
revision 1.97
date: 2010/08/19 15:30:58;  author: roux;  state: Exp;  lines: +50 -19


Gestion du in dans une string beaucoup plus precis
----------------------------
revision 1.96
date: 2010/08/19 14:27:17;  author: roux;  state: Exp;  lines: +25 -19


Build 65

Desormais, on peut savoir dans quel contexte un in est fait. On s'en sert dans le cas de KifString::in pour effectuer une comparaison de chaines au lieu d'une recherche dans une sous-chaine
----------------------------
revision 1.95
date: 2010/08/19 12:16:50;  author: roux;  state: Exp;  lines: +1 -0


Rajout de name, integer et boolean dans KifParser
----------------------------
revision 1.94
date: 2010/08/19 08:31:19;  author: roux;  state: Exp;  lines: +11 -1


Build 64

Rajout des arguments dans les GRM pour KiF.
Il est desormais possible depuis un programme KiF d'appeler une grammaire a travers l'API.
----------------------------
revision 1.93
date: 2010/08/18 15:47:26;  author: roux;  state: Exp;  lines: +122 -13

Build 63

Rajout des arguments dans un pg KiF. Possibilite de charger une grammaire et de l'appliquer depuis un pg KiF.
----------------------------
revision 1.92
date: 2010/08/18 08:15:33;  author: roux;  state: Exp;  lines: +10 -4

Build 62

Meilleure prise en compte des messages d'erreur dans la partie BNF
----------------------------
revision 1.91
date: 2010/08/16 15:39:52;  author: roux;  state: Exp;  lines: +20 -19


Les operateurs eqOPERATION sont desormais fait en local sans creation d'une variable supplementaire.
----------------------------
revision 1.90
date: 2010/08/16 13:35:46;  author: roux;  state: Exp;  lines: +2 -2

On modifie encore une fois les appels au garbage
----------------------------
revision 1.89
date: 2010/08/16 13:18:51;  author: roux;  state: Exp;  lines: +23 -4


Quelques modifications du comportement de KiF. En particulier, desormais, on appelle le garbage dans les while et les for.
----------------------------
revision 1.88
date: 2010/08/13 14:41:54;  author: roux;  state: Exp;  lines: +9 -7


Traitement de l'execution d'un index, plus rajout des intervals dans les fonctions appelables
----------------------------
revision 1.87
date: 2010/08/13 13:45:59;  author: roux;  state: Exp;  lines: +7 -2


Message d'erreur quand appel de la mauvaise fonction pour l'objet
----------------------------
revision 1.86
date: 2010/08/13 13:25:40;  author: roux;  state: Exp;  lines: +11 -22


Rajout des tests dans les indexes pour les appels de fonctions
----------------------------
revision 1.85
date: 2010/08/13 12:48:06;  author: roux;  state: Exp;  lines: +76 -19

Il devient possible d'appeler une fonction d'une fonction
----------------------------
revision 1.84
date: 2010/08/13 08:26:20;  author: roux;  state: Exp;  lines: +10 -0

Build 60

Rajout de la possibilite d'appeler un programme KiF depuis l'API
----------------------------
revision 1.83
date: 2010/08/12 15:09:31;  author: roux;  state: Exp;  lines: +4 -5


Le "in" pour les KifString redevient une recherche de sous-chaine
----------------------------
revision 1.82
date: 2010/08/11 13:06:48;  author: roux;  state: Exp;  lines: +4 -0


Petite correction si le buffer est vide dans la conversion
----------------------------
revision 1.81
date: 2010/08/11 13:04:38;  author: roux;  state: Exp;  lines: +14 -4


Build 58

On rajoute la possibilite de lire une chaine ou un nombre au clavier (get). On corrige aussi une erreur, une chaine qui contient un nombre est transforme en nombre et ne renvoie pas sa taille
----------------------------
revision 1.80
date: 2010/08/11 12:16:40;  author: roux;  state: Exp;  lines: +1 -1


Petite mise a jour dans KiF pour permettre aussi l'application d'index sur des intervals
----------------------------
revision 1.79
date: 2010/08/11 12:03:20;  author: roux;  state: Exp;  lines: +19 -5


Build 57

On rajoute la possibilite de lancer une fonction depuis un interval
----------------------------
revision 1.78
date: 2010/08/10 10:03:36;  author: roux;  state: Exp;  lines: +10 -6


Correction d'un bug qui empechait le lancement de printrules.
Amelioration du garbage collector et correction d'un bug qui empechait l'application de certaines fonctions dans certains cas, en placant le champ add systematiquement a false apres creation des parametres
----------------------------
revision 1.77
date: 2010/07/23 15:44:19;  author: roux;  state: Exp;  lines: +106 -350


Le fonctionnement des expressions mathematiques etait faux. Nous avons reconstruit un arbre d'analyse pour une expression arithmetique en tenant compte de la primaute des operateurs + et -.
----------------------------
revision 1.76
date: 2010/07/23 09:42:28;  author: roux;  state: Exp;  lines: +336 -30


Build 54

Amelioration des calculs booleens. Desormais les additions sont mieux traites
----------------------------
revision 1.75
date: 2010/07/22 15:32:26;  author: roux;  state: Exp;  lines: +33 -2


Desormais, on peut analyser les freres dans un split. De plus, lemma et pos (rajooute pour l'occasion) renvoie un tableau de lemmes ou de pos quand necessaire
----------------------------
revision 1.74
date: 2010/07/22 13:40:13;  author: roux;  state: Exp;  lines: +2 -1

Build 53

Rajout d'un meilleur test d'erreur dans les BNF
----------------------------
revision 1.73
date: 2010/07/22 09:47:39;  author: roux;  state: Exp;  lines: +22 -6

Dans l'affichage d'un map ou d'un vecteur, on verifie la presence d'un '''
----------------------------
revision 1.72
date: 2010/07/22 09:35:03;  author: roux;  state: Exp;  lines: +2 -1

Dans un split, on evite d'ajouter les chaines vides
----------------------------
revision 1.71
date: 2010/07/21 14:09:50;  author: roux;  state: Exp;  lines: +9 -6


On remplace kifCodeVector par un VECTA, ce qui permet d'aligner kifCodeVector GlobalParseurVecteur
----------------------------
revision 1.70
date: 2010/07/21 13:25:16;  author: roux;  state: Exp;  lines: +646 -643


On continue a nettoyer les structures. kifCodeFunctions est desormais partie de KifCode, puisqu'il contient des pointeurs dont KifCode a besoin.
----------------------------
revision 1.69
date: 2010/07/21 12:58:05;  author: roux;  state: Exp;  lines: +633 -617

Dans le cadre de la reinitialisation d'un objet KiF, il y avait une erreur qui survenait du fait de la mauvaise declaration des objets de base.
----------------------------
revision 1.68
date: 2010/07/20 12:53:10;  author: roux;  state: Exp;  lines: +199 -0

Build 51

Rajout de graph dans le langage KiF
----------------------------
revision 1.67
date: 2010/07/08 12:57:50;  author: roux;  state: Exp;  lines: +23 -0

On rajoute reverse pour les vector et les string
----------------------------
revision 1.66
date: 2010/07/08 09:00:49;  author: roux;  state: Exp;  lines: +13 -5


Prise en compte de astringdouble et astringsimple
----------------------------
revision 1.65
date: 2010/07/08 08:53:59;  author: roux;  state: Exp;  lines: +4 -1


Correction echappement dans les chaines
----------------------------
revision 1.64
date: 2010/07/08 08:47:53;  author: roux;  state: Exp;  lines: +3 -2


Si le caractere d'echappement est rencontree pour le "\" lui-meme, le renvoyer.
----------------------------
revision 1.63
date: 2010/07/08 08:11:17;  author: roux;  state: Exp;  lines: +1 -1


On remplace le test dans KifBrowse par un find
----------------------------
revision 1.62
date: 2010/07/07 13:19:05;  author: roux;  state: Exp;  lines: +3 -3


Dans le begin de l'iterateur de chaine, il ne faut pas qu'itx soit modifie
----------------------------
revision 1.61
date: 2010/07/07 13:00:03;  author: roux;  state: Exp;  lines: +50 -2

Modification de l'iterator de chaines pour tenir compte de l'UTF8. Dans le cas d'un iterator inverse, on inverse d'abord la chaine
----------------------------
revision 1.60
date: 2010/07/07 09:39:15;  author: roux;  state: Exp;  lines: +76 -6


Build 48

Rajout des fonctions get et unget pour KifFile. Prise en compte du type du parametre dans le in de file pour renvoyer soit une chaine soit un seul caractere
----------------------------
revision 1.59
date: 2010/07/06 13:50:47;  author: roux;  state: Exp;  lines: +77 -70


Modification de la variable bnfkif qui est desormais un pointeur ce qui evite de tout recompiler apres chaque modification de kifn.cxx. NOM est initialise avec le nom du fichier KIF en cours de chargement.
----------------------------
revision 1.58
date: 2010/07/06 10:10:43;  author: roux;  state: Exp;  lines: +13 -1


On rajoute set pour iterator
----------------------------
revision 1.57
date: 2010/07/06 09:53:40;  author: roux;  state: Exp;  lines: +40 -10

Build 47

Rajout des instructions vides {}
Parametre dans Tokdown desormais facultatif pour les traits
Desormais on peut faire in pour un fichier
----------------------------
revision 1.56
date: 2010/07/05 15:35:27;  author: roux;  state: Exp;  lines: +19 -6


On rajoute a Tokdown le type de la variable attendue pour gerer les vecteurs
----------------------------
revision 1.55
date: 2010/07/05 15:04:51;  author: roux;  state: Exp;  lines: +14 -9


Dans le cas d'une affectation d'un vecteur vide avec une nouvelle valeur, on la pousse sur la pile.
----------------------------
revision 1.54
date: 2010/07/05 14:30:55;  author: roux;  state: Exp;  lines: +8 -1


Correction d'un bug, dans Tokdown on effectuait un new KifString(KifString... de tres mauvais alois...
----------------------------
revision 1.53
date: 2010/07/05 13:00:16;  author: roux;  state: Exp;  lines: +11 -0

On rajoute printerr
----------------------------
revision 1.52
date: 2010/07/05 07:56:09;  author: roux;  state: Exp;  lines: +62 -0


Build 46

Rajout de sum et product
----------------------------
revision 1.51
date: 2010/07/02 08:30:50;  author: roux;  state: Exp;  lines: +13 -9

On protege les FST avec des define
----------------------------
revision 1.50
date: 2010/07/02 07:54:15;  author: roux;  state: Exp;  lines: +6 -1

Build 44

Mode debug ameliore... On a rajoute la variable debugging qui permet de controler le mode debug, tandis que la variable debug permet de desactive temporairement ce mode (exemple dans le cas d'un goto)
----------------------------
revision 1.49
date: 2010/07/01 14:06:38;  author: roux;  state: Exp;  lines: +24 -9


Quelques modifs
----------------------------
revision 1.48
date: 2010/07/01 13:24:39;  author: roux;  state: Exp;  lines: +7 -5


Linux est chiant... Correction mineure
----------------------------
revision 1.47
date: 2010/07/01 12:40:31;  author: roux;  state: Exp;  lines: +13 -0


Rajout des destructeurs de tok
----------------------------
revision 1.46
date: 2010/07/01 12:28:51;  author: roux;  state: Exp;  lines: +1 -1

On detruit le globalparseur en mode kif, avec transfert des initialisations dans le constructeur de GlobalParseur et change le type de mode dans Compilenet
----------------------------
revision 1.45
date: 2010/07/01 12:15:39;  author: roux;  state: Exp;  lines: +68 -64

Build 43

Correction de la gestion UTF8. Modification de la plupart des fonctions pour eliminer vector<string> lw.
Desormais, on peut lancer un programme kif directement depuis XIP en faisant -kif ...
Enfin, lors de la creation d'un FST, on utilise le NETptr directement sans le recharger. De plus, une option permet de generer le FST en rajoutant dans le fichier src.
----------------------------
revision 1.44
date: 2010/06/30 15:11:38;  author: roux;  state: Exp;  lines: +118 -8


Build 41

On rajoute la possibilite de creer des fichiers FST a la volee a partir d'un map
----------------------------
revision 1.43
date: 2010/06/29 14:20:54;  author: roux;  state: Exp;  lines: +6 -0


Rajout de String dans KifFST
----------------------------
revision 1.42
date: 2010/06/29 14:15:29;  author: roux;  state: Exp;  lines: +153 -4

Build 40

Rajout du type FST dans KIF
----------------------------
revision 1.41
date: 2010/06/28 08:38:08;  author: roux;  state: Exp;  lines: +66 -16


Build 39

Rajout des possibilites suivantes: vect=map; on stocke dans vect les clefs du map
vect=x, chaque element du vect est initialisee avec x
map=x, chaque element du map est initialisee avec x
----------------------------
revision 1.40
date: 2010/06/25 08:41:44;  author: roux;  state: Exp;  lines: +2 -64


Rearragement de certains procedures (c_replacestring)
----------------------------
revision 1.39
date: 2010/06/24 15:48:58;  author: roux;  state: Exp;  lines: +44 -4


On rajoute la possibilite de remplacer une chaine avec une autre tout en utilisant les %1%2 etc...
----------------------------
revision 1.38
date: 2010/06/24 14:03:43;  author: roux;  state: Exp;  lines: +117 -78


Rajout de la fonction replace
----------------------------
revision 1.37
date: 2010/06/24 08:18:55;  author: roux;  state: Exp;  lines: +35 -2


Build 37

Rajout des expressions regulieres. Desormais, on peut ecrire les chaines soit entre "" soit entre ''
----------------------------
revision 1.36
date: 2010/06/23 15:06:28;  author: roux;  state: Exp;  lines: +94 -60


Nous avons ameliore les representations des instructions AND, OR, PLUS etc... de facon a factoriser les elements partageant une meme operation
----------------------------
revision 1.35
date: 2010/06/23 09:40:13;  author: roux;  state: Exp;  lines: +693 -546

Build 36

Simplification de l'objet KifElement
----------------------------
revision 1.34
date: 2010/06/18 08:49:19;  author: roux;  state: Exp;  lines: +294 -168

Build 34

Rajout de la generation dans le langage KIF
----------------------------
revision 1.33
date: 2010/06/17 15:53:45;  author: roux;  state: Exp;  lines: +19 -6


Nous avons corrige quelques caracteres errones dans testuf8.cxx
----------------------------
revision 1.32
date: 2010/06/17 13:36:53;  author: roux;  state: Exp;  lines: +2 -2


L'operateur >> avait ete remplace par > >
----------------------------
revision 1.31
date: 2010/06/17 13:29:44;  author: roux;  state: Exp;  lines: +15 -5


On organise les noeuds XML differemment dans les fichiers de sauvegarde des matrix. On garde un seul noeud de classe
----------------------------
revision 1.30
date: 2010/06/17 13:15:26;  author: roux;  state: Exp;  lines: +46 -46


Build 33

Rajout dans KifMatrix des variables attributes et classes pour garder la trace des attributes et des instances de nom de classe.
----------------------------
revision 1.29
date: 2010/06/17 10:03:59;  author: roux;  state: Exp;  lines: +392 -163


Build 32

Rajout de l'option List, correction de petites erreurs dans le garbage. Desormais, on COPIE les vecteurs et les maps
----------------------------
revision 1.28
date: 2010/06/16 10:04:48;  author: roux;  state: Exp;  lines: +5 -8


Modification des references des elements multiplemenent couverts
----------------------------
revision 1.27
date: 2010/06/15 15:45:41;  author: roux;  state: Exp;  lines: +184 -97


Modification de la forme d'une matrix (l'accent est mis sur les instances). Rajout du traitement des
elements croises KIF.
----------------------------
revision 1.26
date: 2010/06/15 09:30:14;  author: roux;  state: Exp;  lines: +14 -14

On rajoute des espaces autour des ">>>" dans les definitions de template. Unix a l'air de ne pas aimer autrement
----------------------------
revision 1.25
date: 2010/06/15 09:21:03;  author: roux;  state: Exp;  lines: +8 -8


Remplacement de or et and par orset et andset
----------------------------
revision 1.24
date: 2010/06/15 09:10:09;  author: roux;  state: Exp;  lines: +603 -50

Build 31

De nombreuses modifications.
Objet kif: matrix avec sauvegarde en XML ou en ARFF
Manipulation accrue des vecteurs et des maps (operations diverses dont intersection et union)
Le where est desormais integre dans le test des regles de SPLIT
rajout de l'intersection de bits pour des entiers ou des floats
----------------------------
revision 1.23
date: 2010/06/10 09:32:50;  author: roux;  state: Exp;  lines: +654 -24

Build 29

Modification de la gestion des vecteurs et des maps. Forcage des initialisations de variable
----------------------------
revision 1.22
date: 2010/06/09 16:05:40;  author: roux;  state: Exp;  lines: +99 -13

Build 28

Rajout des descriptions de liste et de vecteur en dur
----------------------------
revision 1.21
date: 2010/06/09 09:00:19;  author: roux;  state: Exp;  lines: +29 -1

Build 27

Rajout de la taille du fichier dans KIF.
----------------------------
revision 1.20
date: 2010/06/08 16:28:18;  author: roux;  state: Exp;  lines: +8 -4

Build 25 (continuation)

Rajout d'une methode pour tester si une variable est declaree dans XIP de facon a pouvoir effectuer une normalisation...
----------------------------
revision 1.19
date: 2010/06/08 15:52:42;  author: roux;  state: Exp;  lines: +163 -104


Build 25

Rajout de la fonction sort... Normalisation des noms KIF en XIP. Desormais, les noms KIF appeles depuis XIP sont normalises...
----------------------------
revision 1.18
date: 2010/06/07 09:34:02;  author: roux;  state: Exp;  lines: +7 -4


En linux, le getch n'existe pas, il faut utiliser getchar_unlocked a la place
----------------------------
revision 1.17
date: 2010/06/07 09:04:05;  author: roux;  state: Exp;  lines: +2 -1


Build 23

Deux modifications importantes: les regles KIF acceptent desormais un if ou a un for comme bloc.
Meilleur calcul du numero de ligne pendant la compilation d'un fichier KIF
----------------------------
revision 1.16
date: 2010/06/04 16:03:52;  author: roux;  state: Exp;  lines: +180 -14


Rajout de nouvelles instructions
----------------------------
revision 1.15
date: 2010/06/04 13:06:45;  author: roux;  state: Exp;  lines: +34 -11


Calcul plus fin de la ligne d'erreur
----------------------------
revision 1.14
date: 2010/06/04 12:24:26;  author: roux;  state: Exp;  lines: +331 -253


Build 21

Amelioration de la gestion d'erreur et du mode debug...
----------------------------
revision 1.13
date: 2010/06/03 15:13:03;  author: roux;  state: Exp;  lines: +8 -7


Regeneration des expressions BNF...
----------------------------
revision 1.12
date: 2010/06/03 14:07:48;  author: roux;  state: Exp;  lines: +64 -63


Build 20

Desormais on gere mieux les messages d'erreurs BNF en affichant le numero de ligne. De plus, on gere l'ensemble des methodes BNF sous la forme de classes et non plus d'un seul programme
----------------------------
revision 1.11
date: 2010/06/03 10:10:34;  author: roux;  state: Exp;  lines: +251 -128


Build 19

Rajout de last et de removefeature
----------------------------
revision 1.10
date: 2010/06/02 17:00:41;  author: roux;  state: Exp;  lines: +10 -6

Build 18
Correction dans le passage de parametres a KIF. Les parametres doivent etre transmis comme declaration de variable et non plus comme xipKifDeclaration... Rajout du "\n" desormais comme "\r\n" dans windows
----------------------------
revision 1.9
date: 2010/06/02 13:18:33;  author: roux;  state: Exp;  lines: +30 -5


Rajout du test sur le lemme et la surface dans setfeature (KIF) et correction d'un bug dans TestUTF8fichier
----------------------------
revision 1.8
date: 2010/06/01 14:25:37;  author: roux;  state: Exp;  lines: +127 -119


Build 15

Rajout de environment ainsi que de la mise a jour de ord qui desormais renvoie le code UTF8 aussi
----------------------------
revision 1.7
date: 2010/06/01 08:15:47;  author: roux;  state: Exp;  lines: +105 -72


Build 15

Rajout de setfeature dans le langage KIF
----------------------------
revision 1.6
date: 2010/05/31 12:33:28;  author: roux;  state: Exp;  lines: +286 -98


Rajout du temps dans le langage KIF
----------------------------
revision 1.5
date: 2010/05/28 15:34:11;  author: roux;  state: Exp;  lines: +158 -42


Build 12

Nombreuses modifications. Desormais tous les appels a un automate doive preciser l'encodage. Modification dans XIPTRANS aussi, la fonction test recoit aussi un tel parametre, lequel est initialise lors du choix du lecteur.
Rajout des methodes insert, pop (string) et correction de la gestion des variables globales a la XIP
----------------------------
revision 1.4
date: 2010/05/27 16:18:32;  author: roux;  state: Exp;  lines: +3 -4


Build 12

Desormais toutes les methodes sur les chaines tiennent compte (dans le scripting) du fait que la chaine est ou non UTF8
----------------------------
revision 1.3
date: 2010/05/27 15:02:05;  author: roux;  state: Exp;  lines: +499 -148


Build 11

Beaucoup de modifications:

Tout d'abord, la gestion UTF8 est assure desormais par testutf8.
En particulier, nous avons rajoute la possibilite d'eclater une chaine utf8 en ses caracteres.

Dans KIF rajout d'un mode DEBUG
----------------------------
revision 1.2
date: 2010/05/21 14:54:13;  author: roux;  state: Exp;  lines: +4500 -2308


Version 10.10

Avec le compilateur KIF
----------------------------
revision 1.1
date: 2010/04/23 14:54:21;  author: roux;  state: Exp;


Fichier definissant le langage KIF
=============================================================================
