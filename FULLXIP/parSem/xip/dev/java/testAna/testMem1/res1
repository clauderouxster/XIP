 avec les String str = xipRes.toString(withFeature); et String str1 = xipRes.getSentenceString();
 sur linux(choranche)OB:

totalMem: 62783488      freeMem: 62308512       usedMem: 474976 after xipInit
totalMem: 58458112      freeMem: 58188752       usedMem: 269360 duration: 0 min 11 sec  sentence: 212   fileSize: 30703 bytes   afterParsing: input-1000
totalMem: 48627712      freeMem: 48252360       usedMem: 375352 duration: 0 min 47 sec  sentence: 1820  fileSize: 160004 bytes  afterParsing: input-5000
totalMem: 49020928      freeMem: 48432512       usedMem: 588416 duration: 1 min 37 sec  sentence: 3640  fileSize: 320008 bytes  afterParsing: input-10000
totalMem: 49086464      freeMem: 48498048       usedMem: 588416 end

---------------
avec dans la CB en commentaire: String str = xipRes.toString(withFeature); et String str1 = xipRes.getSentenceString();
totalMem: 62783488      freeMem: 62308512       usedMem: 474976 after xipInit
totalMem: 48955392      freeMem: 48283552       usedMem: 671840 duration: 10 min 14 sec sentence: 20505 fileSize: 1544093 bytes afterParsing: input-50000
totalMem: 48955392      freeMem: 48292248       usedMem: 663144 end
a comparer avec l'appel de xip en ligne de commande (meme gram, meme input-50000): 6mn

================================================================
 sur windows (avoriaz):

pas de diff significative  avec/sans le new String () dans duplicateString()

totalMem: 16318464      freeMem: 16075632       usedMem: 242832 after xipInit
totalMem: 16318464      freeMem: 15527984       usedMem: 790480 duration: 0 min 4 sec   sentence: 212   fileSize: 30703 bytes   afterParsing: input-1000
totalMem: 16318464      freeMem: 15954552       usedMem: 363912 duration: 0 min 19 sec  sentence: 1820  fileSize: 160004 bytes  afterParsing: input-5000
totalMem: 16318464      freeMem: 15458712       usedMem: 859752 duration: 0 min 39 sec  sentence: 3640  fileSize: 320008 bytes  afterParsing: input-10000
totalMem: 16318464      freeMem: 15966160       usedMem: 352304 duration: 1 min 20 sec  sentence: 7280  fileSize: 640016 bytes  afterParsing: input-20000
totalMem: 16318464      freeMem: 15966656       usedMem: 351808 end

---------------

avec dans la CB en commentaire: String str = xipRes.toString(withFeature); et String str1 = xipRes.getSentenceString();
totalMem: 16318464      freeMem: 16075672       usedMem: 242792 after xipInit
totalMem: 16318464      freeMem: 15852392       usedMem: 466072 duration: 0 min 37 sec  sentence: 3640  fileSize: 320008 bytes  afterParsing: input-10000
totalMem: 16318464      freeMem: 15966656       usedMem: 351808 end

avec dans la CB sans commentaire: String str = xipRes.toString(withFeature); et String str1 = xipRes.getSentenceString();
totalMem: 16318464      freeMem: 16075672       usedMem: 242792 after xipInit
totalMem: 16318464      freeMem: 15661280       usedMem: 657184 duration: 0 min 39 sec  sentence: 3640  fileSize: 320008 bytes  afterParsing: input-10000
totalMem: 16318464      freeMem: 15966656       usedMem: 351808 end

Conclusion: la perte de temps n'est pas dans la construction avec les toString()....
42s (sur les 46 total) sont xipResultBuilderFromTextFile
------------------
versionC++ sur windows avec meme gram et meme input-10000:
	sans callBack 36s
	avec callBack 36s
------------------
version appel xip en ligne de cmd: runCmd.bat
	..\..\..\xipFst\bin\windows\xip -grm ..\..\..\GRAMMARS\ENGLISH\GRMFILES\GRAM_GEN\gram_gen_entit.grm -tr -f -text input-10000 -time -nodisplay
	Duration : 31s
------------------




