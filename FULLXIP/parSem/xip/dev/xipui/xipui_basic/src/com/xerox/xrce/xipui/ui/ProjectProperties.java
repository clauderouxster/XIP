/*
 * Xerox Research Centre Europe - Grenoble Laboratory
 * 
 * Copyright (c) 2006 - 2007 Xerox Corporation.  All Rights Reserved.
 * 
 ****************************************************************************************
 * Copyright (c) 2005 Xerox Corporation                                                 *
 * Xerox Research Centre Europe - Grenoble                                              *
 * All Rights Reserved                                                                  *
 * Copyright protection claimed includes all forms and matters of copyrightable         *
 * material and information now allowed by statutory or judicial law or                 *
 * hereinafter granted, including without limitation, material generated from           *
 * the software programs which are displayed on the screen such as icons,               *
 * screen display looks, etc. All rights reserved. No part of this document             *
 * may be reproduced, stored in a retrieval system, or transmitted, in any              *
 * form or by any means, electronic, mechanical, photocopied, recorded, or              *
 * otherwise, without prior written consent from XEROX corporation.                     *
 ****************************************************************************************
 */
package com.xerox.xrce.xipui.ui;

import com.xerox.xrce.xipui.ProjectContext;
import com.xerox.xrce.xipui.VarEnv;
import com.xerox.xrce.xipui.modules.DialogModule;
import com.xerox.xrce.xipui.modules.ModuleContext;
import com.xerox.xrce.xipui.util.PathCellEditor;
import com.xerox.xrce.xipui.util.PropertiesTableModel;
import com.xerox.xrce.xipui.util.PropertyCellRenderer;
import java.util.*;

/**
 *
 * @author  vgrassau
 */
public class ProjectProperties extends DialogModule {

    /** Creates new form ProjectProperties
     * @param context 
     */
    public ProjectProperties(ModuleContext context) {
        super(context);
        initComponents();
        //we initialize the project table : 
        Object[][] data = new Object[][]{
            {"name", getProject().getName()},
            {"folder", getProject().getDirectory()},
            {"comment", getProject().getComment()},
            {"author", getProject().getAuthor()},
            {"version", getProject().getVersion()}
        };
        boolean[][] editable = {{false, false}, {false, false}, {false, true}, {false, false}, {false, true}};
        projectTable.setModel(new PropertiesTableModel(data, editable));
        projectTable.setDefaultRenderer(java.lang.String.class, new PropertyCellRenderer());
        //we initialize the variables table
        ProjectContext pc = getProject().getProjectContext();
        int nbVariables = pc.getVariables().size();
        Object[][] data3 = new Object[nbVariables][2];
        boolean[][] editable3 = new boolean[nbVariables][2];
        Iterator ite3 = pc.getVariables().iterator();
        int i = 0;
        while (ite3.hasNext()) {
            VarEnv var = (VarEnv) ite3.next();
            data3[i][0] = var.getName();
            editable3[i][0] = false;
            data3[i][1] = var.getValue();
            editable3[i][1] = true;
            i = i + 1;
        }
        variableTable.setModel(new PropertiesTableModel(data3, editable3));
        variableTable.setDefaultEditor(java.lang.String.class, new PathCellEditor(getModuleContext()));
        variableTable.setDefaultRenderer(java.lang.String.class, new PropertyCellRenderer());
        this.setTitle("Properties :" + getProject().getName());
        this.setSize(500, 300);
    }

    public void close() {
        this.dispose();
        this.isClosed = true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        projectPropLabel = new javax.swing.JLabel();
        contextPropLabel = new javax.swing.JLabel();
        ok = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        projectTable = new javax.swing.JTable();
        scroll = new javax.swing.JScrollPane();
        panelTable = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        variableTable = new javax.swing.JTable();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        projectPropLabel.setBackground(new java.awt.Color(153, 255, 153));
        projectPropLabel.setFont(new java.awt.Font("Arial", 0, 11));
        projectPropLabel.setText("Project properties");
        projectPropLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 102, 51)));
        projectPropLabel.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 6, 2, 2);
        getContentPane().add(projectPropLabel, gridBagConstraints);

        contextPropLabel.setBackground(new java.awt.Color(153, 255, 153));
        contextPropLabel.setFont(new java.awt.Font("Arial", 0, 11));
        contextPropLabel.setText("Project Context");
        contextPropLabel.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 102, 51)));
        contextPropLabel.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 6, 2, 2);
        getContentPane().add(contextPropLabel, gridBagConstraints);

        ok.setFont(new java.awt.Font("Arial", 0, 11));
        ok.setText("Ok");
        ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(ok, gridBagConstraints);

        cancel.setFont(new java.awt.Font("Arial", 0, 11));
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(cancel, gridBagConstraints);

        projectTable.setFont(new java.awt.Font("Arial", 0, 11));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 8, 2, 2);
        getContentPane().add(projectTable, gridBagConstraints);

        scroll.setBorder(null);
        panelTable.setLayout(new java.awt.GridBagLayout());

        label.setBackground(new java.awt.Color(153, 255, 153));
        label.setFont(new java.awt.Font("Arial", 0, 11));
        label.setText("Variables");
        label.setOpaque(true);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        panelTable.add(label, gridBagConstraints);

        variableTable.setFont(new java.awt.Font("Arial", 0, 11));
        variableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panelTable.add(variableTable, gridBagConstraints);

        scroll.setViewportView(panelTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 8, 2, 2);
        getContentPane().add(scroll, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        close();
    }//GEN-LAST:event_cancelActionPerformed

    private void okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okActionPerformed
        //update the project 
        getProject().setComment((String) projectTable.getValueAt(2, 1));
        getProject().setVersion((String) projectTable.getValueAt(4, 1));
        close();
    }//GEN-LAST:event_okActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel contextPropLabel;
    private javax.swing.JLabel label;
    private javax.swing.JButton ok;
    private javax.swing.JPanel panelTable;
    private javax.swing.JLabel projectPropLabel;
    private javax.swing.JTable projectTable;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JTable variableTable;
    // End of variables declaration//GEN-END:variables
}
