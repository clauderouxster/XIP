/*
 * Xerox Research Centre Europe - Grenoble Laboratory
 * 
 * Copyright (c) 2006 - 2007 Xerox Corporation.  All Rights Reserved.
 * 
 * GrmForm.java
 *
 * Created on January 10, 2006, 11:36 AM
 */
package com.xerox.xrce.xipui.ide.grammar;

import com.xerox.xrce.xipui.GrmFile;
import com.xerox.xrce.xipui.modules.ModuleContext;
import com.xerox.xrce.xipui.modules.PanelModule;

import java.util.*;

/**
 *@deprecated
 * @author  vgrassau
 */
public class GrmForm extends PanelModule {

    private GrmGeneralForm genForm;
    private GrmPathForm pathsForm;
    private GrmParameterForm parameterForm;

    /**
     * Creates new form GrmForm
     * @param properties 
     */
    public GrmForm(ModuleContext properties) {
        super(properties);
        initComponents();
        initializeForm();
    }

    public void initializeForm() {
        generalPanel.removeAll();
        pathsPanel.removeAll();
        parameterPanel.removeAll();
        genForm = new GrmGeneralForm(getModuleContext());
        pathsForm = new GrmPathForm(getModuleContext());
        parameterForm = new GrmParameterForm(getModuleContext());
        generalPanel.add(genForm);
        pathsPanel.add(pathsForm);
        parameterPanel.add(parameterForm);
        this.revalidate();
        this.repaint();
    }

    public void close() {
        removeAll();
        this.isClosed = true;
    }

    public GrmFile generateGrm() {
        GrmFile grm = (GrmFile) getProperty("GRM_EDITED");
        grm.reset();
        Vector variables = pathsForm.getAllPath();
        grm.setAllVariables(variables);
        grm.setDirective(GrmFile.INSTR_GRAMMAR, genForm.getGrammar());
        grm.setDirective(GrmFile.INSTR_NTM, genForm.getNtm());
        grm.setDirective(GrmFile.INSTR_HMM, genForm.getHmm());
        grm.setDirective(GrmFile.INSTR_LOOKUP, genForm.getLookup());
        grm.setDirective(GrmFile.INSTR_TOKENIZER, genForm.getTokenizer());
        grm.setDirective(GrmFile.INSTR_FLAGS, genForm.getFlags());
        grm.setDirective(GrmFile.INSTR_STRATEGY, genForm.getStrategy());
        Vector parameters = parameterForm.getParameters();
        for (int i = 0; i < parameters.size(); i++) {
            grm.setDirective(GrmFile.INSTR_PARAMETER, parameters.get(i).toString());
        }
        return grm;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panel = new javax.swing.JPanel();
        generalPanel = new javax.swing.JPanel();
        pathsPanel = new javax.swing.JPanel();
        parameterPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        setBackground(new java.awt.Color(255, 255, 255));
        panel.setLayout(new java.awt.GridBagLayout());

        panel.setBackground(new java.awt.Color(255, 255, 255));
        generalPanel.setLayout(new java.awt.BorderLayout());

        generalPanel.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panel.add(generalPanel, gridBagConstraints);

        pathsPanel.setLayout(new java.awt.BorderLayout());

        pathsPanel.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panel.add(pathsPanel, gridBagConstraints);

        parameterPanel.setLayout(new java.awt.BorderLayout());

        parameterPanel.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        panel.add(parameterPanel, gridBagConstraints);

        add(panel, java.awt.BorderLayout.NORTH);

    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel generalPanel;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel parameterPanel;
    private javax.swing.JPanel pathsPanel;
    // End of variables declaration//GEN-END:variables
}
