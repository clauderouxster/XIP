/* soapStub.h
   Generated by gSOAP 2.8.22 from kifwebservice.h

Copyright(C) 2000-2015, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under one of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapStub_H
#define soapStub_H
#include <vector>
#include "stdsoap2.h"
#if GSOAP_VERSION != 20822
# error "GSOAP VERSION 20822 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#if 0 /* volatile type: do not declare here, declared elsewhere */

#endif

#ifndef SOAP_TYPE_kifws__callKIF0Response
#define SOAP_TYPE_kifws__callKIF0Response (11)
/* kifws:callKIF0Response */
struct kifws__callKIF0Response
{
public:
	std::string returned;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 11; } /* = unique type id SOAP_TYPE_kifws__callKIF0Response */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF0
#define SOAP_TYPE_kifws__callKIF0 (12)
/* kifws:callKIF0 */
struct kifws__callKIF0
{
public:
	std::string name;	/* required element of type xsd:string */
public:
	int soap_type() const { return 12; } /* = unique type id SOAP_TYPE_kifws__callKIF0 */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF1Response
#define SOAP_TYPE_kifws__callKIF1Response (14)
/* kifws:callKIF1Response */
struct kifws__callKIF1Response
{
public:
	std::string returned;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 14; } /* = unique type id SOAP_TYPE_kifws__callKIF1Response */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF1
#define SOAP_TYPE_kifws__callKIF1 (15)
/* kifws:callKIF1 */
struct kifws__callKIF1
{
public:
	std::string name;	/* required element of type xsd:string */
	std::string param1;	/* required element of type xsd:string */
public:
	int soap_type() const { return 15; } /* = unique type id SOAP_TYPE_kifws__callKIF1 */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF2Response
#define SOAP_TYPE_kifws__callKIF2Response (17)
/* kifws:callKIF2Response */
struct kifws__callKIF2Response
{
public:
	std::string returned;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 17; } /* = unique type id SOAP_TYPE_kifws__callKIF2Response */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF2
#define SOAP_TYPE_kifws__callKIF2 (18)
/* kifws:callKIF2 */
struct kifws__callKIF2
{
public:
	std::string name;	/* required element of type xsd:string */
	std::string param1;	/* required element of type xsd:string */
	std::string param2;	/* required element of type xsd:string */
public:
	int soap_type() const { return 18; } /* = unique type id SOAP_TYPE_kifws__callKIF2 */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF3Response
#define SOAP_TYPE_kifws__callKIF3Response (20)
/* kifws:callKIF3Response */
struct kifws__callKIF3Response
{
public:
	std::string returned;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 20; } /* = unique type id SOAP_TYPE_kifws__callKIF3Response */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF3
#define SOAP_TYPE_kifws__callKIF3 (21)
/* kifws:callKIF3 */
struct kifws__callKIF3
{
public:
	std::string name;	/* required element of type xsd:string */
	std::string param1;	/* required element of type xsd:string */
	std::string param2;	/* required element of type xsd:string */
	std::string param3;	/* required element of type xsd:string */
public:
	int soap_type() const { return 21; } /* = unique type id SOAP_TYPE_kifws__callKIF3 */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF4Response
#define SOAP_TYPE_kifws__callKIF4Response (23)
/* kifws:callKIF4Response */
struct kifws__callKIF4Response
{
public:
	std::string returned;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 23; } /* = unique type id SOAP_TYPE_kifws__callKIF4Response */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF4
#define SOAP_TYPE_kifws__callKIF4 (24)
/* kifws:callKIF4 */
struct kifws__callKIF4
{
public:
	std::string name;	/* required element of type xsd:string */
	std::string param1;	/* required element of type xsd:string */
	std::string param2;	/* required element of type xsd:string */
	std::string param3;	/* required element of type xsd:string */
	std::string param4;	/* required element of type xsd:string */
public:
	int soap_type() const { return 24; } /* = unique type id SOAP_TYPE_kifws__callKIF4 */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF5Response
#define SOAP_TYPE_kifws__callKIF5Response (26)
/* kifws:callKIF5Response */
struct kifws__callKIF5Response
{
public:
	std::string returned;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 26; } /* = unique type id SOAP_TYPE_kifws__callKIF5Response */
};
#endif

#ifndef SOAP_TYPE_kifws__callKIF5
#define SOAP_TYPE_kifws__callKIF5 (27)
/* kifws:callKIF5 */
struct kifws__callKIF5
{
public:
	std::string name;	/* required element of type xsd:string */
	std::string param1;	/* required element of type xsd:string */
	std::string param2;	/* required element of type xsd:string */
	std::string param3;	/* required element of type xsd:string */
	std::string param4;	/* required element of type xsd:string */
	std::string param5;	/* required element of type xsd:string */
public:
	int soap_type() const { return 27; } /* = unique type id SOAP_TYPE_kifws__callKIF5 */
};
#endif

#ifndef SOAP_TYPE_kifws__MethodsResponseResponse
#define SOAP_TYPE_kifws__MethodsResponseResponse (29)
/* kifws:MethodsResponseResponse */
struct kifws__MethodsResponseResponse
{
public:
	std::string returned;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:string */
public:
	int soap_type() const { return 29; } /* = unique type id SOAP_TYPE_kifws__MethodsResponseResponse */
};
#endif

#ifndef SOAP_TYPE_kifws__MethodsResponse
#define SOAP_TYPE_kifws__MethodsResponse (30)
/* kifws:MethodsResponse */
struct kifws__MethodsResponse
{
public:
	int soap_type() const { return 30; } /* = unique type id SOAP_TYPE_kifws__MethodsResponse */
};
#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (31)
/* SOAP Header: */
struct SOAP_ENV__Header
{
public:
	int soap_type() const { return 31; } /* = unique type id SOAP_TYPE_SOAP_ENV__Header */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (32)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
public:
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
public:
	int soap_type() const { return 32; } /* = unique type id SOAP_TYPE_SOAP_ENV__Code */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (34)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
public:
	char *__any;
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
public:
	int soap_type() const { return 34; } /* = unique type id SOAP_TYPE_SOAP_ENV__Detail */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (37)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
public:
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
public:
	int soap_type() const { return 37; } /* = unique type id SOAP_TYPE_SOAP_ENV__Reason */
};
#endif

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (38)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
public:
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
public:
	int soap_type() const { return 38; } /* = unique type id SOAP_TYPE_SOAP_ENV__Fault */
};
#endif

#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


#endif

/* End of soapStub.h */
