/* Copyright (c) 1994 by Rank Xerox Research Centre.  All rights reserved. */
/* Created by Pasi Tapanainen. */
/* $Id: warning.h,v 1.2 2001/12/14 02:27:17 lk Exp $ */

#define	deep_alias()			fputs("Too deep recursion on aliases.\n",stderr)
#define	print_answer_yn()	 	fputs("Please answer yes or no> ",stdout)
#define	print_answer_yni()	 	fputs("Please answer (yes/no/info)> ",stdout)
#define	print_internal_error()		fprintf(stderr,"\n*** INTERNAL ERROR.  THE READER IS CONFUSED.  PLEASE REPORT THIS!!!\n")
#define	print_wanna_stop()		fputs("Do you really want to exit?\n", stdout)
#define	warn_binary(name)		fprintf(stderr,"The file %s is probably in a binary format.\n",name)
#define	warn_binary_char(name)		fprintf(stderr,"warning: non-printable character 0x%x encountered.\n",name)
#define	warn_charset(char)		fprintf(stderr,"Character '%c' (0x%x) does not belong to any character group.\nIt may cause unexpected results.\n",char,char)
#define	warn_command_not_found(x)	fprintf(stderr,"command '%s' not found\n", x)
#define	warn_ignoring(rest_of_line)	fprintf(stderr,"ignoring input: %s",rest_of_line)
#define	warn_missing_lexicon()		fprintf(stderr,"No lexicon.\n")
#define	warn_missing_semic_EOF()	fprintf(stderr,"Warning: missing semicolon.\n")
#define	warn_missing_tokens()		fprintf(stderr,"No tokeniser.\n")
#define	warn_possibly_false_comm(par)	fprintf(stderr,"Given file does possibly not contain proper commands.\nPlease, check file name %s.\nOperation terminated.\n",par)
#define	warn_toomany(line)		fprintf(stderr,"too many arguments, ignoring: %s\n",line)
#define	warning_wrong_filetype(par)	fprintf(stderr,"wrong file header in \"%s\".\n",par)
#define cannot_def(n)			fprintf(stderr,"Cannot define %s.\n",n)
#define nopipecomm()			fputs("Illegal or missing pipe.\n",stderr)
#define print_close_file(f)		printf("Closing file %s...\n",f)
#define print_no_help(x)		printf("No description for %s.\nType \"help\" to list all commands\nor try \"apropos %s\" to find appropriate commands.\n",(x),(x))
#define print_open_file(x)		fprintf(stdout,"Opening file %s...\n",x)
#define warn_badnet()			fprintf(stderr,"No net found.\n")
#define warn_command_parameters(par)	fprintf(stderr,"Please, check the parameters: %s\nCommand not executed\n",par)
#define warn_errors(n)			fprintf(stderr,"*** Input contains %d or more errors\n",n)
#define warn_no_fs()			fprintf(stderr,"*** No output for a regular expression, sorry\n")
#define warn_no_func(x)			fprintf(stderr,"Function %s) is not defined\n",(x))
#define warn_notoken(tok)		fprintf(stderr,"No token found: %s\n",(tok))
#define warn_toomanyerrors(n)		fprintf(stderr,"too many errors (%d): trying to terminate processing\n",n)
#define warn_unproperfile(name)		fprintf(stderr,"Cannot read file %s.\n",name)
