//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Copyright (c) Xerox Corporation.  All Rights Reserved.
//!
//! File:	translations.xip
//! Content:	translations for the German XIP grammar
//!
//! Language:	GERMAN
//!
//! Author:	Anne Schiller
//!
//! Created: 	17-Jan-2006
//! Updated:	30-Oct-2009
//!
//! ENCODING : UTF-8	[€àâáäã]
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Translation:


//== MORPHOLOGICAL TAGS =======================================================
//-- MAIN CATEGORIES ----------------------------------------------------------

Adj		= adj.			// adjective
PAdj		= adj[pronom=+].	// adjective-like pronoun
Adv		= adv.			// adverb
Conj		= conj.			// conjunction
Cpd		= trunc.		// truncated word part (e.g. "Haus-")
Det		= det.			// determiner
Num		= num.			// numeral ("drei")
Dig		= num[dig=+].		// roman or decimal number ("3", "III") 
Noun		= noun[common=+].	// (common) noun
Itj		= itj.			// interjection
Negat		= negat.		// negation "nicht"
Ptcl		= ptcl.			// particle
Punct		= punct.		// punctuation
Pron		= pron.			// pronoun
Verb		= verb.			// verb
Prop		= noun[ proper=+].	// proper noun
Pronadv		= adv[pronom=+,sadv=+].	// pronominal adverb ("danach", "womit")

Prep		= Prep.			// preposition (before NP)
Postp		= Postp.		// postposition (after NP)
PrepDet		= prep[det=+].		// preposition with determiner	("zum")

// special cases:
Symbol		= symbol.			// special symbol
Predet		= det[predet=+].		// pre-determiner ("solch [ein ...]")

Fuge		= [ fuge=+ ].


//-- GENDER -------------------------------------------------------------------

Masc		= [ masc=+ ].
Fem		= [ fem=+ ].
Neut		= [ neut=+ ].
MF		= [ masc=+, fem=+ ].
MN		= [ masc=+, neut=+ ].
FN		= [ fem=+, neut=+ ].
MFN		= [ masc=+, fem=+, neut=+ ].

Undef		= [ masc=+, fem=+, neut=+ ].

//-- NUMBER -------------------------------------------------------------------

Sg		= [ sg=+ ].
Pl		= [ pl=+ ].
SgPl		= [sg=+, pl=+].

//-- CASE ----------------------------------------------------------------------
Nom		= [ nom=+ ].
Acc		= [ acc=+ ].
Dat		= [ dat=+ ].
Gen		= [ gen=+ ].
GenS		= [ gen=+, marked_gen=+ ].
Dat2		= [ dat=+, arch=+ ].

NomAcc		= [ nom=+, acc=+ ].
NomDat		= [ nom=+, dat=+ ].
NomGen		= [ nom=+, gen=+ ].
AccDat		= [ acc=+, dat=+ ].
AccGen		= [ acc=+, gen=+ ].
DatGen		= [ dat=+, gen=+ ].

NomAccDat	= [ nom=+, acc=+, dat=+ ].
NomAccGen	= [ nom=+, acc=+, gen=+ ].
NomDatGen	= [ nom=+, dat=+, gen=+ ].
AccDatGen	= [ acc=+, dat=+, gen=+ ].

NomAccDatGen	= [ nom=+, acc=+, dat=+, gen=+ ].


//-- DECLENSION ---------------------------------------------------------------- 

St		= [ strong=+ ].
Wk		= [ weak=+ ].
StWk		= [ strong=+, weak=+ ].

// for determiners
AgrSt		= [ strong=+ ].
AgrWk		= [ weak=+ ].

Pred		= [ pred=+ ].	// non-attributive adjective
Attr		= [ attr=+ ].	// attributive adjective

Invar		= [invar=+].

//-- PERSON --------------------------------------------------------------------
1P		= [ p1=+ ].
2P		= [ p2=+ ].
3P		= [ p3=+ ].
1P3P		= [ p1=+, p3=+].

//-- VERBTYPE ------------------------------------------------------------------
Aux		= [ aux=+ ].			// auxiliary
Modal		= [ modal=+, sub_inf=+ ].		// modal verb
Trans		= [ trans=+ ].			// transitive
//Intr		= [ trans=- ].			// intransitive

//--  VERB TENSE ---------------------------------------------------------------
Past		= [ past=+ ].			// present	[Präsens]
Pres		= [ pres=+ ].			// past		[Präteritum]



//-- VERB FORM (or mood) -------------------------------------------------------
Indc		= [ finite=+, indic=+ ].		// indicative
Subj		= [ finite=+, subjc=+ ].		// subjunctive [Konjunktiv]
IndcSubj		= [ finite=+, indic=+, subjc=+ ].		
Imp		= [ imp=+,finite=+ ].			// imperative
PPast		= [ ppast=+ ].			// past participle
Inf		= [ inf=+ ].			// infinitive
Izu		= [ infzu=+ ].			// infinitive with "zu"

V1		= [ v1=+, req_pref=+ ].		// verb position in main clause ("Er kommt an.")
V2		= [ v2=+ ].		// verb position in subordinate ("weil er ankommt.")


PPres		= [ ppres =+ ].		// present participle
PPrzu		= [ pprzu =+ ].		// present participle with "zu"



//-- DEGREE OF COMPARISON ------------------------------------------------------
Pos		= [ pos=+ ].
Comp		= [ comp=+ ].
Sup		= [ super=+ ].
Sup2		= [ super=+, sup_am=+ ].


//-- DETERMINER AND PRONOUNS ---------------------------------------------------
Def		= [ def=+ ].		// definite
Dem		= [ dem=+ ].		// demonstrative
Indef		= [ indef=+ ].		// indefinite
Pers		= [ pers=+ ].		// personal pronoun
Poss		= [ poss=+ ].		// possessive
Quant		= [ quant=+ ].		// quantifying ("viel")
Recp		= [ recp=+ ].		// reciprocal ("einander")
Refl		= [ refl=+, acc=+, dat=+ ].		// reflexive ("sich")
Rel		= [ rel=+ ].		// relative
Wh		= [ wh=+ ].		// interrogative 


//-- CONJUNCTION TYPES ---------------------------------------------------------
Coord		= [ coord=+ ].	// coordinating conjunction "und", "oder"
Coord1		= [ coord1=+ ].		// first part of coord. ("entweder"...)
Coord2		= [ coord2=+ ].	// second part of coord. (... "oder")	
Subord		= [ subord=+ ].		// subordinating conjunction ("wenn")
CInf		= [ cinf=+ ].		// for conjuctions which require following "zu" infinitive
SAdv		= [ sadv=+ ].		// sentential adverb ("denn", "doch", "aber")


//-- PREPOSITION TYPES ---------------------------------------------------------
Crc		= [ crc=+ ]. 
Preprep		= [ preprep=+ ].	// bis zum Ende

//-- ADVERB OR PARTICLE TYPES --------------------------------------------------
Neg		= [ neg=+].
Prenum		= [ prenum=+ ].	// adverb-like preposition ("unter [1000 Euro]")
AMod		= [ mod_adj=+ ].	// adjective or adverb modifier ("zu [schnell]")

Pref		= [ pref=+ ].			// (verb) prefix
Sep		= [ vpref=sep ].
Unsep		= [ vpref=unsep ].
Infzu		= [ infzu=+].

//-- NUMERALS ------------------------------------------------------------------
Card		= [ card=+ ].
Ord		= [ ord=+ ].
Dec		= [ dec=+ ].		// decimal number
Fract		= [ fract=+ ].		// fractal ("drittel")
Rom		= [ roman=+ ].


//-- NOUN TYPES ----------------------------------------------------------------
Lang		= [ lang=+ ].			// language

Bus		= [ bus=+ ].
Celeb		= [ celeb=+ ].			// celebrity, famous person
Continent		= [ geo=+, continent=+ ].
Country		= [ geo=+, country=+ ].
Doc		= [ doc=+ ].
First		= [ firstname=+].
FirstName		= [ firstname=+].
Lake		= [ geo=+, lake=+ ].
Last		= [ lastname=+ ].
LastName		= [ lastname=+ ].
Org		= [ org=+ ].
Prod		= [ prod=+ ].			// product name ("Mercedes")
Region		= [ geo=+, region=+ ].
River		= [ geo=+, river=+ ].
Sea		= [ geo=+, sea=+ ].
State		= [ geo=+, state=+ ].
Town		= [ geo=+, town=+ ].
TownCountry	= [ geo=+, town=+, country=+ ].
TownState		= [ geo=+, town=+, state=+ ].
PrePart		= [ prepart=+ ].		// (prefix) part of name ("St. [Ulrich]")
PostPart		= [ postpart=+ ].		// (postfix) part of name ("[Ulrich] AG")
Premod		= [ premod=+ ].		// pre-modifier ("St. [Ulrich]")
Postmod		= [ postmod=+ ].		// post-modifier  {"[Paintshop] Pro")

Day		= [ day=+,temporal=+ ].		// week day ("Montag")
Month		= [ month=+,temporal=+ ].		// month ("Dezember")
Year		= [ year=+, temporal=+].
Hour		= [ hour=+ ].
Minute		= [ minute=+ ].

//-- PUNCTUATIONS AND SYMBOLS --------------------------------------------------
Comma		= [ comma=+ ].
Quote		= [ quote=+, skip=+ ].
Semicolon		= [ semicolon=+, sent=+ ].
Sent		= [ sent=+ ].
Colon		= [ colon=+, sent=+ ].
Bullet		= [ sent_cap=+ ].
Dots		= [ skip=+ , sent_cap=+ ].
Dash		= [ dash=+, skip=+, sent_cap=+ ].
Slash		= [ slash=+, coord=+ ].

Curr		= [ curr=+ ].

// other:

Abbr		= [ abbr=+, invar=+ ].
Acron		= [ acron=+ ].
Coll		= [ colloq=+ ].		// colloquial
Date		= [ date=+ ].
Elid		= [ elid=+ ].
ElidS		= [ elid_s=+ ].
Email		= [ email=+ ].
Expr		= [ expr=+ ].
Foreign		= [ foreign=+ ].
Init		= [ init=+ ].		// initial letter (with dot)
Letter		= [ letter=+ ].		// single letter
Sgml		= [ sgml=+ ].

Time		= [ time=+ ].
Title		= [ title=+ ].
Common		= [ common=+ ].
Unit		= [ unit=+ ].
Url		= [ url=+ ].
Polite		= [ polite=+ ].

// derivational markers
NAdj		= [ nadj=+ ].
NInf		= [ ninf=+ ].

//spelling codes (**check for further use ...)
\^Err		= [ err=+ ].
\^ErrLem	= [ err=+ ].
\^ErrSrf	= [ err=+ ].
\^New		= [ newspell=+ ].
\^NewSrf	= [ newspell=+ ].
\^NewLem	= [ newspell=+ ].		
\^Old		= [ oldspell=+ ].
\^OldLem	= [ oldspell=+ ].
\^OldSrf	= [ oldspell=+ ].


// lexical source markers
lex		= [ lex=+ ].
guessed		= [ guessed=+ ].
open		= [ guessed=+, openclass=+ ].
openclass		= [ guessed=+, openclass=+ ].

// ranking (for compounds)


Low = [low=+].
Upp = [upp=+].

// compound ranking:
rank0 = [ compd_level=0 ].
rank1 = [ compd_level=1 ].
rank2 = [ compd_level=2 ].
rank3 = [ compd_level=3 ].
rank4 = [ compd_level=4 ].
rank5 = [ compd_level=5 ].
rank6 = [ compd_level=6 ].
rank7 = [ compd_level=7 ].
rank8 = [ compd_level=8 ].
rank9 = [ compd_level=9 ].

// -------------------------------------------------------------
// more tags:
//Angle
//Backslash
//Begin
//Bracket
//Copyright
//Degree
//Double
//Paragraph
//Paren
//Percent
//Left
//Right
//Slash
//Single
//Math
Music	= [music=+].

//Underscore

// ------------------------------------------------------------

FeatureDefinition:

[noun,strong:~,weak:~] = [strong=+, weak=+].
[adj,case,strong:~,weak:~] = [strong=+, weak=+].

// proper names
[firstname,gen:~] = [nom=+,acc=+,dat=+,gen=+].
//[lastname,sg,gen:~] = [masc=+,fem=+,nom=+,acc=+,dat=+,gen=+].
//[lastname,sg,marked_gen] = [masc=+,fem=+,gen=+].
[lastname,pl] = [invar=+,nom=+,acc=+,dat=+,gen=+,pl3=+].
[lastname,sg,gen:~] = [invar=+,nom=+,acc=+,dat=+,gen=+,sg3=+].
[lastname,sg,marked_gen] = [invar=+,gen=+,sg3=+].

[title,abbr] = [premod=+].
[is_person,masc,fem:~] = [man=+].
[is_person,masc:~,fem] = [woman=+].


// combination of gender, case, number for noun agreemnents
// singular, strong
[masc,nom,sg,strong] = [mnoms=+].
[masc,acc,sg,strong] = [maccs=+].
[masc,dat,sg,strong] = [mdats=+].
[masc,gen,sg,strong] = [mgens=+].

[fem,nom,sg,strong] = [fnoms=+].
[fem,acc,sg,strong] = [faccs=+].
[fem,dat,sg,strong] = [fdats=+].
[fem,gen,sg,strong] = [fgens=+].

[neut,nom,sg,strong] = [nnoms=+].
[neut,acc,sg,strong] = [naccs=+].
[neut,dat,sg,strong] = [ndats=+].
[neut,gen,sg,strong] = [ngens=+].

// plural (does not require distinction for gender)
[nom,pl,strong] = [xnoms=+].
[acc,pl,strong] = [xaccs=+].
[dat,pl,strong] = [xdats=+].
[gen,pl,strong] = [xgens=+].

// singular, weak
[masc,nom,sg,weak] = [mnomw=+].
[masc,acc,sg,weak] = [maccw=+].
[masc,dat,sg,weak] = [mdatw=+].
[masc,gen,sg,weak] = [mgenw=+].

[fem,nom,sg,weak] = [fnomw=+].
[fem,acc,sg,weak] = [faccw=+].
[fem,dat,sg,weak] = [fdatw=+].
[fem,gen,sg,weak] = [fgenw=+].

[neut,nom,sg,weak] = [nnomw=+].
[neut,acc,sg,weak] = [naccw=+].
[neut,dat,sg,weak] = [ndatw=+].
[neut,gen,sg,weak] = [ngenw=+].

// plural (does not require distinction for gender)
[nom,pl,weak] = [xnomw=+].
[acc,pl,weak] = [xaccw=+].
[dat,pl,weak] = [xdatw=+].
[gen,pl,weak] = [xgenw=+].


// combination of person and number for subject/verb agreement
[verb,sg,p1] = [sg1=+].
[verb,sg,p2] = [sg2=+].
[verb,sg,p3] = [sg3=+].
[verb,pl,p1] = [pl1=+].
[verb,pl,p2] = [pl2=+].
[verb,pl,p3] = [pl3=+].

[pron,nom,sg,p1] = [sg1=+].
[pron,nom,sg,p2] = [sg2=+].
[pron,nom,sg,p3] = [sg3=+].
[pron,nom,pl,p1] = [pl1=+].
[pron,nom,pl,p2] = [pl2=+].
[pron,nom,pl,p3] = [pl3=+].
[pron,nom,sg,pers:~] = [sg3=+].
[pron,nom,pl,pers:~] = [pl3=+].

[is_pl] = [pl3=+].
[is_sg] = [sg3=+].


// derivations
[adj,ppast] = [deverbal=+].
[adj,ppres] = [deverbal=+].
[adj,pprzu] = [deverbal=+].

[adj,pred:~] = [attr=+].
[quant,invar] = [weak=+,strong=+].



// ordinals finishing with a dot
[ord,dig] = [abbr=+].

