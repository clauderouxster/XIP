DependencyRules:

if ( ^HEAD(#1,#2) & #1 :: #2 )
   ~.

if ( COORD(#1,#2,#3) )
   DEP(#1,#3).

// reflexive verbs

| #1[reflment,mental=+] |
if ( REFLEX(#1,#2) )
   ~.

| #1[reflpubl,publ=+] |
if ( REFLEX(#1,#2) )
   ~.



// subject complement

//PRED(sein,unvollständig)
//SUBJ(sein,Untersuchung/s#Design)

if ( PRED(#1,#2) & SUBJ(#1,#3) )
   DEP(#3,#2).
   
//AP{bislang nur rudimentär}

| #1ap[cont=+]{#4, #2[lemma:nur,cont=+], #3[cont=+]} |
  ~.

//AP{nur teilweise}

| #1ap[cont=+]{#2[lemma:nur,cont=+], #3[lemma:teilen\#weise,cont=+]} |
  ~.

//nur PP{zum NP{NPA{Teil}}

| #1[lemma:nur], pp#2[cont=+]{#4[lemma:zu], np{npa{#3[lemma:Teil]}}} |
  ~.

//HEAD(geringere Leistungen,Leistungen)
//SUBJ(konnten,Leistungen)
//SUBJ1(konnten,geringere Leistungen)

if ( HEAD(#1,#2) & $1(#3,#2) & ^$2(#3,#1) )
   ~.

//AP{ADJ{eindeutig}}
//NEGAT(ADJ#2:eindeutig,NEGAT#3:nicht)
//VMOD(VERB#4:beantworten,AP#1:eindeutig)

| ap#1{adj#2} |
//if ( $1(#2,#3) & ^$2(#4,#1) )
if ( ^$2(#4,#1) )
   $2(#4,#2).

//AP{ab=schließen}
//VMOD(VERB:bemerken,AP:ab=schließen)


//NOUN{Forschung/s#Frage}

| noun#1[cpd,mental,scope,cont] |
  DEP[cont=+,mental=+,scope=+,prob=+,ksdep=+](#1).

| noun#1[cpd,mental,cont] |
if ( ~DEP[cont=+,mental=+,scope=+](#1) )
  DEP[cont=+,mental=+,prob=+,ksdep=+](#1).

| noun#1[cpd,scope,cont] |
if ( ~DEP[cont=+,mental=+,scope=+](#1) )
  DEP[cont=+,scope=+,prob=+,ksdep=+](#1).

if ( VMOD[pp](#1[traits_ksw],#2) & HEAD[pp](#2,#3[mental]) )
   VMOD(#1,#3).

if ( VMOD[pp](#1[traits_ksw],#2) & HEAD[pp](#2,#3[scope]) )
   VMOD(#1,#3).

if ( VMOD[pp](#1[traits_ksw],#2) & HEAD[pp](#2,#3[publ]) )
   VMOD(#1,#3).

if ( VMOD[pp](#1[traits_ksw],#2) & HEAD[pp](#2,#3[cont]) )
   VMOD(#1,#3).

if ( VMOD[pp](#1[traits_ksw],#2) & HEAD[pp](#2,#3[deict]) )
   VMOD(#1,#3).

//HEAD_PP(Gegen diese Erklärungsmöglichkeit,Erklärungsmöglichkeit)
//PP{Gegen NP{diese NPA{Erklärungsmöglichkeit}}}

| pp#3{#1[cont], np{?*, ?{?*, #2[last]}}} |
if ( HEAD(#3,#2) )
   DEP(#2,#1).

//Diese Ergebnisse sind wichtig
//PRED(sind,wichtig)
//SUBJ(sind,Ergebnisse)

if ( SUBJ(#1,#2[traits_ksw]) & PRED(#1,#3[traits_ksw]) )
   DEP(#2,#3).

//Interessant ist für die hier diskutierte Forschungsfrage
//PRED(sein,interessant)
//VMOD_PP(sein,für die hier diskutieren Forschung/s#Frage)
//PP{für NP{die NPA{AP{hier diskutieren} Forschung/s#Frage}}}

| #1pp{?, np{?, npa{ap{?+}, #2}}} |
if ( PRED(#3,#4) & VMOD[pp](#3,#1) )
   DEP(#4,#2).


////ist demgegenüber hierzulande nur wenig Greifbares bekannt.
//DETERM_CONT_QUANT(greifbar,wenig)
//PRED_CONT(sein,greifbar)
//PRED_CONT(sein,bekannt)

if ( DETERM(#1,#2[cont]) & PRED(#3,#1) & PRED(#3,#4[traits_ksw]) )
   DEP(#2,#4).

//OBJ(ist,Forschung)
//PRED(ist,unlösbar)

if ( OBJ(#1,#2[traits_ksw]) & PRED(#1,#3[traits_ksw]) )
   DEP(#2,#3).

//soll analysiert werden 
//AUXIL(werden,analysiert)
//MODAL(soll,werden)

if ( AUXIL(#1,#2[traits_ksw]) & MODAL(#3[traits_ksw],#1) & #3~:#2 )
   DEP(#3,#2).


//SUBJ(lassen,Bewertung/s#Rahmen)
//VSUB(lassen,ab=leiten)

// preverbs

//ablehnen

| #1[cont=+] |
if ( VPREF(#1[lemma:\=lehnen],#2[lemma:ab]) )
   ~. 

| #1[cont=+] |
if ( VPREF(#1[lemma:\=weisen],#2[lemma:ab]) )
   ~. 

| #1[mental=+] |
if ( VPREF(#1[lemma:\=deuten],#2[lemma:an]) )
   ~. 

| #1[mental=+,know=+] |
if ( VPREF(#1[lemma:\=erkennen],#2[lemma:an]) )
   ~. 

| #1[mental=+]. |
if ( VPREF(#1[lemma:\=nehmen],#2[lemma:an]) )
   ~. 


| #1[change=+,incr=+,wscope=+]. |
if ( VPREF(#1[lemma:\=schwellen],#2[lemma:an]) )
   ~. 


| #1[mental=+,know=+,publ=+]. |
if ( VPREF(#1[lemma:\=sprechen],#2[lemma:an]) )
   ~. 

| #1[mental=+,wscope=+]. |
if ( VPREF(#1[lemma:\=werfen],#2[lemma:auf]) )
   ~. 


| #1[mental=+]. |
if ( VPREF(#1[lemma:\=zeigen],#2[lemma:an]) )
   ~. 


| #1[cont=+,nounary=+,nonot=+]. |
if ( VPREF(#1[lemma:\=zweifeln],#2[lemma:an]) )
   ~. 


| #1[mental=+,know=+,noweak=+]. |
if ( VPREF(#1[lemma:\=decken],#2[lemma:auf]) )
   ~. 


| #1[attitude=+,nonot=+]. |
if ( VPREF(#1[lemma:\=fallen],#2[lemma:auf]) )
   ~. 


| #1[cont=+,nounary=+]. |
if ( VPREF(#1[lemma:\=geben],#2[lemma:auf]) )
   ~. 


| #1[mental=+,know=+]. |
if ( VPREF(#1[lemma:\=klären],#2[lemma:auf]) )
   ~. 

|  #1[mental=+] |
if ( VMOD(#1[lemma:legen],#2[lemma:nah]) )
   ~.



| #1[attitude=+,nonot=+]. |
if ( VPREF(#1[lemma:\=regen],#2[lemma:auf]) )
   ~. 


| #1[change=+,incr=+,wmentsco=+]. |
if ( VPREF(#1[lemma:\=tauchen],#2[lemma:auf]) )
   ~. 


| #1[mental=+,wscope=+]. |
if ( VPREF(#1[lemma:\=treten],#2[lemma:auf]) )
   ~. 


| #1[change=+]. |
if ( VPREF(#1[lemma:\=tauschen],#2[lemma:aus]) )
   ~. 


| #1[mental=+,cont=+,nonot=+,know=+]. |
if ( VPREF(#1[lemma:\=weichen],#2[lemma:aus]) )
   ~. 


| #1[mental=+]. |
if ( VPREF(#1[lemma:\=itragen],#2[lemma:be]) )
   ~. 


| #1[mental=+,wscope=+]. |
if ( VPREF(#1[lemma:\=stellen],#2[lemma:bereit]) )
   ~. 


| #1[cont=+,nonot=+,nounary=+]. |
if ( VPREF(#1[lemma:\=setzten],#2[lemma:entgegen]) )
   ~. 


| #1[cont=+,mental=+]. |
if ( VPREF(#1[lemma:\=fordern],#2[lemma:heraus]) )
   ~. 


| #1[mental=+,noweak=+]. |
if ( VPREF(#1[lemma:\=heben],#2[lemma:hervor]) )
   ~. 


| #1[scope=+,nogrow=+]. |
if ( VPREF(#1[lemma:\=weisen],#2[lemma:hin]) )
   ~. 

| #1[mental=+,wscope=+]. |
if ( VPREF(#1[lemma:\=denken],#2[lemma:nach]) )
   ~. 


| #1[mental=+,wscope=+]. |
if ( VPREF(#1[lemma:\=gehen],#2[lemma:nach]) )
   ~. 

| #1[mental=+,wscope=+]. |
if ( VMOD(#1[lemma:geben],#2[lemma:wieder]) )
   ~.

| #1[mental=+,cont=+] |
if ( NEGAT(#1[lemma:korrekt],#2[lemma:nicht]) )
   ~.

| #1[transparent=+] |
if ( VPREF(#1[lemma:\=liegen],#2[lemma:vor]) )
   ~. 

| #1[transparent=+] |
if ( VPREF(#1[lemma:\=greifen],#2[lemma:auf]) )
   ~. 

| #1[lemma:lassen,transparent=+], np{#2[lemma:sich]} |
  ~.

//NEGAT(=liegen,nicht)
//VPREF(=liegen,vor)

if ( ^NEGAT(#1[lemma:\=liegen],#2) & VPREF(#1[lemma:\=liegen],#3[lemma:vor]) )
   NEGAT[cont=+](#1,#2).

//NEGAT(eindeutig,nicht)
//VMOD(beantwortet,eindeutig)

| #1[cont=+] |
if ( VMOD(#1[traits_ksw],#2) & NEGAT(#2,#4) )
   ~.

| #1[cont=+] |
if ( VMOD(#1[traits_ksw],#2) & NEGAT(#1,#4) )
   ~.



// complements
//Zu den wichtigsten Untersuchungen zählen

//VMOD_PP(zählen,zu der wichtig Untersuchung)
//PP{zu NP{der NPA{AP{wichtig} Untersuchung}}

| pp#1{#2[lemma:zu], ?+} |
if ( VMOD[pp](#3,#1) )
   TMP(#3).

| #3[transparent=+] |
if ( ^TMP(#3) )
   ~.

// chunks

//Um diese Annahme zu prüfen ...
//OBJ_ACC(zu prüfen,Annahme)
//VERB{zu prüfen}

| #2verb[mental=+]{?*,#1[mental,last]} |
if ( $1(#2,#3) & VMAIN(#2) & ~$1(#2,#1) )
   ~.

| #2verb[cont=+]{?*,#1[cont,last]} |
if ( $1(#2,#3) & VMAIN(#2) & ~$1(#2,#1) )
   ~.

| #2verb[scope=+]{?*,#1[scope,last]} |
if ( $1(#2,#3) & VMAIN(#2) & ~$1(#2,#1) )
   ~.

| #2verb[publ=+]{?*,#1[publ,last]} |
if ( $1(#2,#3) & VMAIN(#2) & ~$1(#2,#1) )
   ~.

| #2verb[wscope=+]{?*,#1[wscope,last]} |
if ( $1(#2,#3) & VMAIN(#2) & ~$1(#2,#1) )
   ~.

//NMOD_PP(Befund,zu dies Frage)
//HEAD_PP(zu dies Frage,Frage)

//| #2[scope=+] |
if ( NMOD[pp](#1,#2) & HEAD(#2,#3[scope]) & ~NMOD[pp](#1,#3) )
   NMOD[pp](#1,#3).

//| #2[wscope=+] |
if ( NMOD[pp](#1,#2) & HEAD(#2,#3[wscope])  & ~NMOD[pp](#1,#3) )
   NMOD[pp](#1,#3).

//| #2[mental=+] |
if ( NMOD[pp](#1,#2) & HEAD(#2,#3[mental])  & ~NMOD[pp](#1,#3) )
   NMOD[pp](#1,#3).

//| #2[publ=+] |
if ( NMOD[pp](#1,#2) & HEAD(#2,#3[publ])  & ~NMOD[pp](#1,#3) )
   NMOD[pp](#1,#3).

//| #2[cont=+] |
if ( NMOD[pp](#1,#2) & HEAD(#2,#3[cont])  & ~NMOD[pp](#1,#3) )
   NMOD[pp](#1,#3).




//wscope

| #1[wscope] |
if ( $1(#1,#2[scope]) | $1(#2[scope],#1) )
   TMP(#1).

| #1[wscope,cont=~,mental=~,scope=~,publ=~] |
if ( ~TMP(#1) )
   ~.

if ( ^TMP(#1) )
   ~.

| #1[wment] |
if ( $1(#1,#2[mental]) | $1(#2[mental],#1) )
   TMP(#1).

| #1[wment,cont=~,mental=~,scope=~,publ=~] |
if ( ~TMP(#1) )
   ~.

if ( ^TMP(#1) )
   ~.

| #1[wmentsco] |
if ( $1(#1,#2[mental]) | $1(#2[mental],#1) | $1(#1,#2[scope]) | $1(#2[scope],#1) )
   TMP(#1).

| #1[wment,cont=~,mental=~,scope=~,publ=~] |
if ( ~TMP(#1) )
   ~.

if ( ^TMP(#1) )
   ~.

//transparent

// Diese Fragen bleiben ... unbeantwortet
//PRED(bleiben,unbeantwortet)
//SUBJ(bleiben,Frage)

//OBJ_ACC(greifen,Idee)
//SUBJ(greifen,wir)

if ( $1(#1[transparent],#2[traits_ksw]) & $2(#1[transparent],#3[traits_ksw] ) & #3 < #2 )
   DEP(#3,#2).





////Viele dieser Forschungsarbeiten beziehen sich
//NMOD_GEN(viel,Forschung/s#Arbeit)
//SUBJ(=beziehen,viel)

if ( NMOD[gen](#1[transparent],#2) & SUBJ(#3,#1[transparent]) & #2 < #3 )
   DEP(#2,#3).


| #1[mental,mentsco=+,mentscopubl=+] |
  ~.

| #1[scope,mentsco=+,mentscopubl=+] |
  ~.

| #1[publ,mentscopubl=+] |
  ~.


