# ============================================================================
# TYPE:		(x)fst script
# CONTENT:      extract clitics from morphological analyser
# 
# LANGUAGE:     FRENCH
#
# AUTHOR:       J.P.Chanod, A.Schiller
#
# CREATED:      11-Jul-2003 (JPC)
# UPADTED:	31-Jan-2006 (AS)
# UPADTED:	11-Jul-2007 (AS: converted to utf-8)
# ============================================================================
# USAGE:        xfst -s [LEX.fst] -s [SUBCAT.fst] -l [ThisFile]
# ============================================================================

define subcat

define lex


define lex	[ %+SConj <- %+Conj %+Subord] .o. lex ;

# identify tags
read regex lex ;

single char sigma net
define SIG

read regex [ %+ ?+ ] .o. SIG ;
multi char sigma net
define TAG




define TVERB 	"+Verb" ;
define TNOUN 	"+Noun" ;
define TADJ 	"+Adj" ;
define TSCONJ 	"+SConj";

define POSTAGS [
        TVERB | TNOUN | TADJ | TSCONJ
];


# extracts from subcat lexicon  (separated by POS) #
# format: upper side is lemma + subcat features; lower side is lemma
define VERBsubcat [ subcat .o. $[TVERB] ] .o. [TVERB -> 0] ;
define NOUNsubcat [ subcat .o. $[TNOUN] ] .o. [TNOUN -> 0];
define ADJsubcat [ subcat .o. $[TADJ] ] .o. [TADJ -> 0];
define SCONJsubcat [ subcat .o. $[TSCONJ] ] .o. [TSCONJ -> 0];

# extracts some sublexicons (by POS) from basic morphological lexicon
define VERBlex  [  $[TVERB]  .o. lex ] ;
define NOUNlex  [  $[TNOUN]  .o. lex ] ;
define ADJlex   [  $[TADJ]   .o. lex ] ;
define SCONJlex [  $[TSCONJ] .o. lex ] ;

# extracts from basic morphological lexicon those words that also belong to subcat lexicon (by POS)
define VERBlex2 [  [VERBsubcat.2 TAG* TVERB TAG*] .o. VERBlex ] ;
define NOUNlex2 [  [NOUNsubcat.2 TAG* TNOUN TAG*] .o. NOUNlex ] ;
define ADJlex2 [  [ADJsubcat.2 TAG* TADJ TAG*] .o. ADJlex ] ;
define SCONJlex2 [  [SCONJsubcat.2 TAG* TSCONJ TAG*] .o. SCONJlex ] ;

#define sublex [ VERBlex | NOUNlex | ADJlex ] ;

# add subcat features to those words that belong to both morphol. and subcat lexicons (by POS)
define Synlex [
    [ [VERBsubcat TAG*]  .o.  VERBlex2 ]  |
    [ [NOUNsubcat TAG*]  .o.  NOUNlex2 ]  |
    [ [ADJsubcat TAG*]   .o.  ADJlex2  ]  |
    [ [SCONJsubcat TAG*] .o.  SCONJlex2] 
];

# find words that are not described in subcat lexicons

read regex [
 [VERBlex   .o. [ ?* -  VERBlex2.2]  ]   |
 [NOUNlex   .o. [ ?* -  NOUNlex2.2]  ]   |
 [ADJlex    .o. [ ?* -  ADJlex2.2]   ]   |
 [SCONJlex  .o. [ ?* -  SCONJlex2.2] ]   |
 [~$[POSTAGS] .o. lex]
];
define NotSynlex ;


read regex Synlex | NotSynlex ;


#modify some entries
define lex;


read regex [ 
	%+Conj %+Subord <- %+SConj

# add  deSN feature to verb naître
.o.	%+deSN <-  [..] || .#. n a î t r e   _ TAG 

# replace deSN feature by deSN2: ditransitive construction: e.g. faire
.o.	%+deSN2 <-  %+deSN || .#. [f a i r e | r é c l a m e r] TAG*   _ 
.o. lex ] ;














