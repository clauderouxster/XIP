
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2006 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : english grammar for political risk detection
//!   filename   : dependency-extension_pr.xip
//!   Date       : January 2007
//!   Author     : Aude Rebotier, Ágnes Sándor
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// Ce fichier crée les relations EXT entre un noyau et chacune de ses extensions, c'est-à-dire les noeuds que l'on souhaite afficher avec le noyau.Il s'agit essentiellement des compléments régis par le noyau, qui ont déjà été identifiés par la dépendance ARGUMENT (autre que ARGUMENT_SUBJ).
// NB : les auxiliaires d'un verbe ne sont pas retenus comme extensions (par ex. 'has been delayed' => noyau : delayed, has et been ne sont pas extensions et n'apparaîtront pas à l'affichage)

DependencyRules:


// 1. marquage des arguments qui sont des extensions du noyau

if ( ^ARGUMENT[obj](#1,#2[noun]))
	ARGUMENT[ext=+](#1,#2).	

if ( ^ARGUMENT[Nobj](#1,#2))
	ARGUMENT[ext=+](#1,#2).	

if ( ^ARGUMENT[compl](#1,#2))
	ARGUMENT[ext=+](#1,#2).

if ( ^ARGUMENT[attribute](#1,#2))
	ARGUMENT[ext=+](#1,#2).



// 2. création d'une dépendance EXT pour toutes les extensions, qu'elles correspondent ou non à un argument du noyau

if (ARGUMENT[ext](#1,#2))
	EXT(#1,#2)

// is ready => is est une extension du noyau ready
if (CORE-ADJ(#2) & NUCL[subjcompl](#1,#2))
	EXT(#2,#1)

// is on standby => is est une extension du noyau standby
if (ARGUMENT[compl](#1[cop],#2) & CORE(#2) & PREPD(#2,?))
	EXT(#2,#1)