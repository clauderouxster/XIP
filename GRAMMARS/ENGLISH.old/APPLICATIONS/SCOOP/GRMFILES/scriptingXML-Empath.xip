Variables:

string _enrichment = "" ;
Script:

// Bag of words and bigrams
|#1[punct:~,url:~,terminal,treated:~]| {
       _enrichment = #1[surface] +"\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }
|#1[punct,lemme:"%?"]| {
       _enrichment = #1[surface] +"\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }

|#1[punct,lemme:"%!"]| {
       _enrichment = #1[surface] +"\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }

|#1[url]| {
       _enrichment = "has_url\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }

|#1[emoticons,positive]| {
       _enrichment = "positiveEmoticon\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }

|#1[emoticons,negative]| {
       _enrichment = "negativeEmoticon\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }

if ( BIGRAM[neg:~](#1,#2)){
       _enrichment = #1[surface] + "," +  #2[surface] + "\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }

if ( BIGRAM[neg](#1,#2)){
       _enrichment = #1[surface] + "_" +  #2[surface] + "\n" ;
       @_current(/comment/xipfeatures)->Create(_enrichment);
       }

if ( NEGAT(#1)){
     _enrichment = "has_negation\n" ;
     @_current(/comment/xipfeatures)->Create(_enrichment);
      }


//|NOUN#1[url:~]| {
// 	_enrichment =  #1[lemme] + "_noun\n" ;
//         @_current(/comment/xipfeatures)->Create(_enrichment);
//         }
//
//|NADJ#1| {
// 	_enrichment =  #1[lemme] + "_nadj\n" ;
//         @_current(/comment/xipfeatures)->Create(_enrichment);
//         }
//
//|ADJ#1| {
// 	_enrichment =  #1[lemme] + "_adj\n" ;
//         @_current(/comment/xipfeatures)->Create(_enrichment);
//         }
//
//|VERB#1| {
// 	_enrichment =  #1[lemme] + "_verb\n" ;
//         @_current(/comment/xipfeatures)->Create(_enrichment);
//         }
//
//|ADV#1| {
// 	_enrichment =  #1[lemme] + "_adv\n" ;
//         @_current(/comment/xipfeatures)->Create(_enrichment);
//         }
//
//|#1[punct:~,url:~,terminal,adj],#2[punct:~,url:~,terminal,adj]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,adj],#2[punct:~,url:~,terminal,verb]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,adj],#2[punct:~,url:~,terminal,noun]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,adj],#2[punct:~,url:~,terminal,adv]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,verb],#2[punct:~,url:~,terminal,adj]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,verb],#2[punct:~,url:~,terminal,verb]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,verb],#2[punct:~,url:~,terminal,noun]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,verb],#2[punct:~,url:~,terminal,adv]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//
//|#1[punct:~,url:~,terminal,noun],#2[punct:~,url:~,terminal,adj]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,noun],#2[punct:~,url:~,terminal,verb]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,noun],#2[punct:~,url:~,terminal,noun]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,noun],#2[punct:~,url:~,terminal,adv]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,adv],#2[punct:~,url:~,terminal,adj]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,adv],#2[punct:~,url:~,terminal,verb]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,adv],#2[punct:~,url:~,terminal,noun]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//|#1[punct:~,url:~,terminal,adv],#2[punct:~,url:~,terminal,adv]| {
//        _enrichment = #1[lemme] + "," +  #2[lemme] + "_bigram\n" ;
//        @_current(/comment/xipfeatures)->Create(_enrichment);
//        }
//
//// LINGUISTIC FEATURES
//
//// The sentence contains a modal verb
//if (VMODAL(#1)){
//   _enrichment = "has_modality\n";
//    @_current(/comment/xipfeatures)->Create(_enrichment);
//    }
//
//// The sentence contains a condition If blabla then blabla
//if (EMBED[CONDITION](#1,#2))
//   {
//   _enrichment = "has_condition\n";
//    @_current(/comment/xipfeatures)->Create(_enrichment);
//
//
//}
Final:

//print("sauvegarde\n");
@_current()->save("resXIP-bow-bigram-modal.xml","UTF-8"); 
