POS:

PROD = [movie-related=+].

Functions:
MYCOORD,


COORDAND,
COORDBUT,
COORDNOR,
COORDOR,

COORDAND-POS-POS,
COORDAND-POS-NEG,
COORDAND-POS-OBJ,
COORDAND-NEG-NEG,
COORDAND-NEG-POS,
COORDAND-NEG-OBJ,
COORDAND-OBJ-POS,
COORDAND-OBJ-NEG,
COORDAND-OBJ-OBJ,
COORDAND-TC-NEG,
COORDAND-TC-POS,
COORDAND-TC-OBJ,
COORDAND-NEG-TC,
COORDAND-POS-TC,
COORDAND-OBJ-TC,

COORDOR-POS-POS,
COORDOR-POS-NEG,
COORDOR-POS-OBJ,
COORDOR-NEG-NEG,
COORDOR-NEG-POS,
COORDOR-NEG-OBJ,
COORDOR-OBJ-POS,
COORDOR-OBJ-NEG,
COORDOR-OBJ-OBJ,
COORDOR-TC-NEG,
COORDOR-TC-POS,
COORDOR-TC-OBJ,
COORDOR-NEG-TC,
COORDOR-POS-TC,
COORDOR-OBJ-TC,

COORDNOR-POS-POS,
COORDNOR-POS-NEG,
COORDNOR-POS-OBJ,
COORDNOR-NEG-NEG,
COORDNOR-NEG-POS,
COORDNOR-NEG-OBJ,
COORDNOR-OBJ-POS,
COORDNOR-OBJ-NEG,
COORDNOR-OBJ-OBJ,
COORDNOR-TC-NEG,
COORDNOR-TC-POS,
COORDNOR-TC-OBJ,
COORDNOR-NEG-TC,
COORDNOR-POS-TC,
COORDNOR-OBJ-TC,


COORDBUT-POS-POS,
COORDBUT-POS-NEG,
COORDBUT-POS-OBJ,
COORDBUT-NEG-NEG,
COORDBUT-NEG-POS,
COORDBUT-NEG-OBJ,
COORDBUT-OBJ-POS,
COORDBUT-OBJ-NEG,
COORDBUT-OBJ-OBJ,
COORDBUT-TC-NEG,
COORDBUT-TC-POS,
COORDBUT-TC-OBJ,
COORDBUT-NEG-TC,
COORDBUT-POS-TC,
COORDBUT-OBJ-TC.

Keep:

Coord,
MOD,
ATTRIB,
TEMP,

COORDAND-POS-POS,
COORDAND-POS-NEG,
COORDAND-POS-OBJ,
COORDAND-NEG-NEG,
COORDAND-NEG-POS,
COORDAND-NEG-OBJ,
COORDAND-OBJ-POS,
COORDAND-OBJ-NEG,
COORDAND-OBJ-OBJ,
COORDAND-TC-NEG,
COORDAND-TC-POS,
COORDAND-TC-OBJ,
COORDAND-NEG-TC,
COORDAND-POS-TC,
COORDAND-OBJ-TC,

COORDOR-POS-POS,
COORDOR-POS-NEG,
COORDOR-POS-OBJ,
COORDOR-NEG-NEG,
COORDOR-NEG-POS,
COORDOR-NEG-OBJ,
COORDOR-OBJ-POS,
COORDOR-OBJ-NEG,
COORDOR-OBJ-OBJ,
COORDOR-TC-NEG,
COORDOR-TC-POS,
COORDOR-TC-OBJ,
COORDOR-NEG-TC,
COORDOR-POS-TC,
COORDOR-OBJ-TC,

COORDNOR-POS-POS,
COORDNOR-POS-NEG,
COORDNOR-POS-OBJ,
COORDNOR-NEG-NEG,
COORDNOR-NEG-POS,
COORDNOR-NEG-OBJ,
COORDNOR-OBJ-POS,
COORDNOR-OBJ-NEG,
COORDNOR-OBJ-OBJ,
COORDNOR-TC-NEG,
COORDNOR-TC-POS,
COORDNOR-TC-OBJ,
COORDNOR-NEG-TC,
COORDNOR-POS-TC,
COORDNOR-OBJ-TC,


COORDBUT-POS-POS,
COORDBUT-POS-NEG,
COORDBUT-POS-OBJ,
COORDBUT-NEG-NEG,
COORDBUT-NEG-POS,
COORDBUT-NEG-OBJ,
COORDBUT-OBJ-POS,
COORDBUT-OBJ-NEG,
COORDBUT-OBJ-OBJ,
COORDBUT-TC-NEG,
COORDBUT-TC-POS,
COORDBUT-TC-OBJ,
COORDBUT-NEG-TC,
COORDBUT-POS-TC,
COORDBUT-OBJ-TC.



DependencyRules:

// for and 3 elements : we add artificially the AND coord with first elem

|AP{?*,#1[last,adj]}, punct[comma],AP{adv*,#2[adj],CONJ#4,adv*,#3[adj]}|
               if (~COORD(#4,#3))
                COORD(#4,#3).

|AP{?*,#1[last,adj]}, punct[comma],AP{adv*,#2[adj],CONJ#4,adv*,#3[adj]}|
               if (~COORD(#4,#1))
                COORD(#4,#1).

// coordination of adjectives

// coordination with AND 

if ( COORD(#1[lemme:"and"],#2[positive]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDAND-POS-TC(#2,#3).

if ( COORD(#1[lemme:"and"],#2[negative]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDAND-NEG-TC(#2,#3).

if ( COORD(#1[lemme:"and"],#2[objective]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDAND-OBJ-TC(#2,#3).

|AP{?*,#1[last,positive,adj]}, punct[comma],AP{adv*,#2[adj],CONJ,adv*,#3[adj,last,sentiments:~,objective:~]}|
                COORDAND-POS-TC(#1,#3).
|AP{?*,#1[last,negative,adj]}, punct[comma],AP{adv*,#2[adj],CONJ,adv*,#3[adj,last,sentiments:~,objective:~]}|
                COORDAND-NEG-TC(#1,#3).
|AP{?*,#1[last,objective,adj]}, punct[comma],AP{adv*,#2[adj],CONJ,adv*,#3[adj,last,sentiments:~,objective:~]}|
                COORDAND-OBJ-TC(#1,#3).

|AP{?*,#1[last,positive,adj]}, punct[comma],AP{adv*,#2[adj,sentiments:~,objective:~],CONJ,adv*,#3[adj,last]}|
                COORDAND-POS-TC(#1,#2).
|AP{?*,#1[last,negative,adj]}, punct[comma],AP{adv*,#2[adj,sentiments:~,objective:~],CONJ,adv*,#3[adj,last]}|
                COORDAND-NEG-TC(#1,#2).
|AP{?*,#1[last,objective,adj]}, punct[comma],AP{adv*,#2[adj,sentiments:~,objective:~],CONJ,adv*,#3[adj,last]}|
                COORDAND-OBJ-TC(#1,#2).


// Coord with or

if ( COORD(#1[lemme:"or"],#2[positive]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDOR-POS-TC(#2,#3).
if ( COORD(#1[lemme:"or"],#2[negative]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDOR-NEG-TC(#2,#3).
if ( COORD(#1[lemme:"or"],#2[objective]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDOR-OBJ-TC(#2,#3).

//coord with nor

if ( COORD(#1[lemme:"nor"],#2[positive]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDNOR-POS-TC(#2,#3).
if ( COORD(#1[lemme:"nor"],#2[negative]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDNOR-NEG-TC(#2,#3).
if ( COORD(#1[lemme:"nor"],#2[objective]) & COORD(#1,#3[sentiments:~,objective:~]))
   COORDNOR-OBJ-TC(#2,#3).

//coord with but

|AP{?*,#1[last,positive]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-POS-TC(#1,#2)
|AP{?*,#1[last,negative]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-NEG-TC(#1,#2)
|AP{?*,#1[last,objective]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-OBJ-TC(#1,#2)
|AP{?*,#1[last,positive]},BG{CONJ[lemme:"but"]},ADV*,NP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-POS-TC(#1,#2)
|AP{?*,#1[last,negative]},BG{CONJ[lemme:"but"]},ADV*,NP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-NEG-TC(#1,#2)
|AP{?*,#1[last,objective]},BG{CONJ[lemme:"but"]},ADV*,NP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-OBJ-TC(#1,#2)
|NP{?*,#1[last,positive]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-POS-TC(#1,#2)
|NP{?*,#1[last,negative]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-NEG-TC(#1,#2)
|NP{?*,#1[last,objective]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,sentiments:~,objective:~]}|
        COORDBUT-OBJ-TC(#1,#2)

|AP{?*,#1[last,sentiments:~,objective:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,positive]}|
        COORDBUT-POS-TC(#2,#1)
|AP{?*,#1[last,sentiments:~,objective:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,negative]}|
        COORDBUT-NEG-TC(#2,#1)
|AP{?*,#1[last,sentiments:~,objective:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,objective]}|
        COORDBUT-OBJ-TC(#2,#1)
|AP{?*,#1[last,sentiments:~,objective:~]},BG{CONJ[lemme:"but"]},ADV*,NP{?*,#2[last,positive]}|
        COORDBUT-POS-TC(#2,#1)
|AP{?*,#1[last,sentiments:~,objective:~]},BG{CONJ[lemme:"but"]},ADV*,NP{?*,#2[last,negative]}|
        COORDBUT-NEG-TC(#2,#1)
|AP{?*,#1[last,sentiments:~,objective:~]},BG{CONJ[lemme:"but"]},ADV*,NP{?*,#2[last,objective]}|
        COORDBUT-OBJ-TC(#2,#1)
|NP{?*,#1[last,sentiments:~,objective:~,adj]},PREP[lemme:"but"],ADV*,AP{?*,#2[last,positive]}|
        COORDBUT-POS-TC(#1,#2)
|NP{?*,#1[last,sentiments:~,objective:~,adj]},PREP[lemme:"but"],ADV*,AP{?*,#2[last,negative]}|
        COORDBUT-NEG-TC(#1,#2)
|NP{?*,#1[last,sentiments:~,objective:~,adj]},PREP[lemme:"but"],ADV*,AP{?*,#2[last,objective]}|
        COORDBUT-OBJ-TC(#1,#2)

//*********************************
// pattern for training and validation

// coordination with AND 

if ( COORD(#1[lemme:"and"],#2[positive]) & COORD(#1,#3[positive, !validation:!]))
   COORDAND-POS-POS[training=+](#2,#3).
if ( COORD(#1[lemme:"and"],#2[positive]) & COORD(#1,#3[negative, !validation:!]))
   COORDAND-POS-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"and"],#2[positive]) & COORD(#1,#3[objective, !validation:!]))
   COORDAND-POS-OBJ[training=+](#2,#3).

if ( COORD(#1[lemme:"and"],#2[negative]) & COORD(#1,#3[negative, !validation:!]))
   COORDAND-NEG-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"and"],#2[negative]) & COORD(#1,#3[objective, !validation:!]))
   COORDAND-NEG-OBJ[training=+](#2,#3).
if ( COORD(#1[lemme:"and"],#2[negative]) & COORD(#1,#3[positive, !validation:!]))
   COORDAND-NEG-POS[training=+](#2,#3).

if ( COORD(#1[lemme:"and"],#2[objective]) & COORD(#1,#3[negative, !validation:!]))
   COORDAND-OBJ-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"and"],#2[objective]) & COORD(#1,#3[objective, !validation:!]))
   COORDAND-OBJ-OBJ[training=+](#2,#3).
if ( COORD(#1[lemme:"and"],#2[objective]) & COORD(#1,#3[positive, !validation:!]))
   COORDAND-OBJ-POS[training=+](#2,#3).

//
// or 

if ( COORD(#1[lemme:"or"],#2[positive]) & COORD(#1,#3[positive, !validation:!]))
   COORDOR-POS-POS[training=+](#2,#3).
if ( COORD(#1[lemme:"or"],#2[positive]) & COORD(#1,#3[negative, !validation:!]))
   COORDOR-POS-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"or"],#2[positive]) & COORD(#1,#3[objective, !validation:!]))
   COORDOR-POS-OBJ[training=+](#2,#3).

if ( COORD(#1[lemme:"or"],#2[negative]) & COORD(#1,#3[negative, !validation:!]))
   COORDOR-NEG-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"or"],#2[negative]) & COORD(#1,#3[objective, !validation:!]))
   COORDOR-NEG-OBJ[training=+](#2,#3).
if ( COORD(#1[lemme:"or"],#2[negative]) & COORD(#1,#3[positive, !validation:!]))
   COORDOR-NEG-POS[training=+](#2,#3).

if ( COORD(#1[lemme:"or"],#2[objective]) & COORD(#1,#3[negative, !validation:!]))
   COORDOR-OBJ-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"or"],#2[objective]) & COORD(#1,#3[objective, !validation:!]))
   COORDOR-OBJ-OBJ[training=+](#2,#3).
if ( COORD(#1[lemme:"or"],#2[objective]) & COORD(#1,#3[positive, !validation:!]))
   COORDOR-OBJ-POS[training=+](#2,#3).

// nor
if ( COORD(#1[lemme:"nor"],#2[positive]) & COORD(#1,#3[positive, !validation:!]))
   COORDNOR-POS-POS[training=+](#2,#3).
if ( COORD(#1[lemme:"nor"],#2[positive]) & COORD(#1,#3[negative, !validation:!]))
   COORDNOR-POS-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"nor"],#2[positive]) & COORD(#1,#3[objective, !validation:!]))
   COORDNOR-POS-OBJ[training=+](#2,#3).

if ( COORD(#1[lemme:"nor"],#2[negative]) & COORD(#1,#3[negative, !validation:!]))
   COORDNOR-NEG-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"nor"],#2[negative]) & COORD(#1,#3[objective, !validation:!]))
   COORDNOR-NEG-OBJ[training=+](#2,#3).
if ( COORD(#1[lemme:"nor"],#2[negative]) & COORD(#1,#3[positive, !validation:!]))
   COORDNOR-NEG-POS[training=+](#2,#3).

if ( COORD(#1[lemme:"nor"],#2[objective]) & COORD(#1,#3[negative, !validation:!]))
   COORDNOR-OBJ-NEG[training=+](#2,#3).
if ( COORD(#1[lemme:"nor"],#2[objective]) & COORD(#1,#3[objective, !validation:!]))
   COORDNOR-OBJ-OBJ[training=+](#2,#3).
if ( COORD(#1[lemme:"nor"],#2[objective]) & COORD(#1,#3[positive, !validation:!]))
   COORDNOR-OBJ-POS[training=+](#2,#3).

// but

|AP{?*,#1[last,positive,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,positive,!validation:!]}|
        COORDBUT-POS-POS[training=+](#1,#2)
|AP{?*,#1[last,positive,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,negative, !validation:!]}|
        COORDBUT-POS-NEG[training=+](#1,#2)
|AP{?*,#1[last,positive,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,objective, !validation:!]}|
        COORDBUT-POS-NEG[training=+](#1,#2)

|AP{?*,#1[last,negative,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,negative, !validation:!]}|
        COORDBUT-NEG-NEG[training=+](#1,#2)
|AP{?*,#1[last,negative,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,positive, !validation:!]}|
        COORDBUT-NEG-POS[training=+](#1,#2)
|AP{?*,#1[last,negative,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,objective, !validation:!]}|
        COORDBUT-NEG-OBJ[training=+](#1,#2)

|AP{?*,#1[last,objective,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,negative, !validation:!]}|
        COORDBUT-OBJ-NEG[training=+](#2,#1)
|AP{?*,#1[last,objective,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,positive, !validation:!]}|
        COORDBUT-OBJ-POS[training=+](#1,#2)
|AP{?*,#1[last,objective,validation:~]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,objective, !validation:!]}|
        COORDBUT-OBJ-OBJ[training=+](#1,#2)

|AP{?*,#1[last,positive,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,positive,validation:~]}|
        COORDBUT-POS-POS[training=+](#2,#1)
|AP{?*,#1[last,positive,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,negative, validation:~]}|
        COORDBUT-POS-NEG[training=+](#2,#1)
|AP{?*,#1[last,positive,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,objective, validation:~]}|
        COORDBUT-POS-OBJ[training=+](#2,#1)

|AP{?*,#1[last,negative,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,negative, validation:~]}|
        COORDBUT-NEG-NEG[training=+](#2,#1)
|AP{?*,#1[last,negative,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,positive, validation:~]}|
        COORDBUT-NEG-POS[training=+](#2,#1)
|AP{?*,#1[last,negative,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,objective, validation:~]}|
        COORDBUT-NEG-OBJ[training=+](#2,#1)

|AP{?*,#1[last,objective,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,negative, validation:~]}|
        COORDBUT-OBJ-NEG[training=+](#2,#1)
|AP{?*,#1[last,objective,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,positive, validation:~]}|
        COORDBUT-OBJ-POS[training=+](#2,#1)
|AP{?*,#1[last,objective,validation,!validation:!]},BG{CONJ[lemme:"but"]},ADV*,AP{?*,#2[last,objective, validation:~]}|
        COORDBUT-OBJ-OBJ[training=+](#2,#1)

// all relations to adj
if ($1(#1[adj,sentiments,!sentiments:!, !validation:!, !training:!],#2) )
   $1[amarquer=+](#1,#2)
     
if ($1(#2,#1[adj,sentiments,!sentiments:!,!validation:!, !training:!]) )
   $1[amarquer=+](#2,#1)

if ($1(#1[adj,objective,!objective:!, !validation:!, !training:!],#2) )
   $1[amarquer=+](#1,#2)
     
if ($1(#2,#1[adj,objective,!objective:!,!validation:!, !training:!]) )
   $1[amarquer=+](#2,#1)

if ($1(#2,#1[adj,sentiments:~,objective:~]) )
   $1[amarquer=+,subjective-pot=+](#2,#1)
     
if (^SENTIMENT[amarquer](#1,#2))
        ~
if (^GLOBALMOD[amarquer](#1,#2))
        ~
if (^HEAD[amarquer](#1,#2))
        ~

if (^COORD[amarquer](#1,#2) & COORD[amarquer](#1,#3))
   MYCOORD(#2,#1,#3)

if (MYCOORD (#2,#1,#3) & ^COORD[amarquer](#1,#3))
   ~


if ( ^COORDAND-POS-POS[amarquer](#1,#2) |^COORDAND-POS-NEG[amarquer](#1,#2) |^COORDAND-POS-OBJ[amarquer](#1,#2) |^COORDAND-NEG-NEG[amarquer](#1,#2) |^COORDAND-NEG-POS[amarquer](#1,#2) |^COORDAND-NEG-OBJ[amarquer](#1,#2) |^COORDAND-OBJ-POS[amarquer](#1,#2) |^COORDAND-OBJ-NEG[amarquer](#1,#2) |^COORDAND-OBJ-OBJ[amarquer](#1,#2) |^COORDAND-TC-NEG[amarquer](#1,#2) |^COORDAND-TC-POS[amarquer](#1,#2) |^COORDAND-TC-OBJ[amarquer](#1,#2) |^COORDAND-NEG-TC[amarquer](#1,#2) |^COORDAND-POS-TC[amarquer](#1,#2) |^COORDAND-OBJ-TC[amarquer](#1,#2) |^COORDOR-POS-POS[amarquer](#1,#2) |^COORDOR-POS-NEG[amarquer](#1,#2) |^COORDOR-POS-OBJ[amarquer](#1,#2) |^COORDOR-NEG-NEG[amarquer](#1,#2) |^COORDOR-NEG-POS[amarquer](#1,#2) |^COORDOR-NEG-OBJ[amarquer](#1,#2) |^COORDOR-OBJ-POS[amarquer](#1,#2) |^COORDOR-OBJ-NEG[amarquer](#1,#2) |^COORDOR-OBJ-OBJ[amarquer](#1,#2) |^COORDOR-TC-NEG[amarquer](#1,#2) |^COORDOR-TC-POS[amarquer](#1,#2) |^COORDOR-TC-OBJ[amarquer](#1,#2) |^COORDOR-NEG-TC[amarquer](#1,#2) |^COORDOR-POS-TC[amarquer](#1,#2) |^COORDOR-OBJ-TC[amarquer](#1,#2) |^COORDNOR-POS-POS[amarquer](#1,#2) |^COORDNOR-POS-NEG[amarquer](#1,#2) |^COORDNOR-POS-OBJ[amarquer](#1,#2) |^COORDNOR-NEG-NEG[amarquer](#1,#2) |^COORDNOR-NEG-POS[amarquer](#1,#2) |^COORDNOR-NEG-OBJ[amarquer](#1,#2) |^COORDNOR-OBJ-POS[amarquer](#1,#2) |^COORDNOR-OBJ-NEG[amarquer](#1,#2) |^COORDNOR-OBJ-OBJ[amarquer](#1,#2) |^COORDNOR-TC-NEG[amarquer](#1,#2) |^COORDNOR-TC-POS[amarquer](#1,#2) |^COORDNOR-TC-OBJ[amarquer](#1,#2) |^COORDNOR-NEG-TC[amarquer](#1,#2) |^COORDNOR-POS-TC[amarquer](#1,#2) |^COORDNOR-OBJ-TC[amarquer](#1,#2) |^COORDBUT-POS-POS[amarquer](#1,#2) |^COORDBUT-POS-NEG[amarquer](#1,#2) |^COORDBUT-POS-OBJ[amarquer](#1,#2) |^COORDBUT-NEG-NEG[amarquer](#1,#2) |^COORDBUT-NEG-POS[amarquer](#1,#2) |^COORDBUT-NEG-OBJ[amarquer](#1,#2) |^COORDBUT-OBJ-POS[amarquer](#1,#2) |^COORDBUT-OBJ-NEG[amarquer](#1,#2) |^COORDBUT-OBJ-OBJ[amarquer](#1,#2) |^COORDBUT-TC-NEG[amarquer](#1,#2) | ^COORDBUT-TC-POS[amarquer](#1,#2) |^COORDBUT-TC-OBJ[amarquer](#1,#2) |^COORDBUT-NEG-TC[amarquer](#1,#2) |^COORDBUT-POS-TC[amarquer](#1,#2) | ^COORDBUT-OBJ-TC[amarquer](#1,#2) )
   ~

