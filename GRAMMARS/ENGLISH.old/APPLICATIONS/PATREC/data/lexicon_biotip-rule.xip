//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! 
//!
//!  Date: July 2001
//!
//!  Copyright (c) 2001 Xerox Corporation.  All Rights Reserved.
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



Vocabulary:


// *********** Treatment of the quotes (treated as markups) ****************** //



1> \"  <>= [guille=+].


/marking compound words\
//=+ += [compend=+].






/ASSIGNMENT OF UNIQUE FEATURES TO INDIVIDUAL LEMMATA\
/====================================================\

// CH
// Deleting the feature coord=+ to the lemma "than"
1> than += [coord=~,form=fthan].

// CH
// Adding a feature [time=+] to the adverbs "late" and "early"
1> early += [time=+].
1> late += [time=+].


// CH
// Adding a feature ftwice to the word "twice"
1> twice += [form=ftwice].




// CH, March 2002
// Adding a feature form=pronthing to the words "anything", "everything" and "nothing"
// (for better disambiguation)
1> anything += [form=pronthing] .
1> everything += [form=pronthing] .
1> nothing += [form=pronthing].


// CH, March 2002
// Adding the feature fwill on the word "will"
1> will += [form=fwill].


// CH, March 2002
// Adding the feature fcan on the word "can"
1> can += [form=fcan].


// Adding the feature fsuch on the word such
1> such += [form=fsuch].

// CH, 4th Feb.
// Adding the feature fmore on the word "more"
1> more += [form=fmore].


1> if += [form=fif].

// CH, 8th Jan.
// Adding the feature fpercent on the "word" "per cent" which is coded as a noun
1> per_cent += [percent=+].
1> percent += [percent=+].


// CH, 14th November
// Adding the feature fsince on the word "since" (can be conj or prep)
1> since += [form=fsince].




// CH 05th November
// Adding the feature fduring to the preposition during
1> during += [form=fduring, sc_pduring=+].



// CH 12th October
// Adding a feature cardpoint=+ to the words North South East West.
// They are tagged as noun (proper or common) which can be a probleme in the chunking of NP's
// e.g. The massive North Korean complex is analyzed as 2 nominal chunks where North is the nucleus 
// of the first one
1> North += [cardpoint=+].
1> north += [cardpoint=+].
1> South += [cardpoint=+].
1> south += [cardpoint=+].
1> West += [cardpoint=+].
1> west += [cardpoint=+].
1> East += [cardpoint=+].
1> east += [cardpoint=+].



// CH July 02
// Adding a feature fmake to the lemma "make"
1> make += [form=fmake].

// CH 7th November
// Adding a feature fsaid to the lemma "said" 
1> said += [form=fsaid].



// CH 24th October
// Adding a feature ftake to the forms of the verb take
1> take += [form=ftake].

// CH 24th October
// Adding a feature fplace to the form place in singular
1> place += [form=fplace].

// CH 8th October
// Adding feature form=fborn to "born" that is just taken as an adjective
1> born += [form=fborn].


// CH 24th September
// Adding the feature numer=+ to nouns like thousand, dozen, hundred ...
1> thousand += [numer=+].
1> hundred += [numer=+].
1> dozen += [numer=+].

// CH
// nouns that quantifies
1> number += [numer=+].
1> plenty += [numer=+].
1> bit += [numer=+].


// CH 14th September
// Adding a feature prefix=+ to some prefixes
1> anti += [prefix=+].
1> post += [prefix=+].
1> semi += [prefix=+].
1> non += [prefix=+].
1> pro += [prefix=+].
1> under += [prefix=+].
1> over += [prefix=+].
1> re += [prefix=+].
1> trans += [prefix=+].
1> dis += [prefix=+].
1> dys += [prefix=+].




// CH 29th August
1> one += [form=fone, numer=+].

1> none += [numer=+,negat=+].


// CH, 23th November
// Recategorizing "AS" as a preposition (and not adverb)
// Note that complex expression with "as" (as well, as far as) are either codified as a whole in the lexicon fst, or grouped together with local grammar rules
1> as += [prep=+, form=fas, adv:~, notly:~].



// CH 16th August
// To change all the wh-words in the lexicon.
// All where, when, are added the feature wh
// note: how is already categorized as adverb with feature wh.
1> where = adv[adv=+, wh=+, form=fwhere].
1> when = adv[adv=+, wh=+, form=fwhen].
1> why = adv[adv=+, wh=+, form=fwhy].
1> wherein = adv[adv=+, wh=+, form=fwherein].


// CH 19th September
// Adding a feature wh to the lemma wether

1> whether = conj[conj=+, wh=+, form=fwhether].

// CH 16th August
// Adding a feature fwhat to the lemma what
1> what += [form=fwhat].


// CH 15th October
// Adding a feature fwhich and wh to the lemma which
1> which += [form=fwhich, wh=+].


// CH 3rd August
// It is useless to try to disambiguate WH- words. So who will always be tagged as pron [wh=+, nom=+]
// Only in a later stage it will be possible to decide wether WHO is an interrogative pronoun or relative pronoun. To change in the lexicon.
// The first one corresponds to "whose"
// The 2nd one corresponds to one of the output of whom
// The 3rd one correspondes to the other output of whom
// The 4th one to one of the output of who
// The  5th to the other output of who
1> who : pron[gen=+] = pron[wh=+,form=fwho,gen=+].
1> who : pron[wh=+,obl=+] = pron[wh=+,form=fwho,obl=+].
1> whom = pron[wh=+,obl=+,form=fwho].
1> who : pron[rel=+] = pron[wh=+,form=fwho,obl=+,nom=+].
1> who : pron[wh=+,nom=+] = pron[wh=+,form=fwho,obl=+,nom=+].


// CH . Adding a special feature numerable=+ to words like "c
// In order to deal properly things like "Chapter 2"	     
1> chapter : noun[noun=+] += [numerable=+].		     
1> page : noun[noun=+] += [numerable=+].			     
1> line : noun[noun=+] += [numerable=+].			     


// CH 6th Auguts
// Considering "no" as a quantifier in order to be coherent with some, any. 
1> no = quant[quant=+,form=fno].

// CH
// Several as a quantifier
1> several = quant[quant=+].

// CH 29th October
// Adding feature form=fso to the lemma "so"
1> so += [form=fso].


// Adding the feature flater to the lemma "late" form "later"
1> late : adv[compar=+] += [form=flater]. 

/"There" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the morpho-analyzer????\
/Agnes to change HMM tagger to include "There" as a pronoun\
/there does NOT agree with the verb so MAY NOT be the subject at all!\

1> there : adv[adv=+] += [form=fthere].

1> it : pron[pron=+] += [form=fit].

/Agnes to modify HMM tagger to ensure "but" is assigned the tag +Coord when\
/it is followed by a verb "He was happy but was tired"\
// CH adding a feature fbut to each form of but
1> but += [form=fbut].


/Shouldn't "do" be analysed as an auxiliary verb in the morpho-analyzer??\
/do : verb[verb=+] += [verb=+,aux=+].\
1> do : verb[verb=+] += [form=fdo].

/The feature "auxbh" is used for the verbs "be" and "have" whereas "fhave" is only used for the verb "have"\
1> have : verb += [auxbh=+,form=fhave].


/The feature "auxbh" is used for the verbs "be" and "have" whereas "fbe" is only used for the verb "be"\
1> be : verb += [auxbh=+,cop=+,form=fbe].


/CH Adding a "cop" feature to the copulative verbs, in order to be able to extract the predicative dependencies\
1> become : verb[verb=+] += [cop=+].
1> seem : verb[verb=+] += [cop=+].
1> feel : verb[verb=+] += [cop=+].
1> remain : verb[verb=+] += [cop=+].
// adding also the feature form=fgo to the forms of "go"
1> go : verb[verb=+] += [cop=+, form=fgo].
1> grow : verb[verb=+] += [cop=+].
1> turn : verb[verb=+] += [cop=+].

// CH Adding a "cop2" feature to copulative verbs (that also can be transitive "normal" verbs)
1> smell : verb[verb=+] += [cop2=+].
1> taste : verb[verb=+] += [cop2=+].
1> sound : verb[verb=+] += [cop2=+].
1> appear : verb[verb=+] += [cop2=+].
1> look : verb[verb=+] += [cop2=+].
1> get : verb[verb=+] += [cop2=+, form=fget].



1> up += [p_up=+].
1> about += [p_about=+, sc_pabout=+].
1> across += [p_across=+, sc_pacross=+].
1> ahead += [p_ahead=+].
1> along +=  [p_along=+].
1> around +=  [p_around=+, sc_paround=+].
1> apart += [p_apart=+].
1> aside += [p_aside=+].
1> away += [p_away=+].
1> back += [p_back=+].
1> behind += [p_behind=+,sc_pbehind=+].
1> by += [p_by=+, form=fby, sc_pby=+,agprep=+].
1> via += [agprep=+].
/"by" is used before present participles "by illegally leaving"\
/HOWEVER we don't want GV{by fleeing} despots!!\
1> down += [p_down=+, sc_pdown=+].
1> forth += [p_forth=+].
1> forward += [p_forward=+].
1> in = prep[p_in=+,form=fin, sc_pin=+].
1> into += [p_into=+, sc_pinto=+].
1> off += [p_off=+, sc_poff].
1> on += [p_on=+, sc_pon=+].
1> open += [p_open=+].
1> out += [p_out=+].
1> over += [p_over=+, sc_pover=+].
1> through += [p_through=+, sc_pthrough=+,form=fthrough,agprep=+].
1> to = prep[form=finfto,p_to=+, sc_pto=+].
// we eliminate the other interpretation of TO. This has only the PREP category.

1> together += [p_together=+].
1> under += [p_under=+].

1> against += [sc_pagainst=+].

// CH
1> alongside += [form=falongside].

// CH 28th Agustt
// Assignment of the feature form=fbefore and form=fafter for the words before and after
1> before += [form=fbefore].
/"before" is used before present participles "before realising"\
/GV{before reducing} their benefits - IS THIS CORRECT????\
//before : prep[prep=+] += [form=fbefore].

1> after += [form=fafter, sc_pafter=+].


// Adding the feature feven to word "even"
1> even += [form=feven].

// CH, adding feature fwhile to word "while"
1> while += [form=fwhile].

// CH Prepositons. Add a feature to all preposition that can govern a PP argument
1> aboard += [sc_paboard=+].

/"for" has a special use before present participles"\
1> for : prep[prep=+] += [form=ffor,sc_pfor=+].
1> of : prep[prep=+] += [form=fof,sc_pof=+].

/"without" is used before present participles "without realising"\
1> without : prep[prep=+] += [form=fwithout,sc_pwithout=+].


/"with" is used before present participle nouns "with housing etc a prob"\
/these are then chunked as GVs by mistake\
1> with : prep[prep=+] += [form=fwith,sc_pwith=+,agprep=+].

1> at : prep[prep=+] += [form=fat,sc_pat=+].
1> include : verb[verb=+,prog=+] += [form=fincluding].
1> since : prep[prep=+] += [form=fsince,sc_psince=+].
1> from : prep[prep=+] += [form=ffrom,sc_pfrom=+].
1> towards: prep[prep=+] += [sc_ptowards=+].
1> upon: prep[prep=+] += [sc_pupon=+].
1> onto: prep[prep=+] += [sc_ponto=+].
1> between: prep[prep=+] += [sc_pbetween=+].
1> within: prep[prep=+] += [sc_pwithin=+].
1> under: prep[prep=+] += [sc_punder=+].
1> among: prep[prep=+] += [sc_pamong=+].
1> above: prep[prep=+] += [sc_pabove=+].
1> before: prep[prep=+] += [sc_pbefore=+].
1> beyond: prep[prep=+] += [sc_pbeyond=+].
1> beneath: prep[prep=+] += [sc_pbeneath=+].


// CH 28th September
// Adding the feature form=flike to "like".
// Feature like=+ is added in order to ensure compatibility with biotip version
1> like += [form=flike, sc_plike=+,like=+].


// CH Adding a "indspeech" feature to verbs that introduces free indirect speech
// to add in the fst (these verbs were not marked as vsay in Comlex
1> believe : verb[verb=+] += [indspeech=+]. 
1> feel : verb[verb=+] += [indspeech=+].
1> suppose : verb[verb=+] += [indspeech=+].
1> imagine : verb[verb=+] += [indspeech=+].
1> expect : verb[verb=+] += [indspeech=+].
1> presume : verb[verb=+] += [indspeech=+].
1> assume : verb[verb=+] += [indspeech=+].
1> remind: verb[verb=+] += [indspeech=+,iobj=+].
1> suggest: verb[verb=+] += [indspeech=+].
1> show: verb[verb=+] += [indspeech=+].
1> disagree: verb[verb=+] += [indspeech=+]. 
1> hope: verb[verb=+] += [indspeech=+]. 

// CH To add in the fst 
// BEHIND is a particle for leave (not present in Comlex)
1> leave: verb[verb=+] += [p_behind=+].

// TEST
//speak: verb[verb=+] += [sc_pabout=+].

/"here" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the HMM tagger perhaps to include "here" as a pronoun\
/here : adv[adv=+] += [form=fhere].\


/not is used as an adverb to negate infinitive verbs - he decided not to go\
/to avoid all preceding adverbs from being included in the IV we need to distinguish just "not"\
1> not : adv[adv=+] += [form=fnot].


// CH adding ftoo to the adverb too
1> too : adv[adv=+] += [form=ftoo]. 



/here does NOT agree with the verb so MAY NOT be the subject at all!\
1> here : adv[adv=+] += [form=fhere].



// CH Adding the feature form=fthat to that even if it is tagged differently than conj.
1> that += [form=fthat].

/"those" is a relative pronoun which immediately precedes VPAP but not VPAST\
1> those : pron[pron=+] += [form=fthose].

// CH adding feautre form=fthis to the form this
1> this += [form=fthis].


/to allow only "and" in NP-> AP, conj, AP[first:~], noun[last]\
1> and : conj[conj=+] += [form=fand].


// CH adding the feater form=fable to the word able
1> able += [form=fable].


// CH adding feature form=for to OR
1> or : conj[conj=+] += [form=for].


// feature fhome on home
1> home += [form=fhome].





/for use in the marking rule to exclude "in" as an adj if followed\
//by another adj: "women in American universities are...\
//in : adj[adj=+] += [form=fin].


// CH 6th August
// whole is marked in order to construct quantifier the whole
1> whole: nadj[nadj=+] += [form=fwhole].


// CH 8th August
// forms each and other are marked in order to be able to construct "each other" as a whole (see adjust.xip).
// After correcting the lexicon, these features won't be useful anymore
1> each : quant[quant=+] += [form=feach,preperiod=+,predet=+].
1> other: adj[adj=+] += [form=fother].


// CH 22 August
// Adding the features fhow fmany, and fmuch to how, many and much
1> how += [form=fhow].
1> many += [form=fmany].
1> much += [form=fmuch].
1> often += [form=foften].
1> few += [form=ffew].
1> long += [form=flong].
1> far += [form=ffar].

//required for composed adverbs such as "two weeks ago"
1> ago : adv[adv=+] += [form=fago].


1> speaker : noun[noun=+] += [form=fspeaker].

1> \(\= : punct += [form=fopar,strongbreak=+].
1> \=\) : punct += [form=fcpar].
1> \[\= : punct += [form=fopar,strongbreak=+].
1> \=\] : punct += [form=fcpar].
1> \{\= : punct += [form=fopar,strongbreak=+].
1> \=\} : punct += [form=fcpar].
1> \=-\= : punct += [form=fhyph,strongbreak=+].
1> \: : punct += [form=fcolon,strongbreak=+].
1> \; : punct += [form=fsemicolon,strongbreak=+].
1> \? : punct += [form=fquest]. // CH 16th August

1> \`\` : punct[punct=+,quote=+] += [form=foquotes].
1> \'\' : punct[punct=+,quote=+] += [form=fcquotes].

/ "`" is an unknown character \
1> \` : punct += ./needtospecifywhattypeofpunct!\

//In order to make the categories of "next" and "last" coherent, we change the
// category of next (adj) to nadj
1> next = nadj[nadj=+,preperiod=+].


// CH 31st October
// Adding the feature preperiod=+ to the lemma future, past
1> past = nadj[nadj=+,preperiod=+].
1> future = nadj[nadj=+,preperiod=+].
1> mid += [preperiod=+].


/**** ASSIGNING ADDITIONAL FEATURES TO ONE OR MORE LEMMATA **** \
/================================================================\


//The token "I" has only one morphological analysis namely a pronoun
//However, "I" may also be a roman numeral - NP{King George I} 
//{PRON;DIG}+[dig=+,pron=+,nom=+,personal=+,rom=+,rom:?,p1=+,sg=+,maj=+,toutmaj=+]
//I[pron=+] += dig[rom=+].
//PRON(2-2)+[dig=+,pron=+,nom=+,personal=+,rom=+,p1=+,sg=+,maj=+,toutmaj=+]
1> I : pron[pron=+, p1=+, sg=+, gen:~] += [dig=+,rom=+].
  



//to allow NP{Judge Fritz W. Alexander 2nd}
1> judge : noun[noun=+] += [title=+].


//required to exclude such adjectives from NPs such as NP{75 feet high}
1> long : nadj[nadj=+] += [meas=+].
1> wide : nadj[nadj=+] += [meas=+].
1> high : nadj[nadj=+] += [meas=+].



//These tokens precede time nouns 
//Sunday/Spring/week/year etc
1> last : nadj[nadj=+] += [preperiod=+].
// see next above, each
1> every : quant[quant=+] += [preperiod=+].


//Quants which modify NPs starting with a determiner
1> all : quant[quant=+] += [predet=+].
1> half : quant[quant=+] += [predet=+].
// CH 4th September
// We have to start with the most specific case. If it fails, the general case is then applied
1> both : quant[quant=+] += [predet=+,form=fboth].
1> both += [form=fboth].

1> amount = quant[quant=+, predet=+] .	


// CH 13th September
// Considering neither as a quantifier only and adding the feature form=fneither
// The feature predet=+ is added in order to avoid the construction of an NP just done with neither.
1> neither = quant[form=fneither,quant=+, predet=+, negat=+].

//ADDITIONAL PROPER NOUNS
1> noriega : noun[noun=+] += [proper=+].



//the feature "period" is used rather than "time" which
//causes NPs such as "The most dangerous day+time" to be excluded
//as well as "The celebration Monday"!

1> second : noun += [period=+] .
1> minute : noun += [period=+].
1> hour : noun += [period=+].
1> day : noun += [period=+].
1> night : noun += [period=+].
1> week : noun += [period=+].
1> month : noun += [period=+].
1> year : noun += [period=+].
1> decade : noun += [period=+].
1> century : noun += [period=+].
1> millenium : noun += [period=+].

//This feature is used in conjunction with the sequence marking rule
//which assigns the feature time to these tokens only when they
//are preceded by a token bearing the feature preperiod
//This allows NP{last Spring} and also NP{The Prague Spring}
//to avoid NP{Fred} NP{Winters}
1> Spring : noun[pl:~] += [period=+].
1> spring : noun[pl:~] += [period=+].
1> Summer : noun[pl:~] += [period=+].
1> summer : noun[pl:~] += [period=+].
1> Autumn : noun[pl:~] += [period=+].
1> autumn : noun[pl:~] += [period=+].
1> Winter : noun[pl:~] += [period=+].
1> winter : noun[pl:~] += [period=+].


1> time : noun += [period=+].
 
 
1> Sunday : noun += [time=+,period=+,day=+].
1> Monday : noun += [time=+,period=+,day=+].
1> Tuesday : noun += [time=+,period=+,day=+].
1> Wednesday : noun += [time=+,period=+,day=+].
1> Thursday : noun += [time=+,period=+,day=+].
1> Friday : noun += [time=+,period=+,day=+].	
1> Saturday : noun += [time=+,period=+,day=+].	

1> Jan : noun += [time=+,month=+,period=+].
1> Feb : noun += [time=+,month=+,period=+].
1> Mar : noun += [time=+,month=+,period=+].
1> Apr : noun += [time=+,month=+,period=+].
1> Jun : noun += [time=+,month=+,period=+].
1> Jul : noun += [time=+,month=+,period=+].
1> Aug : noun += [time=+,month=+,period=+].
1> Sep : noun += [time=+,month=+,period=+].
1> Oct : noun += [time=+,month=+,period=+].
1> Nov : noun += [time=+,month=+,period=+].
1> Dec : noun += [time=+,month=+,period=+].


1> Jan. : noun += [time=+,month=+,period=+].
1> Feb. : noun += [time=+,month=+,period=+].
1> Mar. : noun += [time=+,month=+,period=+].
1> Apr. : noun += [time=+,month=+,period=+].
1> Jun. : noun += [time=+,month=+,period=+].
1> Jul. : noun += [time=+,month=+,period=+].
1> Aug. : noun += [time=+,month=+,period=+].
1> Sept. : noun += [time=+,month=+,period=+].
1> Oct. : noun += [time=+,month=+,period=+].
1> Nov. : noun += [time=+,month=+,period=+].
1> Dec. : noun += [time=+,month=+,period=+].

1> January : noun += [time=+,month=+,period=+].
1> February : noun += [time=+,month=+,period=+].
1> March : noun += [time=+,month=+,period=+].
1> April : noun += [time=+,month=+,period=+].
1> May : noun += [time=+,month=+,period=+].
1> June : noun += [time=+,month=+,period=+].
1> July : noun += [time=+,month=+,period=+].
1> August : noun += [time=+,month=+,period=+].
1> September : noun += [time=+,month=+,period=+].
1> October : noun += [time=+,month=+,period=+].
1> November : noun += [time=+,month=+,period=+].
1> December : noun += [time=+,month=+,period=+].

// CH adding features on temporal elements
1> yesterday = noun[tempexpr=+].
1> today = noun[tempexpr=+].
1> tomorrow = noun[tempexpr=+].
1> tonight = noun[tempexpr=+].

1> now = adv[tempexpr=+,notly=+].
1> soon = adv[tempexpr=+,notly=+].

1> noon : noun += [hour=+].
1> midnight : noun += [hour=+].
1> midday : noun += [hour=+].
1> o'clock : adv += [form=foclock].


//J-C +=[form=fjc].
//J-C. +=[form=fjc].
//J.-C +=[form=fjc].
//J.-C. +=[form=fjc].
//JC +=[form=fjc].


//Required for ADVs such as ADV{Sunday night}
1> morning : noun += [posttime=+].
1> afternoon : noun += [posttime=+].
1> evening : noun += [posttime=+].
1> night : noun += [posttime=+].


//VERB PARTICLES THAT ARE TAGGED AS ADVERBS
//Many verb particles are tagged as adverbs and get included in chunk
//of following verb in sentence: "The group that broke FV{away was} ...." 
//By including the "part" feature they may be excluded from verb chunks
//while still allowing other adverbs to be included

1> aboard : adv += [vpart=+].
1> along : adv += [vpart=+].
1> around : adv += [vpart=+].
1> aside : adv += [vpart=+].
1> away : adv += [vpart=+].
1> back : adv += [vpart=+].
1> bottom : adv += [vpart=+].
1> by : adv += [vpart=+].
1> down : adv += [vpart=+].
1> forth : adv += [vpart=+].
//in : adv += [vpart=+]."in"notincludedasrulebelowchangesitsPOSto"prep"
1> off : adv += [vpart=+].
1> out : adv += [vpart=+].
1> over : adv += [vpart=+].
1> together : adv += [vpart=+].
1> through : adv += [vpart=+].
1> up : adv += [vpart=+].



/**** REPLACING SEVERAL MORPHOLOGICAL ANALYSES WITH JUST ONE****\
/================================================================\




//Replaces all possible analyses of "but" output by the morphological analyser
//with "conjunction" to avoid foll issue
//1248>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} !!FV{but was} NFV{delayed}
//1>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} SC{BG{but} FV{was}} NFV{delayed} 
//but = conj[sub=+].


/"another" as a determiner is indefinite AGNES \
1> another : det[det] += [indef=+].


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FOR GENES
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/per is a preposition, but since it is rare, it should be maintained as a potential gene name, unlike prepositions that can occur in relevant contexts for determining gene names\

1> per += prep[per=+].


/lexical markers of gene names\
1> accumulation : noun += ?[allmark=+].
1> activity : noun += ?[mark=+,xofgene=+].
1> allele : noun += [mark=+,xofgene=+,plmark=+].
1> binding_site : noun += [hyphmark=+,mark=+].
1> binding-site : noun += [hyphmark=+,mark=+].
1> complementary_DNA : noun += [mark=+,genterm=+,xofgene=+].
/clone : noun[noun=+] += [mark=+].\
//COMP//=dependent += [mark=+].
1> degrade : verb[pres=+] += ?[mark=+,form=fexpress,iv=+].
1> desoxyribonucleic_acid : noun += ?[mark=+,genterm=+,maj=~,xofgene=+,nopremark=+].
1> ribonucleic_acid  : noun += ?[rnaform=+,genterm=+,maj=~,xofgene=+].
//COMP//=encoded += [mark=+].
//COMP//=expressing += [mark=+].
//family : noun[noun=+] += [mark=+].
1> locus : noun += [mark=+].
1> gene : noun[noun=+] += [form=fgene].
1> minigene : noun[noun=+] += [form=fgene].
1> morphogene : noun[noun=+] += [form=fgene].
1> morphogen : noun[noun=+] += [form=fgene].
1> gene_product : noun[noun=+] += [mark=+].
1> protein : noun[noun=+] += [protein=+].
1> product : noun[noun] += [mark=+,xofgene=+].
1> production : noun[noun] += [mark=+,xofgene=+].
1> heterozygote : noun += ?[mark=+,genterm=+,xofgene=+].
1> heterozygotes : noun += ?[mark=+,genterm=+,xofgene=+].
1> homologue : noun += ?[mark=+,genterm=+,xofgene=+].
1> homolog : noun += ?[mark=+,genterm=+,xofgene=+].
1> homozygote : noun += ?[mark=+,genterm=+,xofgene=+].
1> homozygotes : noun += ?[mark=+,genterm=+,xofgene=+].
1> intron : noun += [mark=+].
1> isoform : noun += [allmark=+].
1> kinase : noun += [mark=+].
1> mRNA : noun += ?[rnaform=+,genterm=+,xofgene=+].
1> mRNAs : noun += ?[rnaform=+,genterm=+,xofgene=+].
1> messenger_RNA : noun += ?[rnaform=+,genterm=+,xofgene=+].
//COMP//=mRNAs += ?[rnaform=+,genterm=+,xofgene=+].
//COMP//=mRNA += ?[rnaform=+,genterm=+,xofgene=+].
//nRNA += ?[mark=+,genterm=+,xofgene=+].
//nRNAs += ?[mark=+,genterm=+,xofgene=+].
/RNA += ?[mark=+,genterm=+,maj=~].\
//COMP//=RNA += ?[rnaform=+,genterm=+,maj=~,xofgene=+].
//COMP//=RNAs += ?[rnaform=+,genterm=+,maj=~,xofgene=+].
1> morphogene : noun[noun=+] += [form=fgene].
1> mutant : noun += ?[mark=+,genattr=+,xofgene=+,plmark=+].
1> deletion_mutant : noun += ?[mark=+,genattr=+,xofgene=+,plmark=+].
1> mutation : noun[noun=+] += [mark=+,xofgene=+,xingene=+,plmark=+].
1> permissive_mutation : noun[noun=+] += [mark=+,xofgene=+,xingene=+,plmark=+].
1> oncogene : noun += ?[mark=+,xofgene=+].
1> pathway : noun += ?[mark=+].
1> phenotype : noun += ?[mark=+,xofgene=+].
1> premessenger_RNA : noun += ?[rnaform=+,xofgene=+].
1> probe : ?[noun] += [mark=+,xofgene=+].
1> pseudogene : noun += [mark=+,xofgene=+].
//COMP//=promoter : noun[noun=+] += [mark=+].
1> proto-oncogene : noun += [mark=+,xofgene=+].
1> reporter : noun[noun=+] += [mark=+,xofgene=+].
1> sequence : noun[noun=+] += [mark=+,genvocab=+,xofgene=+].
1> signaling += [mark=+].
1> signal : ?[vprog=+] += [mark=+].
1> strain : noun[noun=+] += [mark=+,xofgene=+].
1> transcript : noun[noun=+] += [rnaform=+,xofgene=+,plmark=+].
1> translation : noun += [mark=+,xofgene=+].
1> transcription_factor : noun += [mark=+,xofgene=+].
1> transgene : noun += ?[mark=+,genterm=+,xofgene=+].
1> transgenes : noun += ?[mark=+,genterm=+,xofgene=+].
1> vector : noun += ?[mark=+,xofgene=+].

/genetic terminology\
1> genome : noun += [genterm=+].
1> GUS : noun += [genterm=+].
1> homologue : noun += [genterm=+].
1> protein : noun += [genterm=+].
1> mutant_allele : noun += [genterm=+,mark=+,xofgene=+,plmark=+].


/biology terminology\
1> clone : noun += ?[xofgene=+,mark=+].

/the word "gene"\
1> gene : noun[noun=+] += [form=fgene].
1> genetic_marker : noun += ?[form=fgene].

1> flank : verb += ?[form=fexpress].
1> act : verb += [form=fexpress].

/gene LIKE/SUCH_AS/INCLUDING X, GENE called/designated X\
1> such_as : ? += ?[like=+].
1> including : ? += ?[like=+].
1> call : verb[partpas=+] += adj[like=+,name=+].
1> designate : verb[partpas=+]  += adj[like=+,name=+].


/words in the chain: X of "gene name"\
1> activity : noun += ?[xofgene=+].
1> alteration : noun += ?[xofgene=+].
1> deletion : noun += ?[xofgene=+].
1> expression_pattern : noun += ?[xofgene=+].
1> expression_profile : noun += ?[xofgene=+].
1> intron : noun += ?[xofgene=+,mark=+].
1> localization : noun += ?[xofgene=+].
1> physical_map : noun += ?[xofgene=+].
1> physical_mapping : noun += ?[xofgene=+].
1> coding\_region : noun += ?[xofgene=+].

/words in the chain X in "gene name"\
1> development : noun += ?[xingene=+].

/words in the chain X for "gene name"\

1> ligand  : noun += ?[xforgene=+].

/vocabulary often found in sentences that contain gene names\
1> role : noun += [genvocab=+].
1> require : verb += [genvocab=+].
1> required : adj += [genvocab=+].
1> requiring : noun += [genvocab=+].
1> requiring : adj += [genvocab=+].
1> regulatory : adj += [genvocab=+].
1> genomic : adj += [genvocab=+].
1> pattern : noun += [genvocab=+].
1> genetic : adj += [genvocab=+].
1> exon : noun += [genvocab=+].
1> function : noun += [genvocab=+,function=+].
1> functional : adj += [genvocab=+].
1> fragment : noun += [genvocab=+].
1> isolate : verb += [genvocab=+].
1> motif : noun += [genvocab=+].

/words that are often attributes of gene names\
1> ectopic : adj += ?[genattr=+].
//wild-type += ?[genattr=+].
//mutant += ?[genattr=+].
1> antisense : noun += ?[genattr=+].
1> full-length : noun += ?[genattr=+].
1> gap : noun += ?[genattr=+].
1> homozygous : adj += ?[genattr=+].
1> mutated : adj += ?[genattr=+].
1> mutate : verb[past=+,partpas=+] += ?[genattr=+].
//overexpress += ?[genattr=+].
//overexpressed += ?[genattr=+].
//overexpresses += ?[genattr=+].
//overexpressing += ?[genattr=+].
1> orthologous : adj += ?[genattr=+,xtogene=+].
1> transcriptional : adj += [genattr=+].

1> coexpress : verb[vprog:~] += [form=fexpress].
1> coexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
1> coexpressed : adj += ?[mark=+].
1> coexpressing : adj += ?[hyphmark=+,form=fexpress].
1> coexpressing : noun += ?[hyphmark=+,form=fexpress].
1> coexpressor : noun += ?[hyphmark=+,form=fexpress].
1> co-expression : noun += [nodetmark=+,xofgene=+,xingene=+].
1> coexpression : noun += [nodetmark=+,xofgene=+,xingene=+].

1> constitutive_gene_expression : noun += ?[mark=+,xofgene=+].
1> coordinate_gene_expression : noun += ?[mark=+,xofgene=+].

1> ectopic_expression : noun += ?[mark=+,xofgene=+].

1> express : verb[vprog:~] += [form=fexpress].
1> express : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
1> expressed : adj += ?[mark=+].
1> expressing : adj += ?[hyphmark=+,form=fexpress].
1> expressing : noun += ?[hyphmark=+,form=fexpress].
1> expressor : noun += ?[hyphmark=+,form=fexpress].
1> expression : noun += ?[nodetmark=+,xofgene=+,xingene=+].
1> expression : noun += [mark=+,xofgene=+].

1> gene_expression : noun += ?[mark=+,xofgene=+].

1> misexpress : verb[vprog:~] += [form=fexpress].
1> misexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
1> misexpressed : adj += ?[mark=+].
1> misexpressing : adj += ?[hyphmark=+,form=fexpress].
1> misexpressing : noun += ?[hyphmark=+,form=fexpress].
1> misexpression : noun += ?[nodetmark=+,xofgene=+,xingene=+].
1> misexpressor : noun += [mark=+,xofgene=+].

1> non-expressing : adj += ?[hyphmark=+,form=fexpress].
1> nonexpressind : adj += ?[hyphmark=+,form=fexpress].

1> overexpress : verb[vprog:~] += [form=fexpress].
1> overexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
1> overexpressed : adj += [form=fexpress].
1> overexpressing : adj += ?[hyphmark=+,form=fexpress].
1> overexpressing : noun += ?[hyphmark=+,form=fexpress].
1> over-expression : noun += [nodetmark=+,xofgene=+,xingene=+].
1> overexpression : noun += [nodetmark=+,xofgene=+,xingene=+].

1> underexpress : verb[vprog:~] += [form=fexpress].
1> underexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
1> underexpressed : adj += ?[mark=+].
1> underexpressing : adj += ?[hyphmark=+,form=fexpress].
1> underexpressing : noun += ?[hyphmark=+,form=fexpress].
1> underexpress : noun += ?[nodetmark=+,xofgene=+,xingene=+].
1> underexpressor : noun += [mark=+,xofgene=+].

1> transient_expression : noun += ?[mark=+,xofgene=+].

/species\
1> human : adj += ?[species=+].
1> human : noun += ?[species=+].
1> thaliana : noun += ?[species=+].
1> chicken : noun += ?[species=+].
1> drosophila : noun += ?[species=+].
1> vertebrate : adj += ?[species=+].
1> vertebrate : noun += ?[species=+].
1> mouse : noun += [species=+].


/compound words whose last element is a marker - taken from lex-biotip-spec.fst\ /new\

1> CAAT_sequence : noun += ?[mark=+,xofgene=+].
1> DNA_probe : noun += ?[mark=+,xofgene=+].
1> DNA_repair_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> DNA_sequence : noun += ?[mark=+,xofgene=+].
1> RAM_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> Shine-Delgarno_sequence : noun += ?[mark=+,xofgene=+].
1> Shine_Dalgarno_sequence : noun += ?[mark=+,xofgene=+].
1> ZFY_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> acquired_genetic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> alu_sequence : noun += ?[mark=+,xofgene=+].
1> amber_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> amplified_sequence : noun += ?[mark=+,xofgene=+].
1> antimutator_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> autonomous_replication_sequence : noun += ?[mark=+,xofgene=+].
1> autosomal_modifier_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> auxotrophic_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> back_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> base_sequence : noun += ?[mark=+,xofgene=+].
1> base_substitution_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> candidate_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> chain_termination_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> chimeric_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> chromosome_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> circular_permutation : noun += ?[mark=+,xofgene=+].
1> cleaved_amplified_polymorphic_sequence : noun += ?[mark=+,xofgene=+].
1> coding_sequence : noun += ?[mark=+,xofgene=+].
1> cold_sensitive_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> complementary_sequence : noun += ?[mark=+,xofgene=+].
//complex : ?[pl:~] : noun += ?[pair=+,negmark=+].
1> complex : noun += ?[pair=+,nogene=+].
1> transcription_complex: ?[pl:~] += ?[pair=+].
//gene_complex : ?[pl:~] : noun += ?[pair=+,negmark=+].
//protein_complex : ?[pl:~] : noun += ?[pair=+,negmark=+].
1> gene_complex : noun += ?[pair=+].
1> protein_complex : noun += ?[pair=+].
1> compound_heterozygote : noun += ?[mark=+,xofgene=+].
1> conditional-lethal_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> conditional_lethal_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> conditional_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> conditional_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> congenic_mouse_strain : noun += ?[mark=+,xofgene=+].
1> consensus_sequence : noun += ?[mark=+,xofgene=+].
1> conserved_sequence : noun += ?[mark=+,xofgene=+].
1> constitutive_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> constitutive_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> continuous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> control_of_gene_expression : noun += ?[mark=+,xofgene=+].
1> discontinuous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> dominant_allele : noun += ?[mark=+,xofgene=+,plmark=+].
1> double_heterozygote : noun += ?[mark=+,xofgene=+].
1> duplicate_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> dynamic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> early_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> env_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> expressed_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> extrachromosomal_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> fixed_allele : noun += ?[mark=+,xofgene=+,plmark=+].
1> flanking_sequence : noun += ?[mark=+,xofgene=+].
1> forward_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> frameshift_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> full_gene_sequence : noun += ?[mark=+,xofgene=+].
1> functional_allele : noun += ?[mark=+,xofgene=+,plmark=+].
1> gene_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> gene_probe : noun += ?[mark=+,xofgene=+].
1> gene_sequence : noun += ?[mark=+,xofgene=+].
1> genetic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> germinal_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> heat-shock_protein : noun += ?[mark=+,protein=+].
1> hemizygous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> hereditary_genetic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> heterogeneous_nuclear_mRNA : noun += ?[rnaform=+,xofgene=+].
1> heterologous_probe : noun += ?[mark=+,xofgene=+].
1> highly_repeated_sequence : noun += ?[mark=+,xofgene=+].
1> histocompatibility_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> homeotic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> housekeeping_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> hybrid_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> hybridization_probe : noun += ?[mark=+,xofgene=+].
1> hypostatic_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> immunoglobulin_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> inbred_mouse_strain : noun += ?[mark=+,xofgene=+].
1> inbred_strain : noun += ?[mark=+,xofgene=+].
1> insertion_sequence : noun += ?[mark=+,xofgene=+].
1> intervening_DNA_sequence : noun += ?[mark=+,xofgene=+].
1> intervening_nucleotide_sequence : noun += ?[mark=+,xofgene=+].
1> intervening_sequence : noun += ?[mark=+,xofgene=+].
1> inverted_repeat_sequence : noun += ?[mark=+,xofgene=+].
1> jumping_gene : noun += ?[mark=+,xofgene=+,form=fgene].
//COMP//=lacZ : noun += ?[mark=+,xofgene=+].
1> late_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> leader_peptide_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> leader_sequence : noun += ?[mark=+,xofgene=+].
1> leader_transcript : noun += ?[mark=+,xofgene=+,plmark=+].
1> leaky_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> leaky_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> lethal-equivalent_allele : noun += ?[mark=+,xofgene=+,plmark=+].
1> lethal_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> marker_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> missense_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> modifier_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> monocistronic_mRNA : noun += ?[rnaform=+,xofgene=+].
1> multiple_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> mutant_allele : noun += ?[mark=+,xofgene=+,plmark=+].
1> mutator_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> mutator_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> neutral_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> new_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> non_coding_sequence : noun += ?[mark=+,xofgene=+].
1> nonsense_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> nucleic_probe : noun += ?[mark=+,xofgene=+].
1> null_allele : noun += ?[mark=+,xofgene=+,plmark=+].
1> null_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> nutritional-requirement_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> obligate_heterozygote : noun += ?[mark=+,xofgene=+].
1> ochre_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
1> opal_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
1> outbred_mouse_strain : noun += ?[mark=+,xofgene=+].
1> overlapping_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> overlapping_sequence : noun += ?[mark=+,xofgene=+].
1> palindromic_sequence : noun += ?[mark=+,xofgene=+].
1> paralogous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> partial_gene_sequence : noun += ?[mark=+,xofgene=+].
1> petite_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> pleiotropic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> point_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> poky_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> polar_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> polarity_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> polyadenylation_sequence : noun += ?[mark=+,xofgene=+].
1> polycistronic_mRNA : noun += ?[rnaform=+,xofgene=+].
1> primary_transcript : noun += ?[mark=+,xofgene=+,plmark=+].
1> protein_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> pseudoautosomal_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> pure-breeding_strain : noun += ?[mark=+,xofgene=+].
1> readthrough_transcription : noun += ?[mark=+,xofgene=+].
1> recessive_allele : noun += ?[mark=+,xofgene=+,plmark=+].
1> recombinant_inbred_strain : noun += ?[mark=+,xofgene=+].
1> redundant_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> regulation_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> regulator_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> regulatory_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> regulatory_sequence : noun += ?[mark=+,xofgene=+].
1> relaxed_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> reporter_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> reverse_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> same-sense_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> second-site_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> signal_sequence : noun += ?[mark=+,xofgene=+].
1> silent_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> silent_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> sine_sequence : noun += ?[mark=+,xofgene=+].
1> somatic_cell_genetic_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
1> somatic_hypermutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> somatic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> split_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> spontaneous_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> structural_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> strucutural_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> subvital_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> suppressor_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> suppressor_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> synthetic_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> synthetic_lethal_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
1> tandem_repeat_sequence : noun += ?[mark=+,xofgene=+].
1> temperature-sensitive_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
1> temperature-sensitive_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
1> terminator_sequence : noun += ?[mark=+,xofgene=+].
1> transition_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> transversion_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> true-breeding_strain : noun += ?[mark=+,xofgene=+].
1> tumor-suppresser_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> tumor-suppressor_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> tumour_suppressor_gene : noun += ?[mark=+,xofgene=+,form=fgene].
1> unique_sequence : noun += ?[mark=+,xofgene=+].
1> unstable_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> up_promoter_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
1> upstream_activator_sequence : noun += ?[mark=+,xofgene=+].
1> nucleoprotein : noun += ?[mark=+,protein=+].
1> non-histone_protein : noun += ?[mark=+,protein=+].
1> nonprotein : noun += ?[mark=+,protein=+].
1> helix-turn-helix_protein : noun += ?[mark=+,protein=+].
1> homeodomain_protein : noun += ?[mark=+,protein=+].
1> initiator_protein : noun += ?[mark=+,protein=+].
1> snRNP : noun += ?[mark=+,protein=+].
1> ssb : noun += ?[mark=+,protein=+].
1> single-strand_binding_protein : noun += ?[mark=+,protein=+].
1> single-strand_DNA_binding_protein : noun += ?[mark=+,protein=+].
1> small_nuclear_ribonucleoprotein : noun += ?[mark=+,protein=+].
1> green_flourescent_protein : noun += ?[mark=+,protein=+].
1> allosteric_protein : noun += ?[mark=+,protein=+].
1> antiterminator_protein : noun += ?[mark=+,protein=+].
1> catabolite_activator_protein : noun += ?[mark=+,protein=+].
1> catabolite_receptor_protein : noun += ?[mark=+,protein=+].
1> GFP : noun += ?[mark=+,protein=+].
1> CAP : noun += ?[mark=+,protein=+].
1> CRP : noun += ?[mark=+,protein=+].
1> HLH_protein : noun += ?[mark=+,protein=+].
1> zinc_finger_protein : noun += ?[mark=+,protein=+].
1> multiprotein : noun += ?[mark=+,protein=+].
1> preprotein : noun += ?[mark=+,protein=+].
1> protein : noun += ?[mark=+,protein=+].
1> lipoprotein : noun += ?[mark=+,protein=+].
1> ribonucleoprotein : noun += ?[mark=+,protein=+].

/Certain upper-case gene names are ambiguous with words of the general lexicon, but since they begin with a capital letter always, they are not in lex-ambig. They will need a special treatment. We don't want them to be gene names in a sentence initial position.\


1> It : pron += [pron=+,capamb=+].
1> Is : verb += [form=fbe,capamb=+].
1> On : prep += [capamb=+].
1> AND : conj += [capamb=+].

/I haven't found in the training corpus gene names that consist of only one letter, but single letters are often used for other purposes. So one-letter gene names from the lex-biotip won't get the feature "gene", just "guessgene", and "let"\

1> i : ? += [let=+,min=+].

/Certain ambiguous gene names are more likely not to be gene names in the text. There are rules to regulate their tagging.\

1> did : verb += [form=fdo].
1> not : ? += [form=fnot].

//COMP//=A += [let=+].
//COMP//=B += [let=+].
//COMP//=C += [let=+].
//COMP//=D += [let=+].
//COMP//=E += [let=+].
//COMP//=F += [let=+].
//COMP//=G += [let=+].
//COMP//=H += [let=+].
//COMP//=I += [let=+].
//COMP//=J += [let=+].
//COMP//=K += [let=+].
//COMP//=L += [let=+].
//COMP//=M += [let=+].
//COMP//=N += [let=+].
//COMP//=O += [let=+].
//COMP//=P += [let=+].
//COMP//=Q += [let=+].
//COMP//=R += [let=+].
//COMP//=S += [let=+].
//COMP//=T += [let=+].
//COMP//=U += [let=+].
//COMP//=V += [let=+].
//COMP//=W += [let=+].
//COMP//=X += [let=+].
//COMP//=Y += [let=+].
//COMP//=Z += [let=+].


1> A  : ? += [let=+].
1> B  : ? += [let=+].
1> C  : ? += [let=+].
1> D  : ? += [let=+].
1> E  : ? += [let=+].
1> F  : ? += [let=+].
1> G  : ? += [let=+].
1> H  : ? += [let=+].
1> I  : ? += [let=+].
1> J  : ? += [let=+].
1> K  : ? += [let=+].
1> L  : ? += [let=+].
1> M  : ? += [let=+].
1> N  : ? += [let=+].
1> O  : ? += [let=+].
1> P  : ? += [let=+].
1> Q  : ? += [let=+].
1> R  : ? += [let=+].
1> S  : ? += [let=+].
1> T  : ? += [let=+].
1> U  : ? += [let=+].
1> V  : ? += [let=+].
1> W  : ? += [let=+].
1> X  : ? += [let=+].
1> Y  : ? += [let=+].
1> Z  : ? += [let=+].

1> a  : ? += [let=+,min=+].
1> b  : ? += [let=+,min=+].
1> c  : ? += [let=+,min=+].
1> d  : ? += [let=+,min=+].
1> e  : ? += [let=+,min=+].
1> f  : ? += [let=+,min=+].
1> g  : ? += [let=+,min=+].
1> h  : ? += [let=+,min=+].
1> i  : ? += [let=+,min=+].
1> j  : ? += [let=+,min=+].
1> k  : ? += [let=+,min=+].
1> l  : ? += [let=+,min=+].
1> m  : ? += [let=+,min=+].
1> n  : ? += [let=+,min=+].
1> o  : ? += [let=+,min=+].
1> p  : ? += [let=+,min=+].
1> q  : ? += [let=+,min=+].
1> r  : ? += [let=+,min=+].
1> s  : ? += [let=+,min=+].
1> t  : ? += [let=+,min=+].
1> u  : ? += [let=+,min=+].
1> v  : ? += [let=+,min=+].
1> w  : ? += [let=+,min=+].
1> x  : ? += [let=+,min=+].
1> y  : ? += [let=+,min=+].
1> z  : ? += [let=+,min=+].

1> cytosine : noun[abr=+] += [let=+,min=+].
1> guanosine : noun[abr=+] += [let=+,min=+].
1> Svedberg_unit : noun[abr=+] += [let=+].
1> Thymidine : noun[abr=+] += [let=+].
1> uridine : noun[abr=+] += [let=+,min=+].
//COMP//=cytosine : noun[abr=+] += [let=+].
//COMP//=guanosine : noun[abr=+] += [let=+].
//COMP//=Svedberg_unit : noun[abr=+,min=+] += [let=+].
//COMP//=Thymidine : noun[abr=+] += [let=+].
//COMP//=uridine : noun[abr=+] += [let=+].

1> degree : meas += [let=+].
1> atomic_mass_unit : meas += [let=+].
1> tonne : meas += [let=+].
1> second : meas += [let=+].
1> meter : meas += [let=+].
1> liter : meas += [let=+].
1> hour : meas += [let=+].
1> gram : meas += [let=+].
1> bar : meas += [let=+].
1> Watt : meas += [let=+].
1> Volt : meas += [let=+].
1> enzyme_unit : meas += [let=+].
1> Newton : meas += [let=+].
1> Morgan : meas += [let=+].
1> Joule : meas += [let=+].
1> Farad : meas += [let=+].
1> Dalton : meas += [let=+].
1> Coulomb : meas += [let=+].
1> Ampere : meas += [let=+].
1> Angstrom : meas += [let=+].

//COMP//=degree : meas += [let=+].
//COMP//=atomic_mass_unit : meas += [let=+].
//COMP//=tonne : meas += [let=+].
//COMP//=second : meas += [let=+].
//COMP//=meter : meas += [let=+].
//COMP//=liter : meas += [let=+].
//COMP//=hour : meas += [let=+].
//COMP//=gram : meas += [let=+].
//COMP//=bar : meas += [let=+].
//COMP//=Watt : meas += [let=+].
//COMP//=Volt : meas += [let=+].
//COMP//=enzyme_unit : meas += [let=+].
//COMP//=Newton : meas += [let=+].
//COMP//=Morgan : meas += [let=+].
//COMP//=Joule : meas += [let=+].
//COMP//=Farad : meas += [let=+].
//COMP//=Dalton : meas += [let=+].
//COMP//=Coulomb : meas += [let=+].
//COMP//=Ampere : meas += [let=+].
//COMP//=Angstrom : meas += [let=+].

1> Yttrium : noun[genterm=+] += [let=+,genterm=~].
1> Wolfram : noun[genterm=+] += [let=+,genterm=~].
1> Vanadium : noun[genterm=+] += [let=+,genterm=~].
1> Uranium : noun[genterm=+] += [let=+,genterm=~].
1> uridine : noun[genterm=+] += [let=+,genterm=~].
1> uracil : noun[genterm=+] += [let=+,genterm=~].
1> thymidine : noun[genterm=+] += [let=+,genterm=~].
1> thymine : noun[genterm=+] += [let=+,genterm=~].
1> Svedberg_unit : noun[genterm=+] += [let=+,genterm=~].
1> Sulfur : noun[genterm=+] += [let=+,genterm=~].
1> Oxygen : noun[genterm=+] += [let=+,genterm=~].
1> Nitrogen : noun[genterm=+] += [let=+,genterm=~].
1> Iodine : noun[genterm=+] += [let=+,genterm=~].
1> Hydrogen : noun[genterm=+] += [let=+,genterm=~].
1> guanine : noun[genterm=+] += [let=+,genterm=~].
1> guanosine : noun[genterm=+] += [let=+,genterm=~].
1> Fluorine : noun[genterm=+] += [let=+,genterm=~].
1> Carbon : noun[genterm=+] += [let=+,genterm=~].
1> cytosine : noun[genterm=+] += [let=+,genterm=~].
1> cytidine : noun[genterm=+] += [let=+,genterm=~].
1> Boron : noun[genterm=+] += [let=+,genterm=~].
1> adenine : noun[genterm=+] += [let=+,genterm=~].
1> adenosine : noun[genterm=+] += [let=+,genterm=~].
1> Potassium : noun[genterm=+] += [let=+,genterm=~].
1> Phosphorus : noun[genterm=+] += [let=+,genterm=~].


//COMP//=Yttrium : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Wolfram : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Vanadium : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Uranium : noun[genterm=+] += [let=+,genterm=~].
//COMP//=uridine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=uracil : noun[genterm=+] += [let=+,genterm=~].
//COMP//=thymidine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=thymine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Svedberg_unit : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Sulfur : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Oxygen : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Nitrogen : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Iodine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Hydrogen : noun[genterm=+] += [let=+,genterm=~].
//COMP//=guanine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=guanosine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Fluorine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Carbon : noun[genterm=+] += [let=+,genterm=~].
//COMP//=cytosine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=cytidine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Boron : noun[genterm=+] += [let=+,genterm=~].
//COMP//=adenine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=adenosine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Potassium : noun[genterm=+] += [let=+,genterm=~].

/Some words in the ambiguous lexicon are unlikely to be gene names. They get the feature nogene=+\


1> capability  : ? += ?[nogene=+].
1> lines : ? += ?[nogene=+].
1> increased  : ? += ?[nogene=+].
1> spliced  : ? += ?[nogene=+].
1> lacking  : ? += ?[nogene=+].
1> truncated  : ? += ?[nogene=+].
1> truncate  : ? += ?[nogene=+].
1> multiple  : ? += ?[nogene=+].
1> inactive  : ? += ?[nogene=+].
1> acute  : ? += ?[nogene=+].
1> double  : ? += ?[nogene=+].
1> short  : ? += ?[nogene=+].
1> high  : ? += ?[nogene=+].
1> combined  : ? += ?[nogene=+].
1> brain  : ? += ?[nogene=+].
1> heart  : ? += ?[nogene=+].
1> similar  : ? += ?[nogene=+].
1> receptor  : ? += ?[nogene=+,mark=+].
1> weak  : ? += ?[nogene=+].
1> cell  : ? += ?[nogene=+].
1> can  : ? += ?[nogene=+].
1> activator  : ? += ?[nogene=+].
//COMP//=to += ?[gene=~,gsb=~].

/certain hyphened words are markers of gene/protein names. They get the the feature hyphmark=+. A rule will assign them the feature mark=+\

1> mediate : verb[partpas=+] += adj[hyphmark=+,genact=+].
1> mediate : adj += adj[hyphmark=+,partpas=+,genact=+].
1> mediated : adj += adj[hyphmark=+,genact=+].
1> deficient  : ? += ?[hyphmark=+].
1> dependent  : ? += ?[hyphmark=+,allmark=+,genact=+].
1> induce : ? += ?[hyphmark=+,allmark=+,genact=+].
1> induced : ? += ?[hyphmark=+,allmark=+,genact=+].
1> lacZ  : ? += ?[hyphmark=+].

1> \/  : ? += ?[separ=+].

//cell += ?[negmark=+].
//class  : ? += ?[negmark=+].
//domain += ?[negmark=+].
//protein_domain += ?[negmark=+].
//homeo_domain += ?[negmark=+].
//homeo-domain += ?[negmark=+].
//homeodomain += ?[negmark=+].
//factor : noun[pl=+] += ?[negmark=+].
//family  : ? += ?[negmark=+].
//gene_family  : ? += ?[negmark=+].
//group  : ? += ?[negmark=+].
//subfamily  : ? += ?[negmark=+].
//molecule += ?[negmark=+].
//gene : ?[pl=+] += ?[negmark=+].
//protein : ?[pl=+] += ?[negmark=+].

//Greek letters written in full letters are often parts of multiword entity names\
1> alpha  : ? += ?[greeklet=+].
1> beta  : ? += ?[greeklet=+].
1> kappa  : ? += ?[greeklet=+].

//in the sequence SPECIES homolog of ENTITY, ENTITY does not belong to SPECIES. So "homolog" gets the feature blockspe=+ so that this can be encoded

1> homolog  : ? += ?[blockspe=+].
1> homologue  : ? += ?[blockspe=+].

// ambiguous noun/verb that are verbs between 2 nouns
1> use : noun += noun[verbuse=+].

//retokenization

1> site : noun += noun[site=+] .

//prefixes

1> co : ? += ?[prefix=+].
1> auto : ? += ?[prefix=+].
1> down : ? += ?[prefix=+].
1> up : ? += ?[prefix=+].
1> cross  : ? += ?[prefix=+].
1> pre  : ? += ?[prefix=+].
1> mis  : ? += ?[prefix=+].



//"signal(l)ing", etc. has the same behaviour as "binding"

1> signal : ?[vprog=+] += ?[binding=+] .
1> signalling  : ? += ?[binding=+] .
1> signaling  : ? += ?[binding=+] .
1> label : ?[vprog=+] += ?[binding=+] .
1> labelling  : ? += ?[binding=+] .
1> labeling  : ? += ?[binding=+] .
1> stain : ?[vprog=+] += ?[binding=+] .
1> staining  : ? += ?[binding=+] .
1> splice : ?[vprog=+] += ?[binding=+] .
1> splicing  : ? += ?[binding=+] .

//words with unusual tagging for disamb_biotip

1> repeat  : ? += ?[repeat=+].

//P\ element : noun += ?[compound=+].


// interaction words

1> acetylate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> acetylate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
1> acetylate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> acetylate : adj[ding=+] += ?[ia=+].
1> acetylate : noun[ding=+] += ?[in=+].
1> acetylate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> acetylate : noun[dor=+] += ?[mark=+,ier=+].

1> activate : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark=+,iving=+].
1> activate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> activate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> activate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark=+].
1> activate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark=+].
1> activate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> activate : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> allele_specific_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].
1> amber_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> autoactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> autoactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
1> autoactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> autoactivate : adj[ding=+] += ?[mark=+,form=fexpress,ia=+].
1> autoactivate : noun[ding=+] += ?[mark=+,form=fexpress,in=+].
1> autoactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> autoactivate : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> autogenous_regulate : noun[dion=+] += ?[xofgene=+,in=+].
1> autogenous_repress : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> autophosphorylate : verb[vprog:~] += ?[mark=+,xofgene=+,iv=+].
1> autophosphorylate : verb[vprog=+] += ?[mark=+,xofgene=+,iving=+].
1> autophosphorylate : adj[ded=+] += ?[ia=+].
1> autophosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
1> autophosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
1> autophosphorylate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

1> autoregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> autoregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> autoregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> autoregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> autoregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> autoregulate : noun[dion=+] += ?[xofgene=+,in=+].
1> autoregulate : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

1> autotransport : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+].

1> bind : verb[vprog=+] += ?[hyphmark=+,pair=+,mark=+,binding=+,iving=+].
1> bind : verb[vprog:~] += ?[mark=+,bind=+,iv=+].
1> bind : noun[dor=+] += noun[mark=+,ier=+].
1> bind : adj[ding=+] += ?[hyphmark=+,pair=+,binding=+,ia=+].
1> bind : noun[ding=+] += ?[hyphmark=+,pair=+,binding=+,in=+].
1> bind : adj[ded=+] += adj[ia=+].

1> bioactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> biodegrade : noun[dion=+] += [in=+,xofgene=+].
1> bypass_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].
1> cDNA_cloning : noun += ?[xofgene=+].

1> catabolite_repress : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

1> coactivate : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark=+,iving=+].
1> coactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> coactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> coactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark=+].
1> coactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark=+].
1> coactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> coactivate : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> code : verb[vprog=+] += ?[hyphmark=+,code=+,iving=+].
1> code : verb[vprog:~] += ?[iv=+,code=+].
1> code : adj[ded=+] += ?[ia=+].
1> code : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
1> code : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].

1> control : verb[vprog=+] += ?[hyphmark=+,code=+,iving=+].
1> control : verb[vprog:~] += ?[iv=+,code=+].
1> control : adj[ded=+] += ?[ia=+].
1> control : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
1> control : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].

1> corepress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> corepress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> corepress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
1> corepress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> corepress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> corepress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> corepress : noun[dor=+] += ?[mark=+,genterm=+,xofgene=+,ier=+].
1> co-repress : noun[dor=+] += [mark=+,xofgene=+,ier=+].
1> corepress : noun[dor=+] += ?[mark=+,genterm=+,xofgene=+,ier=+].

1> co-transport : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+,prot=~].
1> cotransport : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+,prot=~].

1> crossover_suppress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> crossover_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> deacetylate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> deacetylate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
1> deacetylate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> deacetylate : adj[ding=+] += ?[ia=+].
1> deacetylate : noun[ding=+] += ?[in=+].
1> deacetylate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> deacetylate : noun[dor=+] += ?[mark=+,ier=+].

1> deactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> deactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
1> deactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> deactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress].
1> deactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress].
1> deactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> deactivate : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> degrade : noun[dion=+] += [mark=+,in=+,xofgene=+].
1> degrade : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark=+,iving=+].
1> degrade : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> degrade : adj[ded=+] += ?[ia=+].
1> degrade : adj[ding=+] += ?[mark=+,form=fexpress,hyphmark=+,ia=+].
1> degrade : noun[ding=+] += ?[mark=+,form=fexpress,hyphmark=+,in=+].
1> degrade : noun[dor=+] += ?[mark=+,ier=+].

1> dephosphorylate : verb[vprog:~] += ?[mark=+,xofgene=+,iv=+].
1> dephosphorylate : verb[vprog=+] += ?[mark=+,xofgene=+,iving=+].
1> dephosphorylate : adj[ded=+] += ?[ia=+].
1> dephosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
1> dephosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
1> dephosphorylate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

1> deregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> deregulate : verb[vprog:~] += [mark=+,form=fexpress,iving=+].
1> deregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> deregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> deregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> deregulate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
1> deregulate : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

1> derepress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> derepress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> derepress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
1> derepress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> derepress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> derepress : noun[dion=+] += [mark=+,xofgene=+,in=+].

1> dimerize : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> dimerize : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> dimerize : adj[ded=+] += [mark=+,form=fexpress,ia=+].
1> dimerize : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> dimerize : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> dimerize : noun[dion=+] += [mark=+,xofgene=+,in=+].

1> disrupt : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> disrupt : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> disrupt : adj[ded=+] += [mark=+,form=fexpress,ia=+].
1> disrupt : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> disrupt : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> disrupt : noun[dion=+] += [mark=+,xofgene=+,in=+].

1> dissociate : verb[vprog:~] += [iv=+].
1> dissociate : verb[vprog=+] += [iving=+].
1> dissociate : adj[ded=+] += adj[ia=+].
1> dissociate : adj[ding=+] += [ia=+].
1> dissociate : noun[ding=+] += [in=+].
1> dissociate : noun[dion=+] += [in=+].

1> DNA-bind : noun[dion=+] += [genvocab=+,maj=~,in=+].
1> DNA_cloning : noun += ?[xofgene=+].

1> downregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> downregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> downregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> downregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> downregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> downregulate : noun[dion=+] += noun[mark=+,xofgene=+,in=+].
1> downregulate : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

1> ectopic_activate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> ectopic_transcribe : noun[dion=+] += [mark=+,xofgene=+,xfromgene=+,in=+].

1> encode : verb[vprog:~] += ?[hyphmark=+,encode=+,iv=+].
1> encode : verb[vprog=+] += ?[hyphmark=+,encode=+,iving=+].
1> encode : adj[ded=+] += ?[hyphmark=+,mark=+,encode=+,past=~,ia=+].
1> encode : adj[ding=+] += ?[encode=+,hyphmark=+,ia=+].
1> encode : noun[ding=+] += ?[encode=+,hyphmark=+,in=+].

1> enhance : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> enhance : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> enhanced : adj += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> enhancing : adj += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> enhancing : noun += [mark=+,form=fexpress,hyphmark=+,in=+].
//enhance : noun[dion=+] += noun[mark=+,xofgene=+,in=+].
1> enhancer : noun += [mark=+,xofgene=+,form=fgene,ier=+].

1> feedback_inhibit : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
1> gene_cloning : noun += ?[xofgene=+].
1> gene_disrupt : noun[dion=+] += [mark=+,xofgene=+,in=+].

1> hyperacetylate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> hyperacetylate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
1> hyperacetylate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> hyperacetylate : adj[ding=+] += ?[ia=+].
1> hyperacetylate : noun[ding=+] += ?[in=+].
1> hyperacetylate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].

1> hyperphosphorylate : verb[vprog=+] += ?[mark=+,hyphmark=+,iving=+].
1> hyperphosphorylate : verb[vprog:~] += ?[mark=+,iv=+].
1> hyperphosphorylate : adj[ded=+] += ?[ia=+].
1> hyperphosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
1> hyperphosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
1> hyperphosphorylate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

1> implicate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> implicate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> implicate : adj[ded=+] += ?[ia=+].
1> implicate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> implication : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> implication : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
1> implication : noun[dor=+] += [mark=+,xofgene=+,ier=+].


1> immunosuppress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> immunosuppress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> immunosuppress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
1> immunosuppress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> immunosuppress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> immunosuppress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> immunosuppress : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> inactivate : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark,iving=+].
1> inactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> inactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> inactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark].
1> inactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark].
1> inactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> inactivate : noun[dor=+] += ?[mark=+,ier=+].

1> inhibit : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> inhibit : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> inhibit : adj[ded=+] += ?[ia=+].
1> inhibit : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> inhibit : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> inhibit : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
1> inhibit : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> insertional_inactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].

1> interact : verb[vprog=+] += [finteract=+,mark=+,hyphmark=+,iving=+].
1> interact : verb[vprog:~] += [finteract=+,mark=+,iv=+].
1> interact : adj[ded=+] += [finteract=+,mark=+,ia=+].
1> interact : adj[ding=+] += [mark=+,finteract=+,hyphmark=+,ia=+].
1> interact : noun[ding=+] += [mark=+,finteract=+,hyphmark=+,in=+].
1> interact : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> intergenic_suppress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> intragenic_suppress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> lateral_inhibit : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
1> linkage_disrupt : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> membrane_transport : noun += [mark=+,xofgene=+,in=+].

//minimal_promote : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> misregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> misregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> misregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> misregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> misregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> misregulate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].


1> non-code : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
1> noncode : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
1> non-code : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].
1> noncode : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].

1> nonsense_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> overproduction_suppress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> oxidative_phosphorylate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
1> passive_transport : noun += [mark=+,xofgene=+,in=+].

1> phosphorylate : verb[vprog=+] += ?[mark=+,hyphmark=+,iving=+].
1> phosphorylate : verb[vprog:~] += ?[mark=+,iv=+].
1> phosphorylate : adj[ded=+] += ?[ia=+].
1> phosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
1> phosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
1> phosphorylate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
1> phosphorylate : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> photoinhibit : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].

1> photophosphorylate : verb[vprog=+] += ?[mark=+,hyphmark=+,iving=+].
1> photophosphorylate : verb[vprog:~] += ?[mark=+,iv=+].
1> photophosphorylate : adj[ded=+] += ?[ia=+].
1> photophosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
1> photophosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
1> photophosphorylate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

1> photoreactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].

1> positional_cloning : noun += ?[xofgene=+].
1> post-transcriptional_regulate : noun[dion=+] += ?[xofgene=+,in=+].
1> posttranscriptional_regulate : noun[dion=+] += ?[xofgene=+,in=+].
1> post-translational_regulate : noun[dion=+] += ?[xofgene=+,in=+].
1> posttranslational_regulate : noun[dion=+] += ?[xofgene=+,in=+].

1> promote : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> promote : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> promote : adj[ded=+] += ?[ia=+].
//promote : noun[dor=+] += [mark=+,xofgene=+,hyphmark=+,ier=+].
1> promote : adj[ding=+] += [mark=+,hyphmark=+,ia=+].
1> promote : noun[ding=+] += [mark=+,hyphmark=+,in=+].
1> promote : noun[dion=+] += [mark=+,xofgene=+,in=+].


1> reactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> reactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
1> reactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> reactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress].
1> reactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress].
1> reactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> reactivate : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> regulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> regulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> regulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> regulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> regulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> regulate : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
1> regulate : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

1> repress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> repress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> repress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
1> repress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> repress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> repress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> repress : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> reverse_transcribe : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
1> shotgun_cloning : noun += ?[xofgene=+].


1> silence : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> silence : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> silenced : adj += [mark=+,form=fexpress,ia=+].
1> silencing : adj += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> silencing : noun += [mark=+,form=fexpress,hyphmark=+,in=+].
//silence : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> silencer : noun += [mark=+,xofgene=+,ier=+].

//strong_promote : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].
1> skewed_X-inactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> subcloning : noun += ?[xofgene=+].
1> supersuppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> suppress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> suppress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> suppress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
1> suppress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> suppress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> suppress : noun[dion=+] += [mark=+,xofgene=+,in=+].
1> suppress : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> transactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
1> transactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+,hyphmark=+].
1> transactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
1> transactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark=+].
1> transactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark=+].
1> trans-activate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> transactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> trans-activate : noun[dion=+] += ?[xofgene=+,mark=+,in=+].
1> transactivate : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

1> transcribe : noun[dion=+] += [mark=+,xofgene=+,xfromgene=+,in=+].
1> translational_repress : noun[dor=+] += [mark=+,xofgene=+,ier=+].

1> transport : noun += [mark=+,xofgene=+,in=+].
1> transport : verb[vprog=+] += [hyphmark=+,iv=+].
1> transport : verb[vprog:~] += [hyphmark=+,iving=+].
1> transport : adj[ded=+] += ?[ia=+].
1> transport : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+].
1> transport : adj[ding=+] += [hyphmark=+,ia=+].
1> transport : noun[ding=+] += [hyphmark=+,in=+].

1> ubiquinate : noun[dion=+] += [mark=+,xofgene=+,xfromgene=+,in=+].

1> upregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
1> upregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
1> upregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> upregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
1> upregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
1> upregulate : noun[dion=+] += noun[mark=+,xofgene=+,in=+].
1> upregulate : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

1> UV_reactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> weigle_reactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> X_chromosome_inactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
1> X_hyperactivate : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].


1> interact : noun[dion=+] += [finteract=+,pair=+,xofgene=+].
1> gene_interact : noun[dion=+] += [finteract=+,pair=+,xofgene=+].
1> inductive_interact : noun[dion=+] += [finteract=+,pair=+,xofgene=+].
1> ligand-receptor_interact : noun[dion=+] += [finteract=+,pair=+,xofgene=+].


// expressions equivalent to copulas

// play a role

1> play : verb += [copverb=+].
1> role : noun += [copobj=+].

// Repression was mediated by
// Repression is dependent on
// 