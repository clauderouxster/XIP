//ce fichier est entièrement commenté pour le moment pour qu'il n'interfère pas avec l'analyse des fichiers suivants

/

Tagging:

11> ?[evnt] = ?[!potcore=+].

11> ?[verb] = ?[potcore=+].

11> ?[aux] = ?[potcore=+].

11> ?[partpas] = ?[potcore=+].

11> ?[potcore] = ?[potcorefirst=+] | ?*[potcore:~], ?%[potcore,potcoresecond=+] |.

DependencyRules:

| #1[potcorefirst], ?*[potcoresecond:~], #3[potcoresecond] |
	POTCORE[drive=+](#1,#3).

//POTCORE_DRIVE(would,be)
//POTCORE_DRIVE(be,scrapped) 

if  ( ^POTCORE[drive](#1[aux],#2[form:fbe]) & POTCORE[drive](#2[form:fbe],#3) )
	POTCORE(#1,#3).	

if  ( POTCORE[drive](#1[aux],#3) & ^POTCORE[drive](#2[form:fbe],#3) )
	~.	


//POTCORE_DRIVE(states,will)
//POTCORE_DRIVE(will,consider) 

if ( ^POTCORE[drive](#1,#2[aux]) & POTCORE[drive](#2[aux],#3) )
	POTCORE(#1,#3).

//POTCORE_DRIVE(start,has)
//POTCORE_DRIVE(has,been)
//POTCORE_DRIVE(been,delayed) 

if ( ^POTCORE[drive](#1,#2[form:fhave]) & POTCORE[drive](#2[form:fhave],#3[form:fbe]) & POTCORE[drive](#3[form:fbe],#4) )
	POTCORE(#1,#4).

if ( POTCORE(#1,#4) & ^POTCORE[drive](#2[form:fhave],#3[form:fbe]) & POTCORE[drive](#3[form:fbe],#4) )
	~.

if ( POTCORE(#1,#4) & ^POTCORE[drive](#3[form:fbe],#4) )
	~.

//POTCORE_DRIVE(scheduled,be)
//POTCORE_DRIVE(be,launched) 

if ( ^POTCORE[drive](#1,#2[form:fbe]) & POTCORE[drive](#2[form:fbe],#3) )
	POTCORE(#1,#3).

if ( POTCORE[drive](#1,#3) & ^POTCORE[drive](#2[form:fbe],#3) )
	~.

Tagging:

//11> ?[potcore] = | ?[potcorefirst], ?*[potcore:~] | ?[potcoresecond=+] .

11> ?[danger] = ?[!danger=+].

11> ?[prep] = ?[!prep_modif=+].

11> ?[prep_modif,form:finfto] = ?[!prep_modif=~] | verb | .

11> noun<nonounpl>;verb = verb .

// mark the verb that precedes "that" in order to turn it into a drive: X stated that Y worked ...

11> ?[verb,sc_s] = ?[thatdriver=+] | ?%[form:fthat,afterdrive=+] | .

11> ?[evnt] = ?[thatdriver=+] | ?%[form:fthat,afterdrive=+] | .

// ing forms that are tagged as nouns are nominal events

11> ?[vprog,noun] = ?[!xrx=+,!evnt=+].

// are on standby

11> ?[proper:~,noun] = | ?%[form:fbe,forsubjattr=+], prep | ?[forsubjattr=+] .


\






