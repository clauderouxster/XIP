//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : lexicon.xip
//!   Date       : 10/02/2003
//!   Author     : Caroline Hagege
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



Vocabulary:


// *********** Treatment of the quotes (treated as markups) ****************** //



\"  <>*= [guille=+].

//`` <>*= [guille=+].
//'' <>*= [guille=+].



/marking compound words\
=+ += [compend:+].


// Toutmaj on mwe

"%C+ %C+" :: ? += [toutmaj:=+].





/ASSIGNMENT OF UNIQUE FEATURES TO INDIVIDUAL LEMMATA\
/====================================================\

// XT Demonstrative determiners
this  : det += [det_dem=+].
these : det += [det_dem=+].
that  : det += [det_dem=+].


// CH
// Deleting the feature coord:+ to the lemma "than"
than += [coord=~,form=fthan].


// CH
// Adding a feature [time:+] to the adverbs "late" and "early" and to adjective

early += [time:+].
late += [time:+].
recently += [time:+].
lately += [time:+].


// CH
// Adding a feature ftwice to the word "twice"
twice += [form:ftwice].




// CH, March 2002
// Adding a feature form:pronthing to the words "anything", "everything" and "nothing"
// (for better disambiguation)
anything += [form:pronthing] .
everything += [form:pronthing] .
nothing += [form:pronthing].


// CH, March 2002
// Adding the feature fwill on the word "will"
will += [form:fwill].
want += [form:fwant].

// CH, March 2002
// Adding the feature fcan on the word "can"
can += [form:fcan].


// Adding the feature fsuch on the word such
such += [form:fsuch].

// CH, 4th Feb.
// Adding the feature fmore on the word "more"
more += [form:fmore].


if += [form:fif].

// CH, 8th Jan.
// Adding the feature fpercent on the "word" "per cent" which is coded as a noun
percent += [percent:+].
per_cent += [percent:+]. //CB : idem for the multiword



// CH, 14th November
// Adding the feature fsince on the word "since" (can be conj or prep)
since += [form:fsince].




// CH 05th November
// Adding the feature fduring to the preposition during
during += [form:fduring, sc_pduring:+].



// CH 12th October
// Adding a feature cardpoint:+ to the words North South East West.
// They are tagged as noun (proper or common) which can be a probleme in the chunking of NP's
// e.g. The massive North Korean complex is analyzed as 2 nominal chunks where North is the nucleus 
// of the first one
North += [cardpoint:+].
north += [cardpoint:+].
South += [cardpoint:+].
south += [cardpoint:+].
West += [cardpoint:+].
west += [cardpoint:+].
East += [cardpoint:+].
east += [cardpoint:+].

// CB for galateas

vintage = adj .

// CH July 02
// Adding a feature fmake to the lemma "make"
make += [form:fmake].

// CH 7th November
// Adding a feature fsaid to the lemma "said" 
said += [form:fsaid].



// CH 24th October
// Adding a feature ftake to the forms of the verb take
take += [form:ftake].

// CH 24th October
// Adding a feature fplace to the form place in singular
place += [form:fplace].

// CH 8th October
// Adding feature form:fborn to "born" that is just taken as an adjective
born += [form:fborn].


// CH 24th September
// Adding the feature numer:+ to nouns like thousand, dozen, hundred ...
thousand += [numer:+].
hundred += [numer:+].
dozen += [numer:+].

// CH
// nouns that quantifies
number :	noun += [numer:+].
plenty		+= [numer:+].
bit :		noun += [numer:+].
// extracted from FN data (subset of Transparent Nouns class)
part :		 noun += [numer:+].
fragment :	  noun += [numer:+].
pile :		  noun += [numer:+].
heap :		  noun += [numer:+].
load :		  noun += [numer:+].
mass :		  noun += [numer:+].
abundance :	  noun += [numer:+].
myriad :	  noun += [numer:+].
plethora :	  noun += [numer:+].
quantity :	  noun += [numer:+].
number :	  noun += [numer:+].
pinch :		  noun += [numer:+].
amount :	  noun += [numer:+].
deluge :	  noun += [numer:+].
avalanche :	  noun += [numer:+].
flood :		  noun += [numer:+].
trickle	:	  noun += [numer:+].


// CH - transparent nouns that do not have quantity semantics
// this curious syntax enables to capture NADJ as well
type :		    ?[noun:+] += [transparent:+].
class :		    ?[noun:+] += [transparent:+].
kind :		    ?[noun:+] += [transparent:+].
sort :		    ?[noun:+] += [transparent:+].
variety :	    ?[noun:+] += [transparent:+].
specimen :	    ?[noun:+] += [transparent:+].
example :	    ?[noun:+] += [transparent:+].
case :		    ?[noun:+] += [transparent:+].
instance :	    ?[noun:+] += [transparent:+].
		    


// CH 14th September
// Adding a feature prefix:+ to some prefixes
anti += [prefix:+].
post += [prefix:+].
semi += [prefix:+].
non += [prefix:+].
pro += [prefix:+].
under += [prefix:+].
over += [prefix:+].
re += [prefix:+].
beta += [prefix:+].
ex += [prefix:+].
co += [prefix:+].




// CH 29th August
one += [form:fone, numer:+].

none += [numer:=+,negat:=+].

//cannot

cannot  :: aux += [contr_neg=+].


// CH 16th August
// To change all the wh-words in the lexicon.
// All where, when, are added the feature wh
// note: how is already categorized as adverb with feature wh.
where = adv[adv=+, wh=+, form=fwhere].
when = adv[adv=+, wh=+, form=fwhen].
why = adv[adv=+, wh=+, form=fwhy].
wherein = adv[adv=+, wh=+, form=fwherein].


// CH 19th September
// Adding a feature wh to the lemma wether

whether = conj[conj=+, wh=+, form=fwhether].



// CH 16th August
// Adding a feature fwhat to the lemma what
what += [form=fwhat].


// CH 15th October
// Adding a feature fwhich and wh to the lemma which
which += [form=fwhich, wh=+].


// CH 3rd August
// It is useless to try to disambiguate WH- words. So who will always be tagged as pron [wh:+, nom:+]
// Only in a later stage it will be possible to decide wether WHO is an interrogative pronoun or relative pronoun. To change in the lexicon.
// The first and 2nd  one corresponds to "whose"
// The 3nd one corresponds to one of the output of whom
// The 4th one correspondes to the other output of whom
// The 5th one to one of the output of who
// The  6th to the other output of who
whose: pron[gen:+] = pron[wh:+,form:fwho,gen:+] .
who : pron[gen:+] = pron[wh:+,form:fwho,gen:+].
who : pron[wh:+,obl:+] = pron[wh:+,form:fwho,obl:+].
whom = pron[wh:+,obl:+,form:fwho].
who : pron[rel:+] = pron[wh:+,form:fwho,obl:+,nom:+].
who : pron[wh:+,nom:+] = pron[wh:+,form:fwho,obl:+,nom:+].

she += [fem=+].
he  += [masc:+].
they += [pl:+].

// CH . Adding a special feature numerable:+ to words like "chapter", "line", "page".
// In order to deal properly things like "Chapter 2"
chapter : noun[noun:+] += [numerable:+].
page : noun[noun:+] += [numerable:+].
line : noun[noun:+] += [numerable:+].

// CH 6th Auguts
// Considering "no" as a quantifier in order to be coherent with some, any. 
no = quant[quant=+,form=fno].
none = quant[quant=+,form=fno].


// CH
// Several as a quantifier
several = quant[quant=+].

// CH 29th October
// Adding feature form:fso to the lemma "so"
so += [form:fso].


// Adding the feature flater to the lemma "late" form "later"
late : adv[compar:+] += [form=flater]. 

/"There" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the morpho-analyzer????\
/Agnes to change HMM tagger to include "There" as a pronoun\
/there does NOT agree with the verb so MAY NOT be the subject at all!\

there : adv[adv:+] += [form=fthere].

it : pron[pron:+] += [form=fit].

/Agnes to modify HMM tagger to ensure "but" is assigned the tag +Coord when\
/it is followed by a verb "He was happy but was tired"\
// CH adding a feature fbut to each form of but
but += [form=fbut].


/Shouldn't "do" be analysed as an auxiliary verb in the morpho-analyzer??\
/do : verb[verb:+] += [verb=+,aux=+].\
do : verb[verb:+] += [form=fdo].

/The feature "auxbh" is used for the verbs "be" and "have" whereas "fhave" is only used for the verb "have"\
have : verb += [auxbh=+,form=fhave].


/The feature "auxbh" is used for the verbs "be" and "have" whereas "fbe" is only used for the verb "be"\
be : verb += [auxbh=+,cop=+,form=fbe].


/CH Adding a "cop" feature to the copulative verbs, in order to be able to extract the predicative dependencies\
become : verb[verb:+] += [cop=+].
seem : verb[verb:+] += [cop=+].
feel : verb[verb:+] += [cop=+].
remain : verb[verb:+] += [cop=+].
// adding also the feature form:fgo to the forms of "go"
go : verb[verb:+] += [cop=+, form=fgo].
grow : verb[verb:+] += [cop=+].
turn : verb[verb:+] += [cop=+].

// CH Adding a "cop2" feature to copulative verbs (that also can be transitive "normal" verbs)
smell : verb[verb:+] += [cop2=+].
taste : verb[verb:+] += [cop2=+].
sound : verb[verb:+] += [cop2=+].
appear : verb[verb:+] += [cop2=+].
look : verb[verb:+] += [cop2=+].
get : verb[verb:+] += [cop2=+, form=fget].



up += [p_up:+].
about += [p_about:+, sc_pabout:+].
across += [p_across:+, sc_pacross:+].
ahead += [p_ahead:+].
along +=  [p_along:+].
around +=  [p_around:+, sc_paround:+].
apart += [p_apart:+].
aside += [p_aside:+].
away += [p_away:+].
back += [p_back:+].
behind += [p_behind:+,sc_pbehind:+].
by += [p_by:+, form:fby, sc_pby:+].
/"by" is used before present participles "by illegally leaving"\
/HOWEVER we don't want GV{by fleeing} despots!!\
down += [p_down:+, sc_pdown:+].
forth += [p_forth:+].
forward += [p_forward:+].
in = prep[p_in=+,form=fin, sc_pin:+].
into += [p_into:+, sc_pinto:+].
off += [p_off:+, sc_poff].
on += [p_on:+, sc_pon:+].
open += [p_open:+].
out += [p_out:+].
over += [p_over:+, sc_pover:+].
through += [p_through:+, sc_pthrough:+].
to = prep[form=finfto,p_to=+, sc_pto:+].
// we eliminate the other interpretation of TO. This has only the PREP category.

together += [p_together:+].
under += [p_under:+].

against += [sc_pagainst:+].

// CH
alongside += [form:falongside].

// CH 28th Agustt
// Assignment of the feature form:fbefore and form:fafter for the words before and after
before += [form:fbefore,time:+].
after += [form:fafter, time:+].
between += [form:fbetween].
/"before" is used before present participles "before realising"\
/GV{before reducing} their benefits - IS THIS CORRECT????\
//before : prep[prep:+] += [form:fbefore].

// Adding the feature feven to word "even"
even += [form:feven].

// CH, adding feature fwhile to word "while"
while += [form:fwhile,wh=+].

// CH Prepositons. Add a feature to all preposition that can govern a PP argument
aboard += [sc_paboard:+].

/"for" has a special use before present participles"\
for : prep[prep:+] += [form=ffor,sc_pfor:+].
of : prep[prep:+] += [form:fof,sc_pof:+].

/"without" is used before present participles "without realising"\
without : prep[prep:+] += [form:fwithout,sc_pwithout:+].


/"with" is used before present participle nouns "with housing etc a prob"\
/these are then chunked as GVs by mistake\
with : prep[prep:+] += [form:fwith,sc_pwith:+].


at : prep[prep:+] += [form=fat,sc_pat:+].
include : verb[verb:+,prog:+] += [form=fincluding].
since : prep[prep:+] += [form=fsince,sc_psince:+].
from : prep[prep:+] += [form=ffrom,sc_pfrom:+].
towards: prep[prep:+] += [sc_ptowards:+].
upon: prep[prep:+] += [sc_pupon:+].
onto: prep[prep:+] += [sc_ponto:+].
between: prep[prep:+] += [sc_pbetween:+].
within: prep[prep:+] += [sc_pwithin:+].
under: prep[prep:+] += [sc_punder:+].
among: prep[prep:+] += [sc_pamong:+].
above: prep[prep:+] += [sc_pabove:+].
//before: prep[prep:+] += [sc_pbefore:+].
after : prep[prep:+] += [sc_pafter:+].
beyond: prep[prep:+] += [sc_pbeyond:+].
beneath: prep[prep:+] += [sc_pbeneath:+].


// CH 28th September
// Adding the feature form:flike to "like".
// Feature like:+ is added in order to ensure compatibility with biotip version
like += [form:flike, sc_plike:+,like:+].

// CH Adding a "indspeech" feature to verbs that introduces free indirect speech
// to add in the fst (these verbs were not marked as vsay in Comlex
believe : verb[verb:+] += [indspeech=+]. 
feel : verb[verb:+] += [indspeech=+].
imagine : verb[verb:+] += [indspeech=+].
expect : verb[verb:+] += [indspeech=+].
presume : verb[verb:+] += [indspeech=+].
assume : verb[verb:+] += [indspeech=+].
remind: verb[verb:+] += [indspeech=+,iobj=+].
suggest: verb[verb:+] += [indspeech=+].
show: verb[verb:+] += [indspeech=+].
disagree: verb[verb:+] += [indspeech=+]. 
hope: verb[verb:+] += [indspeech=+]. 


// CH - They are also nouns that can introduce indspeech
// Eg. stories/rumours that Ford will announce a new model....
story : noun[noun:+] += [indspeech=+] .
rumour : noun[noun:+] += [indspeech=+] .

// CH To add in the fst 
// BEHIND is a particle for leave (not present in Comlex)
leave: verb[verb:+] += [p_behind:+].

// TEST
//speak: verb[verb:+] += [sc_pabout=+].

/"here" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the HMM tagger perhaps to include "here" as a pronoun\
/here : adv[adv:+] += [form=fhere].\


/not is used as an adverb to negate infinitive verbs - he decided not to go\
/to avoid all preceding adverbs from being included in the IV we need to distinguish just "not"\
not : adv[adv:+] += [form=fnot].


// CH adding ftoo to the adverb too
too : adv[adv:+] += [form:ftoo]. 



/here does NOT agree with the verb so MAY NOT be the subject at all!\
here : adv[adv:+] += [form=fhere].



// CH Adding the feature form:fthat to that even if it is tagged differently than conj.
that += [form:fthat].

/"those" is a relative pronoun which immediately precedes VPAP but not VPAST\
those : pron[pron:+] += [form=fthose].

// CH adding feautre form:fthis to the form this
this += [form:fthis].
these += [form:fthese].



/to allow only "and" in NP-> AP, conj, AP[first:~], noun[last]\
and : conj[conj:+] += [form:fand].


// CH adding the feater form:fable to the word able
able += [form:fable].


// CH adding feature form:for to OR
or : conj[conj:+] += [form:for].


// feature fhome on home
home += [form:fhome].


/for use in the marking rule to exclude "in" as an adj if followed\
//by another adj: "women in American universities are...\
//in : adj[adj:+] += [form=fin].


// CH 6th August
// whole is marked in order to construct quantifier the whole
whole: nadj[nadj:+] += [form:fwhole].


// CH 8th August
// forms each and other are marked in order to be able to construct "each other" as a whole (see adjust.xip).
// After correcting the lexicon, these features won't be useful anymore
// better typing of preperiod elements
each : quant[quant:+] += [form:feach,preperiod:+,predet:+,c_set:+].

current : nadj[nadj:+] += [preperiod=+, c_relat=+].
last : nadj[nadj:+] += [preperiod=+,c_relat:+].
//In order to make the categories of "next" and "last" coherent, we change the
// category of next (adj) to nadj
next = nadj[nadj:+,preperiod=+,c_relat=+].

// see above, each
every : quant[quant:+] += [preperiod:+,c_set:+].

// CH 31st October
// Adding the feature preperiod:+ to the lemma future, past
past = nadj[nadj:+,preperiod=+,c_relat:+].
future = nadj[nadj:+,preperiod=+,c_relat:+].
mid += [preperiod=+,c_absolut=+].



other: adj[adj:+] += [form:fother].


// CH 22 August
// Adding the features fhow fmany, and fmuch to how, many and much
how += [form:fhow].
many += [form:fmany].
much += [form:fmuch].
often += [form:foften].
few += [form:ffew].
long += [form:flong].
far += [form:ffar].

//required for composed adverbs such as "two weeks ago"
ago : adv[adv:+] += [form:fago].


speaker : noun[noun:+] += [form:fspeaker].

\( : punct += [form=fopar,strongbreak=+].
\) : punct += [form=fcpar].
\[ : punct += [form=fopar,strongbreak=+].
\] : punct += [form=fcpar].
\{ : punct += [form=fopar,strongbreak=+].
\} : punct += [form=fcpar].
- : punct += [form=fhyph,strongbreak=+].
: : punct += [form=fcolon,strongbreak=+].
; : punct += [form=fsemicolon,strongbreak=+].
\? : punct += [form=fquest]. // CH 16th August
\/ : punct += [form=fslash].  //CB
\^ : punct += [form=fcirc]. //CB


`` : punct[punct:+,quote:+] += [form=foquotes].
'' : punct[punct:+,quote:+] += [form=fcquotes].

/ "`" is an unknown character \
` : punct += ./needtospecifywhattypeofpunct!\




/**** ASSIGNING ADDITIONAL FEATURES TO ONE OR MORE LEMMATA **** \
/================================================================\


//The token "I" has only one morphological analysis namely a pronoun
//However, "I" may also be a roman numeral - NP{King George I} 
//{PRON;DIG}+[dig:+,pron:+,nom:+,personal:+,rom:+,rom:?,p1:+,sg:+,maj:+,toutmaj:+]
//I[pron:+] += dig[rom:+].
//PRON(2-2)+[dig:+,pron:+,nom:+,personal:+,rom:+,p1:+,sg:+,maj:+,toutmaj:+]
I : pron[pron:+, p1:+, sg:+, gen:~] += [dig:+,rom:+].
  



//to allow NP{Judge Fritz W. Alexander 2nd}
judge : noun[noun:+] += [title:+].


//required to exclude such adjectives from NPs such as NP{75 feet high}
//long : nadj[nadj:+] += [meas:+].
//wide : nadj[nadj:+] += [meas:+].
//high : nadj[nadj:+] += [meas:+].





//Quants which modify NPs starting with a determiner
all : quant[quant:+] += [predet:+].
half : quant[quant:+] += [predet:+].
// CH 4th September
// We have to start with the most specific case. If it fails, the general case is then applied
both : quant[quant:+] += [predet:+,form:fboth].
both += [form:fboth].

//amount = quant[quant:+, predet:+] .

// CH 13th September
// Considering neither as a quantifier only and adding the feature form:fneither
// The feature predet:+ is added in order to avoid the construction of an NP just done with neither.
neither = quant[form:fneither,quant:+, predet:+, negat:+].

//ADDITIONAL PROPER NOUNS
noriega : noun[noun:+] += [proper:+].

//feature "posthour" to A.M. etc. CB TO CHECK WITH TOKENISATION

AM : noun +=[posthour=+].
A.M. : adv +=[posthour=+].
a.m. : adv +=[posthour=+].
PM : noun +=[posthour=+].
P.M. : adv +=[posthour=+].
p.m. : adv +=[posthour=+].
GMT  : adv +=[posthour=+].
pm : noun +=[posthour=+].
am : noun +=[posthour=+].





//the feature "period" is used rather than "time" which
//causes NPs such as "The most dangerous day+time" to be excluded
//as well as "The celebration Monday"!

second : noun += [period=+] .
minute : noun += [period=+].
hour : noun += [period=+].
day : noun += [period=+].
night : noun += [period=+].
week : noun += [period=+].
month : noun += [period=+].
year : noun += [period=+].
decade : noun += [period=+].
century : noun += [period=+].
millenium : noun += [period=+].

//This feature is used in conjunction with the sequence marking rule
//which assigns the feature time to these tokens only when they
//are preceded by a token bearing the feature preperiod
//This allows NP{last Spring} and also NP{The Prague Spring}
//to avoid NP{Fred} NP{Winters}
Spring : noun[pl:~] += [period=+].
spring : noun[pl:~] += [period=+].
Summer : noun[pl:~] += [period=+].
summer : noun[pl:~] += [period=+].
Autumn : noun[pl:~] += [period=+].
autumn : noun[pl:~] += [period=+].
Winter : noun[pl:~] += [period=+].
winter : noun[pl:~] += [period=+].

// CB CORR !!!!  A VERIFIER

Spring : nadj[pl:~] += [period=+].
spring : nadj[pl:~] += [period=+].
Summer : nadj[pl:~] += [period=+].
summer : nadj[pl:~] += [period=+].
Autumn : nadj[pl:~] += [period=+].
autumn : nadj[pl:~] += [period=+].
Winter : nadj[pl:~] += [period=+].
winter : nadj[pl:~] += [period=+].

//time : noun += [period=+].
 
Sunday : noun += [time=+,period=+,day=+,guess=~].
Monday : noun += [time=+,period=+,day=+,guess=~].
Tuesday : noun += [time=+,period=+,day=+,guess=~].
Wednesday : noun += [time=+,period=+,day=+,guess=~].
Thursday : noun += [time=+,period=+,day=+,guess=~].
Friday : noun += [time=+,period=+,day=+,guess=~].
Saturday : noun += [time=+,period=+,day=+,guess=~].

sunday = noun[time=+,period=+,day=+,guess=~].
monday = noun[time=+,period=+,day=+,guess=~].
tuesday = noun[time=+,period=+,day=+,guess=~].
wednesday = noun[time=+,period=+,day=+,guess=~].
thursday = noun[time=+,period=+,day=+,guess=~].
friday = noun[time=+,period=+,day=+,guess=~].
saturday = noun[time=+,period=+,day=+,guess=~].

SUNDAY : noun += [time=+,period=+,day=+,guess=~].
MONDAY : noun += [time=+,period=+,day=+,guess=~].
TUESDAY : noun += [time=+,period=+,day=+,guess=~].
WEDNESDAY : noun += [time=+,period=+,day=+,guess=~].
THURSDAY : noun += [time=+,period=+,day=+,guess=~].
FRIDAY: noun += [time=+,period=+,day=+,guess=~].
SATURDAY : noun += [time=+,period=+,day=+,guess=~].


//Sun : noun += [time=+,period=+,day=+,guess=~]. //CB 
Mon : noun += [time=+,period=+,day=+,guess=~].
Tue : noun += [time=+,period=+,day=+,guess=~].
Wed : noun += [time=+,period=+,day=+,guess=~].
Thur : noun += [time=+,period=+,day=+,guess=~].
Frid : noun += [time=+,period=+,day=+,guess=~].
Sat  : noun += [time=+,period=+,day=+,guess=~].

Jan : noun += [time=+,month=1,period=+,guess=~].
Feb : noun += [time=+,month=2,period=+,guess=~].
Mar : noun += [time=+,month=3,period=+,guess=~].
Apr : noun += [time=+,month=4,period=+,guess=~].
Jun : noun += [time=+,month=6,period=+,guess=~].
Jul : noun += [time=+,month=7,period=+,guess=~].
Aug : noun += [time=+,month=8,period=+,guess=~].
Sep : noun += [time=+,month=9,period=+,guess=~].
Sept : noun += [time=+,month=9,period=+,guess=~].
Oct : noun += [time=+,month=10,period=+,guess=~].
Nov : noun += [time=+,month=11,period=+,guess=~].
Dec : noun += [time=+,month=12,period=+,guess=~].


Jan. : noun += [time=+,month=1,period=+, guess=~].
Feb. : noun += [time=+,month=2,period=+,guess=~].
Mar. : noun += [time=+,month=3,period=+,guess=~].
Apr. : noun += [time=+,month=4,period=+,guess=~].
Jun. : noun += [time=+,month=6,period=+,guess=~].
Jul. : noun += [time=+,month=7,period=+,guess=~].
Aug. : noun += [time=+,month=8,period=+,guess=~].
Sept.: noun += [time=+,month=9,period=+,guess=~].
Oct. : noun += [time=+,month=10,period=+,guess=~].
Nov. : noun += [time=+,month=11,period=+,guess=~].
Dec. : noun += [time=+,month=12,period=+,guess=~].

January : noun += [time=+,month=1,period=+,guess=~].
February : noun += [time=+,month=2,period=+,guess=~].
March : noun += [time=+,month=3,period=+,guess=~].
April : noun += [time=+,month=4,period=+,guess=~].
May : noun += [time=+,month=5,period=+,guess=~].
June : noun += [time=+,month=6,period=+,guess=~].
July : noun += [time=+,month=7,period=+,guess=~].
August : noun += [time=+,month=8,period=+,guess=~].
September : noun += [time=+,month=9,period=+,guess=~].
October : noun += [time=+,month=10,period=+,guess=~].
November : noun += [time=+,month=11,period=+,guess=~].
December : noun += [time=+,month=12,period=+,guess=~].

january = noun[time = +,month=1,period=+,guess=~].
february = noun[time=+,month=2,period=+,guess=~].
//march = noun[time=+,month=3,period=+,guess=~].
//april = noun[time=+,month=4,period=+,guess=~].
//may = noun[time=+,month=5,period=+,guess=~].
//june = noun[time=+,month=6,period=+,guess=~].
july = noun[time=+,month=7,period=+,guess=~].
//august = noun[time=+,month=8,period=+,guess=~].
september = noun[time=+,month=9,period=+,guess=~].
october = noun[time=+,month=10,period=+,guess=~].
november = noun[time=+,month=11,period=+,guess=~].
december = noun[time=+,month=12,period=+,guess=~].


"0%d": dig += [day:=+].
"%d" : dig += [day:=+].
"1%d" : dig += [day:=+].
"2%d" : dig += [day:=+].
"2%d" : dig += [day:=+].
"30" : dig += [day:=+].
"31" : dig += [day:=+].

"20%d%d" : dig += [year=+].

// CH adding features on temporal elements
yesterday = noun[tempexpr:+].
today = noun[tempexpr:+].
tomorrow = noun[tempexpr:+].
tonight = noun[tempexpr:+].

right_now = adv[tempexpr:+,notly:+,c_relat:+].
now = adv[tempexpr:+,notly:+,c_relat:+].
soon = adv[tempexpr:+,notly:+,c_relat:+].

first = adv[notly:+].


noon : noun += [hour:+].
midnight : noun += [hour:+].
midday : noun += [hour:+].
o'clock : adv += [form:foclock].


// CH
Easter : noun += [tempexpr:+,feast_event:+].
Christmas : noun += [tempexpr:+,feast_event:+].
Xmas : noun += [tempexpr:+,feast_event:+].
Thanksgiving : noun += [tempexpr:+,feast_event:+].
Halloween : noun += [tempexpr:+, feast_event:+].
New_Year's_Day : noun += [tempexpr:+,feast_event:+].
armistice : noun += [tempexpr:+, feast_event:+] .


//J-C +=[form=fjc].
//J-C. +=[form=fjc].
//J.-C +=[form=fjc].
//J.-C. +=[form=fjc].
//JC +=[form=fjc].


//Required for ADVs such as ADV{Sunday night}
morning : noun += [posttime=+,period=+].
afternoon : noun += [posttime=+,period=+].
evening : noun += [posttime=+,period=+].
night : noun += [posttime=+,period=+].


//VERB PARTICLES THAT ARE TAGGED AS ADVERBS
//Many verb particles are tagged as adverbs and get included in chunk
//of following verb in sentence: "The group that broke FV{away was} ...." 
//By including the "part" feature they may be excluded from verb chunks
//while still allowing other adverbs to be included

aboard : adv += [vpart=+].
along : adv += [vpart=+].
around : adv += [vpart=+].
aside : adv += [vpart=+].
away : adv += [vpart=+].
back : adv += [vpart=+].
bottom : adv += [vpart=+].
by : adv += [vpart=+].
down : adv += [vpart=+].
forth : adv += [vpart=+].
//in : adv += [vpart=+]."in"notincludedasrulebelowchangesitsPOSto"prep"
off : adv += [vpart=+].
out : adv += [vpart=+].
over : adv += [vpart=+].
together : adv += [vpart=+].
through : adv += [vpart=+].
up : adv += [vpart=+].

// CB: missing subcat 

meet : noun += [sc_pwith=+].
seem : verb += [subj_cont=+].


/**** REPLACING SEVERAL MORPHOLOGICAL ANALYSES WITH JUST ONE****\
/================================================================\




//Replaces all possible analyses of "but" output by the morphological analyser
//with "conjunction" to avoid foll issue
//1248>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} !!FV{but was} NFV{delayed}
//1>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} SC{BG{but} FV{was}} NFV{delayed} 
//but = conj[sub:+].


/"another" as a determiner is indefinite AGNES \
another : det[det] += [indef:+].

