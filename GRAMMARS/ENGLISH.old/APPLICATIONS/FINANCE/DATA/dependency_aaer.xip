DependencyRules:

///////// wrong dependencies

//According to the complaint, Ehmann also took affirmative acts to mislead First Merchants' outside auditors.
//HEAD(First Merchants,First Merchants ')
//OBJ_POST(mislead,First Merchants)
//OBJ-N(mislead,First Merchants)
//MOD_POST(First Merchants,auditors)
//NP{NOUN{First Merchants} '}

| np#1{noun#2, #3[poss,gen]} |
if ( HEAD(#2,#1) & ^OBJ(#4,#2) & MOD[post](#2,#5) & ~PREPD(#5,?) )
   OBJ(#4,#5).

| np#1{noun#2, #3[poss,gen]} |
if ( HEAD(#2,#1) & ^OBJ-N(#4,#2) & MOD[post](#2,#5) & OBJ(#4,#5) & ~PREPD(#5,?) )
   OBJ-N(#4,#5).



//According to the complaint, Bordynuik was aware of, or was reckless in not being aware of, GAAP concerns surrounding the reported value of the media credits in advance of the company's periodic reports that included the financial statements filed with the Commission, yet falsely certified that the company's financial statements for those reporting periods were filed in conformity with GAAP.
//OBJ-N(certified,Commission)
//PREPD(Commission,with)

if ( ^OBJ-N(#1,#2) & PREPD(#2,#3[lemme:with]) )
    ~.

//Also according to the complaint, when Todd recognized that he could not close the gap simply by increasing the amount of PC sales to high-risk customers, he allegedly authorized a wider variety of improper accounting actions, all of which failed to comply with generally accepted accounting principles (GAAP).
//HEAD(actions,a wider variety)
//NP{a AP{wider} variety} PP{of NP{AP{improper} AP{accounting} actions}}

| #3{?+,#2noun[last]} |
if ( ^HEAD(#2,#3) )
    HEAD[nphead=+](#2,#3).

| #3{#2noun[last]} |
if ( ^HEAD(#2,#3) )
    HEAD[nphead=+](#2,#3).

| pp#1{#2[fraud,first],?{?*,#3[last]}} |
if ( ^HEAD[nphead:~](#3,#1) )
    HEAD[nphead=+](#3,#1).

//HEAD(Enron,Enron 's)
//NP{Enron 's}

| np#1{#2,#3[gen,poss]} |
if ( ^HEAD[nphead:~](#2,#1) )
   HEAD[nphead=+](#2,#1).
     

if ( ^HEAD[nphead:~](#1,#2) )
    HEAD[pphead=+](#1,#2).


/////////////////////////// missing dependencies \\\\\\\\\\\\\\\\\\\\\\\

//Finally, the Commission alleges that Accelr8 failed to amortize capitalized software development costs, causing Accelr8 to understate amortization expense by ,000 in fiscal year 1998 and by ,000 for the nine months ended April 30, 1999.
//IV{to understate} NP{amortization expense}

| iv{?, #1[fraud,last]}, np{?*,#2[last,noun]} |
if ( ~OBJ(#1,#2) )
    OBJ[aaer-dep=+](#1,#2).

//"According to the SEC’s complaint, between May 2010 and January 2011, in what was its first year as a U.S. public company, Keyuan systematically failed to disclose in its SEC filings numerous material related party transactions, as required by U.S. Generally Accepted Accounting Principles (“GAAP”) and Commission rules and regulations. "
//IV{to disclose} PP{in NP{its SEC filings}} NP{numerous AP{ADJ{material related}} party transactions} 

| ?{?*,#1[verb,lemme:disclose]}, pp, np{?*, #2[last]} |
    OBJ[aaer-dep=+](#1,#2).

if ( ^OBJ[aaer-dep](#1,?) & OBJ(#1,?) )
    ~.

if ( ^OBJ[aaer-dep](#1,?) & OBJ-N(#1,?) )
    ~.


//The Commission also charged PairGain-a designer, manufacturer, and distributor of telecommunication products-and two of its top executives with failing to properly account for and timely disclose what initially appeared to be investment losses from unauthorized trading, but in reality were thefts by Goldinger.
//GV{failing} IV{to properly account}

| gv{#1[lemme:fail]}, iv{?+,#2[last]} |
if ( ~OBJ(#1,#2) )
   OBJ[aaer-dep=+,infinit=+,post=+](#1,#2).


//GV{failing} IV{to properly account} for and IV{timely disclose}

| gv{#1[lemme:fail]}, iv{?+,#2[last]}, ?, ?[lemme:and], iv{?*,#3[last]} |
if ( OBJ[post,infinit](#1,#2) )
   OBJ[aaer-dep=+,infinit=+,post=+](#1,#3).

//| gv{#1[lemme:fail]}, iv{?+,#2[lemme:properly,fraudadv=+],#3[last]} |
//  ~


//The Complaint alleged that the defendants misrepresented and overstated the actual value of certain assets, known as media credits, by almost 1,000%, in an effort to bolster its balance sheet.
//SC{BG{that} NP{the defendants} FV{misrepresented}} SC{and FV{overstated}} NP{the AP{actual} value}

| sc{?+, fv{#1[fraud]}}, sc{?, fv{#2[fraud]}}, np{?*,#3[last]} |
    OBJ[aaer-dep=+](#1,#3),OBJ[aaer-dep=+](#2,#3). 

// Jiang and Xie are alleged to have knowingly failed to establish proper internal controls at UTG, caused documents to be falsified, and falsely certified to UTG's internal controls for 2010.
//IV{to have knowingly failed} IV{to establish} NP{AP{proper} internal controls} 


| iv{?+,#1[lemme:fail,last]}, iv{?*,#2[last]}, np{?*,#3[last]} |
if ( ~OBJ(#2,#3) )
    OBJ[aaer-dep=+](#2,#3).

//Jiang and Xie are alleged to have knowingly failed to establish proper internal controls at UTG, caused documents to be falsified, and falsely certified to UTG's internal controls for 2010.
//FV{caused} NP{documents} IV{to be falsified} 

| ?{?*,#1[lemme:cause]}, np{?*,#2[last]}, iv{?[lemme:to],?[lemme:be],#3[last]} |
    if ( ~OBJ-N(#3,#2) )
    OBJ-N[aaer-dep=+](#3,#2).

// The Complaint alleges that in the first three quarters of 1995, the Defendants improperly reported at least $8,589,338, $14,878,115 and $16,593,328 of purported bill and hold sales in ABS' Forms 10-Q, with the following results: 1) pre-tax income, net income and earnings per share were overstated by at least 43.90% to 129.61%; 2) sales were overstated by at least 6.46% to 21.16%; and 3) accounts receivable were overstated by at least 5.93% to 23.64%.
//NUCL_SUBJCOMPL(were,overstated)
//SUBJ-N_PRE(were,sales)
//NP{sales} FV{were} NFV{overstated}

| np{#1}, fv{#2[lemme:be]}, nfv{#3[past]} |
if ( ^SUBJ-N(#2,#1) & NUCL(#2,#3) )
    OBJ-N[aaer-dep=+](#3,#1).

//The Complaint also alleges that senior management falsified Solucorp's financial statements by improperly recognizing as revenue license fees that were subject to material contingencies.
//improperly GV{recognizing}

| #1[fraudadv], gv{#2} |
if ( ~$1(#2,#1) & ~$2(#2,#1) )
    MANNER[pre=+,aaer-dep=+](#2,#1).

//The SEC's complaint further alleges that PACCAR and PACCAR Financial Corp. failed to maintain accurate books and records regarding their impaired loans and leases, causing them to improperly identify and disclose loans and leases for impairment.
//IV{to improperly identify}

| iv{?*, #1[fraudadv], #2[verb,last]} |
if ( ~$1(#2,#1) & ~$2(#1,#2) )
    MANNER[pre=+,aaer-dep=+](#2,#1).

//The complaint further alleges that Daws led Cylink fraudulently to recognize revenue on a fourth quarter fiscal 1997 transaction that was not final because Cylink's customer had not provided a letter of credit to support the order.
//fraudulently IV{to recognize}

| #1[fraudadv], iv{?,#2[verb,last]} |
if ( ~$1(#2,#1) & ~$2(#1,#2) )
    MANNER[pre=+,aaer-dep=+](#2,#1).


////////////////////////// allege words created in context \\\\\\\\\\\\\\\\

//The Securities and Exchange Commission today charged S. Jay Goldinger, once a well-known Beverly Hills-based money manager, with stealing $15.9 million from the Tustin, California-based public company PairGain Technologies, Inc.
//SUBJ_PRE(charged,Securities and Exchange Commission)

| #1[allege=+] |
if ( SUBJ[pre](#1[lemme:charge],#2[complaintref]) )
   ~.

//The Commission's action charged Mercer with forging the signature of his former partner on audit opinions for the financial statements of three publicly-held companies: Computerized Thermal Imaging, Inc., Son-Tech, Inc., and Technology Selection, Inc. In issuing these audit opinions Mercer signed the name of Ted H. Pierce & Associates, an American Fork, Utah, accounting firm, without the firm's knowledge or authorization.
//SUBJ_PRE(charged,action)
//MOD_PRE(action,Commission)

| #2[allege=+] |
if ( SUBJ[pre](#1[lemme:charge],#2) & MOD[pre](#2,#3[complaintref]) )
   ~.

// Sentences that contain allegation

| #1[allege] |
if ( ^SENT(#2) )
    SENT[allege=+](#2).


////////////////////////// fraud words created in context  \\\\\\\\\\\\\\\\\


//OBJ_POST_INFINIT(failed,disclose)

| #1[fraud=+,fail=+] |
if ( OBJ[post,infinit](#2[lemme:fail],#1) )
    ~.

//MOD_POST_INFINIT(failed,obtain)

| #1[fraud=+,fail=+] |
if ( MOD[post,infinit](#2[lemme:fail],#1) )
    ~.

//IV{to improperly identify}

| iv#1{?*, ?[fraudadv], #2[fraud=+]} |
    ~.


// FV{began} falsely GV{reporting}

| #1[fraudadv], gv{#2[fraud=+]} |
    ~.

//MANNER_PRE(described,falsely)

| #1[fraud=+] |
if ( MANNER[pre,sentence:~](#1,#2[fraudadv]) )
    ~.

//exception: fail

| #1[lemme:fail,fraud=~] |
  ~.


///////////// complaintref created in context \\\\\\\\\\\\\\

//According to the complaint, in January 2011, Crane and his Cambridge, Massachusetts-based accounting firm were sanctioned by the PCAOB, which permanently revoked his firm's registration and barred him from being associated with a registered accounting firm or being associated with any public company in an accounting or financial management capacity.
//SUBJ-N(sanctioned,PCAOB)

| #2[complaintref=+] |
if ( ( SUBJ-N(#1[complaintref],#2) |  SUBJ(#1[complaintref],#2) ) & ORGANISATION(#2) )
    ~.


/////////////////////////// parties \\\\\\\\\\\\\\\\\\\\\

if ( PERSON(#1) )
    PARTY(#1).

//Securities and Exchange Commission v. Volt Information Sciences, Inc. and Debra L. Hobbs , Civil Action No. 13-CV-237 (S.D.N.Y.) and 13-CV-236 (S.D.N.Y.).

if ( PREPD(#1,#2[lemme:v\.]) & ORGANISATION(#1[complaintref:~]) )
    PARTY(#1).

if ( PREPD(#1,#2[lemme:V\.]) & ORGANISATION(#[complaintref:~]1) )
    PARTY(#1).

//SECURITIES AND EXCHANGE COMMISSION V. SOLUCORP INDUSTRIES LTD.; JOSEPH S. KEMPROWSKI; PETER R. MANTIA; JAMES G. SPARTZ; ROBERT KUHN; VICTOR HERMAN; ARLE PIERRO; AND W. BRYAN FAIR, 99 Civ.
//MOD_POST(SECURITIES AND EXCHANGE COMMISSION,SOLUCORP INDUSTRIES LTD.)
//PREPD(INDUSTRIES,V.)
//ORGANISATION_SEC-SP_INSENT(SOLUCORP INDUSTRIES LTD.)
//PP{V. NP{NOUN{SOLUCORP INDUSTRIES LTD.}}}

| #1noun{?*,#2,?*} |
if ( ORGANISATION(#1[complaintref:~]) & PREPD(#2,#3[lemme:v\.]) & ~PARTY(#1) )
    PARTY(#1).


//SEC Charges Volt Information Sciences, Inc. and Two Former Officers with Securities Fraud.

if ( OBJ(#1[lemme:charge],#2) & ORGANISATION(#2) )
    PARTY(#2).

if ( OBJ(#1[lemme:sue],#2) & ORGANISATION(#2) )
    PARTY(#2).

// exception: The SEC's investigation, which is continuing, was conducted by Fuad Rana, Avron Elbaum, and Melissa A. Robertson.

| #1[lemme:investigation] |
if ( ^PARTY(#2) )
    ~.

| #1[lemme:litigation] |
if ( ^PARTY(#2) )
    ~.

| #1[lemme:judge] |
if ( ^PARTY(#2) )
    ~.

// The SEC's litigation continues against Neil.
//PREPD(Neil,against)

if ( PREPD(#1,#2[lemme:against]) & PERSON(#1) )
    PARTY(#1).

| #3{?,#1} |
if ( PREPD(#1,#2[lemme:against]) & PERSON(#3) )
    PARTY(#3).



// PARTY full name

| #1[initial]{?+[strongbreak:~]} |
if ( ^PARTY(#1) & PERSON(#1) )
    PARTY[full-name=+](#1).

| #1{#2[first,title:~], ?[strongbreak:~], #3[last,title:~]} |
if ( ^PARTY[full-name:~](#1) & PERSON(#1) )
    PARTY[full-name=+](#1).


| #1{#2[first,title:~], #3[last,title:~]} |
if ( ^PARTY(#1) & PERSON(#1) )
    PARTY[first-last-name=+](#1).

| #1[title] |
if ( ^PARTY(#1) & PERSON(#1) )
    PARTY[title=+](#1).

| #1{?*,?[orgend],?*} |
if ( ^PARTY(#1) & ORGANISATION(#1) )
    PARTY[full-name=+](#1).


| #1{?*,?[orghead],?*} |
if ( ^PARTY(#1) & ORGANISATION(#1) )
    PARTY[full-name=+](#1).

if ( ORGANISATION[norm](#1,#2) & ^PARTY[full-name:~](#2) )
    PARTY[full-name=+](#2).

//Mr. Shabudin -> Shabudin
//PARTY_TITLE(Mr. Shabudin)
//NOUN{Mr. Shabudin}

| noun#1{#2[title],#3} |
if ( ^PARTY[title](#1) )
    PARTY[title=~](#3).


//////////// DATES \\\\\\\\\\\

// XIP: DATE; TIMEX3

// TIMEX3 and DATE in sentences where there is no exact date

// a sentence must have a verb - this is a different definition of insent

if ( ^TIMEX3[insent](#1) )
   TIMEX3[insent=~](#1).

if ( ^DATE[insent](#1) )
   DATE[insent=~](#1).

| #1[verb] | 
if ( ^TIMEX3(#2) )
   TIMEX3[insent=+](#2).

| #1[verb] | 
if ( ^DATE(#2) )
   DATE[insent=+](#2).

if ( TIMEX3[insent](#1) | DATE[insent](#1) )
    PERIOD-OF-FRAUD(#1).

//dates before 1980 and after 2014 are not PERIOD-OF-FRAUD

| ?[lemme:198\?,!pof=+] |
  ~.

| ?[lemme:199\?,!pof=+] |
  ~.

| ?[lemme:200\?,!pof=+] |
  ~.

| ?[lemme:2011,!pof=+] |
  ~.

| ?[lemme:2012,!pof=+] |
  ~.

| ?[lemme:2013,!pof=+] |
  ~.

| ?[lemme:2014,!pof=+] |
  ~.



if ( ^PERIOD-OF-FRAUD(#1[date,pof:~]) )
   ~.

// precise dates - containing days - are not PERIOD-OF-FRAUD
| #1[day] |
if ( ^PERIOD-OF-FRAUD(#1) & ~TEMP(#2[lemme:end],#1) )
    ~.

//exceptions:
//Securities Exchange Act of 1934 
//LAW(Securities Exchange Act)

if ( ^PERIOD-OF-FRAUD(#2) & LAW(#1) )
    ~. 

// temporal adverbs are not PERIOD-OF-FRAUD -> PERIOD-OF-FRAUD should contain a digit

| #1[percdig] |
if ( ^PERIOD-OF-FRAUD(#1) )
   PERIOD-OF-FRAUD[dig=+](#1) .

| #1[dig] |
if ( ^PERIOD-OF-FRAUD(#1) )
   PERIOD-OF-FRAUD[dig=+](#1) .

if ( ^PERIOD-OF-FRAUD[dig:~](#1) )
   ~.

// sentences containing dates of being in a position
// Deary, who was promoted to president and CEO of Peritus on August 17, 1998, and had been a director since 1991, resigned as an officer and director on November 3, 1998.
//TEMP(been,#1since 1991)
//NUCL_SUBJCOMPL(been,director)
//PERIOD-OF-FRAUD(#1since 1991)
  
if ( ^PERIOD-OF-FRAUD(#1) & TEMP(#2,#1) & NUCL[subjcompl](#2,#3[posit]) )
    ~.

// Date in the title
//SEC v. ALLEN K. DEARY AND DENNIS A. FICHTER, U.S. District Court for the District of Massachusetts, No. (April , 2000)
//INS{( NP{NOUN{April , 2000}} )}}

| ins{ ?, #1{#2{?}}, ?} |
if ( ^PERIOD-OF-FRAUD(#1) )
    ~.

//Peritus, based in Westborough, Massachusetts, sells, among other things, Year 2000 software licenses and services.
//TEMP_PRE(licenses,Year 2000)

if ( ^PERIOD-OF-FRAUD(#1) & TEMP[pre](#2[lemme:license],#1) )
    ~.

// Date related to the history of the company
//Schick has been STI's CEO and Chairman since he founded the Company in 1992.
//TEMP_POST(founded,in 1992)

if ( TEMP[post](#1[company],#2) & ^PERIOD-OF-FRAUD(#2) )
    ~.

//Accounting and Auditing Enforcement Release No. 1923 

| #1[lemme:no\.], #2 |
if ( ^PERIOD-OF-FRAUD(#2) )
    ~.

//Date of legal act
//A jury convicted White on all criminal charges in November 1997, and on June 30, 1999 the court sentenced him to 57 months imprisonment and ordered him to pay ,475,898 in restitution.
//TEMP_POST(convicted,in November 1997)
//PERIOD-OF-FRAUD(in November 1997)

if ( TEMP(#1[legal-act],#2) & ^PERIOD-OF-FRAUD(#2) )
   ~.

//Periods in days/months, etc  tempexpr:+,period:+
//PERIOD-OF-FRAUD(to 57 months)
//PP{to NP{57 months}}

| pp#1{?, np{?+, #2[tempexpr:+,period:+]}} |
if ( ^PERIOD-OF-FRAUD(#1) )
   ~.

//PERIOD-OF-FRAUD(500 hours)
//NP{500 hours}

| np#1{?+, #2[tempexpr:+,period:+]}} |
if ( ^PERIOD-OF-FRAUD(#1) )
   ~.

//a period of fraud is never in parentheses

//INS{( NP{S.D.N.Y. 1999} )}

| ?{?*,#1}, ?[paren,form:fcpar] |
if ( ^PERIOD-OF-FRAUD(#1) )
   ~.



// final: eliminate doubles

if ( ( ^DATE(#1) | ^TIMEX3(#1) ) & PERIOD-OF-FRAUD(#1) )
    ~.

/////////////////////////// allegations \\\\\\\\\\\\\\\\\\\\\


| #3[allege] |
if ( OBJ[sentence:~](#1[fraud,fail],#2) & HEAD[nphead](#2,#4) )
    ALLEGATION[fail=+](#1,#4).

| #3[allege] |
if ( MOD[pre,sentence:~](#1,#2[fraud,fail]) )
    ALLEGATION[fail=+](#2,#1).


| #3[allege] |
if ( OBJ-N[sentence:~](#1[fraud,fail],#2) & ~OBJ[sentence:~](#1[fraud,fail],#4) & HEAD[nphead](#2,#4) )
    ALLEGATION[fail=+](#1,#4).

// transitive verbs
| #3[allege] |
if ( OBJ[sentence:~](#1[fraud,fail:~],#2) & HEAD[nphead](#2,#4) )
    ALLEGATION(#1,#4).



| #3[allege] |
if ( MOD[pre,sentence:~](#1,#2[fraud,fail:~]) & HEAD[nphead](#1,#4)  )
    ALLEGATION(#4).

| #3[allege] |
if ( HEAD[nphead](#1[fraud,fail:~],#2) & #1~:#2 & $1(#1,#4[det:~]) )
    ALLEGATION(#2).

//ALLEGATION(( 2 ) materially overstated revenues)
//ALLEGATION(materially overstated)
//HEAD(revenues,( 2 ) materially overstated revenues)
//HEAD(overstated,materially overstated)
//NP{DIG{( 2 )} AP{materially overstated} revenues} 

| np#1{?+, #2, #3} |
if ( ^ALLEGATION(#2) & ALLEGATION(#1) )
   ~.


//PP{of NP{these AP{improper} payments}}
//ALLEGATION(these improper payments)
//ALLEGATION(of these improper payments)

| pp#1{?, np#2} |
if ( ^ALLEGATION(#1) & ALLEGATION(#2) )
    ~.

//NP{AP{improperly reclassified} expenses}

| np#1{ap#4{#2[fraud,first],?+}, ?+} |
if ( ^ALLEGATION(#4) )
    ALLEGATION(#1).



| #3[allege] |
if ( PREPD(#1,#2[fraud,fail:~]) & HEAD[nphead](#1,#4) )
    ALLEGATION(#4).

//The SEC's complaint further alleges that from 2005 through 2008, through its Russian subsidiary Diebold Self-Service Ltd., Diebold paid bribes on the sale of ATMs to private banks in Russia.
//OBJ-N(paid,bribes)

| #3[allege] |
if ( OBJ[sentence:~](#1,#2[noun,fraud]) )
    ALLEGATION(#1,#2).


| #3[allege] |
if ( OBJ-N[sentence:~](#1[fraud,fail:~],#2) & ~OBJ[sentence:~](#1[fraud,fail:~],#4) & HEAD[nphead](#2,#4) )
    ALLEGATION(#1,#4).


//As alleged in the complaint, Diebold executives in charge of the company's operations in Asia knew of these improper payments, which were falsely recorded in Diebold's books and records as training or other legitimate business expenses.
//ALLEGATION(these improper payments)
//ALLEGATION(recorded,these improper payments)
//ALLEGATION(recorded,of these improper payments)

if ( ^ALLEGATION(#2) & ALLEGATION(#1,#2) )
    ~.

//ALLEGATION(recorded,these improper payments)
//ALLEGATION(recorded,of these improper payments)

| #1pp{?, #2np} |
if ( ^ALLEGATION(#3,#1) & ALLEGATION(#3,#2) )
    ~.



//"The SEC alleges that China MediaExpress, which purports to operate a television advertising network on inter-city and airport express buses in the People's Republic of China, began falsely reporting significant increases in its business operations, financial condition, and profits almost immediately upon becoming a publicly-traded company through a reverse merger."

//falsely GV{reporting}

| #1[fraudadv], gv{#2[fraud]} |
if ( ^ALLEGATION(#2,#3) )
    ALLEGATION(#1,#2,#3).

//Further, prior to June 2011 the Commission alleges that the defendants falsely described UTG's business organization, failing to disclose that UTG had transferred certain subsidiaries to third parties pursuant to agreements designed to give UTG the economic benefits of ownership, and UTG materially overstated its revenues and profits in its quarterly reports in 2010.
//ALLEGATION(falsely,described)
//OBJ_POST(described,organization)
//HEAD(organization,UTG 's business organization)

| #5{#1,#2} |
if ( ^ALLEGATION(#1,#2) & OBJ(#2,#3) & HEAD[nphead](#3,#4) )
    ALLEGATION(#5,#4).

/
//create the false appearance 
//ALLEGATION(the false appearance)
//HEAD(appearance,the false appearance)
//OBJ_POST(create,appearance)
//OBJ-N(create,appearance)

if ( ^ALLEGATION(#1) & HEAD[nphead](#2,#1) & ( OBJ(#3,#2) | OBJ-N(#3,#2) ) )
    ALLEGATION(#3,#1).
\

// delete pp ALLEGATIONs except when the HEAD is [fraud]
//The SEC alleges that contrary to[fraud] JPMorgan's accounting policy, Martin-Artajo instructed Grout on March 30 to wait for better prices after the close of trading in London in the hope that activity in the U.S. markets could support better marks for SCP's positions.

| pp#1{#2[fraud:~],?+} |
if ( ^ALLEGATION(#1) )
    ~.

| pp#1{#2[fraud,first],#3} |
if ( ALLEGATION(#1) & ^ALLEGATION(#3) )
    ~.


//intransitive verbs
| #1[fraud,verb] |
if ( SENT[allege](#3) & ~OBJ(#1,?) & ~OBJ-N(#1,?) & ~ALLEGATION(#1,?) & ~ALLEGATION(?,#1) )
    ALLEGATION(#1).


//transitive verbs with sentential objects

| #1[fraud,verb] |
if ( SENT[allege](#3) & OBJ[sentence](#1,?) & ~OBJ-N(#1,?) & ~ALLEGATION(#1,?) & ~ALLEGATION(?,#1) )
    ALLEGATION(#1).


| #3[allege] |
if ( MANNER[pre,sentence:~](#1[lemme:~fail],#2[fraudadv]) & ~ALLEGATION(#2,#1) & ~ALLEGATION(#2,#1,?) & ~ALLEGATION(#1) )
    ALLEGATION(#2,#1).

//| #3[allege] |
if ( MANNER[pre,sentence:~](#1[lemme:~fail],#2[fraudadv]) & ~ALLEGATION(#2,#1) & ~ALLEGATION(#2,#1,?) & ^ALLEGATION(#1) )
    ALLEGATION(#2,#1).

//The complaint also alleged that Morris also sold Itex stock at times when he knew or was reckless in not knowing that Itex's publicly disclosed financial information was materially false or misleading.
//ATTRIB(information,misleading)
//ATTRIB(information,false)
//HEAD(information,financial information)

| #3[allege] |
if ( ATTRIB(#1,#2[fraud]) & HEAD[nphead](#1,#4) )
   ALLEGATION(#2,#4).




//The SEC's complaint further alleges that PACCAR and PACCAR Financial Corp. failed to maintain accurate books and records regarding their impaired loans and leases, causing them to improperly identify and disclose loans and leases for impairment.
//IV{to improperly identify}
//ALLEGATION(identify,loans)
//ALLEGATION(improperly,identify)

| ?#1{(?[lemme:to]),adv#2,#3[verb,last]} |
if ( ALLEGATION(#2,#3) & ALLEGATION(#3,#4) )
    ALLEGATION(#1,#4).

| ?#1{(?[lemme:to]),adv#2,#3[verb,last]} |
if ( ALLEGATION(#1,#4) & ^ALLEGATION(#3,#4) )
    ~.

| ?#1{(?[lemme:to]),adv#2,#3[verb,last]} |
if ( ALLEGATION(#1,#4) & ^ALLEGATION(#2,#3) )
    ~.

//In its complaint against Jack J. Egan, Jr. Volt's former Chief Financial Officer, the Commission alleges that Egan participated in a scheme to materially overstate revenue.
//ALLEGATION(overstate,revenue)
//IV{to materially overstate}

| ?#1{(?[lemme:to]),adv#2,#3[verb,last]} |
if ( ^ALLEGATION(#3,#4) )
    ALLEGATION(#1,#4).

//Jiang and Xie are alleged to have knowingly failed to establish proper internal controls at UTG, caused documents to be falsified, and falsely certified to UTG's internal controls for 2010.
//ALLEGATION(certified)
//FV{falsely certified}

| ?#1{(?[lemme:to]),adv#2[fraudadv],#3[verb,last]} |
if ( ^ALLEGATION(#3) ) 
    ALLEGATION(#1).

//The Commission's complaint alleges that beginning no later than January 2008 and continuing through February 2011, Hohol, who was the most senior executive at Special Services, and Poshak, among other things, made and caused others to make false accounting entries in Special Services' general ledger, including entries for fictitious revenue accruals, and entries that improperly reclassified expenses as inventory and improperly reclassified expenses (such as rental equipment, including industrial tools and diving gear) as prepaid assets, in order to artificially increase Special Services' monthly EBT to meet internal financial performance projections and create the false appearance that Special Services consistently was profitable.
//ALLEGATION(#1increase,#2Special Services ' monthly EBT)
//ALLEGATION(#3artificially,#1increase)
//MANNER_AAER-DEP_PRE(#1increase,#3artificially)


if ( ^ALLEGATION(#1,#2) & ALLEGATION(#3,#1) & MANNER(#1,#3) )
    ALLEGATION(#3,#1,#2).

if ( ALLEGATION(#3,#1,#2) & ^ALLEGATION(#3,#1) )
    ~.
/
//According to the Complaint, from 1994 until early 1997, Vigue and Gilbert engaged in a number of manipulative techniques, including: falsifying Firstmark's financial statements by causing Firstmark to recognize income and delay recognizing losses contrary to generally accepted accounting principles (GAAP); discouraging or preventing investors from selling their Firstmark stock ; using nominee accounts to purchase Firstmark stock ; and effecting trades where no real change in ownership took place (wash sales).
//ALLEGATION(#1preventing,#2investors)
//MOD_POST_GERUND(#1preventing,#3selling)
//OBJ_POST(#3selling,#6stock)
//HEAD(#6stock,#4their Firstmark stock)
//NP{#2investors} #5from GV{#3selling}


//| np{#2}, #5[lemme:from], gv{#3} |
//if ( ^ALLEGATION(#1[lemme:prevent],#2) & MOD[post,gerund](#1,#3) & OBJ[post](#3,#6) & HEAD(#2,#4) )
if ( ^ALLEGATION(#1[lemme:prevent],#2) & MOD[post,gerund](#1,#3) & OBJ[post](#3,#6) & HEAD(#6,#4) )
   ALLEGATION(#1,#2,#3,#4).
\


if ( ^ALLEGATION[fail:~](#1[fail]) )
    ALLEGATION[fail=+](#1).

if ( ^ALLEGATION[fail:~](#2,#1[fail]) )
    ALLEGATION[fail=+](#2,#1).

if ( ^ALLEGATION[fail:~](#2[fail],#1) )
    ALLEGATION[fail=+](#2,#1).

// The Commission also charged PairGain-a designer, manufacturer, and distributor of telecommunication products-and two of its top executives with failing to properly account for and timely disclose what initially appeared to be investment losses from unauthorized trading, but in reality were thefts by Goldinger.
//ALLEGATION_FAIL(disclose)
//ALLEGATION_FAIL(account)
//IV{to properly account}
//IV{timely disclose} 

| iv#1{?+,#2[last]} |
if ( ^ALLEGATION[fail](#2) )
   ALLEGATION[fail=+](#1).

///// adding possessives to allegations

//In the complaint, the Commission alleged that, among other things, as chief financial officer of Itex Corporation, Morris knowingly or recklessly participated in the material overstatement of Itex's assets, revenues and earnings in its financial statements, and failed to disclose numerous suspect and in many cases sham barter deals between Itex and various related parties.
//ALLEGATION(the material overstatement)
//MOD_POST(overstatement,earnings)
//MOD_POST(overstatement,assets)
//MOD_POST(overstatement,revenues)
//PREPD(revenues,of)
//PREPD(earnings,of)
//PREPD(assets,of)

if ( ^ALLEGATION(#1) & HEAD(#2[fraud],#1) & MOD[post](#2,#3) & PREPD(#3,#4[lemme:of]) & HEAD[pphead](#3,#5) )
   ALLEGATION(#1,#5).


//////////////////////// Violations \\\\\\\\\\\\\\\\\\\\\\

| #1[violate] |
if ( ^SENT(#2) )
    SENT[violate=+](#2).

| #1[section] |
if ( SENT[violate](#2) )
    VIOLATION[section=+](#1).

| #1[rule] |
if ( SENT[violate](#2) )
    VIOLATION[rule=+](#1).

| #1[violate] |
if ( LAW(#2) & ~VIOLATION[act](#2) )
   VIOLATION[act=+](#2).

if ( ^VIOLATION[act](#1) & TEMP[post](#1,#2) )
   VIOLATION[act](#1,#2).

////////////////////// AFFILIATION \\\\\\\\\\\\\\\\\\\\\

// Affiliation of the parties

// The first summary sentence usually contains the names of the PARTY and the ORGANISATIONS, which is the AFFILIATION dependency

// The first summary sentence contains a complaintref and a summaryword

| #1[complaintref] |
    LIXO(#1)


| #1[summaryword] |
if ( ^SENT(#2) & LIXO(#3) )
    SENT[summary=+](#2).

if ( ^LIXO(#1) )
    ~.

if ( SENT[summary](#2) & PARTY(#1) &  ORGANISATION(#3[complaintref:~,body:~]) & ~ORGANISATION(#1) )
    AFFILIATION(#1,#3).

//The Securities and Exchange Commission today announced that the Commission filed fraud and other related charges against China Intelligent Lighting and Electronics, Inc. (CIL); NIVS IntelliMedia Technology Group, Inc. (NIV); and their respective CEOs, Xuemei Li and, her brother, Tianfu Li.

| #1[firstne=+] |
if ( PARTY(#1) & PARTY(#2) & #1 < #2 )
    ~.

| #1[firstne=+] |
if ( ORGANISATION(#1[complaintref:~,body:~]) & ORGANISATION(#2[complaintref:~,body:~]) & #1 < #2 )
    ~.

| #3[lemme:respective] |
if ( ^AFFILIATION(#1[firstne],#2[firstne:~]) | ^AFFILIATION(#1[firstne:~],#2[firstne])  )
    ~.

// We don't extract AFFILIATION if there are more than 2 ORGANISATIONS in the sentence

if ( ORGANISATION(#1[complaintref:~,body:~]) & ORGANISATION(#2[complaintref:~,body:~]) & ORGANISATION(#3[complaintref:~,body:~]) & ^AFFILIATION(?,?) )
    ~.

// Organisations involved in the fraud

//no organisation: Securities Laws

| #1{?+, #2[lemme:Laws]} |
if ( ^ORGANISATION(#1) )
   ~.


// all organisations that are not related to the complaint and are not bodies

if ( ORGANISATION(#1[complaintref:~,body:~]) )
   COMPANY(#1).

// exception: organisations in sentences about the SEC's action
// The SEC's investigation was conducted by Jason Habermeyer and Cary Robnett of the SEC's San Francisco Regional Office, and Peter J. Rosario of the SEC's Washington D.C. office.

if ( ^COMPANY(#1) & PERSON(#2) & ~PARTY(#2) )
   ~.


// TYPE-OF-FRAUD
//inventory
//revenue
//property and equipment
//cash/marketable securities

| #1[lemme:inventory] |
if ( SENT(#2) & ~TYPE-OF-FRAUD[inventory](#2) )
   TYPE-OF-FRAUD[inventory=+](#2). 


| #1[lemme:revenue] |
if ( SENT(#2) & ~TYPE-OF-FRAUD[revenue](#2) )
   TYPE-OF-FRAUD[revenue=+](#2). 


| #1[lemme:property] |
if ( SENT(#2) & ~TYPE-OF-FRAUD[prop-equ](#2) )
   TYPE-OF-FRAUD[prop-equ=+](#2). 

| #1[lemme:equipment] |
if ( SENT(#2) & ~TYPE-OF-FRAUD[prop-equ](#2) )
   TYPE-OF-FRAUD[prop-equ=+](#2). 

| #1[lemme:cash] |
if ( SENT(#2) & ~TYPE-OF-FRAUD[cash-ms](#2) )
   TYPE-OF-FRAUD[cash-ms=+](#2). 


| #1[lemme:marketable] |
if ( SENT(#2)  & ~TYPE-OF-FRAUD[cash-ms](#2) )
   TYPE-OF-FRAUD[cash-ms=+](#2). 


| #1[lemme:inventory] |
if ( ^ALLEGATION(#2) & ~ALLEGATION[inventory](#2) )
   ALLEGATION[inventory=+](#2). 


| #1[lemme:revenue] |
if ( ^ALLEGATION(#2) & ~ALLEGATION[revenue](#2) )
   ALLEGATION[revenue=+](#2). 

| #1[lemme:property] |
if ( ^ALLEGATION(#2) & ~ALLEGATION[prop-equ](#2) )
   ALLEGATION[prop-equ=+](#2). 

| #1[lemme:equipment] |
if ( ^ALLEGATION(#2) & ~ALLEGATION[prop-equ](#2) )
   ALLEGATION[prop-equ=+](#2). 

| #1[lemme:cash] |
if ( ^ALLEGATION(#2) & ~ALLEGATION[cash-ms](#2) )
   ALLEGATION[cash-ms=+](#2). 


| #1[lemme:marketable] |
if ( ^ALLEGATION(#2)  & ~ALLEGATION[cash-ms](#2) )
   ALLEGATION[cash-ms=+](#2). 


/////////

| #1[lemme:inventory] |
if ( ^ALLEGATION(#2,#3) & ~ALLEGATION[inventory](#2,#3) )
   ALLEGATION[inventory=+](#2,#3). 


| #1[lemme:revenue] |
if ( ^ALLEGATION(#2,#3) & ~ALLEGATION[revenue](#2,#3) )
   ALLEGATION[revenue=+](#2,#3). 

| #1[lemme:property] |
if ( ^ALLEGATION(#2,#3) & ~ALLEGATION[prop-equ](#2,#3) )
   ALLEGATION[prop-equ=+](#2,#3). 

| #1[lemme:equipment] |
if ( ^ALLEGATION(#2,#3) & ~ALLEGATION[prop-equ](#2,#3) )
   ALLEGATION[prop-equ=+](#2,#3). 

| #1[lemme:cash] |
if ( ^ALLEGATION(#2,#3) & ~ALLEGATION[cash-ms](#2,#3) )
   ALLEGATION[cash-ms=+](#2,#3). 


| #1[lemme:marketable] |
if ( ^ALLEGATION(#2,#3)  & ~ALLEGATION[cash-ms](#2,#3) )
   ALLEGATION[cash-ms=+](#2,#3). 

/////////

| #1[lemme:inventory] |
if ( ^ALLEGATION(#2,#3,#4) & ~ALLEGATION[inventory](#2,#3,#4) )
   ALLEGATION[inventory=+](#2,#3,#4). 


| #1[lemme:revenue] |
if ( ^ALLEGATION(#2,#3,#4) & ~ALLEGATION[revenue](#2,#3,#4) )
   ALLEGATION[revenue=+](#2,#3,#4). 

| #1[lemme:property] |
if ( ^ALLEGATION(#2,#3,#4) & ~ALLEGATION[prop-equ](#2,#3,#4) )
   ALLEGATION[prop-equ=+](#2,#3,#4). 

| #1[lemme:equipment] |
if ( ^ALLEGATION(#2,#3,#4) & ~ALLEGATION[prop-equ](#2,#3,#4) )
   ALLEGATION[prop-equ=+](#2,#3,#4). 

| #1[lemme:cash] |
if ( ^ALLEGATION(#2,#3,#4) & ~ALLEGATION[cash-ms](#2,#3,#4) )
   ALLEGATION[cash-ms=+](#2,#3,#4). 


| #1[lemme:marketable] |
if ( ^ALLEGATION(#2,#3,#4)  & ~ALLEGATION[cash-ms](#2,#3,#4) )
   ALLEGATION[cash-ms=+](#2,#3,#4). 


/////////

| #1[lemme:inventory] |
if ( ^ALLEGATION(#2,#3,#4,#5) & ~ALLEGATION[inventory](#2,#3,#4,#5) )
   ALLEGATION[inventory=+](#2,#3,#4,#5). 


| #1[lemme:revenue] |
if ( ^ALLEGATION(#2,#3,#4,#5) & ~ALLEGATION[revenue](#2,#3,#4,#5) )
   ALLEGATION[revenue=+](#2,#3,#4,#5). 

| #1[lemme:property] |
if ( ^ALLEGATION(#2,#3,#4,#5) & ~ALLEGATION[prop-equ](#2,#3,#4,#5) )
   ALLEGATION[prop-equ=+](#2,#3,#4,#5). 

| #1[lemme:equipment] |
if ( ^ALLEGATION(#2,#3,#4,#5) & ~ALLEGATION[prop-equ](#2,#3,#4,#5) )
   ALLEGATION[prop-equ=+](#2,#3,#4,#5). 

| #1[lemme:cash] |
if ( ^ALLEGATION(#2,#3,#4,#5) & ~ALLEGATION[cash-ms](#2,#3,#4,#5) )
   ALLEGATION[cash-ms=+](#2,#3,#4,#5). 


| #1[lemme:marketable] |
if ( ^ALLEGATION(#2,#3,#4,#5)  & ~ALLEGATION[cash-ms](#2,#3,#4,#5) )
   ALLEGATION[cash-ms=+](#2,#3,#4,#5). 





