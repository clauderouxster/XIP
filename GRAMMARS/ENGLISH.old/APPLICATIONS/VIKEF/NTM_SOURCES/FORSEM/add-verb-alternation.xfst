
##################### From Effi's coding
# features that were coded by Effi in 2004 and that are not redundant with previously coded features

echo >>> verbs of creation

define LIST [
{design} | {dig} | {mint} | {create} | {compose} |
{coin} |  {compute} | {train} | {construct} | {derive} | {fabricate} | {form} | {invent} | {manufacture} | {organize} | {print} | {produce} | {recreate} | {style} | {arrange} | {assemble} | {bake} | {blow} | {build} | {carve} | {cast} | {chisel} | {churn} | {compile} | {cook} | {crochet} | {cut} | {develop} | {embroider} | {fashion} | {fold} | {forge} | {grind} | {grow} | {hack} | {hammer} | {hatch} | {knit} | {make} | {do} | {mold} | {pound} | {roll} | {sculpt} | {sew} | {shape} | {spin} | {stitch} | {weave} | {whittle} | {bake/} | {blend} | {boil} | {brew} | {clean} | {clear} | {fix} | {fry} | {grill} | {hardboil} | {iron} | {light} | {mix} | {peel} | {poach} | {pour} | {prepare} | {roast} | {roll} | {run} | {scramble} | {set} | {skin} | {softboil} | {toast} | {toss} | {wash} | {dance} | {draft} | {draw} | {hum} | {paint} | {play} | {recite} | {sing} | {spin} | {whistle} | {write} | {perform} ]; #+ALT (bnf) 

regex [ "+a_vcreation" <- [..] || .#. LIST %+Verb _ ];


# ============================================================
echo >>> verbs of destruction
define LIST [
{destroy} | {ruin} | {burn} ]; #bnf

regex [ "+a_vdestruction" <- [..] || .#. LIST %+Verb _ ];

# ============================================================
echo >>> verbs of disappearence
define LIST [
{die} | {disappear} | {expire} | {lapse} | {perish} | {vanish}]; #bnf

regex [ "+s_vdisappearence" <- [..] || .#. LIST %+Verb _ ];


# ============================================================

echo >>> verbs of obtaining or future possession

define LIST [
{book} |  {buy} | {call} | {cash} | {catch} | {charter} | {choose} | {earn} | {fetch} | {find} | {gain} | {gather} | {get} | {hire} | {keep} | {lease} | {leave} | {order} | {phone} | {pick} | {pluck} | {procure} | {pull} | {reach} | {rent} | {reserve} | {save} | {secure} | {shoot} | {slaughter} | {steal} | {vote} | {win} | {guarantee} | {ensure} | {accept} | {accumulate} | {appropriate} | {borrow} | {cadge} | {exact} | {inherit} | {obtain} | {receive} | {recover} | {regain} | {seize} | {snatch} | {grab} | {collect} | {retrieve} | {purchase} | {acquire} ]; #bnf

regex [ "+a_vobtaining" <- [..] || .#. LIST %+Verb _ ];


# ============================================================
echo >>> steal verbs
define LIST [
{abduct} | {cadge} | {capture} | {confiscate} | {cop} | {emancipate} | {embezzle} | {exorcise} | {extort} | {extract} | {filch} | {flog} | {grab} | {impound} | {kidnap} | {liberate} | {lift} | {nab} | {pilfer} | {pinch} | {pirate} | {plagiarize} | {purloin} | {recover} | {redeem} | {reclaim} | {reclaim} | {regain} | {repossess} | {rescue} | {retrieve} | {rustle} | {seize} | {snatch} | {sneak} | {sponge} | {swipe} | {take} | {thieve} | {wangle} | {weasel} | {winkle} | {withdraw} | {wrest} | {steal} | {smuggle} ]; #bnf

regex [ "+a_vsteal" <- [..] || .#. LIST %+Verb _ ];


# ============================================================
echo >>> verbs of desire
define LIST [
{covet} | {crave} | {desire} | {fancy} | {need} | {want} ];

regex [ "+a_vdesire" <- [..] || .#. LIST %+Verb _ ];


# ============================================================
echo >>> give verbs

define LIST [
{feed} | {give} | {lease} | {lend} | {loan} | {pass} | {pay} | {peddle} | {refund} | {render} | {rent} | {repay} | {sell} | {serve} | {trade} ];

regex [ "+a_vgive" <- [..] || .#. LIST %+Verb _ ];

# ============================================================
echo >>> verbs of future having
define LIST [
{advance} | {allocate} | {allot} | {assign} | {award} | {bequeath} | {cede} | {concede} | {extend} | {grant} | {issue} | {leave} | {offer} | {owe} | {promise} | {vote} | {will} | {yield} ];

regex [ "+a_vfuturehaving" <- [..] || .#. LIST %+Verb _ ];

# ============================================================

echo >>> drive verbs

define LIST [
{barge} | {bus} | {cart} | {drive} | {ferry} | {fly} | {row} | {shuttle} | {truck} | {wheel} | {wire} ];


regex [ "+a_vdrive" <- [..] || .#. LIST %+Verb _ ];


# ============================================================



##################### End Effi's data


echo >>> verbs of class LEARN VERBS

define LIST [
{acquire} | {cram} | {glean} | {learn} | {memorize} | {read} | {study}
];

regex [ "+a_learn" <- [..] || .#. LIST %+Verb _];
# =============================================================================================
echo >>> verbs of class SOCIAL INTERACTION

define LIST [
{agree} | {argue} | {banter} | {bargain} | {bicker} | {brawl} | {joke} | 
{quarrel} | {scuffel} | {skirmish} | {spar} | {spat} | {struggle} | {spoon} | 
{squabble} | {tussle} | {vie} | {wrangle} | {wrestle} |
{court} | {cuddle} | {date} | {divorce} | {hug} | {kiss} | 
{marry} | {nuzzle} | {pet} | {battle} | {consult} | {debate} | 
{fight} | {meet} | {play} | {visit}
]; 

regex [ "+a_soc_inter" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================

echo >>> verbs of class COMMUNICATION
## are not verbs included in the indspeech:+ class

define LIST [
{demonstrate} | {dictate} | {read} | {recite} | {write} | {cable} | 
{e-mail} | {fax} | {modem} | {mail} | {netmail} | {phone} | {radio} | {telephone} | 
{telegraph} | {telex} ]; 

regex [ "+a_communic" <- [..] || .#. LIST %+Verb _ ];

# =============================================================================================
echo >>> verbs of class INGESTION VERBS

define LIST [
{eat} | {drink} | {chew} | {nibble} | {suck} | {gobble} | 
{swallow} | {ingest} | {devour} | {banquet} | {breakfast} | 
{brunch} | {dine} | {lunch} | {picnic} | {sup}
]; 

regex [ "+a_ingest" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs of class KILLING
# some of them

define LIST [
{assassinate} | {butcher} | {eliminate} | {execute} | {immolate} | {liquidate} | 
{massacre} | {slaughter} | {slay} | 
{murder} | {asphyxiate} | {crucify} | {electrocute} | {garrote} | 
{hang} | {knife} | {kill} | {liquidate} | {poison} | {shoot} | {smother} | {stab} | 
{strangle} | {suffocate}
];

regex [ "+a_kill" <- [..] || .#. LIST %+Verb _ ];

# =============================================================================================
echo >>> verbs of class ROLL VERBS

define LIST [
{bounce} | {drift} | {drop} | {float} | {glide} | {move} | 
{roll} | {slide} | {swing} | {coil} | {revolve} | {rotate} | 
{spin} | {turn} | {twirl} | {twist} | {whirl} | {wind} 
];

regex [ "+a_roll" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs of class BREAK VERBS

define LIST [
{break} | {chip} | {cut} | {crack} | {crash} | {crush} | 
{fracture} | {rip} | {shatter} | {smash} | {snap} |
{splinter} | {split} | {tear} ];

regex [ "+a_break" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs of class BEND VERBS

define LIST [
{bend} | {crease} | {crinkle} | {crumple} | {fold} |
{rumple} | {wrinkle} ];

regex [ "+a_bend" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs of class CHANGE OF STATE

define LIST [
{abate} | {advance} | {age} | {air} | {alter} | {atrophy} | 
{awake} | {balance} | {blast} | {blur} | {burn} | {burst} | 
{capsize} | {change} | {char} | {chill} | {clog} | {collapse} | 
{collect} | {compress} | {condense} | {contract} | {corrode} | 
{crumble} | {crumble} | {decompose} | {decrease} | {deflate} | 
{defrost} | {degrade} | {diminish} | {dissolve} | {distend} | 
{divide} | {double} | {drain} | {ease} | {enlarge} | {expand} | 
{explode} | {fade} | {fill} | {nite} | {improve} | {increase} | 
{inflate} | {kindle} | {light} | {loop} | {mature} | {melt} | 
{multiply} | {overturn} | {pop} | {quadruple} | {rekindle} | 
{reopen} | {reproduce} | {rupture} | {scorch} | {sear} | 
{short} | {short-circuit} | {shrink} | {shrivel} | {singe} | 
{sink} | {soak} | {splay} | {sprout} | {steep} | {stretch} | 
{submerge} | {subside} | {taper} | {thaw} | {tilt} | {tire} | 
{topple} | {triple} | {unfold} | {vary} | {warp} ];


regex [ "+a_ch_o_st" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs of class CHANGE OF COLOUR

define LIST [
{blacken} | {brown} | {crimson} | {gray} | {green} | 
{purple} | {redden} | {silver} | {tan} | {whiten} | 
{yellow} ]

regex [ "+a_ch_o_col" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs with -EN suffix

define LIST [
{awaken} | {brighten} | {broaden} | {cheapen} | {coarsen} | 
{dampen} | {darken} | {deepen} | {fatten} | {flatten} | 
{freshen} | {gladden} | {harden} | {hasten} | {heighten} | 
{lengthen} | {lessen} | {lighten} | {loosen} | {moisten} | 
{neaten} | {quicken} | {quieten} | {ripen} | {roughen} | 
{sharpen} | {shorten} | {sicken} | {slacken} | {smarten} | 
{soften} | {steepen} | {stiffen} | {straighten} | {strengthen} | 
{sweeten} | {tauten} | {thicken} | {tighten} | {toughen} | 
{waken} | {weaken} | {widen} | {worsen} 
];

regex [ "+a_en" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs with -IFY suffix

define LIST [
{acetify} | {acidify} | {alkalify} | {calcify} | {carbonify} | 
{dehumidify} | {emulsify} | {fructify} | {gasify} | {humidify} | 
{intensify} | {lignify} | {liquefy} | {magnify} | {nitrify} | 
{ossify} | {petrify} | {purify} | {putrefy} | {silicify} | 
{solidify} | {stratify} | {vitrify} ];

regex [ "+a_ify" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs with -IZE suffix

define LIST [
{americanize} | {americanise} | {caramelize} | {caramelise} | 
{carbonize} | {carbonise} | {centralize} | {centralise} | {crystallize} | {crystallise} | 
{decentralize} | {demagnetize} | {demagnetise} | {democratize} | {democratise} | 
{depressurize} | {depressurise} | {destabilize} | {destabilise} | 
{energize} | {energise} | {equalize} | {equalise} | {fossilize} | {fossilise} | 
{gelatinize} | {gelatinise} | {glutenize} | {glutenise} | {harmonize} | {harmonise} | 
{hybridize} | {hybridise} | {iodize} | {iodise} | {ionize} | {ionise} | 
{magnetize} | {magnetise} | {neutralize} | {neutralise} | {oxidize} | {oxidise} | 
{polarize} | {polarise} | {pulverize} | {pulverise} | {regularize} | {regularise} | 
{stabilize} | {stabilise} | {unionize} | {unionise} | {vaporize} | {vaporise} | 
{volatilize} | {volatilise} | {werternize} | {werternise} ];

regex [ "+a_ize" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs with -ATE suffix

define LIST [ 
{accelerate} | {agglomerate} | {ameliorate} | {attenuate} | 
{coagulate} | {decelerate} | {deescalate} | {degenerate} | 
{desiccate} | {deteriorate} | {detonate} | {desintegrate} | 
{dissipate} | {evaporate} | {federate} | {granulate} | 
{incubate} | {levitate} | {macerate} | {operate} | {proliferate} | 
{propagate} | {ulcerate} | {vibrate} ];

regex [ "+a_ate" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs of class AMUSE-TYPE PSYCH VERBS (some)

define LIST [
{cheer} | {delight} | {enthuse} | {gladden} | {grieve} | 
{madden} | {obsess} | {puzzle} | {sadden} | {sicken} | 
{thrill} | {tire} | {weary} | {worry} ];

regex [ "+a_amuse_psy1" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> verbs of EMISSION (some)

define LIST [
{bang} | {beep} | {blare} | {buzz} | {clack} | 
{clang} | {clash} | {clatter} | {click} | {hoot} | 
{jangle} | {jingle} | {ring} | {rustle} | {squeak} | 
{squeal} | {tinkle} | {twang} ];

regex [ "+a_emission1" <- [..] || .#. LIST %+Verb _ ];

# =============================================================================================
echo >>> verbs of SPATIAL CONFIG (some)

define LIST [
{dangle} | {fly} | {hang} | {lean} | {perch} | 
{rest} | {sit} | {stand} | {swing} ];

regex [ "+a_spatial1" <- [..] || .#. LIST %+Verb _ ];

# =============================================================================================
echo >>> other verbs for the CAUSATIVE ALTERNATION

define LIST [
{read} | {bleed} | {squirt} | {burp} | {bake} | {cook} | {boil} | 
{heat} ];

regex [ "+a_other_cause" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> RUN verbs (some)

define LIST [
{canter} | {climb} | {cross} | {fly} | {gallop} | {hike} | 
{jog} | {jump} | {leap} | {prowl} | {ramble} | {ride} | 
{roam} | {rove} | {row} | {run} | {shoot} | {stroll} | 
{swim} | {traipse} | {tramp} | {travel} | {trudge} | {vault} | 
{wade} | {walk} | {wander} ];


regex [ "+a_run1" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> DIRECTED MOTIONS verbs (some)

define LIST [
{ascend} | {depart} | {descend} | {escape} | {flee} | {leave} ];


regex [ "+a_dir_mot1" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> Reciprocal alternation with TO

define LIST [
{add} | {connect} | {engage} | {introduce} | {join} | {link} | 
{marry} | {oppose} | {network} | {wed} ];

regex [ "+a_rec_to" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> Reciprocal alternation with INTO

define LIST [
{blend} | {cream} | {mix} ];

regex [ "+a_rec_into" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> Reciprocal alternation with WITH

define LIST [
{affiliate} | {alternate} | {amalgamate} | {associate} | 
{blend} | {coalesce} | {coincide} | {combine} | {commingle} | 
{compare} | {concatenate} | {confederate} | {confuse} | 
{conjoin} | {connect} | {consolidate} | {contrase} | {correlate} | 
{criss-cross} | {entangle} | {entwine} | {fuse} | {harmonize} | 
{incorporate} | {integrate} | {interchange} | {interconnect} | 
{interlace} | {interlink} | {interlock} | {intermingle} | 
{interrelate} | {intersperse} | {intertwine} | {interweave} | 
{join} | {link} | {mate} | {merge} | {mingle} | {mix} | 
{muddle} | {pool} | {total} | {unify} | {unite} 
];

regex [ "+a_rec_with" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================
echo >>> Reciprocal alternation with FROM

define LIST [
{decouple} | {differentiate} | {disconnect} | {disentangle} | {dissociate} | 
{distinguish} | {divide} | {divorce} | {part} | {segregate} | {separate} | 
{sever} ];

regex [ "+a_rec_from" <- [..] || .#. LIST %+Verb _ ];
# =============================================================================================

echo >>> combine
compose net



