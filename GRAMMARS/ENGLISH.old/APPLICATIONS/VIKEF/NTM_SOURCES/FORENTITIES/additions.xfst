
##########################################################
## file : additions.xfst
## purpose : additions and corrections of nvlex+context.fst
## for named entities 
## Author : C Brun
## Date August 2003
##########################################################

### External resources 


#source ./adjectivesCountry.xfst
#source ./professions.xfst
#source ./locations.xfst
#source ./locationMod.xfst
#source ./pers_name.xfst
#source ./pers1.xfst
#source ./pers2.xfst
#source ./event_law.xfst
#source ./organisation.xfst
#source ./orgNames.xfst
#source ./villes.xfst 
#source ./titles.xfst 


#load stack ../basics/nvlex+context.fst
#loaded by makefile

#load stack ../basics/lex-1.fst
#define basicDic

define dicoInit 

regex [ {int}  %+Prop:0  %+Bus:0 %+NOUN:0 | 
{Management} %+Prop:0 %+Fam:0  %+Sg:0  %+NOUN:0 | 
{Limited}  %+Prop:0 %+Bus:0 %+NOUN:0 |
{Health} %+Prop:0 %+WordPart:0 %+Sg:0 %+NOUN:0  |
{Rock} y:i 0:e  %+Prop:0 %+Masc:0 %+Pl:s %+NOUN:0 |
{Manager}  %+Prop:0 %+Fam:0 %+Sg:0 %+NOUN:0 |
{Manager} 0:s  %+Prop:0 %+Fam:0 %+Pl:0 %+NOUN:0 |
{AT} %+Prop:0 %+Misc:0 %+Acron:0 %+NOUN:0 |
{Thatcher} %+Prop:0 %+Place:0 %+Misc:0 %+NOUN:0 |
{Geronimo}  %+Prop:0 %+Place:0 %+Misc:0 %+NOUN:0 |
{Dole}  %+Prop:0 %+Bus:0 %+NOUN:0 |
{Co} %+Prop:0 %+WordPart:0 %+Sg:0 %+Abbr:0 %+NOUN:0 | 
{Security} %+Prop:0 %+Fam:0 %+Sg:0 %+NOUN:0 |
{Development} %+Prop:0 %+Fam:0 %+Sg:0 %+NOUN:0 |
{Development} %+Prop:0 %+Fam:0 %+Pl:s %+NOUN:0 |
{The} %+Prop:0 %+WordPart:0 %+Sg:0 %+NOUN:0  |
{Greater} %+Prop:0 %+WordPart:0 %+Sg:0 %+NOUN:0 |
{Printer} %+Prop:0 %+Place:0 %+Misc:0 %+NOUN:0 |
{Word} %+Prop:0 %+Bus:0 %+NOUN:0 
 ] ;
define aenlever 

regex [ dicoInit - aenlever ] ;
define dico0000


#regex ?* %+Prop %+Masc ? %+NOUN .o. dico0000 ;
#lower-side net 
#define MASCNAME

#regex ?*  %+Prop %+Fem ?  %+NOUN .o. dico0000 ;
#lower-side net 
#define FEMNAME 

### Some modif of stranges analysis

regex [ "+Continent" <- "+Country" || .#. {America}  %+Prop %+Place _ %+NOUN ] ;
define basicModifRule1 ;
regex ["+Fam" <- "+Masc"  || .#. {King} %+Prop _ %+Sg %+NOUN ] ;
define basicModifRule2 ;


regex basicModifRule2 .o. basicModifRule1 .o. dico0000 ;
define dico000


### Some missing words 
regex [
{den} | 
{der} |
{vom} |
{da} |
{das} |
{degli} |
{auf} |
{arap} |
{dei} |
{del} |
{dell'} |
{della} |
{los} |
{di} |
{y} |
{al} |
{ben} |
{dos} | 
{bin} |
{bint}| 
{las} |
{ait} |
{abu}|
{d'} 
] %+Prop:0 %+Particle:0 %+Sg:0 %+NOUN:0 ;
define particles

define changeWPtoparticle [ {von} | {de} |  {van} | {El} ] ;

regex [ "+Particle" <- "+WordPart" || .#.  changeWPtoparticle %+Prop  _ ?* %+NOUN ] ;
define rulepart

regex rulepart .o. dico000 ;
define dico00a

### Some additions 
regex
[
{Domesday Book} %+Noun:0 %+Sg:0 %+NOUN:0 |
{Air Force One} %+Noun:0 %+Prop:0 %+Sg:0 %+NOUN:0 |
{Academy Award} %+Noun:0 %+Prop:0 %+Sg:0 %+NOUN:0 |
{Palais des Festivals}  %+Noun:0 %+Prop:0 %+Sg:0 %+NOUN:0 |
{U.S. Trade}  %+Noun:0 %+Prop:0 %+Sg:0 %+NOUN:0 |
{A.G.}  %+Noun:0 %+Prop:0 %+Abbr:0 %+NOUN:0 |
{Eau de Cologne} %+Noun:0 %+Prop:0 %+Sg:0 %+NOUN:0 |
{Fahrenheit 9/11} %+Noun:0 %+Prop:0  %+Sg:0  %+NOUN:0 |
{Khan} %+Prop:0 %+Fam:0 %+Sg:0 %+NOUN:0
];
define ADD



##################

regex rulePERS1 .o. ruleOrg7 .o. ruleOrg6 .o. ruleOrg5 .o. ruleOrg3 .o. ruleOrg4 .o. ruleOrg2 .o. ruleOrg1 .o. EventRule .o. RuleMiscPers  .o. dico00a ;
define dico00

regex [ 
        titles | ProfSG | ProfPL | NEWPARENTS |
        particles | Cities |  states | Countries |adjCountry1 |
        adjCountry2 | nounCountry1 | locAdditions |NewNames | 
        CelebrityFamilyNames | Fullnames | CelebOne | newModLoc |
        EVENTS | LAWS | NewEvents | NEWORG1 |NEWORG2PL | NEWORG2SG | NEWORG3 | NEWORG4 | NEWORG5 | NewBiz |ADD
];
define  simpleAddition

echo >>> removin some stuff

## I remove IL as abbreviation for Illinois 

regex [ dico00  .o. [ {IL} | {DE} ] ] ;
define AbbrToRemove

## remove is define in locationMod.xfst 

regex [ dico00 - [ removeLOC |  remove |  AbbrToRemove | {Charlemagne} %+Prop:0 %+Fam:0 %+Sg:0 %+NOUN:0 |
{Philippe} %+Prop:0 %+Fem:0 %+Sg:0 %+NOUN:0 | {Democratic} %+Prop:0 %+WordPart:0 %+Sg:0 %+NOUN:0 |{Democratic} %+Prop:0 %+WordPart:0 %+Pl:0 %+NOUN:0 | {General} %+Prop:0 %+WordPart:0 %+Sg:0 %+NOUN:0 |{General} %+Prop:0 %+WordPart:0 %+Pl:0 %+NOUN:0 | {Golan} %+Prop:0 %+WordPart:0 %+Sg:0 %+NOUN:0 | {Golan} %+Prop:0 %+WordPart:0 %+Pl:0 %+NOUN:0] ];
define dico0

regex [ "+prof" <- [..] || .#. addProfToNoun  ?* %+c%_person  _ ?* %+NOUN ] ;
define ruleprof1 

regex  ruleprof1 .o. dico0 ;
define dico01 

regex  [ "+countable+human+prof" <- [..] || .#. addProfAndCountableHumanToNoun %+Noun _ ?* %+NOUN ] ;
define ruleprof2 

regex ruleprof2  .o.  dico01 ;
define dico02 

regex [ "+human+prof" <- [..] || .#.  addProfAndHumanToNadj %+NAdj _ ?* %+NADJ ];
define ruleprof3 

regex ruleprof3 .o.  dico02 ;
define dico03 

regex  [ "+prof" <- [..] || .#.  addProfToNadj %+NAdj ?* %+c%_person  _ ?* %+NADJ ];
define ruleprof4 

regex ruleprof4 .o. dico03 ;
define dico04

echo >>> end professions 

echo >>> Locations (modification of WordPart Tag) 
regex  [ "+LocPost" <- "+WordPart" || .#. changeWordpartToLocPost %+Prop _ ?* %+NOUN ] ;
define ruleLoc1

regex ruleLoc1 .o. dico04 ;
define dico05

regex  [ "+LocPre" <- "+WordPart" || .#. changeWordpartToLocPre %+Prop _ ?* %+NOUN ] ;
define ruleLoc2
 
regex ruleLoc2 .o. dico05  ;
define dico06

regex  [ "+ModLoc" <- "+WordPart" || .#. changeWordpartToModLoc %+Prop _ ?* %+NOUN ] ;
define ruleLoc3

regex ruleLoc3 .o. dico06 ;
define dico07

regex [ "+ModLoc" <- [..] || .#. addModLocToAdj  %+Adj _ %+ADJ ];
define ruleLoc4 

regex ruleLoc4 .o. dico07 ;
define dico08 

regex [ "+ModLoc" <- [..] || .#. addModLocToNadj %+NAdj _ ?* %+NADJ ];
define ruleLoc5 

regex ruleLoc5 .o. dico08 ;
define dico09


regex ["+Place" <- [..] || .#. addPlaceToMisc %+Prop _ ?* %+NOUN ];
define ruleLoc6 

regex ruleLoc6 .o. dico09 ;
define dico10

echo >>> change to city tags

regex ["+City" <- "+Misc" || .#. ChangeMiscToCity %+Prop %+Place _  %+NOUN ];
define ruleLoc7 

regex ruleLoc7 .o. dico10 ;
define dico11 


regex 
[ "+City" <- "+Country" || .#. {Algiers} ?* %+Place _ %+NOUN  
];
define ruleLoc8 ;

regex 
[
   "+Place" <- "+Misc" || .#. {Karachi} ?*  %+Prop _ %+NOUN  
];
define ruleLoc9a

regex 
[
   "+City" <- [..] || .#. {Karachi} ?*  %+Place _ %+NOUN  
];
define ruleLoc9b


regex 
[
   "+Place" <- "+Misc" || .#. {Nagoya} ?*  %+Prop _ %+NOUN  
];
define ruleLoc10a


regex 
[
   "+City" <- [..] || .#. {Nagoya} ?*  %+Place _ %+NOUN  
];
define ruleLoc10b

regex
[
   "+Place" <- "+WordPart" || .#. {Lagos}  %+Prop _ ?* %+NOUN
];
define ruleLoc11a ;

regex 
[
 "+City"  <- "+Sg" || .#. {Lagos} %+Prop ?* %+Place _ %+NOUN
] ;
define ruleLoc11b 

regex ruleLoc8 .o. ruleLoc9a .o. ruleLoc10a .o. ruleLoc11a  .o. dico11  ;
define step

regex  ruleLoc9b .o. ruleLoc10b .o. ruleLoc11b  .o.  step ;
define dico12
        
echo >>> end locations


regex [ simpleAddition | dico12];
define dico




### Adding currencys ### ###### ###  

regex [ [ 
{afghani} | {avo} |  {baht} |  {baiza} |  {bani} |  {birr} |  {butut} | 
{cedi} |  {chetrum} |  {chon} |  {colón} |  {congo} |  {córdoba} | 
{dalasi} |  {deutsch} [%_:% ] {mark} |  {dobra} |  {dong} |  {dông} | 
{ECU} |  {ekpwele} |  {ekwele} |  {emalangeni} |  {euro} | {real} {crusero} |
{fillér} |  {groszy} |  {hao} |  {piastre} | {hryvna} |  {hryvnia} |  {new} [%_:% ] {Peso} |
{nuevo} [%_:% ] {Peso} | {new} [%_:% ] {Sol} | {new} [%_:% ] {Zloty} |  {new} [%_:% ] {Kwanza} |
{inti} |  {jiao} |  {karbovanet} |  {khoum} |  {sterling} [%_:% ] {pound} | {pound} [%_:% ] {sterling} | 
{Pound} [%_:% ] {Sterling} |  {kina} |  {kobo} |  {kopiyka} |  {koruna} |  {króna} |  {kroon} | 
{kuna} |  {kwacha} |  {kwanza} |  {laree} |  {lari} |  {lei} |  {leone} |  {lev} |  {leva} |  {likuta} | 
{riyal-omani} | {lilangeni} |  {lisente} |  {loti} |  {lwei} |  {makuta} |  {maloti} |  {manat} | 
{metical} |  {millime} |  {mongo} |  {naira} |  {nakfa} |  {kwanza} |  {ngultrum} |  {ngwee} | 
{West} [%_:% ] {German} [%_:% ] {Mark} |  {Algerian} [%_:% ] {Dinar} | {Algerian} [%_:% ] {dinar} |  {D-mark} | {D-Mark} | {EUR} |
{ouguiya} |  {anga} |  {paisa} |  {paise} |  {pataca} |  {penni} |  {pesewa} |  {pfenning} |  {pula} | 
{qindarka} |  {qurush} |  {ringgit} |  {omani} |  {omani} |  {rouble} |  {rufiyaa} |  {satang} |  {pa'anga} |
{sen} |  {sene} |  {seniti} |  {sente} |  {sheqalim} |  {sheqel} |  {som} | 
{stotinka} |  {stotinki} |  {syli} |  {taka} |  {tala} | 
{tambala} |  {tenge} |  {thebe} |  {toea} |  {tolar} | 
{tugrik} |  {vatu} |  {zaire} |  {zaïre} |  {unidad} [%_:% ]  {de} [%_:% ] {fomento} | 
{DM} | {FF} | {CFAF}
] %+Noun:0 %+countable:0 %+Sg:0  %+NOUN:0 ]  ;
define Money1

regex [ [ 
{Algerian} [%_:% ] {dinar} 0:s  | {Algerian}  [%_:% ] {Dinar} 0:s  | {australe} 0:s  |
{avo} 0:s  | {piastre} 0:s | {euro} 0:s | {baht} 0:s  | {birr} 0:s  | {cedi} 0:s  |
{chetrum} 0:s  | {colone} 0:s  | {khoum} 0:s  | {kina} 0:s  | {kobo} 0:s  | {kuru} 0:s  |
{riyal} 0:s {-omani} | {kwanza} 0:s  | {laree} 0:s  | {lita} 0:s  | {millime} 0:s  | {paisa} 0:s  |
{pfenning} 0:s  | {pound}  0:s [%_:% ] {sterling} |  {Pound} 0:s  [%_:% ] {Sterling} | 
 {West}  [%_:% ] {German}  [%_:% ] {Mark} 0:s | {zloty} 0:s  | {sterling} [%_:% ]  {pound} 0:s | 
{new} [%_:% ] {Peso} 0:s |
{new} [%_:% ] {Sol} 0:s | {new} [%_:% ] {Zloty} 0:s |  {new} [%_:% ] {Kwanza} 0:s |
{new} [%_:% ] {Peso} 0:s | {unidad} 0:e 0:s [%_:% ] {de} [%_:% ] {fomento}
] %+Noun:0 %+countable:0 %+Pl:0  %+NOUN:0 ] ;
define Money2

echo >>>>>>>>>>>>>>> MONEY

#########################################################
### Those words (when nouns)  are unambiguous money name 
### but don't get the feature +countable --> I add it
#########################################################

regex [
{piaster} |
{bolivar} |
{boliviano} |
{balboa} |
{centavo} |
{eyrir} |
{centimo} |
{centesimo} |
{cordoba} |
{dirham} |
{forint} |
{gourde} |
{groschen} |
{groscz} |
{guarani} |
{haler} |
{kyat} |
{lempira} |
{leu} |
{markka} |
{piaster} |
{pul} |
{pya} |
{rial} |
{riyal} |
{riel} |
{schilling} |
{sucre} |
{won} |
{Deutsche_Mark} 
] ;
define toModify 

#regex dico ;

regex [ "+countable" <- [..] || .#. toModify %+Noun _ ?* %+NOUN ] ;
define modifcountable

regex  modifcountable  .o. dico ;

define dico2

############################################################
##### Addition for expressions like
### £456 (since $456 is already encoded)
### and £6767bn , $878M, etc  ¢
############################################################

regex [%0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 ];
define num

echo >>>> Num to be modified
regex num [ num | %, | %. ]* %+Dig [ %+Dec | %+Card ] %+CARD .o. basicDic ;
define numerals

regex numerals ;
lower-side net
define lownum

regex ?* %, ?* .o. lownum ;
define virgnum

echo >>>>>>>>>>>>>>>>>>>>>>NUMERALS 
#clear stack ;

regex numerals ;
regex [ "+DlrAmt" <- "+Card" || .#. lownum %+Dig _ %+CARD ] ;
regex [ "+DlrAmt" <- "+Dec" || .#. lownum %+Dig _ %+CARD ] ;
regex ["+MONEY" <- "+CARD" || .#. lownum ?* _ ] ;
compose net ;

define myNums
echo >>>>>>>>>>>>>>>>>>>>>>MYNUM
regex %£ myNums ;
define pounds

regex %¥ myNums ;
define yens

regex %¢ myNums ;
define euros

### Needed to add the extensions M, m, and bn 
### After the digit + potential prefixes
### like US$, Arg$, etc which need to be 
### themselves analysed like currencies

regex [
{Arg} | {A} | {B} | {Barb} |
{Be} | {BD} | {CR} | {Cr} | 
{R} | {Br} | {C} | {CI} | 
{Ch} | {Co} | {Cu} | {Dom} |
{XC} | {F} | {GB} | {HK} | {J} |
{L} | {M} | {Me}  | {NMe} | {N} |
{TW} | {NZ} | {S} | {SI} | {TT} | 
{US}  | {WS} | {Z} | {Bds} | {Bd} 
];
define prefixDollar


regex %$ myNums ;
define myDollars ;

regex myDollars ;
lower-side net
define lemmaDollars

regex  prefixDollar myDollars ;
define dollarWithAbbr 

regex [ myDollars | pounds | yens | euros ] ;
lower-side net ;
define lemmaMoneys ;

regex [ pounds | yens | euros | dollarWithAbbr |  [ prefixDollar lemmaDollars | lemmaMoneys ] [ M | b n | m ] %+Dig:0 %+DlrAmt:0 %+MONEY:0 ] ;
define newMoneys

## Need to add the currency abbreviations containing $
## as currency (feature curr:+) in XIP
regex [ prefixDollar  %$ %+Noun:0 %+countable:0  %+Sg:0 %+Abbr:0 %+NOUN:0 ];
define newCurrencies

############################# 
### Currency codes :
### They should be marked as 
### monney if followed by 
### a dig with a "," or a dig with bn M or m as suffix
### money if and only 
#############################

regex [
{ADF} | {ADP} | {AED} | {AFA} | {ALL} | {AMD} | {ANG} | {AON} | {ARA} | {ARS} | {ATS} | {AUD}|
{AWG} | {AZM} | {BAD} | {BBD} | {BDT} | {BEC} | {BEF} | {BEL} | {BFF} | {BGL} | {BHD} | {BIF}|
{BMD} | {BND} | {BOB} | {BOP} | {BRC} | {BRL} | {BRR} | {BSD} | {BTN} | {BWP} | {BY} | {BZD} | {CAD}|
{CHF} | {CLF} | {CLP} | {CNY} | {CNY} | {COP} | {CRC} | {CUP} | {CVE} |
{CYP} | {CZK} | {DEM} | {DJF} | {DKK} | {DOP} | {DZD} | {ECS} | {EEK} | {EGP} | {ERN} | {ESP} | {ETB}|
{EUR} | {FIM} | {FJD} | {FKP} | {FRF} | {GBP} | {GEL} | {GHC} | {GIP} | {GMD} | {GNF} | {GNS} | {GQE}|
{GRD} | {GTQ} | {GWP} | {GYD} | {HKD} | {HNL} | {HRK} | {HTG} | {HUF} | {IDR} | {IEP} | {ILS} | {INR}|
{IQD} | {IRR} | {IS} | {ISK} | {ITL} | {JMD} | {JOD} | {JPY} | {KES} | {KGS} | {KHR} | {KMF} | {KPW}|
{KRW} | {KWD} | {KYD} | {KZT} | {LAK} | {LBP} | {LKR} | {LRD} | {LSL} | {LSM} | {LTL} | {LUF} | {LVL}|
{LYD} | {MAD} | {MDL} | {MGF} | {MKD} | {MLF} | {MMK} | {MNT} | {MOP} | {MRO} | {MTL} | {MUR} | {MVR}|
{MWK} | {MXP} | {MYR} | {MZM} | {NAD} | {NGN} | {NIC} | {NIO} | {NIS} | {NLG} | {NOK} | {NPR} | {NZD}|
{OMR} | {PAB} | {PEI} | {PEN} | {PGK} | {PHP} | {PKR} | {PLN} | {PLZ} | {PTE} | {PYG} | {QAR} | {ROL}|
{RUB} | {RUR} | {RWF} | {SAR} | {SBD} | {SCR} | {SDD} | {SDP} | {SEK} | {SGD} | {SHP} | {SIT} | {SKK}|
{SLL} | {SOS} | {SRG} | {STD} | {SUR} | {SVC} | {SYP} | {SZL} | {THB} | {TJR} | {TMM} | {TND}
{TOP} | {TPE} | {TRL} | {TTD} | {TWD} | {TZS} | {UAG} | {UAH} | {UAK} | {UGS} | {USD} | {UYP} | {UZS}
{VEB} | {VND} | {VUV} | {WST} | {XAF} | {XAG} | {XAU} | {XCD} | {XEU} | {XOF} | {XPD} | {XPF} | {XPT}
{YDD} | {YE} | {YUD} | {YUN} | {ZAL} | {ZAR} | {ZMK} | {ZWD} | {FF} | {CFAF} | {DM} 
]  [ lownum  [ m | b n | M ] | virgnum ]   %+Dig:0 %+DlrAmt:0 %+MONEY:0 ;
define MoneyCode

###########################################################################
### Work on units such as kilometers etc :
### some of them are missing in the lexicon ex: picoampere : I add them
### some of them are not marked as countable : kilometer : I add the feature
###########################################################################


regex [
[
{Ångstrom} |
{ångstrom} |
{becquerel} |
{gigaelectronvolt} |
{hectogram} | 
{kilobase} |
{kilohm} |
{kilopascal} |
{kilobar} |
{kilovoltampere} |
{kilowatthour} |
{light-year} | 
{light} [%_:% ] {year} | 
{megaelectronvolt} |
{megajoule} |
{microampere} |
{microfarad} |
{microhenry} |
{microinch} | 
{micromho} |
{millibar} |
{nanofarad} |
{picoampere} |
{pascal} |
{petabyte} | 
{picofarad} |
{watthour} |
{weber} |
{siemens} |
{square} [%_:% ] {meter} |
{square} [%_:% ] {centimeter} |
{square} [%_:% ] {decimeter} |
{square} [%_:% ] {kilometer} |
{square} [%_:% ] {millimeter} |
{square} [%_:% ] {foot} |
{cubic} [%_:% ] {meter} |
{cubic} [%_:% ] {centimeter} |
{cubic} [%_:% ] {decimeter} |
{cubic} [%_:% ] {kilometer} |
{cubic} [%_:% ] {millimeter} |
{cubic} [%_:% ] {foot} |
{meter} [%_:% ] {squared} |
{centimeter} [%_:% ] {squared} |
{decimeter} [%_:% ] {squared} |
{kilometer} [%_:% ] {squared} |
{millimeter} [%_:% ] {squared} |
{foot} [%_:% ] {squared} |
{meter} [%_:% ] {cubed} |
{centimeter} [%_:% ] {cubed} |
{decimeter} [%_:% ] {cubed} |
{kilometer} [%_:% ] {cubed} |
{millimeter} [%_:% ] {cubed} |
{foot} [%_:% ] {cubed} |
{Km/hour} |
{Km/h} | 
{km/hour} |
{km/h}  
]  %+Noun:0 %+countable:0 %+Sg:0  %+NOUN:0  | 
[
{Ångstrom} 0:s |
{ångstrom} 0:s |
{becquerel} 0:s  |
{gigaelectronvolt} 0:s  |
{hectogram}  0:s  |
{kilobase}  0:s |
{kilohm} 0:s |
{kilopascal} 0:s |
{kilobar}  0:s  |
{kilovoltampere} 0:s |
{kilowatthour}  0:s |
{light-year} 0:s | 
{light} [%_:% ] {year} 0:s | 
{megaelectronvolt}  0:s |
{megajoule} 0:s |
{microampere} 0:s |
{microfarad}  0:s|
{microhenry}  0:s |
{micromho} 0:s |
{millibar}  0:s|
{microinch} 0:e 0:s |
{nanofarad} 0:s |
{petabyte} 0:s | 
{picoampere} 0:s |
{pascal} 0:s |
{picofarad} 0:s |
{watthour} 0:s |
{weber}  0:s  |
{square} [%_:% ] {meter}  0:s |
{square} [%_:% ] {centimeter}  0:s |
{square} [%_:% ] {decimeter} 0:s  |
{square} [%_:% ] {kilometer}  0:s |
{square} [%_:% ] {millimeter}  0:s |
{square} [%_:% ] f o:e o:e t | 
{cubic} [%_:% ] {meter}  0:s |
{cubic} [%_:% ] {centimeter}  0:s |
{cubic} [%_:% ] {decimeter}  0:s |
{cubic} [%_:% ] {kilometer}  0:s |
{cubic} [%_:% ] {millimeter} 0:s  |
{cubic} [%_:% ] f o:e o:e t | 
 f o:e o:e t [%_:% ] {squared} |
 f o:e o:e t [%_:% ] {cubed} |
{meter}  0:s [%_:% ] {squared} |
{centimeter}  0:s [%_:% ] {squared} |
{decimeter}  0:s [%_:% ] {squared} |
{kilometer}  0:s [%_:% ] {squared} |
{millimeter} 0:s  [%_:% ] {squared} |
{meter} 0:s  [%_:% ] {cubed} |
{centimeter}  0:s [%_:% ] {cubed} |
{decimeter}  0:s [%_:% ] {cubed} |
{kilometer} 0:s  [%_:% ] {cubed} |
{millimeter} 0:s  [%_:% ] {cubed} |
{Km} 0:s {/hour} |
{Km} 0:s {/h} |
{km} 0:s {/hour} |
{km} 0:s {/h} 
]  %+Noun:0 %+countable:0 %+Pl:0  %+NOUN:0  ] ;
define Units

echo >>> Unit to modify 
regex
[
{byte} |
{candela} |
{coulomb} |
{decagram} |
{dekagram} | 
{decigram} |
{kilocalorie} |
{kilometer} |
{kilovolt} |
{lumen} |
{kelvin} |
{megahertz} |
{megohm} |
{microsecond} |
{microwatt} |
{mils} | 
{milliampere} |
{millisecond} |
{millivolt} |
{kilogramme} |
{nanosecond} |
{nanometer} | 
{nanowatt} |
{picosecond} |
{picowatt} |
{tesla} |
{second} |
{radian} |
{steradian} 
];
define UnitToModify

regex [ "+countable" <- [..] || .#. UnitToModify %+Noun _ ?* %+NOUN ] ;
define rule

regex rule .o. dico2 ;
define dico3 

#######################################################################
### Adding feature +country to adjective like American, French etc ...
#######################################################################

regex [
{Afghan} |  {African} |  {Afro} |  {Afro-American} |  {Alaskan} | 
{Albanian} |  {Algerian} |  {Alsatian} |  {American} | 
{Arabian} |  {Argentine} |  {Argentinean} |  {Arkansan} |  {Armenian} | 
{Aryan} |  {Asian} |  {Australian} |  {Austrian} |  {Bahamian} | 
{Balinese} |  {Basque} |  {Bavarian} |  {Belgian} |  {Bolivian} | 
{Brazilian} |  {British} |  {Bulgarian} |  {Burmese} |  {Cajun} | 
{Californian} |  {Canadian} |  {Cantonese} |  {Caribbean} |  {Carolinian} | 
{Caucasian} |  {Celtic} |  {Cherokee} |  {Chicano} |  {Chilean} | 
{Chinese} |  {Colombian} |  {Coloradan} |  {Congolese} |  {Creole} | 
{Cretan} |  {Croatian} |  {Cuban} |  {Cyprian} |  {Cypriot} | 
{Cypriote} |  {Czech} |  {Czechoslovakian} |  {Dakotan} |  {Dalmatian} |
{Delawarean} |  {Dominican} |  {Dutch} |  {Egyptian} |  {English} | 
{Estonian} |  {Ethiopian} |  {Eurasian} |  {European} |  {Filipino} | 
{Flemish} |  {Floridian} |  {French} |  {Georgian} |  {German} | 
{Ghanaian} |  {Grecian} |  {Greek} |  {Haitian} |  {Hawaiian} | 
{Hebrew} |  {Helvetian} |  {Hessian} | {Roman} | 
#{Hindu} | 
#{Hispanic} | 
{Honduran} |  {Hungarian} |  {Idahoan} |  {Illinoisan} | 
{Indian} |  {Indianian} |  {Indochinese} |  {Indonesian} |  {Iowan} | 
{Iranian} |  {Iraqi} |  {Irish} |  {Israeli} |  {Italian} | 
{Jamaican} |  {Japanese} |  {Jerseyite} |  {Jordanian} |  {Kansan} | 
{Kentuckian} |  {Korean} |  {Kurd} |  {Laotian} |  {Latin} |  {Latin American} | 
{Latvian} |  {Lebanese} |  {Liberian} |  {Libyan} |  {Lithuanian} |  {Louisianian} | 
{Magyar} |  {Malay} |  {Malayan} |  {Malaysian} |  {Maltese} |  {Manx} |  {Maori} | 
{Marylander} |  {Mediterranean} |  {Melanesian} |  {Mexican} |  {Michigander} |  {Minnesotan} | 
{Mississippian} |  {Missourian} |  {Mongol} |  {Mongolian} |  {Montanan} |  {Moroccan} | 
{Muscovite} |  {Navajo} |  {Neapolitan} |  {Nebraskan} |  {Nevadan} | 
{Nicaraguan} |  {Nigerian} |  {Norse} |  {Norwegian} |  {Oceanian} |  {Ohioan} | 
{Oklahoman} |  {Oregonian} |  {Pakistani} |  {Palestinian} |  {Panamanian} |  {Pennsylvanian} | 
{Pentecostal} |  {Persian} |  {Peruvian} |  {Phoenician} |  {Polynesian} |  {Portuguese} | 
{Provencal} |  {Prussian} |  {Puerto Rican} |  {Romanian} |  {Rumanian} |  {Russian} | 
{Salvadorian} |  {Samoan} |  {Saudi} |  {Saxon} |  {Scandinavian} |  {Scotch} | 
{Senegalese} |  {Serb} |  {Serbian} |  {Siamese} |  {Sicilian} |  {Slovak} | 
{Slovakian} |  {Somali} |  {South American} |  {Spanish} |  {Spanish American} | 
{Sumerian} |  {Swedish} |  {Swiss} |  {Syrian} |  {Tahitian} |  {Taiwanese} | 
{Tanzanian} |  {Tasmanian} |  {Tennessean} |  {Texan} |  {Thai} |  {Tibetan} | 
{Tunisian} |  {Turkish} |  {Ukrainian} |  {Utahan} |  {Venezuelan} | 
{Vietnamese} |  {Virginian} |  {Walloon} |  {Welsh} |  {Yankee} | 
{Yemenite} |  {Yiddish} |  {Yugoslav} |  {Yugoslavian} |  {Zimbabwean} | {Scottish}
] ;
define addCountry ;

regex [
{Danubian} |
{Philippine} |
{Aegean} |
{Siberian} 
];
define addCountry2

regex [ "+Country" <- [..] || .#. addCountry %+NAdj ?* _  %+NADJ ] ;
define rule2

regex [ "+Country" <- [..] || .#. addCountry2 %+Adj  _  %+ADJ ] ;
define rule21

regex rule21 .o. rule2 .o. dico3 ;
define dico4


regex [ "+firstName" <- [..] || .#. MASCNAME   %+Prop %+Masc  ?  _  %+NOUN ] ;
define rule3masc

regex [ "+firstName" <- [..] || .#. FEMNAME   %+Prop %+Fem  ?  _  %+NOUN ] ;
define rule3fem


regex  rule3masc .o. rule3fem .o. dico4 ;
define dico5

echo >>> Union nets

regex [ dico5 |  Units | Money1 | Money2 | MoneyCode | newMoneys | newCurrencies ] ;

#save stack ./nvlex+context+add.fst






