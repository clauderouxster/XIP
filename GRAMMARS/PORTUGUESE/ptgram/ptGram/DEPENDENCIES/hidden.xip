//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!                                                                            !
//! --- CONTENTS ---                                                           !
//!   Project    : Portuguese XIP grammar                                      !
//!   filename   : hidden.xip                                                  !
//!   Date       : 2006/March                                                  !
//!   Author     : Nuno Mamede, Paula Vaz                                      !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!                                                                            !
//!   HIDING DEPENDENCIES                                                      !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Hidden:

  //MAIN,      // main element of the sentence, verb (unary)
  HEAD,        // head of a chunk

  //QUANTD,    // quantification (numeral)
  //DETD,      // determiners (not a numeral)
  //CLASSD,    // classifier determiner
  PREPD,       // dependency between the preposition and the head of NP or ADV

  CLINK,       // link between two consective words (used to compute coordination)
  CHEAD,       // auxiliary (can be deleted at the end)
  LCOORD,      // auxiliary (can be deleted at the end)
  RCOORD,      // auxiliary (can be deleted at the end)
  //COORD,     // coordination between NPs, PPs, APs and verbs (last of the verbal chains)

  VLINK,       // a verb that is an auxiliar of another verb
  //PREDSUBJ,  // a verb that is suporting a predicative noun
  //VDOMAIN,   // link between the first and last verb in a chain
  VHEAD,       // link between a verb and the head of the verbal chain
               // (can be deleted at the end)

  //MOD,       // modifier
  //POSS,      // possessive modifier
  //COMPL,     // complement of a copulative verb (argument of a predicate)
  //HSUBJ,     // syntactic hiden subject (not used for the moment)
  //SUBJ,      // syntactic subject
  //CDIR,      // direct complement
  //CINDIR,    // indirect complement
  //CLITIC,    // verb has a clitic complement (may be present in an auxiliary)
               // which can appear in a proclitic position

  //APPOSIT,   // apposite dependency

  //ATTRIB,    //CH - links subject and compl of a copula e.g. Pedro foi lindo

  INTROD-AUX,// links the first element of the SC chunk to the head of the first verb (auxiliary or main) of the subclause
             //// Example: "O Pedro disse que tinha lido o livro" -> INTROD-AUX(que,tinha)

  INTROD,    // links the first element of the SC chunk to the head of the main verb of the subclause
             ////  Example: "O Pedro disse que tinha lido o livro" -> INTROD(que,lido)

  //ANTECEDENT,// links the antecedent noun to the first element of the SC chunk, when this is a relative pronoun
             //// Example: "O rapaz que tinha lido o livro" -> ANTECEDENT(rapaz,que)

  //CONNECTOR, // links the main verb of the VDOMAIN in the main clause to the connector that is the first element of the SC chunk;
             //// Example: "O Pedro disse que tinha lido o livro" -> CONNECTOR(disse,que)

  //QBOUNDARY, // links the first word of the subclause to the last word known to belong to that same subclause
             // (usually, the subordinat conjunction and the verb of the SC chunk);
             // includes direct objects and any other constituents at the right of the verb if they are not attached to other elements
             // outside that subclause, either at the right (main clause) or the left (other subclauses, for example);
             // if the main verb of the subclause is a VCOP it includes the PREDSUBJ.
             // in the case of relatives, it captures the preposition introducing the relative pronoun.
             //
             //// Example: O Pedro emprestou ao João o livro de que lhe tinha falado -> QBOUNDARY(de,que,falado)
             //// Example: O Pedro contou ao João a quem tinha emprestado o livro    -> QBOUNDARY(a,quem,livro)
             //// Example: O Pedro acha que a Maria está doente                      -> QBOUNDARY(que,que,doente)



  //ATTRIB,              // Links subject and compl of a copula e.g. Pedro foi lindo
  COMPAR,                // Comparative

  //AGENT,               // Complement of the passive introduced por "por" which is responsible for making the action
  //PATIENT,             // Syntactic subject of a passive.

  //PARTICLE,            // links two bounded but discontinuated entity. Is used for reflexive

  MAINFUNC,              // Unary relation for a node that has a main function (i.e. SUBJ, CDIR, MOD)

  //FIXED,               // Fixed phrases (used with 2 or more args) eg.: O trabalhador bateu a bota

  //NE,                  // Dependencies for NER
  //NE-CONTINUATION,     // Used to denote a continuation of a NE

  //EVENT,               // Dependencies for Events
  //EVENT-AGENT,         //   - person that takes part on the event
  //EVENT-PARTICIPANT,   //   - person that takes part on the event
  //EVENT-START,         //   - start date of the event
  //EVENT-END,           //   - end date of the event
  //EVENT-ORG,           //   - organization that takes part on the event
  //EVENT-LOCAL,         //   - local where the event occurred
  //EVENT-DOMAIN,        //

  //FAMILY,              // Family relations.
  //LIFETIME,            // Lifetime relations.
  //PEOPLE-LOCATION,     // People location relations.
  //BUILDING-LOCATION,   // Building location relations.
  //BUSINESS,            // Business relations.

  ACANDIDATE,          // An anaphor candidate
  ACANDIDATE_POSS,     // An anaphor candidate ??????
  IMMEDIATE_REFERENCE, // An anaphor candidate ??????
  INVALID_ACANDIDATE,  // An anaphor candidate ??????

  //DUMMY,     // Only used for debugging purposes
  //GARBISH.   // Never used (should be the last declared function)
