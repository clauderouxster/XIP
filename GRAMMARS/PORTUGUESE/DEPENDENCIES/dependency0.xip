//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! L2F - Spoken Language Systems Laboratory / INESC-ID Lisboa                 !
//!                                                                            !
//! Copyright (c) 2006 INESC-ID Lisboa.  All Rights Reserved.                  !
//!                                                                            !
//! --- CONTENTS ---                                                           !
//!   Project    : Portuguese XIP grammar                                      !
//!   filename   : dependency0.xip                                             !
//!   Date       : 2007/March                                                  !
//!   Author     : Nuno Mamede, João Loureiro                                  !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!                                                                            !
//!   Dependency file treating features that should be copied to the           !
//!   mother node: curr                                                        !
//!                time                                                        !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// $Id: dependency0.xip,v 1.2 2008/10/21 12:39:41 chagege Exp $


DependencyRules:

////////////////////////////////////////////////////////////
// Atribuição de traços aos NPs de acordo
// com o tipo da unidade de medida
////////////////////////////////////////////////////////////

// Example: 20 euros -> NP[time]{20 euros}
// Example: um euro e meio
//
| NP[curr=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[curr, meas], (num)} | ~
| NP[curr=+]{(?), (?[lemma:um]), ?[curr, meas], (num)} | ~


// Example: 20 dias -> NP[time]{20 dias}
// Example: um dia e meio
//
| NP[time=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[time, meas], (num)} | ~
| NP[time=+]{(?), (?[lemma:um]), ?[time, meas], (num)} | ~


// Example: 20 metros -> NP[length]{20 metros}
// Example: um metro e meio
//
| NP[length=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[length, meas], (num)} | ~
| NP[length=+]{(?), (?[lemma:um]), ?[length, meas], (num)} | ~


// Example: 20 gramas -> NP[mass]{20 gramas}
//
| NP[mass=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[mass, meas], (num)} | ~
| NP[mass=+]{(?), (?[lemma:um]), ?[mass, meas], (num)} | ~


// Example: 20 litros -> NP[volume]{20 litros}
//
| NP[volume=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[volume, meas], (num)} | ~
| NP[volume=+]{(?), (?[lemma:um]), ?[volume, meas], (num)} | ~


// Example: 100% -> NP[percentage]{100%}
//
| NP[percentage=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[percentage, meas], (num)} | ~
| NP[percentage=+]{(?), (?[lemma:um]), ?[percentage, meas], (num)} | ~


// Example: 20 metros quadrados -> NP[area]{20 metros quadrados}
//
| NP[area=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[area, meas], (num)} | ~
| NP[area=+]{(?), (?[lemma:um]), ?[area, meas], (num)} | ~


// Example: 20 ampéres -> NP[electcurrent]{20 ampéres}
//
| NP[electcurrent=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[electcurrent, meas], (num)} | ~
| NP[electcurrent=+]{(?), (?[lemma:um]), ?[electcurrent, meas], (num)} | ~


// Example: 20 coulomb -> NP[electcharge]{20 coulomb}
//
| NP[electcharge=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[electcharge, meas], (num)} | ~
| NP[electcharge=+]{(?), (?[lemma:um]), ?[electcharge, meas], (num)} | ~


// Example: 20 farad -> NP[electcapacitance]{20 farad}
//
| NP[electcapacitance=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[electcapacitance, meas], (num)} | ~
| NP[electcapacitance=+]{(?), (?[lemma:um]), ?[electcapacitance, meas], (num)} | ~


// Example: 20 ohm -> NP[electresistance]{20 ohm}
//
| NP[electresistance=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[electresistance, meas], (num)} | ~
| NP[electresistance=+]{(?), (?[lemma:um]), ?[electresistance, meas], (num)} | ~


// Example: 20 siemens -> NP[electconductance]{20 siemens}
//
| NP[electconductance=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[electconductance, meas], (num)} | ~
| NP[electconductance=+]{(?), (?[lemma:um]), ?[electconductance, meas], (num)} | ~


// Example: 20 volt -> NP[electpotencial]{20 volt}
//
| NP[electpotencial=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[electpotencial, meas], (num)} | ~
| NP[electpotencial=+]{(?), (?[lemma:um]), ?[electpotencial, meas], (num)} | ~


// Example: 20 bar | atm | pascal -> NP[pressure]{20 bar | atm | pascal}
//
| NP[pressure=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[pressure, meas], (num)} | ~
| NP[pressure=+]{(?), (?[lemma:um]), ?[pressure, meas], (num)} | ~


// Example: 20 joules | calorias -> NP[energy]{20 joules | calorias}
//
| NP[energy=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[energy, meas], (num)} | ~
| NP[energy=+]{(?), (?[lemma:um]), ?[energy, meas], (num)} | ~


// Example: 20 kelvin | fahrenheit -> NP[temperature]{20 kelvin | fahrenheit}
//
| NP[temperature=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[temperature, meas], (num)} | ~
| NP[temperature=+]{(?), (?[lemma:um]), ?[temperature, meas], (num)} | ~


// Example: 20 candelas -> NP[luminointensity]{20 candelas}
//
| NP[luminointensity=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[luminointensity, meas], (num)} | ~
| NP[luminointensity=+]{(?), (?[lemma:um]), ?[luminointensity, meas], (num)} | ~


// Example: 20 lúmen -> NP[luminoflux]{20 lúmen}
//
| NP[luminoflux=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[luminoflux, meas], (num)} | ~
| NP[luminoflux=+]{(?), (?[lemma:um]), ?[luminoflux, meas], (num)} | ~


// Example: 20 lux -> NP[illuminance]{20 lux}
//
| NP[illuminance=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[illuminance, meas], (num)} | ~
| NP[illuminance=+]{(?), (?[lemma:um]), ?[illuminance, meas], (num)} | ~


// Example: 20 mol -> NP[substance]{20 mol}
//
| NP[substance=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[substance, meas], (num)} | ~
| NP[substance=+]{(?), (?[lemma:um]), ?[substance, meas], (num)} | ~


// Example: 20 newton -> NP[force]{20 newton}
//
| NP[force=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[force, meas], (num)} | ~
| NP[force=+]{(?), (?[lemma:um]), ?[force, meas], (num)} | ~


// Example: 20 rpm | nós | km/h -> NP[speed]{20 rpm | nós | km/h}
//
| NP[speed=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[speed, meas], (num)} | ~
| NP[speed=+]{(?), (?[lemma:um]), ?[speed, meas], (num)} | ~


// Example: 20 watt -> NP[power]{20 watt}
//
| NP[power=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[power, meas], (num)} | ~
| NP[power=+]{(?), (?[lemma:um]), ?[power, meas], (num)} | ~


// Example: 20 radianos -> NP[angle]{20 radianos}
//
| NP[angle=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[angle, meas], (num)} | ~
| NP[angle=+]{(?), (?[lemma:um]), ?[angle, meas], (num)} | ~


// Example: 20 bytes -> NP[infostorage]{20 bytes}
//
| NP[infostorage=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[infostorage, meas], (num)} | ~
| NP[infostorage=+]{(?), (?[lemma:um]), ?[infostorage, meas], (num)} | ~


// Example: 20 quilogramas por metro cúbico -> NP[density]{20 quilogramas por metro cúbico}
//
| NP[density=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[density, meas], (num)} | ~
| NP[density=+]{(?), (?[lemma:um]), ?[density, meas], (num)} | ~


// Example: 20 metros cúbicos por segundo -> NP[flowrate]{20 metros cúbicos por segundo}
//
| NP[flowrate=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[flowrate, meas], (num)} | ~
| NP[flowrate=+]{(?), (?[lemma:um]), ?[flowrate, meas], (num)} | ~


// Example: 20 quilogramas metro quadrado -> NP[inercia]{20 quilogramas metro quadrado}
//
| NP[inercia=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[inercia, meas], (num)} | ~
| NP[inercia=+]{(?), (?[lemma:um]), ?[inercia, meas], (num)} | ~


// Example: 20 quilogramas-força -> NP[massforce]{20 quilogramas-força}
//
| NP[massforce=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[massforce, meas], (num)} | ~
| NP[massforce=+]{(?), (?[lemma:um]), ?[massforce, meas], (num)} | ~


// Example: 20 khz -> NP[frequence]{20 khz}
//
| NP[frequence=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[frequence, meas], (num)} | ~
| NP[frequence=+]{(?), (?[lemma:um]), ?[frequence, meas], (num)} | ~


// Example:
//
| NP[measother=+]{(?), num, (?[lemma:de], (?[lemma:o])), ?[measother, meas], (num)} | ~
| NP[measother=+]{(?), (?[lemma:um]), ?[measother, meas], (num)} | ~


// Generic Quantities (ex.: 2 jogos -> num[quant, generic]{2}
//
| num[dig:+, quant=+, generic=+], noun[meas:~,month:~] | ~




////////////////////////////////////////////////////////////
// Atribuição dos traços 'monument' e 'culture'           //
// às localidades que também são obras de arte            //
////////////////////////////////////////////////////////////

// Example: Mosteiro dos Jerónimos -> NOUN[location, culture, monument]{Mosteiro dos Gerónimos}
//
| NOUN[location:+, culture=+, monument=+]{?[lemma:mosteiro], ?*} | ~

// Example: Castelo de S. Jorge -> NOUN[location, culture, monument]{Castelo de S. Jorge}
//
| NOUN[location:+, culture=+, monument=+]{?[lemma:castelo], prep[lemma:de], ?*} | ~

// Example: Palácio de Belém -> NOUN[location, culture, monument]{Palácio de Belém}
//
| NOUN[location:+, culture=+, monument=+]{?[lemma:palácio], ?*} | ~

// Example: Torre de Belém -> NOUN[location, culture, monument]{Torre de Belém}
//
| NOUN[location:+, culture=+, monument=+]{?[lemma:torre], prep[lemma:de], ?*} | ~


//////////////////////////////////////////////////////////////
// Passa os traços 'timeref' e 'timeval' para dentro do nó  //
//////////////////////////////////////////////////////////////

// Example: depois de amanhã --> é necessário passar os traços para dentro do nó
//                               porque este é um timeref composto por mais que
//                               uma palavra (3).
//
| NOUN{?[lemma:"depois de"], ?[lemma:amanhã, timeref=+, timeval=2]} | ~

