//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! 
//!
//!  Date: July 2001
//!
//!  Copyright (c) 2001 Xerox Corporation.  All Rights Reserved.
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



Vocabulary:


// *********** Treatment of the quotes (treated as markups) ****************** //



\"  <>= [guille=+].


/marking compound words\
//=+ += [compend=+].






/ASSIGNMENT OF UNIQUE FEATURES TO INDIVIDUAL LEMMATA\
/====================================================\

// CH
// Deleting the feature coord=+ to the lemma "than"
than += [coord=~,form=fthan].

// CH
// Adding a feature [time=+] to the adverbs "late" and "early"
early += [time=+].
late += [time=+].


// CH
// Adding a feature ftwice to the word "twice"
twice += [form=ftwice].




// CH, March 2002
// Adding a feature form=pronthing to the words "anything", "everything" and "nothing"
// (for better disambiguation)
anything += [form=pronthing] .
everything += [form=pronthing] .
nothing += [form=pronthing].


// CH, March 2002
// Adding the feature fwill on the word "will"
will += [form=fwill].


// CH, March 2002
// Adding the feature fcan on the word "can"
can += [form=fcan].


// Adding the feature fsuch on the word such
such += [form=fsuch].

// CH, 4th Feb.
// Adding the feature fmore on the word "more"
more += [form=fmore].


if += [form=fif].

// CH, 8th Jan.
// Adding the feature fpercent on the "word" "per cent" which is coded as a noun
per_cent += [percent=+].
percent += [percent=+].


// CH, 14th November
// Adding the feature fsince on the word "since" (can be conj or prep)
since += [form=fsince].




// CH 05th November
// Adding the feature fduring to the preposition during
during += [form=fduring, sc_pduring=+].



// CH 12th October
// Adding a feature cardpoint=+ to the words North South East West.
// They are tagged as noun (proper or common) which can be a probleme in the chunking of NP's
// e.g. The massive North Korean complex is analyzed as 2 nominal chunks where North is the nucleus 
// of the first one
North += [cardpoint=+].
north += [cardpoint=+].
South += [cardpoint=+].
south += [cardpoint=+].
West += [cardpoint=+].
west += [cardpoint=+].
East += [cardpoint=+].
east += [cardpoint=+].



// CH July 02
// Adding a feature fmake to the lemma "make"
make += [form=fmake].

// CH 7th November
// Adding a feature fsaid to the lemma "said" 
said += [form=fsaid].



// CH 24th October
// Adding a feature ftake to the forms of the verb take
take += [form=ftake].

// CH 24th October
// Adding a feature fplace to the form place in singular
place += [form=fplace].

// CH 8th October
// Adding feature form=fborn to "born" that is just taken as an adjective
born += [form=fborn].


// CH 24th September
// Adding the feature numer=+ to nouns like thousand, dozen, hundred ...
thousand += [numer=+].
hundred += [numer=+].
dozen += [numer=+].

// CH
// nouns that quantifies
number += [numer=+].
plenty += [numer=+].
bit += [numer=+].


// CH 14th September
// Adding a feature prefix=+ to some prefixes
anti += [prefix=+].
post += [prefix=+].
semi += [prefix=+].
non += [prefix=+].
pro += [prefix=+].
under += [prefix=+].
over += [prefix=+].
re += [prefix=+].
trans += [prefix=+].
dis += [prefix=+].
dys += [prefix=+].




// CH 29th August
one += [form=fone, numer=+].

none += [numer=+,negat=+].


// CH, 23th November
// Recategorizing "AS" as a preposition (and not adverb)
// Note that complex expression with "as" (as well, as far as) are either codified as a whole in the lexicon fst, or grouped together with local grammar rules
as += [prep=+, form=fas, adv:~, notly:~].



// CH 16th August
// To change all the wh-words in the lexicon.
// All where, when, are added the feature wh
// note: how is already categorized as adverb with feature wh.
where = adv[adv=+, wh=+, form=fwhere].
when = adv[adv=+, wh=+, form=fwhen].
why = adv[adv=+, wh=+, form=fwhy].
wherein = adv[adv=+, wh=+, form=fwherein].


// CH 19th September
// Adding a feature wh to the lemma wether

whether = conj[conj=+, wh=+, form=fwhether].

// CH 16th August
// Adding a feature fwhat to the lemma what
what += [form=fwhat].


// CH 15th October
// Adding a feature fwhich and wh to the lemma which
which += [form=fwhich, wh=+].


// CH 3rd August
// It is useless to try to disambiguate WH- words. So who will always be tagged as pron [wh=+, nom=+]
// Only in a later stage it will be possible to decide wether WHO is an interrogative pronoun or relative pronoun. To change in the lexicon.
// The first one corresponds to "whose"
// The 2nd one corresponds to one of the output of whom
// The 3rd one correspondes to the other output of whom
// The 4th one to one of the output of who
// The  5th to the other output of who
who : pron[gen=+] = pron[wh=+,form=fwho,gen=+].
who : pron[wh=+,obl=+] = pron[wh=+,form=fwho,obl=+].
whom = pron[wh=+,obl=+,form=fwho].
who : pron[rel=+] = pron[wh=+,form=fwho,obl=+,nom=+].
who : pron[wh=+,nom=+] = pron[wh=+,form=fwho,obl=+,nom=+].


// CH . Adding a special feature numerable=+ to words like "c
// In order to deal properly things like "Chapter 2"	     
chapter : noun[noun=+] += [numerable=+].		     
page : noun[noun=+] += [numerable=+].			     
line : noun[noun=+] += [numerable=+].			     


// CH 6th Auguts
// Considering "no" as a quantifier in order to be coherent with some, any. 
no = quant[quant=+,form=fno].

// CH
// Several as a quantifier
several = quant[quant=+].

// CH 29th October
// Adding feature form=fso to the lemma "so"
so += [form=fso].


// Adding the feature flater to the lemma "late" form "later"
late : adv[compar=+] += [form=flater]. 

/"There" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the morpho-analyzer????\
/Agnes to change HMM tagger to include "There" as a pronoun\
/there does NOT agree with the verb so MAY NOT be the subject at all!\

there : adv[adv=+] += [form=fthere].

it : pron[pron=+] += [form=fit].

/Agnes to modify HMM tagger to ensure "but" is assigned the tag +Coord when\
/it is followed by a verb "He was happy but was tired"\
// CH adding a feature fbut to each form of but
but += [form=fbut].


/Shouldn't "do" be analysed as an auxiliary verb in the morpho-analyzer??\
/do : verb[verb=+] += [verb=+,aux=+].\
do : verb[verb=+] += [form=fdo].

/The feature "auxbh" is used for the verbs "be" and "have" whereas "fhave" is only used for the verb "have"\
have : verb += [auxbh=+,form=fhave].


/The feature "auxbh" is used for the verbs "be" and "have" whereas "fbe" is only used for the verb "be"\
be : verb += [auxbh=+,cop=+,form=fbe].


/CH Adding a "cop" feature to the copulative verbs, in order to be able to extract the predicative dependencies\
become : verb[verb=+] += [cop=+].
seem : verb[verb=+] += [cop=+].
feel : verb[verb=+] += [cop=+].
remain : verb[verb=+] += [cop=+].
// adding also the feature form=fgo to the forms of "go"
go : verb[verb=+] += [cop=+, form=fgo].
grow : verb[verb=+] += [cop=+].
turn : verb[verb=+] += [cop=+].

// CH Adding a "cop2" feature to copulative verbs (that also can be transitive "normal" verbs)
smell : verb[verb=+] += [cop2=+].
taste : verb[verb=+] += [cop2=+].
sound : verb[verb=+] += [cop2=+].
appear : verb[verb=+] += [cop2=+].
look : verb[verb=+] += [cop2=+].
get : verb[verb=+] += [cop2=+, form=fget].



up += [p_up=+].
about += [p_about=+, sc_pabout=+].
across += [p_across=+, sc_pacross=+].
ahead += [p_ahead=+].
along +=  [p_along=+].
around +=  [p_around=+, sc_paround=+].
apart += [p_apart=+].
aside += [p_aside=+].
away += [p_away=+].
back += [p_back=+].
behind += [p_behind=+,sc_pbehind=+].
by += [p_by=+, form=fby, sc_pby=+,agprep=+].
via += [agprep=+].
/"by" is used before present participles "by illegally leaving"\
/HOWEVER we don't want GV{by fleeing} despots!!\
down += [p_down=+, sc_pdown=+].
forth += [p_forth=+].
forward += [p_forward=+].
in = prep[p_in=+,form=fin, sc_pin=+].
into += [p_into=+, sc_pinto=+].
off += [p_off=+, sc_poff].
on += [p_on=+, sc_pon=+].
open += [p_open=+].
out += [p_out=+].
over += [p_over=+, sc_pover=+].
through += [p_through=+, sc_pthrough=+,form=fthrough,agprep=+].
to = prep[form=finfto,p_to=+, sc_pto=+].
// we eliminate the other interpretation of TO. This has only the PREP category.

together += [p_together=+].
under += [p_under=+].

against += [sc_pagainst=+].

// CH
alongside += [form=falongside].

// CH 28th Agustt
// Assignment of the feature form=fbefore and form=fafter for the words before and after
before += [form=fbefore].
/"before" is used before present participles "before realising"\
/GV{before reducing} their benefits - IS THIS CORRECT????\
//before : prep[prep=+] += [form=fbefore].

after += [form=fafter, sc_pafter=+].


// Adding the feature feven to word "even"
even += [form=feven].

// CH, adding feature fwhile to word "while"
while += [form=fwhile].

// CH Prepositons. Add a feature to all preposition that can govern a PP argument
aboard += [sc_paboard=+].

/"for" has a special use before present participles"\
for : prep[prep=+] += [form=ffor,sc_pfor=+].
of : prep[prep=+] += [form=fof,sc_pof=+].

/"without" is used before present participles "without realising"\
without : prep[prep=+] += [form=fwithout,sc_pwithout=+].


/"with" is used before present participle nouns "with housing etc a prob"\
/these are then chunked as GVs by mistake\
with : prep[prep=+] += [form=fwith,sc_pwith=+,agprep=+].

at : prep[prep=+] += [form=fat,sc_pat=+].
include : verb[verb=+,prog=+] += [form=fincluding].
since : prep[prep=+] += [form=fsince,sc_psince=+].
from : prep[prep=+] += [form=ffrom,sc_pfrom=+].
towards: prep[prep=+] += [sc_ptowards=+].
upon: prep[prep=+] += [sc_pupon=+].
onto: prep[prep=+] += [sc_ponto=+].
between: prep[prep=+] += [sc_pbetween=+].
within: prep[prep=+] += [sc_pwithin=+].
under: prep[prep=+] += [sc_punder=+].
among: prep[prep=+] += [sc_pamong=+].
above: prep[prep=+] += [sc_pabove=+].
before: prep[prep=+] += [sc_pbefore=+].
beyond: prep[prep=+] += [sc_pbeyond=+].
beneath: prep[prep=+] += [sc_pbeneath=+].


// CH 28th September
// Adding the feature form=flike to "like".
// Feature like=+ is added in order to ensure compatibility with biotip version
like += [form=flike, sc_plike=+,like=+].


// CH Adding a "indspeech" feature to verbs that introduces free indirect speech
// to add in the fst (these verbs were not marked as vsay in Comlex
believe : verb[verb=+] += [indspeech=+]. 
feel : verb[verb=+] += [indspeech=+].
suppose : verb[verb=+] += [indspeech=+].
imagine : verb[verb=+] += [indspeech=+].
expect : verb[verb=+] += [indspeech=+].
presume : verb[verb=+] += [indspeech=+].
assume : verb[verb=+] += [indspeech=+].
remind: verb[verb=+] += [indspeech=+,iobj=+].
suggest: verb[verb=+] += [indspeech=+].
show: verb[verb=+] += [indspeech=+].
disagree: verb[verb=+] += [indspeech=+]. 
hope: verb[verb=+] += [indspeech=+]. 

// CH To add in the fst 
// BEHIND is a particle for leave (not present in Comlex)
leave: verb[verb=+] += [p_behind=+].

// TEST
//speak: verb[verb=+] += [sc_pabout=+].

/"here" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the HMM tagger perhaps to include "here" as a pronoun\
/here : adv[adv=+] += [form=fhere].\


/not is used as an adverb to negate infinitive verbs - he decided not to go\
/to avoid all preceding adverbs from being included in the IV we need to distinguish just "not"\
not : adv[adv=+] += [form=fnot].


// CH adding ftoo to the adverb too
too : adv[adv=+] += [form=ftoo]. 



/here does NOT agree with the verb so MAY NOT be the subject at all!\
here : adv[adv=+] += [form=fhere].



// CH Adding the feature form=fthat to that even if it is tagged differently than conj.
that += [form=fthat].

/"those" is a relative pronoun which immediately precedes VPAP but not VPAST\
those : pron[pron=+] += [form=fthose].

// CH adding feautre form=fthis to the form this
this += [form=fthis].


/to allow only "and" in NP-> AP, conj, AP[first:~], noun[last]\
and : conj[conj=+] += [form=fand].


// CH adding the feater form=fable to the word able
able += [form=fable].


// CH adding feature form=for to OR
or : conj[conj=+] += [form=for].


// feature fhome on home
home += [form=fhome].





/for use in the marking rule to exclude "in" as an adj if followed\
//by another adj: "women in American universities are...\
//in : adj[adj=+] += [form=fin].


// CH 6th August
// whole is marked in order to construct quantifier the whole
whole: nadj[nadj=+] += [form=fwhole].


// CH 8th August
// forms each and other are marked in order to be able to construct "each other" as a whole (see adjust.xip).
// After correcting the lexicon, these features won't be useful anymore
each : quant[quant=+] += [form=feach,preperiod=+,predet=+].
other: adj[adj=+] += [form=fother].


// CH 22 August
// Adding the features fhow fmany, and fmuch to how, many and much
how += [form=fhow].
many += [form=fmany].
much += [form=fmuch].
often += [form=foften].
few += [form=ffew].
long += [form=flong].
far += [form=ffar].

//required for composed adverbs such as "two weeks ago"
ago : adv[adv=+] += [form=fago].


speaker : noun[noun=+] += [form=fspeaker].

\(\= : punct += [form=fopar,strongbreak=+].
\=\) : punct += [form=fcpar].
\[\= : punct += [form=fopar,strongbreak=+].
\=\] : punct += [form=fcpar].
\{\= : punct += [form=fopar,strongbreak=+].
\=\} : punct += [form=fcpar].
\=-\= : punct += [form=fhyph,strongbreak=+].
\: : punct += [form=fcolon,strongbreak=+].
\; : punct += [form=fsemicolon,strongbreak=+].
\? : punct += [form=fquest]. // CH 16th August

\`\` : punct[punct=+,quote=+] += [form=foquotes].
\'\' : punct[punct=+,quote=+] += [form=fcquotes].

/ "`" is an unknown character \
\` : punct += ./needtospecifywhattypeofpunct!\

//In order to make the categories of "next" and "last" coherent, we change the
// category of next (adj) to nadj
next = nadj[nadj=+,preperiod=+].


// CH 31st October
// Adding the feature preperiod=+ to the lemma future, past
past = nadj[nadj=+,preperiod=+].
future = nadj[nadj=+,preperiod=+].
mid += [preperiod=+].


/**** ASSIGNING ADDITIONAL FEATURES TO ONE OR MORE LEMMATA **** \
/================================================================\


//The token "I" has only one morphological analysis namely a pronoun
//However, "I" may also be a roman numeral - NP{King George I} 
//{PRON;DIG}+[dig=+,pron=+,nom=+,personal=+,rom=+,rom:?,p1=+,sg=+,maj=+,toutmaj=+]
//I[pron=+] += dig[rom=+].
//PRON(2-2)+[dig=+,pron=+,nom=+,personal=+,rom=+,p1=+,sg=+,maj=+,toutmaj=+]
I : pron[pron=+, p1=+, sg=+, gen:~] += [dig=+,rom=+].
  



//to allow NP{Judge Fritz W. Alexander 2nd}
judge : noun[noun=+] += [title=+].


//required to exclude such adjectives from NPs such as NP{75 feet high}
long : nadj[nadj=+] += [meas=+].
wide : nadj[nadj=+] += [meas=+].
high : nadj[nadj=+] += [meas=+].



//These tokens precede time nouns 
//Sunday/Spring/week/year etc
last : nadj[nadj=+] += [preperiod=+].
// see next above, each
every : quant[quant=+] += [preperiod=+].


//Quants which modify NPs starting with a determiner
all : quant[quant=+] += [predet=+].
half : quant[quant=+] += [predet=+].
// CH 4th September
// We have to start with the most specific case. If it fails, the general case is then applied
both : quant[quant=+] += [predet=+,form=fboth].
both += [form=fboth].

amount = quant[quant=+, predet=+] .	


// CH 13th September
// Considering neither as a quantifier only and adding the feature form=fneither
// The feature predet=+ is added in order to avoid the construction of an NP just done with neither.
neither = quant[form=fneither,quant=+, predet=+, negat=+].

//ADDITIONAL PROPER NOUNS
noriega : noun[noun=+] += [proper=+].



//the feature "period" is used rather than "time" which
//causes NPs such as "The most dangerous day+time" to be excluded
//as well as "The celebration Monday"!

second : noun += [period=+] .
minute : noun += [period=+].
hour : noun += [period=+].
day : noun += [period=+].
night : noun += [period=+].
week : noun += [period=+].
month : noun += [period=+].
year : noun += [period=+].
decade : noun += [period=+].
century : noun += [period=+].
millenium : noun += [period=+].

//This feature is used in conjunction with the sequence marking rule
//which assigns the feature time to these tokens only when they
//are preceded by a token bearing the feature preperiod
//This allows NP{last Spring} and also NP{The Prague Spring}
//to avoid NP{Fred} NP{Winters}
Spring : noun[pl:~] += [period=+].
spring : noun[pl:~] += [period=+].
Summer : noun[pl:~] += [period=+].
summer : noun[pl:~] += [period=+].
Autumn : noun[pl:~] += [period=+].
autumn : noun[pl:~] += [period=+].
Winter : noun[pl:~] += [period=+].
winter : noun[pl:~] += [period=+].


time : noun += [period=+].
 
 
Sunday : noun += [time=+,period=+,day=+].
Monday : noun += [time=+,period=+,day=+].
Tuesday : noun += [time=+,period=+,day=+].
Wednesday : noun += [time=+,period=+,day=+].
Thursday : noun += [time=+,period=+,day=+].
Friday : noun += [time=+,period=+,day=+].	
Saturday : noun += [time=+,period=+,day=+].	

Jan : noun += [time=+,month=+,period=+].
Feb : noun += [time=+,month=+,period=+].
Mar : noun += [time=+,month=+,period=+].
Apr : noun += [time=+,month=+,period=+].
Jun : noun += [time=+,month=+,period=+].
Jul : noun += [time=+,month=+,period=+].
Aug : noun += [time=+,month=+,period=+].
Sep : noun += [time=+,month=+,period=+].
Oct : noun += [time=+,month=+,period=+].
Nov : noun += [time=+,month=+,period=+].
Dec : noun += [time=+,month=+,period=+].


Jan. : noun += [time=+,month=+,period=+].
Feb. : noun += [time=+,month=+,period=+].
Mar. : noun += [time=+,month=+,period=+].
Apr. : noun += [time=+,month=+,period=+].
Jun. : noun += [time=+,month=+,period=+].
Jul. : noun += [time=+,month=+,period=+].
Aug. : noun += [time=+,month=+,period=+].
Sept. : noun += [time=+,month=+,period=+].
Oct. : noun += [time=+,month=+,period=+].
Nov. : noun += [time=+,month=+,period=+].
Dec. : noun += [time=+,month=+,period=+].

January : noun += [time=+,month=+,period=+].
February : noun += [time=+,month=+,period=+].
March : noun += [time=+,month=+,period=+].
April : noun += [time=+,month=+,period=+].
May : noun += [time=+,month=+,period=+].
June : noun += [time=+,month=+,period=+].
July : noun += [time=+,month=+,period=+].
August : noun += [time=+,month=+,period=+].
September : noun += [time=+,month=+,period=+].
October : noun += [time=+,month=+,period=+].
November : noun += [time=+,month=+,period=+].
December : noun += [time=+,month=+,period=+].

// CH adding features on temporal elements
yesterday = noun[tempexpr=+].
today = noun[tempexpr=+].
tomorrow = noun[tempexpr=+].
tonight = noun[tempexpr=+].

now = adv[tempexpr=+,notly=+].
soon = adv[tempexpr=+,notly=+].

noon : noun += [hour=+].
midnight : noun += [hour=+].
midday : noun += [hour=+].
o'clock : adv += [form=foclock].


//J-C +=[form=fjc].
//J-C. +=[form=fjc].
//J.-C +=[form=fjc].
//J.-C. +=[form=fjc].
//JC +=[form=fjc].


//Required for ADVs such as ADV{Sunday night}
morning : noun += [posttime=+].
afternoon : noun += [posttime=+].
evening : noun += [posttime=+].
night : noun += [posttime=+].


//VERB PARTICLES THAT ARE TAGGED AS ADVERBS
//Many verb particles are tagged as adverbs and get included in chunk
//of following verb in sentence: "The group that broke FV{away was} ...." 
//By including the "part" feature they may be excluded from verb chunks
//while still allowing other adverbs to be included

aboard : adv += [vpart=+].
along : adv += [vpart=+].
around : adv += [vpart=+].
aside : adv += [vpart=+].
away : adv += [vpart=+].
back : adv += [vpart=+].
bottom : adv += [vpart=+].
by : adv += [vpart=+].
down : adv += [vpart=+].
forth : adv += [vpart=+].
//in : adv += [vpart=+]."in"notincludedasrulebelowchangesitsPOSto"prep"
off : adv += [vpart=+].
out : adv += [vpart=+].
over : adv += [vpart=+].
together : adv += [vpart=+].
through : adv += [vpart=+].
up : adv += [vpart=+].



/**** REPLACING SEVERAL MORPHOLOGICAL ANALYSES WITH JUST ONE****\
/================================================================\




//Replaces all possible analyses of "but" output by the morphological analyser
//with "conjunction" to avoid foll issue
//1248>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} !!FV{but was} NFV{delayed}
//1>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} SC{BG{but} FV{was}} NFV{delayed} 
//but = conj[sub=+].


/"another" as a determiner is indefinite AGNES \
another : det[det] += [indef=+].


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FOR GENES
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/per is a preposition, but since it is rare, it should be maintained as a potential gene name, unlike prepositions that can occur in relevant contexts for determining gene names\

per += prep[per=+].


/lexical markers of gene names\
accumulation : noun += ?[allmark=+].
activity : noun += ?[mark=+,xofgene=+].
allele : noun += [mark=+,xofgene=+,plmark=+].
binding_site : noun += [hyphmark=+,mark=+].
binding-site : noun += [hyphmark=+,mark=+].
complementary_DNA : noun += [mark=+,genterm=+,xofgene=+].
/clone : noun[noun=+] += [mark=+].\
//COMP//=dependent += [mark=+].
degrade : verb[pres=+] += ?[mark=+,form=fexpress,iv=+].
desoxyribonucleic_acid : noun += ?[mark=+,genterm=+,maj=~,xofgene=+,nopremark=+].
ribonucleic_acid  : noun += ?[rnaform=+,genterm=+,maj=~,xofgene=+].
//COMP//=encoded += [mark=+].
//COMP//=expressing += [mark=+].
//family : noun[noun=+] += [mark=+].
locus : noun += [mark=+].
gene : noun[noun=+] += [form=fgene].
minigene : noun[noun=+] += [form=fgene].
morphogene : noun[noun=+] += [form=fgene].
morphogen : noun[noun=+] += [form=fgene].
gene_product : noun[noun=+] += [mark=+].
protein : noun[noun=+] += [protein=+].
product : noun[noun] += [mark=+,xofgene=+].
production : noun[noun] += [mark=+,xofgene=+].
heterozygote : noun += ?[mark=+,genterm=+,xofgene=+].
heterozygotes : noun += ?[mark=+,genterm=+,xofgene=+].
homologue : noun += ?[mark=+,genterm=+,xofgene=+].
homolog : noun += ?[mark=+,genterm=+,xofgene=+].
homozygote : noun += ?[mark=+,genterm=+,xofgene=+].
homozygotes : noun += ?[mark=+,genterm=+,xofgene=+].
intron : noun += [mark=+].
isoform : noun += [allmark=+].
kinase : noun += [mark=+].
mRNA : noun += ?[rnaform=+,genterm=+,xofgene=+].
mRNAs : noun += ?[rnaform=+,genterm=+,xofgene=+].
messenger_RNA : noun += ?[rnaform=+,genterm=+,xofgene=+].
//COMP//=mRNAs += ?[rnaform=+,genterm=+,xofgene=+].
//COMP//=mRNA += ?[rnaform=+,genterm=+,xofgene=+].
//nRNA += ?[mark=+,genterm=+,xofgene=+].
//nRNAs += ?[mark=+,genterm=+,xofgene=+].
/RNA += ?[mark=+,genterm=+,maj=~].\
//COMP//=RNA += ?[rnaform=+,genterm=+,maj=~,xofgene=+].
//COMP//=RNAs += ?[rnaform=+,genterm=+,maj=~,xofgene=+].
morphogene : noun[noun=+] += [form=fgene].
mutant : noun += ?[mark=+,genattr=+,xofgene=+,plmark=+].
deletion_mutant : noun += ?[mark=+,genattr=+,xofgene=+,plmark=+].
mutation : noun[noun=+] += [mark=+,xofgene=+,xingene=+,plmark=+].
permissive_mutation : noun[noun=+] += [mark=+,xofgene=+,xingene=+,plmark=+].
oncogene : noun += ?[mark=+,xofgene=+].
pathway : noun += ?[mark=+].
phenotype : noun += ?[mark=+,xofgene=+].
premessenger_RNA : noun += ?[rnaform=+,xofgene=+].
probe : ?[noun] += [mark=+,xofgene=+].
pseudogene : noun += [mark=+,xofgene=+].
//COMP//=promoter : noun[noun=+] += [mark=+].
proto-oncogene : noun += [mark=+,xofgene=+].
reporter : noun[noun=+] += [mark=+,xofgene=+].
sequence : noun[noun=+] += [mark=+,genvocab=+,xofgene=+].
signaling += [mark=+].
signal : ?[vprog=+] += [mark=+].
strain : noun[noun=+] += [mark=+,xofgene=+].
transcript : noun[noun=+] += [rnaform=+,xofgene=+,plmark=+].
translation : noun += [mark=+,xofgene=+].
transcription_factor : noun += [mark=+,xofgene=+].
transgene : noun += ?[mark=+,genterm=+,xofgene=+].
transgenes : noun += ?[mark=+,genterm=+,xofgene=+].
vector : noun += ?[mark=+,xofgene=+].

/genetic terminology\
genome : noun += [genterm=+].
GUS : noun += [genterm=+].
homologue : noun += [genterm=+].
protein : noun += [genterm=+].
mutant_allele : noun += [genterm=+,mark=+,xofgene=+,plmark=+].


/biology terminology\
clone : noun += ?[xofgene=+,mark=+].

/the word "gene"\
gene : noun[noun=+] += [form=fgene].
genetic_marker : noun += ?[form=fgene].

flank : verb += ?[form=fexpress].
act : verb += [form=fexpress].

/gene LIKE/SUCH_AS/INCLUDING X, GENE called/designated X\
such_as : ? += ?[like=+].
including : ? += ?[like=+].
call : verb[partpas=+] += adj[like=+,name=+].
designate : verb[partpas=+]  += adj[like=+,name=+].


/words in the chain: X of "gene name"\
activity : noun += ?[xofgene=+].
alteration : noun += ?[xofgene=+].
deletion : noun += ?[xofgene=+].
expression_pattern : noun += ?[xofgene=+].
expression_profile : noun += ?[xofgene=+].
intron : noun += ?[xofgene=+,mark=+].
localization : noun += ?[xofgene=+].
physical_map : noun += ?[xofgene=+].
physical_mapping : noun += ?[xofgene=+].
coding\_region : noun += ?[xofgene=+].

/words in the chain X in "gene name"\
development : noun += ?[xingene=+].

/words in the chain X for "gene name"\

ligand  : noun += ?[xforgene=+].

/vocabulary often found in sentences that contain gene names\
role : noun += [genvocab=+].
require : verb += [genvocab=+].
required : adj += [genvocab=+].
requiring : noun += [genvocab=+].
requiring : adj += [genvocab=+].
regulatory : adj += [genvocab=+].
genomic : adj += [genvocab=+].
pattern : noun += [genvocab=+].
genetic : adj += [genvocab=+].
exon : noun += [genvocab=+].
function : noun += [genvocab=+,function=+].
functional : adj += [genvocab=+].
fragment : noun += [genvocab=+].
isolate : verb += [genvocab=+].
motif : noun += [genvocab=+].

/words that are often attributes of gene names\
ectopic : adj += ?[genattr=+].
//wild-type += ?[genattr=+].
//mutant += ?[genattr=+].
antisense : noun += ?[genattr=+].
full-length : noun += ?[genattr=+].
gap : noun += ?[genattr=+].
homozygous : adj += ?[genattr=+].
mutated : adj += ?[genattr=+].
mutate : verb[past=+,partpas=+] += ?[genattr=+].
//overexpress += ?[genattr=+].
//overexpressed += ?[genattr=+].
//overexpresses += ?[genattr=+].
//overexpressing += ?[genattr=+].
orthologous : adj += ?[genattr=+,xtogene=+].
transcriptional : adj += [genattr=+].

coexpress : verb[vprog:~] += [form=fexpress].
coexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
coexpressed : adj += ?[mark=+].
coexpressing : adj += ?[hyphmark=+,form=fexpress].
coexpressing : noun += ?[hyphmark=+,form=fexpress].
coexpressor : noun += ?[hyphmark=+,form=fexpress].
co-expression : noun += [nodetmark=+,xofgene=+,xingene=+].
coexpression : noun += [nodetmark=+,xofgene=+,xingene=+].

constitutive_gene_expression : noun += ?[mark=+,xofgene=+].
coordinate_gene_expression : noun += ?[mark=+,xofgene=+].

ectopic_expression : noun += ?[mark=+,xofgene=+].

express : verb[vprog:~] += [form=fexpress].
express : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
expressed : adj += ?[mark=+].
expressing : adj += ?[hyphmark=+,form=fexpress].
expressing : noun += ?[hyphmark=+,form=fexpress].
expressor : noun += ?[hyphmark=+,form=fexpress].
expression : noun += ?[nodetmark=+,xofgene=+,xingene=+].
expression : noun += [mark=+,xofgene=+].

gene_expression : noun += ?[mark=+,xofgene=+].

misexpress : verb[vprog:~] += [form=fexpress].
misexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
misexpressed : adj += ?[mark=+].
misexpressing : adj += ?[hyphmark=+,form=fexpress].
misexpressing : noun += ?[hyphmark=+,form=fexpress].
misexpression : noun += ?[nodetmark=+,xofgene=+,xingene=+].
misexpressor : noun += [mark=+,xofgene=+].

non-expressing : adj += ?[hyphmark=+,form=fexpress].
nonexpressind : adj += ?[hyphmark=+,form=fexpress].

overexpress : verb[vprog:~] += [form=fexpress].
overexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
overexpressed : adj += [form=fexpress].
overexpressing : adj += ?[hyphmark=+,form=fexpress].
overexpressing : noun += ?[hyphmark=+,form=fexpress].
over-expression : noun += [nodetmark=+,xofgene=+,xingene=+].
overexpression : noun += [nodetmark=+,xofgene=+,xingene=+].

underexpress : verb[vprog:~] += [form=fexpress].
underexpress : verb[vprog=+] += ?[hyphmark=+,form=fexpress].
underexpressed : adj += ?[mark=+].
underexpressing : adj += ?[hyphmark=+,form=fexpress].
underexpressing : noun += ?[hyphmark=+,form=fexpress].
underexpress : noun += ?[nodetmark=+,xofgene=+,xingene=+].
underexpressor : noun += [mark=+,xofgene=+].

transient_expression : noun += ?[mark=+,xofgene=+].

/species\
human : adj += ?[species=+].
human : noun += ?[species=+].
thaliana : noun += ?[species=+].
chicken : noun += ?[species=+].
drosophila : noun += ?[species=+].
vertebrate : adj += ?[species=+].
vertebrate : noun += ?[species=+].
mouse : noun += [species=+].


/compound words whose last element is a marker - taken from lex-biotip-spec.fst\ /new\

CAAT_sequence : noun += ?[mark=+,xofgene=+].
DNA_probe : noun += ?[mark=+,xofgene=+].
DNA_repair_gene : noun += ?[mark=+,xofgene=+,form=fgene].
DNA_sequence : noun += ?[mark=+,xofgene=+].
RAM_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
Shine-Delgarno_sequence : noun += ?[mark=+,xofgene=+].
Shine_Dalgarno_sequence : noun += ?[mark=+,xofgene=+].
ZFY_gene : noun += ?[mark=+,xofgene=+,form=fgene].
acquired_genetic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
alu_sequence : noun += ?[mark=+,xofgene=+].
amber_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
amplified_sequence : noun += ?[mark=+,xofgene=+].
antimutator_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
autonomous_replication_sequence : noun += ?[mark=+,xofgene=+].
autosomal_modifier_gene : noun += ?[mark=+,xofgene=+,form=fgene].
auxotrophic_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
back_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
base_sequence : noun += ?[mark=+,xofgene=+].
base_substitution_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
candidate_gene : noun += ?[mark=+,xofgene=+,form=fgene].
chain_termination_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
chimeric_gene : noun += ?[mark=+,xofgene=+,form=fgene].
chromosome_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
circular_permutation : noun += ?[mark=+,xofgene=+].
cleaved_amplified_polymorphic_sequence : noun += ?[mark=+,xofgene=+].
coding_sequence : noun += ?[mark=+,xofgene=+].
cold_sensitive_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
complementary_sequence : noun += ?[mark=+,xofgene=+].
//complex : ?[pl:~] : noun += ?[pair=+,negmark=+].
complex : noun += ?[pair=+,nogene=+].
transcription_complex: ?[pl:~] += ?[pair=+].
//gene_complex : ?[pl:~] : noun += ?[pair=+,negmark=+].
//protein_complex : ?[pl:~] : noun += ?[pair=+,negmark=+].
gene_complex : noun += ?[pair=+].
protein_complex : noun += ?[pair=+].
compound_heterozygote : noun += ?[mark=+,xofgene=+].
conditional-lethal_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
conditional_lethal_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
conditional_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
conditional_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
congenic_mouse_strain : noun += ?[mark=+,xofgene=+].
consensus_sequence : noun += ?[mark=+,xofgene=+].
conserved_sequence : noun += ?[mark=+,xofgene=+].
constitutive_gene : noun += ?[mark=+,xofgene=+,form=fgene].
constitutive_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
continuous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
control_of_gene_expression : noun += ?[mark=+,xofgene=+].
discontinuous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
dominant_allele : noun += ?[mark=+,xofgene=+,plmark=+].
double_heterozygote : noun += ?[mark=+,xofgene=+].
duplicate_gene : noun += ?[mark=+,xofgene=+,form=fgene].
dynamic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
early_gene : noun += ?[mark=+,xofgene=+,form=fgene].
env_gene : noun += ?[mark=+,xofgene=+,form=fgene].
expressed_gene : noun += ?[mark=+,xofgene=+,form=fgene].
extrachromosomal_gene : noun += ?[mark=+,xofgene=+,form=fgene].
fixed_allele : noun += ?[mark=+,xofgene=+,plmark=+].
flanking_sequence : noun += ?[mark=+,xofgene=+].
forward_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
frameshift_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
full_gene_sequence : noun += ?[mark=+,xofgene=+].
functional_allele : noun += ?[mark=+,xofgene=+,plmark=+].
gene_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
gene_probe : noun += ?[mark=+,xofgene=+].
gene_sequence : noun += ?[mark=+,xofgene=+].
genetic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
germinal_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
heat-shock_protein : noun += ?[mark=+,protein=+].
hemizygous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
hereditary_genetic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
heterogeneous_nuclear_mRNA : noun += ?[rnaform=+,xofgene=+].
heterologous_probe : noun += ?[mark=+,xofgene=+].
highly_repeated_sequence : noun += ?[mark=+,xofgene=+].
histocompatibility_gene : noun += ?[mark=+,xofgene=+,form=fgene].
homeotic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
housekeeping_gene : noun += ?[mark=+,xofgene=+,form=fgene].
hybrid_gene : noun += ?[mark=+,xofgene=+,form=fgene].
hybridization_probe : noun += ?[mark=+,xofgene=+].
hypostatic_gene : noun += ?[mark=+,xofgene=+,form=fgene].
immunoglobulin_gene : noun += ?[mark=+,xofgene=+,form=fgene].
inbred_mouse_strain : noun += ?[mark=+,xofgene=+].
inbred_strain : noun += ?[mark=+,xofgene=+].
insertion_sequence : noun += ?[mark=+,xofgene=+].
intervening_DNA_sequence : noun += ?[mark=+,xofgene=+].
intervening_nucleotide_sequence : noun += ?[mark=+,xofgene=+].
intervening_sequence : noun += ?[mark=+,xofgene=+].
inverted_repeat_sequence : noun += ?[mark=+,xofgene=+].
jumping_gene : noun += ?[mark=+,xofgene=+,form=fgene].
//COMP//=lacZ : noun += ?[mark=+,xofgene=+].
late_gene : noun += ?[mark=+,xofgene=+,form=fgene].
leader_peptide_gene : noun += ?[mark=+,xofgene=+,form=fgene].
leader_sequence : noun += ?[mark=+,xofgene=+].
leader_transcript : noun += ?[mark=+,xofgene=+,plmark=+].
leaky_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
leaky_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
lethal-equivalent_allele : noun += ?[mark=+,xofgene=+,plmark=+].
lethal_gene : noun += ?[mark=+,xofgene=+,form=fgene].
marker_gene : noun += ?[mark=+,xofgene=+,form=fgene].
missense_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
modifier_gene : noun += ?[mark=+,xofgene=+,form=fgene].
monocistronic_mRNA : noun += ?[rnaform=+,xofgene=+].
multiple_gene : noun += ?[mark=+,xofgene=+,form=fgene].
mutant_allele : noun += ?[mark=+,xofgene=+,plmark=+].
mutator_gene : noun += ?[mark=+,xofgene=+,form=fgene].
mutator_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
neutral_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
new_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
non_coding_sequence : noun += ?[mark=+,xofgene=+].
nonsense_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
nucleic_probe : noun += ?[mark=+,xofgene=+].
null_allele : noun += ?[mark=+,xofgene=+,plmark=+].
null_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
nutritional-requirement_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
obligate_heterozygote : noun += ?[mark=+,xofgene=+].
ochre_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
opal_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
outbred_mouse_strain : noun += ?[mark=+,xofgene=+].
overlapping_gene : noun += ?[mark=+,xofgene=+,form=fgene].
overlapping_sequence : noun += ?[mark=+,xofgene=+].
palindromic_sequence : noun += ?[mark=+,xofgene=+].
paralogous_gene : noun += ?[mark=+,xofgene=+,form=fgene].
partial_gene_sequence : noun += ?[mark=+,xofgene=+].
petite_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
pleiotropic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
point_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
poky_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
polar_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
polarity_gene : noun += ?[mark=+,xofgene=+,form=fgene].
polyadenylation_sequence : noun += ?[mark=+,xofgene=+].
polycistronic_mRNA : noun += ?[rnaform=+,xofgene=+].
primary_transcript : noun += ?[mark=+,xofgene=+,plmark=+].
protein_gene : noun += ?[mark=+,xofgene=+,form=fgene].
pseudoautosomal_gene : noun += ?[mark=+,xofgene=+,form=fgene].
pure-breeding_strain : noun += ?[mark=+,xofgene=+].
readthrough_transcription : noun += ?[mark=+,xofgene=+].
recessive_allele : noun += ?[mark=+,xofgene=+,plmark=+].
recombinant_inbred_strain : noun += ?[mark=+,xofgene=+].
redundant_gene : noun += ?[mark=+,xofgene=+,form=fgene].
regulation_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
regulator_gene : noun += ?[mark=+,xofgene=+,form=fgene].
regulatory_gene : noun += ?[mark=+,xofgene=+,form=fgene].
regulatory_sequence : noun += ?[mark=+,xofgene=+].
relaxed_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
reporter_gene : noun += ?[mark=+,xofgene=+,form=fgene].
reverse_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
same-sense_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
second-site_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
signal_sequence : noun += ?[mark=+,xofgene=+].
silent_gene : noun += ?[mark=+,xofgene=+,form=fgene].
silent_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
sine_sequence : noun += ?[mark=+,xofgene=+].
somatic_cell_genetic_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
somatic_hypermutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
somatic_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
split_gene : noun += ?[mark=+,xofgene=+,form=fgene].
spontaneous_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
structural_gene : noun += ?[mark=+,xofgene=+,form=fgene].
strucutural_gene : noun += ?[mark=+,xofgene=+,form=fgene].
subvital_gene : noun += ?[mark=+,xofgene=+,form=fgene].
suppressor_gene : noun += ?[mark=+,xofgene=+,form=fgene].
suppressor_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
synthetic_gene : noun += ?[mark=+,xofgene=+,form=fgene].
synthetic_lethal_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
tandem_repeat_sequence : noun += ?[mark=+,xofgene=+].
temperature-sensitive_mutant : noun += ?[mark=+,xofgene=+,plmark=+].
temperature-sensitive_mutation : noun += ?[mark=+,xofgene=+,xingene=+].
terminator_sequence : noun += ?[mark=+,xofgene=+].
transition_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
transversion_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
true-breeding_strain : noun += ?[mark=+,xofgene=+].
tumor-suppresser_gene : noun += ?[mark=+,xofgene=+,form=fgene].
tumor-suppressor_gene : noun += ?[mark=+,xofgene=+,form=fgene].
tumour_suppressor_gene : noun += ?[mark=+,xofgene=+,form=fgene].
unique_sequence : noun += ?[mark=+,xofgene=+].
unstable_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
up_promoter_mutation : noun += ?[mark=+,xofgene=+,plmark=+,xingene=+].
upstream_activator_sequence : noun += ?[mark=+,xofgene=+].
nucleoprotein : noun += ?[mark=+,protein=+].
non-histone_protein : noun += ?[mark=+,protein=+].
nonprotein : noun += ?[mark=+,protein=+].
helix-turn-helix_protein : noun += ?[mark=+,protein=+].
homeodomain_protein : noun += ?[mark=+,protein=+].
initiator_protein : noun += ?[mark=+,protein=+].
snRNP : noun += ?[mark=+,protein=+].
ssb : noun += ?[mark=+,protein=+].
single-strand_binding_protein : noun += ?[mark=+,protein=+].
single-strand_DNA_binding_protein : noun += ?[mark=+,protein=+].
small_nuclear_ribonucleoprotein : noun += ?[mark=+,protein=+].
green_flourescent_protein : noun += ?[mark=+,protein=+].
allosteric_protein : noun += ?[mark=+,protein=+].
antiterminator_protein : noun += ?[mark=+,protein=+].
catabolite_activator_protein : noun += ?[mark=+,protein=+].
catabolite_receptor_protein : noun += ?[mark=+,protein=+].
GFP : noun += ?[mark=+,protein=+].
CAP : noun += ?[mark=+,protein=+].
CRP : noun += ?[mark=+,protein=+].
HLH_protein : noun += ?[mark=+,protein=+].
zinc_finger_protein : noun += ?[mark=+,protein=+].
multiprotein : noun += ?[mark=+,protein=+].
preprotein : noun += ?[mark=+,protein=+].
protein : noun += ?[mark=+,protein=+].
lipoprotein : noun += ?[mark=+,protein=+].
ribonucleoprotein : noun += ?[mark=+,protein=+].

/Certain upper-case gene names are ambiguous with words of the general lexicon, but since they begin with a capital letter always, they are not in lex-ambig. They will need a special treatment. We don't want them to be gene names in a sentence initial position.\


It : pron += [pron=+,capamb=+].
Is : verb += [form=fbe,capamb=+].
On : prep += [capamb=+].
AND : conj += [capamb=+].

/I haven't found in the training corpus gene names that consist of only one letter, but single letters are often used for other purposes. So one-letter gene names from the lex-biotip won't get the feature "gene", just "guessgene", and "let"\

i : ? += [let=+,min=+].

/Certain ambiguous gene names are more likely not to be gene names in the text. There are rules to regulate their tagging.\

did : verb += [form=fdo].
not : ? += [form=fnot].

//COMP//=A += [let=+].
//COMP//=B += [let=+].
//COMP//=C += [let=+].
//COMP//=D += [let=+].
//COMP//=E += [let=+].
//COMP//=F += [let=+].
//COMP//=G += [let=+].
//COMP//=H += [let=+].
//COMP//=I += [let=+].
//COMP//=J += [let=+].
//COMP//=K += [let=+].
//COMP//=L += [let=+].
//COMP//=M += [let=+].
//COMP//=N += [let=+].
//COMP//=O += [let=+].
//COMP//=P += [let=+].
//COMP//=Q += [let=+].
//COMP//=R += [let=+].
//COMP//=S += [let=+].
//COMP//=T += [let=+].
//COMP//=U += [let=+].
//COMP//=V += [let=+].
//COMP//=W += [let=+].
//COMP//=X += [let=+].
//COMP//=Y += [let=+].
//COMP//=Z += [let=+].


A  : ? += [let=+].
B  : ? += [let=+].
C  : ? += [let=+].
D  : ? += [let=+].
E  : ? += [let=+].
F  : ? += [let=+].
G  : ? += [let=+].
H  : ? += [let=+].
I  : ? += [let=+].
J  : ? += [let=+].
K  : ? += [let=+].
L  : ? += [let=+].
M  : ? += [let=+].
N  : ? += [let=+].
O  : ? += [let=+].
P  : ? += [let=+].
Q  : ? += [let=+].
R  : ? += [let=+].
S  : ? += [let=+].
T  : ? += [let=+].
U  : ? += [let=+].
V  : ? += [let=+].
W  : ? += [let=+].
X  : ? += [let=+].
Y  : ? += [let=+].
Z  : ? += [let=+].

a  : ? += [let=+,min=+].
b  : ? += [let=+,min=+].
c  : ? += [let=+,min=+].
d  : ? += [let=+,min=+].
e  : ? += [let=+,min=+].
f  : ? += [let=+,min=+].
g  : ? += [let=+,min=+].
h  : ? += [let=+,min=+].
i  : ? += [let=+,min=+].
j  : ? += [let=+,min=+].
k  : ? += [let=+,min=+].
l  : ? += [let=+,min=+].
m  : ? += [let=+,min=+].
n  : ? += [let=+,min=+].
o  : ? += [let=+,min=+].
p  : ? += [let=+,min=+].
q  : ? += [let=+,min=+].
r  : ? += [let=+,min=+].
s  : ? += [let=+,min=+].
t  : ? += [let=+,min=+].
u  : ? += [let=+,min=+].
v  : ? += [let=+,min=+].
w  : ? += [let=+,min=+].
x  : ? += [let=+,min=+].
y  : ? += [let=+,min=+].
z  : ? += [let=+,min=+].

cytosine : noun[abr=+] += [let=+,min=+].
guanosine : noun[abr=+] += [let=+,min=+].
Svedberg_unit : noun[abr=+] += [let=+].
Thymidine : noun[abr=+] += [let=+].
uridine : noun[abr=+] += [let=+,min=+].
//COMP//=cytosine : noun[abr=+] += [let=+].
//COMP//=guanosine : noun[abr=+] += [let=+].
//COMP//=Svedberg_unit : noun[abr=+,min=+] += [let=+].
//COMP//=Thymidine : noun[abr=+] += [let=+].
//COMP//=uridine : noun[abr=+] += [let=+].

degree : meas += [let=+].
atomic_mass_unit : meas += [let=+].
tonne : meas += [let=+].
second : meas += [let=+].
meter : meas += [let=+].
liter : meas += [let=+].
hour : meas += [let=+].
gram : meas += [let=+].
bar : meas += [let=+].
Watt : meas += [let=+].
Volt : meas += [let=+].
enzyme_unit : meas += [let=+].
Newton : meas += [let=+].
Morgan : meas += [let=+].
Joule : meas += [let=+].
Farad : meas += [let=+].
Dalton : meas += [let=+].
Coulomb : meas += [let=+].
Ampere : meas += [let=+].
Angstrom : meas += [let=+].

//COMP//=degree : meas += [let=+].
//COMP//=atomic_mass_unit : meas += [let=+].
//COMP//=tonne : meas += [let=+].
//COMP//=second : meas += [let=+].
//COMP//=meter : meas += [let=+].
//COMP//=liter : meas += [let=+].
//COMP//=hour : meas += [let=+].
//COMP//=gram : meas += [let=+].
//COMP//=bar : meas += [let=+].
//COMP//=Watt : meas += [let=+].
//COMP//=Volt : meas += [let=+].
//COMP//=enzyme_unit : meas += [let=+].
//COMP//=Newton : meas += [let=+].
//COMP//=Morgan : meas += [let=+].
//COMP//=Joule : meas += [let=+].
//COMP//=Farad : meas += [let=+].
//COMP//=Dalton : meas += [let=+].
//COMP//=Coulomb : meas += [let=+].
//COMP//=Ampere : meas += [let=+].
//COMP//=Angstrom : meas += [let=+].

Yttrium : noun[genterm=+] += [let=+,genterm=~].
Wolfram : noun[genterm=+] += [let=+,genterm=~].
Vanadium : noun[genterm=+] += [let=+,genterm=~].
Uranium : noun[genterm=+] += [let=+,genterm=~].
uridine : noun[genterm=+] += [let=+,genterm=~].
uracil : noun[genterm=+] += [let=+,genterm=~].
thymidine : noun[genterm=+] += [let=+,genterm=~].
thymine : noun[genterm=+] += [let=+,genterm=~].
Svedberg_unit : noun[genterm=+] += [let=+,genterm=~].
Sulfur : noun[genterm=+] += [let=+,genterm=~].
Oxygen : noun[genterm=+] += [let=+,genterm=~].
Nitrogen : noun[genterm=+] += [let=+,genterm=~].
Iodine : noun[genterm=+] += [let=+,genterm=~].
Hydrogen : noun[genterm=+] += [let=+,genterm=~].
guanine : noun[genterm=+] += [let=+,genterm=~].
guanosine : noun[genterm=+] += [let=+,genterm=~].
Fluorine : noun[genterm=+] += [let=+,genterm=~].
Carbon : noun[genterm=+] += [let=+,genterm=~].
cytosine : noun[genterm=+] += [let=+,genterm=~].
cytidine : noun[genterm=+] += [let=+,genterm=~].
Boron : noun[genterm=+] += [let=+,genterm=~].
adenine : noun[genterm=+] += [let=+,genterm=~].
adenosine : noun[genterm=+] += [let=+,genterm=~].
Potassium : noun[genterm=+] += [let=+,genterm=~].
Phosphorus : noun[genterm=+] += [let=+,genterm=~].


//COMP//=Yttrium : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Wolfram : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Vanadium : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Uranium : noun[genterm=+] += [let=+,genterm=~].
//COMP//=uridine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=uracil : noun[genterm=+] += [let=+,genterm=~].
//COMP//=thymidine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=thymine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Svedberg_unit : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Sulfur : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Oxygen : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Nitrogen : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Iodine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Hydrogen : noun[genterm=+] += [let=+,genterm=~].
//COMP//=guanine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=guanosine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Fluorine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Carbon : noun[genterm=+] += [let=+,genterm=~].
//COMP//=cytosine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=cytidine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Boron : noun[genterm=+] += [let=+,genterm=~].
//COMP//=adenine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=adenosine : noun[genterm=+] += [let=+,genterm=~].
//COMP//=Potassium : noun[genterm=+] += [let=+,genterm=~].

/Some words in the ambiguous lexicon are unlikely to be gene names. They get the feature nogene=+\


capability  : ? += ?[nogene=+].
lines : ? += ?[nogene=+].
increased  : ? += ?[nogene=+].
spliced  : ? += ?[nogene=+].
lacking  : ? += ?[nogene=+].
truncated  : ? += ?[nogene=+].
truncate  : ? += ?[nogene=+].
multiple  : ? += ?[nogene=+].
inactive  : ? += ?[nogene=+].
acute  : ? += ?[nogene=+].
double  : ? += ?[nogene=+].
short  : ? += ?[nogene=+].
high  : ? += ?[nogene=+].
combined  : ? += ?[nogene=+].
brain  : ? += ?[nogene=+].
heart  : ? += ?[nogene=+].
similar  : ? += ?[nogene=+].
receptor  : ? += ?[nogene=+,mark=+].
weak  : ? += ?[nogene=+].
cell  : ? += ?[nogene=+].
can  : ? += ?[nogene=+].
activator  : ? += ?[nogene=+].
//COMP//=to += ?[gene=~,gsb=~].

/certain hyphened words are markers of gene/protein names. They get the the feature hyphmark=+. A rule will assign them the feature mark=+\

mediate : verb[partpas=+] += adj[hyphmark=+,genact=+].
mediate : adj += adj[hyphmark=+,partpas=+,genact=+].
mediated : adj += adj[hyphmark=+,genact=+].
deficient  : ? += ?[hyphmark=+].
dependent  : ? += ?[hyphmark=+,allmark=+,genact=+].
induce : ? += ?[hyphmark=+,allmark=+,genact=+].
induced : ? += ?[hyphmark=+,allmark=+,genact=+].
lacZ  : ? += ?[hyphmark=+].

\/  : ? += ?[separ=+].

//cell += ?[negmark=+].
//class  : ? += ?[negmark=+].
//domain += ?[negmark=+].
//protein_domain += ?[negmark=+].
//homeo_domain += ?[negmark=+].
//homeo-domain += ?[negmark=+].
//homeodomain += ?[negmark=+].
//factor : noun[pl=+] += ?[negmark=+].
//family  : ? += ?[negmark=+].
//gene_family  : ? += ?[negmark=+].
//group  : ? += ?[negmark=+].
//subfamily  : ? += ?[negmark=+].
//molecule += ?[negmark=+].
//gene : ?[pl=+] += ?[negmark=+].
//protein : ?[pl=+] += ?[negmark=+].

//Greek letters written in full letters are often parts of multiword entity names\
alpha  : ? += ?[greeklet=+].
beta  : ? += ?[greeklet=+].
kappa  : ? += ?[greeklet=+].

//in the sequence SPECIES homolog of ENTITY, ENTITY does not belong to SPECIES. So "homolog" gets the feature blockspe=+ so that this can be encoded

homolog  : ? += ?[blockspe=+].
homologue  : ? += ?[blockspe=+].

// ambiguous noun/verb that are verbs between 2 nouns
use : noun += noun[verbuse=+].

//retokenization

site : noun += noun[site=+] .

//prefixes

co : ? += ?[prefix=+].
auto : ? += ?[prefix=+].
down : ? += ?[prefix=+].
up : ? += ?[prefix=+].
cross  : ? += ?[prefix=+].
pre  : ? += ?[prefix=+].
mis  : ? += ?[prefix=+].



//"signal(l)ing", etc. has the same behaviour as "binding"

signal : ?[vprog=+] += ?[binding=+] .
signalling  : ? += ?[binding=+] .
signaling  : ? += ?[binding=+] .
label : ?[vprog=+] += ?[binding=+] .
labelling  : ? += ?[binding=+] .
labeling  : ? += ?[binding=+] .
stain : ?[vprog=+] += ?[binding=+] .
staining  : ? += ?[binding=+] .
splice : ?[vprog=+] += ?[binding=+] .
splicing  : ? += ?[binding=+] .

//words with unusual tagging for disamb_biotip

repeat  : ? += ?[repeat=+].

//P\ element : noun += ?[compound=+].


// interaction words

acetylate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
acetylate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
acetylate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
acetylate : adj[ding=+] += ?[ia=+].
acetylate : noun[ding=+] += ?[in=+].
acetylation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
acetylator : noun[dor=+] += ?[mark=+,ier=+].

activate : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark=+,iving=+].
activate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
activate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
activate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark=+].
activate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark=+].
activation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
activator : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

allele_specific_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].
amber_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

autoactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
autoactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
autoactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
autoactivate : adj[ding=+] += ?[mark=+,form=fexpress,ia=+].
autoactivate : noun[ding=+] += ?[mark=+,form=fexpress,in=+].
autoactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
autoactivator : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

autogenous_regulation : noun[dion=+] += ?[xofgene=+,in=+].
autogenous_repressor : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

autophosphorylate : verb[vprog:~] += ?[mark=+,xofgene=+,iv=+].
autophosphorylate : verb[vprog=+] += ?[mark=+,xofgene=+,iving=+].
autophosphorylate : adj[ded=+] += ?[ia=+].
autophosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
autophosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
autophosphorylation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

autoregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
autoregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
autoregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
autoregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
autoregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
autoregulation : noun[dion=+] += ?[xofgene=+,in=+].
autoregulator : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

autotransport : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+].

bind : verb[vprog=+] += ?[hyphmark=+,pair=+,mark=+,binding=+,iving=+].
bind : verb[vprog:~] += ?[mark=+,bind=+,iv=+].
bind : noun[dor=+] += noun[mark=+,ier=+].
bind : adj[ding=+] += ?[hyphmark=+,pair=+,binding=+,ia=+].
bind : noun[ding=+] += ?[hyphmark=+,pair=+,binding=+,in=+].
bind : adj[ded=+] += adj[ia=+].

bioactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
biodegradation : noun[dion=+] += [in=+,xofgene=+].
bypass_suppressor  : noun[dor=+] += [mark=+,xofgene=+,ier=+].
cDNA_cloning : noun += ?[xofgene=+].

catabolite_repression : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

coactivate : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark=+,iving=+].
coactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
coactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
coactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark=+].
coactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark=+].
coactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
coactivator : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

code : verb[vprog=+] += ?[hyphmark=+,code=+,iving=+].
code : verb[vprog:~] += ?[iv=+,code=+].
code : adj[ded=+] += ?[ia=+].
code : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
code : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].

control : verb[vprog=+] += ?[hyphmark=+,code=+,iving=+].
control : verb[vprog:~] += ?[iv=+,code=+].
control : adj[ded=+] += ?[ia=+].
control : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
control : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].

corepress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
corepress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
corepress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
corepress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
corepress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
corepression : noun[dion=+] += [mark=+,xofgene=+,in=+].
corepressor : noun[dor=+] += ?[mark=+,genterm=+,xofgene=+,ier=+].
co-repressor : noun[dor=+] += [mark=+,xofgene=+,ier=+].
corepressor : noun[dor=+] += ?[mark=+,genterm=+,xofgene=+,ier=+].

co-transport : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+,prot=~].
cotransport : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+,prot=~].

crossover_suppression : noun[dion=+] += [mark=+,xofgene=+,in=+].
crossover_suppressor  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

deacetylate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
deacetylate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
deacetylate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
deacetylate : adj[ding=+] += ?[ia=+].
deacetylate : noun[ding=+] += ?[in=+].
deacetylation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
deacetylator : noun[dor=+] += ?[mark=+,ier=+].

deactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
deactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
deactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
deactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress].
deactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress].
deactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
deactivator : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

degradation : noun[dion=+] += [mark=+,in=+,xofgene=+].
degrade : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark=+,iving=+].
degrade : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
degrade : adj[ded=+] += ?[ia=+].
degrade : adj[ding=+] += ?[mark=+,form=fexpress,hyphmark=+,ia=+].
degrade : noun[ding=+] += ?[mark=+,form=fexpress,hyphmark=+,in=+].
degrader : noun[dor=+] += ?[mark=+,ier=+].

dephosphorylate : verb[vprog:~] += ?[mark=+,xofgene=+,iv=+].
dephosphorylate : verb[vprog=+] += ?[mark=+,xofgene=+,iving=+].
dephosphorylate : adj[ded=+] += ?[ia=+].
dephosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
dephosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
dephosphorylation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

deregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
deregulate : verb[vprog:~] += [mark=+,form=fexpress,iving=+].
deregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
deregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
deregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
deregulation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
deregulator : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

derepress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
derepress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
derepress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
derepress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
derepress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
derepression : noun[dion=+] += [mark=+,xofgene=+,in=+].

dimerize : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
dimerize : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
dimerize : adj[ded=+] += [mark=+,form=fexpress,ia=+].
dimerize : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
dimerize : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
dimerization : noun[dion=+] += [mark=+,xofgene=+,in=+].

disrupt : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
disrupt : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
disrupt : adj[ded=+] += [mark=+,form=fexpress,ia=+].
disrupt : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
disrupt : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
disruption : noun[dion=+] += [mark=+,xofgene=+,in=+].

dissociate : verb[vprog:~] += [iv=+].
dissociate : verb[vprog=+] += [iving=+].
dissociate : adj[ded=+] += adj[ia=+].
dissociate : adj[ding=+] += [ia=+].
dissociate : noun[ding=+] += [in=+].
dissociation : noun[dion=+] += [in=+].

DNA-binding : noun += [genvocab=+,maj=~,in=+].
DNA_cloning : noun += ?[xofgene=+].

downregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
downregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
downregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
downregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
downregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
downregulation : noun[dion=+] += noun[mark=+,xofgene=+,in=+].
downregulator : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

ectopic_activation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
ectopic_transcription : noun[dion=+] += [mark=+,xofgene=+,xfromgene=+,in=+].

encode : verb[vprog:~] += ?[hyphmark=+,code=+,iv=+].
encode : verb[vprog=+] += ?[hyphmark=+,code=+,iving=+].
encode : adj[ded=+] += ?[hyphmark=+,mark=+,code=+,past=~,ia=+].
encode : adj[ding=+] += ?[code=+,hyphmark=+,ia=+].
encode : noun[ding=+] += ?[code=+,hyphmark=+,in=+].

enhance : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
enhance : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
enhanced : adj += [mark=+,form=fexpress,hyphmark=+,ia=+].
enhancing : adj += [mark=+,form=fexpress,hyphmark=+,ia=+].
enhancing : noun += [mark=+,form=fexpress,hyphmark=+,in=+].
//enhance : noun[dion=+] += noun[mark=+,xofgene=+,in=+].
enhancer : noun += [mark=+,xofgene=+,form=fgene,ier=+].

feedback_inhibition : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
gene_cloning : noun += ?[xofgene=+].
gene_disruption : noun[dion=+] += [mark=+,xofgene=+,in=+].

hyperacetylate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
hyperacetylate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
hyperacetylate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
hyperacetylate : adj[ding=+] += ?[ia=+].
hyperacetylate : noun[ding=+] += ?[in=+].
hyperacetylation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].

hyperphosphorylate : verb[vprog=+] += ?[mark=+,hyphmark=+,iving=+].
hyperphosphorylate : verb[vprog:~] += ?[mark=+,iv=+].
hyperphosphorylate : adj[ded=+] += ?[ia=+].
hyperphosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
hyperphosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
hyperphosphorylation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

implicate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
implicate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
implicate : adj[ded=+] += ?[ia=+].
implicate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
implication : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
implication : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
implicator : noun[dor=+] += [mark=+,xofgene=+,ier=+].


immunosuppress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
immunosuppress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
immunosuppress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
immunosuppress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
immunosuppress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
immunosuppression : noun[dion=+] += [mark=+,xofgene=+,in=+].
immunosuppressor : noun[dor=+] += [mark=+,xofgene=+,ier=+].

inactivate : verb[vprog=+] += ?[mark=+,form=fexpress,hyphmark,iving=+].
inactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
inactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
inactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark].
inactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark].
inactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
inactivator : noun[dor=+] += ?[mark=+,ier=+].

inhibit : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
inhibit : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
inhibit : adj[ded=+] += ?[ia=+].
inhibit : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
inhibit : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
inhibition : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
inhibitor : noun[dor=+] += [mark=+,xofgene=+,ier=+].

insertional_inactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].

interact : verb[vprog=+] += [finteract=+,mark=+,hyphmark=+,iving=+].
interact : verb[vprog:~] += [finteract=+,mark=+,iv=+].
interact : adj[ded=+] += [finteract=+,mark=+,ia=+].
interact : adj[ding=+] += [mark=+,finteract=+,hyphmark=+,ia=+].
interaction : noun[ding=+] += [mark=+,finteract=+,hyphmark=+,in=+].
interactor : noun[dor=+] += [mark=+,xofgene=+,ier=+].

intergenic_suppression : noun[dion=+] += [mark=+,xofgene=+,in=+].
intragenic_suppression : noun[dion=+] += [mark=+,xofgene=+,in=+].
lateral_inhibition : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].
linkage_disruption : noun[dion=+] += [mark=+,xofgene=+,in=+].
membrane_transport : noun += [mark=+,xofgene=+,in=+].

//minimal_promote : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

misregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
misregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
misregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
misregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
misregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
misregulation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].


non-code : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
noncode : adj[ding=+] += ?[mark=+,genterm=+,xofgene=+,ia=+,hyphmark=+].
non-code : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].
noncode : noun[ding=+] += ?[mark=+,genterm=+,xofgene=+,in=+,hyphmark=+].

nonsense_suppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

overproduction_suppression : noun[dion=+] += [mark=+,xofgene=+,in=+].
oxidative_phosphorylation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
passive_transport : noun += [mark=+,xofgene=+,in=+].

phosphorylate : verb[vprog=+] += ?[mark=+,hyphmark=+,iving=+].
phosphorylate : verb[vprog:~] += ?[mark=+,iv=+].
phosphorylate : adj[ded=+] += ?[ia=+].
phosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
phosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
phosphorylation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
phosphorylator : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

photoinhibition : noun[dion=+] += [mark=+,xofgene=+,in=+,inhibit=+].

photophosphorylate : verb[vprog=+] += ?[mark=+,hyphmark=+,iving=+].
photophosphorylate : verb[vprog:~] += ?[mark=+,iv=+].
photophosphorylate : adj[ded=+] += ?[ia=+].
photophosphorylate : adj[ding=+] += adj[mark=+,hyphmark=+,ia=+].
photophosphorylate : noun[ding=+] += noun[mark=+,hyphmark=+,in=+].
photophosphorylation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].

photoreactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].

positional_cloning : noun += ?[xofgene=+].
post-transcriptional_regulation : noun[dion=+] += ?[xofgene=+,in=+].
posttranscriptional_regulation : noun[dion=+] += ?[xofgene=+,in=+].
post-translational_regulation : noun[dion=+] += ?[xofgene=+,in=+].
posttranslational_regulation : noun[dion=+] += ?[xofgene=+,in=+].

promote : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
promote : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
promote : adj[ded=+] += ?[ia=+].
//promote : noun[dor=+] += [mark=+,xofgene=+,hyphmark=+,ier=+].
promote : adj[ding=+] += [mark=+,hyphmark=+,ia=+].
promote : noun[ding=+] += [mark=+,hyphmark=+,in=+].
promotion : noun[dion=+] += [mark=+,xofgene=+,in=+].


reactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
reactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+].
reactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
reactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress].
reactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress].
reactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
reactivator : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

regulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
regulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
regulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
regulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
regulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
regulation : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
regulator : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

repress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
repress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
repress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
repress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
repress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
repression : noun[dion=+] += [mark=+,xofgene=+,in=+].
repressor : noun[dor=+] += [mark=+,xofgene=+,ier=+].

reverse_transcription : noun[dion=+] += ?[mark=+,xofgene=+,in=+].
shotgun_cloning : noun += ?[xofgene=+].


silence : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
silence : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
silenced : adj += [mark=+,form=fexpress,ia=+].
silencing : adj += [mark=+,form=fexpress,hyphmark=+,ia=+].
silencing : noun += [mark=+,form=fexpress,hyphmark=+,in=+].
//silence : noun[dion=+] += [mark=+,xofgene=+,in=+].
silencer : noun += [mark=+,xofgene=+,ier=+].

//strong_promote : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].
skewed_X-inactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
subcloning : noun += ?[xofgene=+].
supersuppress  : noun[dor=+] += [mark=+,xofgene=+,ier=+].

suppress : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
suppress : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
suppress : adj[ded=+] += [mark=+,form=fexpress,ia=+].
suppress : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
suppress : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
suppression : noun[dion=+] += [mark=+,xofgene=+,in=+].
suppressor : noun[dor=+] += [mark=+,xofgene=+,ier=+].

transactivate : verb[vprog:~] += ?[mark=+,form=fexpress,iv=+].
transactivate : verb[vprog=+] += ?[mark=+,form=fexpress,iving=+,hyphmark=+].
transactivate : adj[ded=+] += ?[mark=+,form=fexpress,ia=+].
transactivate : adj[ding=+] += ?[ia=+,mark=+,form=fexpress,hyphmark=+].
transactivate : noun[ding=+] += ?[in=+,mark=+,form=fexpress,hyphmark=+].
trans-activation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
transactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
trans-activation : noun[dion=+] += ?[xofgene=+,mark=+,in=+].
transactivator : noun[dor=+] += ?[mark=+,xofgene=+,ier=+].

transcription : noun[dion=+] += [mark=+,xofgene=+,xfromgene=+,in=+].
translational_repressor : noun[dor=+] += [mark=+,xofgene=+,ier=+].

transport : noun += [mark=+,xofgene=+,in=+].
transport : verb[vprog=+] += [hyphmark=+,iv=+].
transport : verb[vprog:~] += [hyphmark=+,iving=+].
transport : adj[ded=+] += ?[ia=+].
transporter : noun[dor=+] += [genvocab=+,xofgene=+,mark=+,ier=+].
transport : adj[ding=+] += [hyphmark=+,ia=+].
transport : noun[ding=+] += [hyphmark=+,in=+].

ubiquination : noun[dion=+] += [mark=+,xofgene=+,xfromgene=+,in=+].

upregulate : verb[vprog=+] += [mark=+,form=fexpress,hyphmark=+,iving=+].
upregulate : verb[vprog:~] += [mark=+,form=fexpress,iv=+].
upregulate : adj[ded=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
upregulate : adj[ding=+] += [mark=+,form=fexpress,hyphmark=+,ia=+].
upregulate : noun[ding=+] += [mark=+,form=fexpress,hyphmark=+,in=+].
upregulation : noun[dion=+] += noun[mark=+,xofgene=+,in=+].
upregulator : noun[dor=+] += [mark=+,xofgene=+,form=fgene,ier=+].

UV_reactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
weigle_reactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
X_chromosome_inactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].
X_hyperactivation : noun[dion=+] += [genvocab=+,xofgene=+,mark=+,in=+].


interaction : noun[dion=+] += [finteract=+,pair=+,xofgene=+].
gene_interaction : noun[dion=+] += [finteract=+,pair=+,xofgene=+].
inductive_interaction : noun[dion=+] += [finteract=+,pair=+,xofgene=+].
ligand-receptor_interaction : noun[dion=+] += [finteract=+,pair=+,xofgene=+].


// expressions equivalent to copulas

// play a role

play : verb += [copverb=+].
role : noun += [copobj=+].

// Repression was mediated by
// Repression is dependent on
// 

