DependencyRules:

1> | #1[annot], #2[ier] | 
	PATIENT[interact=+](#2,#1).

1> | #1[ier], (?[allmark,ier:~]), (punct;?[like]), #2[annot] |
	AGENT[interact=+](#1,#2).

//  bicoid protein (bcd), which activates

//| #1[annot], punct, punct, ?[form:fwhich], #2[iv] |
//	AGENT[interact=+](#2,#1).

1> | #1[annot], (punct), punct, ?[form:fwhich], #2[verb] |
	MOD[post=+,sentence=+,relativ=+](#1,#2) .

// some genes (twist and Ubx) MOD[post,appos](genes,twist); MOD[post,appos](genes,Ubx)

1> | #1, punct[form:fopar], #2[annot], punct[form:fcpar] |
	MOD[post=+,appos=+](#1,#2).

1> | #1, punct[comma], #2[annot], punct[comma] |
	MOD[post=+,appos=+](#1,#2).

1> | #1[allmark], punct[form:fopar], #2[annot], conj[coord], #3[annot],  punct[form:fcpar] |
	MOD[post=+,appos=+](#1,#2).

1> | #1[allmark], punct[comma], #2[annot], conj[coord], #3[annot],  punct[comma] |
	MOD[post=+,appos=+](#1,#2).

1> | #1[allmark], punct[form:fopar], #2[annot], conj[coord], #3[annot],  punct[form:fcpar] |
	MOD[post=+,appos=+](#1,#3).

1> | #1[allmark], punct[comma], #2[annot], conj[coord], #3[annot],  punct[comma] |
	MOD[post=+,appos=+](#1,#3).

1> | #1[allmark], ?+[form:~fcpar], #2[insitem] |
	MOD[post=+,appos=+](#1,#2).

1> | #1[annot], punct[form:fopar], #2[annot], punct[form:fcpar] |
	MOD[post=+,appos=+](#1,#2).

// bind to X -> PATIENT(bind,to,X) - in any form of "bind" 
// in order to achieve this we create a dependency - liaison - btw "bind" and "to" 

1> | #1[binding], #2[form:finfto] |
	LIAISON(#1,#2).

// X-activated Y

1> | ?[annot], ?[form:fhyph], #1[ia], #2[annot] |
	PATIENT[interact=+](#1,#2).

1> | ?[annot], ?[form:fhyph], #1[iv], #2[annot] |
	PATIENT[interact=+](#1,#2).

// create auxiliary dependency so that the tree structure should not disturb later: Xed by EDBY(Xed,by)

1> | #1[iv];?[ia], #2[form:fby] |
	EDBY(#1,#2).