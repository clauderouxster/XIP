DependencyRules:

//increase the scope of contextual rules for marking entities: if a potential gene name is the subject of a marker, it is a gene name

compute ( SUBJ(#1[mark:+],#2) & #2[guessgeneprot:+] & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ).

//increase the scope of contextual rules for marking entities: if a potential gene name is the object of a marker, it is a gene name

compute ( OBJ(#1[mark:+],#2) & #2[guessgeneprot:+] & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ).

//increase the scope of contextual rules for marking entities: if a potential gene name is the agent of a marker, it is a gene name

compute ( AGENT(#1[mark:+],#2) & #2[guessgeneprot:+] & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ).

// increase the scope of contextual rules for marking entities: X gene/protein - if X is a MOD_PRE of gene/prot

//compute ( MOD[pre](#1[form:fprot,pl:~],#2[guessgeneprot:+]) & #2[protannot=+] & #2[annot=+] ).
compute ( MOD[pre](#1[form:fprot],#2[guessgeneprot:+]) & #2[protannot=+] & #2[annot=+] ).

//compute ( MOD[pre](#1[form:fgene,pl:~],#2[guessgeneprot:+]) & #2[genannot=+] & #2[annot=+] ).
compute ( MOD[pre](#1[form:fgene],#2[guessgeneprot:+]) & #2[genannot=+] & #2[annot=+] ).


// increase the scope of contextual rules for marking entities: "expression of only AtFer2"

compute ( MOD[post](?[xofgene],#1[guessgeneprot:+]) & PREPD(#1,?[form:fof]) & #1[annot=+] & #1[genannot=+] & #1[protannot=+] ).

// increase the scope of contextual rules for marking entities: "interacts in vitro with AtRrp41p"


compute ( MOD[post](?[verb,form:finteract],#1[guessgeneprot:+]) & #1[annot=+] & #1[genannot=+] & #1[protannot=+] ).

// increase the scope of contextual rules for marking entities: "gpIL-5 binds to the gpIL-5r"

compute ( MOD[post](verb[form:fbind],#1[guessgeneprot:+]) & #1[annot=+] & #1[genannot=+] & #1[protannot=+] ).

// increase the scope of contextual rules for marking entities: "code for"

compute ( MOD[post](verb[form:fcode],#1[guessgeneprot:+]) & #1[annot=+] & #1[genannot=+] & #1[protannot=+] ).

// increase the scope of contextual rules for marking entities: SUBJ(iv,X)

compute ( SUBJ(?[iv],#1[guessgeneprot:+]) & #1[annot=+] & #1[genannot=+] & #1[protannot=+] ).

// increase the scope of contextual rules for marking entities: xofgene

compute ( MOD[post](#1[xofgene],#2[guessgeneprot]) & PREPD(#2,#3[form:fof]) & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ) .
	
// increase the scope of contextual rules for marking entities: interaction between X

compute ( PREPD(#1[guessgeneprot],#2[sc_pbetween]) & #1[annot=+] & #1[genannot=+] & #1[protannot=+] ) .


// increase the scope of contextual rules for marking entities: in by X

compute ( MOD[post](#1[in],#2[guessgeneprot]) & PREPD(#2[guessgeneprot],#3[agprep]) & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ).


// increase the scope of contextual rules for marking entities: in of X

compute ( MOD[post](#1[in],#2[guessgeneprot]) & PREPD(#2[guessgeneprot],#3[form:fof]) & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ).


// increase the scope of contextual rules for marking entities: ier (X)

| ?{?*, ?^#1[ier,last]}, ins{?, np{#2[guessgeneprot]}} |
compute (#2[annot=+] & #2[genannot=+] & #2[protannot=+] ).


//increase the scope of contextual rules for marking entities: X is a marker

compute ( SUBJ(#1[form:fbe],#2[guessgeneprot]) & NUCL[subjcompl](#1,#3[allmark]) & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ).

// "The ability of dl to function as both an activator and repressor ... " dl is an activator)

compute  ( MOD[post](#1,#2[guessgeneprot]) & PREPD(#2[guessgeneprot],#3[form:fof]) & MOD[post,infinit](#1,#4) & MOD[post](#4,#5[ier]) & #2[annot=+] & #2[genannot=+] & #2[protannot=+] ).