//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : localgram_npr.xip
//!   Date       : 10/02/2003
//!   Author     : Caroline Brun
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



Sequence:


//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




// Quoted relation for elements between quotes, which can be on interest ???
// for example "Andy Warhol" is a Song, some context may help later 
// to determine "real"  tags ...


//1> noun[quoted:+,proper:+] @=    |?[guille:~]| ?[guille:+,proper:+];?[guille:+,punct:+],  ?*[guille], ?[guille:+,proper:+];?[guille:+,punct:+] |?[guille:~]| .

//1> noun[quoted:+,proper:+] @=    ?[guille:+,proper:+,start];?[guille:+,punct:+], ?*[guille], ?[guille:+,proper:+];?[guille:+,punct:+] |?[guille:~]| .

//1> noun[quoted:+,maj:+] @=    |?[guille:~]| ?[guille:+,maj:+];?[guille:+,punct:+],  ?*[guille], ?[guille:+,maj:+];?[guille:+,punct:+] |?[guille:~]| .

//1> noun[quoted:+,maj:+] @=    ?[guille:+,maj:+,start];?[guille:+,punct:+], ?*[guille], ?[guille:+,maj:+];?[guille:+,punct:+] |?[guille:~]| .

1> noun[quoted:+,proper:+] @=    |?[guille:~]| ?[guille:+,proper:+] |?[guille:~]| .

1> noun[quoted:+,maj:+] @=    |?[guille:~]| ?[guille:+,maj:+] |?[guille:~]| .


// Information Minister/Secretary ...

1> noun[mwe:+,features:!] = noun[proper,firstname:~];noun[maj,firstname:~], (adj) ,(noun[proper:~];adj), noun[lemme:Minister,!features:!];noun[lemme:Secretary,!features:!];noun[prof:+,!features:!,maj].
// Non-Ambiguous person names 
// not so sure :

1> noun[proper:+,mwe:+,maj:+] @= adv[lemme:"al."];noun[lemme:"al",particlename], punct[form:fhyph,left,right], noun[maj].




2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+], (dig[rom];pron[maj,lemme:I]),  noun+[particlename];det[lemme:an;maj], (punct[form:fhyph,left,right]), (noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~,firstname:~]),noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~];nadj[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~]  .


//WARNING
2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+], nadj[maj,guess];nadj[maj,c_person:+].

// DANGEROUS RULE :

//2> noun[proper:+,person:+,mwe:+] @=  |?[guess:~,proper:~,punct:~,prep:~]|  noun[vikef_term:~,proper,place:~],  noun+[particlename];det[lemme:an;maj], (punct[form:fhyph,left,right]), noun[vikef_term:~,proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~].

//Modified for Vikef
2> noun[proper:+,person:+,mwe:+] @=   noun[proper,guess:~,place:~,orghead:~,orgend:~],  noun+[particlename];det[lemme:an;maj], (punct[form:fhyph,left,right]), noun[vikef_term:~,proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~];noun[maj,guess,particlename:~,orghead:~,orgend:~,vikef_term:~,locpost:~,locpre:~].

2> noun[proper:+,person:+,mwe:+] @=  noun[maj:+,initial:+], noun[maj:+,initial:+], noun+[particlename], (punct[form:fhyph,left,right]), noun[proper,guess:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,locpost:~,let:~];noun[maj,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,locpost:~,let:~].

//NEW !!!!
2> noun[proper:+,person:+,mwe:+] @=  noun+[particlename], (punct[form:fhyph,left,right]), ( noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~]),noun[proper,let:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,guess:~,place:~];noun[maj,let:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~,place:~], nadj[lemme:"und"], noun[proper,let:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,guess:~,place:~];noun[maj,let:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~,place:~].

2> noun[proper:+,person:+,mwe:+] @=  noun+[particlename], (punct[form:fhyph,left,right]), ( noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~]),noun[proper,let:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,guess:~,place:~];noun[maj,let:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,eventmod:~,place:~]  |?[place:~]|.
 

// WITH FIRSTNAME
 
2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,quoted:~,place:~], (noun[maj,initial];adj[maj];nadj[maj]), noun*[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,firstname:~,locpre:~,onlyplace:~,eventmod:~,cr2:~,cr:~],  noun[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,onlyplace:~,eventmod:~,country:~,city:~,cr:~,cr2:~,bus:~,firstname:~,initial:~] , (dig[rom];pron[maj,lemme:I]) .

2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,place:~], (dig[rom];pron[maj,lemme:I]),  prep[form:fof], ( noun[place], conj[coord] ) , noun[place].

2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,place:~], dig[rom];pron[maj,lemme:I], (noun[proper,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,locpost:~]). 

2> noun[proper:+,person:+,mwe:+] @= noun[guess,initial,bus:~], noun*[proper,orgend:~,orgmod:~,orghead:~,cr:~,cr2:~,acron:~],  noun[proper,orgend:~,orgmod:~,orghead:~,cr:~,cr2:~,acron:~].
 
//WARNING !!!
//Modified for Vikef
2> noun[proper:+,person:+,mwe:+] @=  noun+[firstname:+,place:~,ambig:~], (noun[maj,initial,title:~];noun[maj,let,title:~]) ,  noun+[title:~,maj,toutmaj:~,orghead:~,orgend:~,orgmod:~,locpre:~,locpost:~,eventmod:~,vikef_term:~,firstname:~].

2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,place:~], noun[proper,toutmaj:~,orghead:~,orgend:~,orgmod:~,locpre:~,locpost:~,eventmod:~,firstname:~].


2> noun[proper:+,person:+,mwe:+] @=  noun+[firstname:+], dig[rom];pron[maj,lemme:I].


//Henry of Guise
2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,place:~],  prep[form:fof] , noun[maj,orghead:~,orgend:~,orgmod:~].

2>noun[person:+,mwe:+,proper:+] @= noun+[initial,maj,bus:~] , noun[particlename:~,maj,guess];noun[particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,orgend:~,orgmod:~] , noun[particlename:~,maj,guess,cr:~,cr2:~];noun[particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,orgend:~,orgmod:~,cr:~,cr2:~].

2>noun[person:+,mwe:+,proper:+] @= noun+[initial,maj,bus:~] , noun[cr:~,cr2:~,particlename:~,maj,guess,let:~];noun[cr:~,cr2:~,particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,orgend:~,orgmod:~,let:~,acron:~,firstname:~].

//VIKEF CPO ?
2>noun[firstname:+,mwe:+,proper:+] @= noun+[initial,maj,bus:~] , noun[cr:~,cr2:~,particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,orgend:~,orgmod:~,let:~,acron:~,firstname:+].

// to prevent ... Commonwealth of the Virginia Home page : PERSON(Virginia Home Page)
2>noun[person:+,mwe:+,proper:+] @= | ?[orgcountry:~], ? | noun+[firstname,pl:~,quoted:~,place,toutmaj:~], (noun[maj,initial,orghead:~,toutmaj:~]), noun+[locpost:~,particlename:~,proper,firstname:~,orghead:~,orgend:~,orgmod:~,locpre:~,toutmaj:~] .

2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,pl:~,quoted:~,place,toutmaj:~], (noun[maj,initial]), noun*[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~,toutmaj:~],  noun[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~,toutmaj:~,firstname:~].


//2> noun[person:+,mwe:+,proper:+] @= noun+[firstname,pl:~,quoted:~,place:~], noun[quoted], noun+[orghead:~,orgend:~,orgmod:~,maj,locpost:~,particlename:~,locpre:~].

//For Georges pompidou and the pb of plural !
2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,pl,sg,quoted:~,place:~], (noun[firstname,pl,sg,place:~]), (noun[maj,initial]),   noun+[maj,locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,firstname:~,initial].

2>  noun[proper:+,person:+,mwe:+] @= noun+[let,maj,indef:~], noun[guess:~,proper,let:~,particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,orgend:~,orgmod:~,firstname:~].

// A test using professions and family links

2> noun[person:+,mwe:+,proper:+] @= | noun[prof:+,maj:~] |  noun[proper,toutmaj:~,bus:~,org:~] , noun[proper,toutmaj:~,celeb:~,orghead:~,orgend:~,orgmod:~,maj,locpost:~,particlename:~,locpre:~] .


2> noun[person:+,mwe:+,proper:+] @= | noun[famlink:+,maj:~] |  noun[proper,toutmaj:~] , noun[proper,toutmaj:~,celeb:~,orghead:~,orgend:~,orgmod:~,maj,locpost:~,particlename:~,locpre:~] .

2> noun[person:+,mwe:+,famlink:+,proper:+] @= noun[proper,toutmaj:~] , noun[proper,toutmaj:~,celeb:~] | noun[famlink:+] |.



//VIKEF 
2>  noun[proper:+,place:+,mwe:+] = noun[lemme:"memorial"], noun[person:+].
// Locations

// Adresses 
// 111, Wisconsin Avenue NE , Washington DC  10001

2> noun[mwe:+,place:+,address:+] @= dig,  (punct[comma:+]),  noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], punct[comma:+], noun[usastate:+], (dig)  .

2> noun[mwe:+,place:+,address:+] @= dig,  (punct[comma:+]),  noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], (dig)  .

2> noun[mwe:+,place:+,address:+] @=   noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], punct[comma:+], noun[usastate:+], (dig)  .

2> noun[mwe:+,place:+,address:+] @=   noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], (dig).

2> noun[mwe:+,place:+,address:+] @= dig,  (punct[comma:+]),  noun+[proper,address:~], noun[locpost:+,address:+].

// The Russian village of Barenstburg

2>noun[proper:+,place:+,mwe:+]@=  (adj[country];nadj[country]), noun[locpost], prep[form:fof],  noun[place:+];noun[guess:+,propag=+].

2>noun[proper:+,place:+,mwe:+,city:+] @= |det[def], (?[adj:+,country:~]) , (adj[country];nadj[country]) , noun[lemme:city];noun[lemme:town];noun[lemme:island];noun[lemme:village],  prep[form:fof] | noun+[guess,propag=+].


//2>noun[proper:+,place:+,mwe:+] @= (adj[country];nadj[country]) , noun[lemme:city];noun[lemme:town];noun[lemme:island];noun[lemme:village],  prep[form:fof] , noun[place:+];noun[guess,propag=+].

// Federal Republic of Germany

//German Republic

2>  noun[proper:+,place:+,mwe:+,country:+]  @= nadj[country];adj[country], (nadj[maj];adj[maj]), noun[orgcountry].

2> noun[proper:+,country:+,place:+,mwe:+]  @= (nadj[maj,guess:~];adj[maj,guess:~]),  noun[orgcountry], prep[form:fof], noun[proper,country].

2> noun[proper:+,place:+,mwe:+]  @=  (nadj[maj,guess:~];adj[maj,guess:~]),  noun[orgcountry], prep[form:fof], noun[proper,place].

// Some modifiers like Greater London

2> noun [proper:+,city:+,place:+,mwe:+] @= adj[maj], noun[city].
                   
//Lower Saxony

2> noun[proper:+,place:+,mwe:+,features:!] @= ?[lemme:Lower];?[lemme:lower];?[lemme:upper];?[lemme:middle], noun[place:+,!features:!].


// Southern Africa, South of Andalusia
2> noun[proper:+,place:+,features:!,mwe:+] @=  ?[modloc:+],  noun[place:+,!features:!].

2> noun[proper:+,place:+,features:!,mwe:+] @=  ?[modloc:+], prep[form:fof], noun[place:+,!features:!].

3> noun[proper:+,place:+,city:+] @= noun[city:+,ambig=~], punct[comma:+], noun[usastate:+,city:~];noun[state:+].

//other cases : (?)


// Canari Islands; Grimsburry Castle
3> noun[place:+,mwe:+,proper:+] @=   noun[lemme:"Saint"], noun[proper,firstname:~,month:~.place:+];noun[maj,firstname:~,month:~] , (part),(nadj;adj), noun[locpost:+].


3> noun[place:+,mwe:+,proper:+] @=  adj[maj];nadj[maj];noun[place] , noun[proper,firstname:~,month:~], (nadj;adj), noun[locpost:+].

3> noun[place:+,mwe:+,proper:+] @=  adj[maj];nadj[maj];noun[place] , noun[maj,firstname:~,month:~], (nadj;adj),noun[locpost:+].

3> noun[place:+,mwe:+,proper:+] @=   noun[proper,firstname:~,month:~];noun[maj,firstname:~,month:~] , (part),(nadj;adj), noun[locpost:+].


3> noun[place:+,mwe:+,proper:+] @=   nadj[maj,cardpoint] ,  noun[locpost:+].

// Victoria Land ????
3> noun[place:+,mwe:+,proper:+] @=   noun[maj,firstname,ambig], (nadj;adj),noun[locpost:+].


// Iberian Peninsula 
3> noun[place:+,org:!,proper:+]  @= (nadj[modloc];adj[modloc];noun[lemme:"sub"]), (punct[form:fhyph]) , nadj[country:+];adj[country:+], noun[locpost:+];noun[country,!org:!];noun[contin,!org:!].

//Hui Sui Road : Several (2 for the moment ?) nouns/adj allowed when they are NOT places : previous rule for places


// Camp David ; Rio Grande
3>  noun[place:+] @=  noun[locpre:+];noun[lemme:River], noun[proper,orghead:~,orgend:~,orgmod:~] .

// Territory of the US.
3> noun[proper:+,place:+,mwe:+] @= noun[locpost:+], prep[form:fof], (det[def]),  noun[place];noun[place].

// VIKEF BIBLIO+CPO

3>  noun[proper:+,person:+,mwe:+] @=  noun[maj,mwe:~];noun[proper,mwe:~];noun[proper,person:+], punct[comma], (noun[maj,initial]),noun[maj,initial];noun[firstname:+];noun[toutmaj:+,abr:+], (noun[maj,initial];noun[firstname:+] ) . 

3>  noun[proper:+,person:+,mwe:+] @= noun[maj,mwe:~];noun[proper,mwe:~];noun[proper,person:+], punct[comma], (noun[maj,initial]),noun[maj,initial] . 


3> noun[proper:+,person:+,mwe:+] @=  noun+[firstname:+,place:~], noun[maj,initial].
// TEST

4> noun[proper:+,mwe:+,place:+,features:!] @= noun[place:+,!features:!,usastate:~,city:~,country:~], punct[comma:+], noun[usastate:+].


4> noun[proper:+,place:+,mwe:+]  @= | prep[form:fbetween], (det[def]), noun[proper,place],  conj[coord], (det[def]) |  noun[maj,org:~].

4> noun[proper:+,place:+,mwe:+]  @= | prep[form:fbetween], (det[def])  | noun*[maj], noun[maj,org:~] | conj[coord], (det[def]), noun[proper,place] |.

4> noun[proper:+,place:+,mwe:+,bus:+,city:+]  @= noun[city] , punct[comma:+],  noun[country].


//London's Victoria Station 


//5> noun[place:+,mwe:+] @= noun[country];noun[city], part, noun[proper,let:~,pl:~,firstname:~];adj[maj];nadj[maj], (noun[proper,let:~,pl:~];adj[maj];nadj[maj]),(noun[proper,let:~,pl:~,firstname:~];adj[maj];nadj[maj]),   noun[locpost:+].
5>  noun[proper:+,place:+,mwe:+,!bus,!org] @= noun[country];noun[city],  part, noun[place:+,city:~.country:~,!bus:!,!org:!].



//8>  noun[proper:+,title:+,person:+] @= noun[place],  ?[title:+].
//WARNING3> noun[proper:+,mwe:+,place:+,features:!] @= noun[place:+,!features:!,usastate:~,city:~,country:~], punct[comma:+], noun[usastate:+].



9> noun[proper:+,person:+,mwe:+,title:+] @=  (nadj[country];noun[country]), (adj[maj];nadj[maj]), ?+[toutmaj:~,title:+];?[hmm_tit:+], noun*[lawmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~,org:~], (noun[maj,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~,org:~]), noun[maj,proper,period:~,eventmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~,org:~] |verb;punct| .

9> noun[proper:+,person:+,mwe:+,title:+] @=  (nadj[country];noun[country];noun[city]), (adj[maj];nadj[maj]), ?+[toutmaj:~,title:+];?[hmm_tit:+], noun*[lawmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~,org:~], (noun[maj,period:~,eventmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~,org:~]), noun[lawmod:~,proper,locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,org:~,ambig:~,countable:~,wordpart:~,period:~,eventmod:~,place:~].


//Prince of Wales
9> noun[proper:+,person:+,mwe:+,title:+] @=  ?+[toutmaj:~,title:+];?[hmm_tit:+], prep[form:fof],  noun[lawmod:~,proper,locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,ambig:~,wordpart:~,period:~,eventmod:~,place:+] .

9> noun[proper:+,person:+,mwe:+,title:+] @= (nadj[country]), (adj[maj];nadj[maj]), ?+[title:+,toutmaj:~];?+[hmm_tit:+,toutmaj:~],  noun[person].

// Context to avoid Mr James Molyneux, Mr Trimble  --> PERS(Mr James Molyneux, Mr)
9>  noun[proper:+,person:+,mwe:+,title:+] @= noun[person],  (punct[comma:+]), noun[title];noun[abr,hmm_tit] |?[noun:+,maj:~];?[noun:~]| .

10>  noun[proper:+,person:+,mwe:+] @= (nadj[country];noun[country]), (adj[maj]), ?[title:+,toutmaj:~,person:~];?[hmm_tit:+,toutmaj:~,person:~],  noun[person];noun[celeb].


//In case the person has'nt be detected before ;

10>  noun[proper:+,person:+,mwe:+,title:+] @= (adj[maj]),  ?[title:+,toutmaj:~];?[hmm_tit:+,toutmaj:~], (noun*[maj,place:~]), noun[fam,maj,org:~,countable:~];noun[firstname,maj].


//10>  noun[proper:+,person:+,mwe:+,title:+] @= (adj[maj]), ?[title:+];?[hmm_tit:+,toutmaj:~], prep[form:fof],  noun[place].

10>  noun[proper:+,person:+,mwe:+,title:+] @= (adj[maj]), ?[title:+];?[hmm_tit:+,toutmaj:~,famlink:~], prep[form:fof],  noun[maj,place:~].


//10>  noun[proper:+,person:+,mwe:+] @= noun[proper,orgcountry:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~], (noun[proper,orgcountry:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~]) , noun[celeb].


// Mr. A. G. Smith

// Normally Street should be St: need to do it in desamb 
// could be a person or a location, like St Louis

//10> noun[proper:+,person:+,mwe:+] = (nadj[country]), (adj[maj];nadj[maj]), noun[title,toutmaj:~], noun[proper,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~];noun[maj,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,place:~].

// St Patrick the Divine, Charles the Great

11> noun[proper:+,person:+,mwe:+] = noun[firstname], det[def], adj[maj];nadj[maj];noun[maj].

// Ambassador Abdallah Baali of Algeria

11> noun[proper:+,person:+,mwe:+,title:+] @= noun[proper:+,person:+,mwe:+,title:+],  prep[form:fof], noun[place] |?[noun:~]| .

//12> noun[proper:+,person:+] @=  (adj[maj]), ?[title:+];?[hmm_tit:+], prep[form:fof],  noun[place].



//====================== Proper Nouns Grouping ========================================

IDrules:



// One or more proper nouns, followed by a comma, followed by a usastate:+
// eg Atlantic City, N.J.

//15> noun[proper:+,city:+] -> noun[proper:+], (noun[proper:+])*, punct[comma:+], noun[usastate:+].


// At least 2 proper nouns, maybe more at the end of a clause.
// CAUTION WITH THE FOLLOWING EXAMPLE "He told Mary John was sick
// or "He told Mary John Doe was sick
//30> noun[proper:+] -> noun[proper:+], noun+[proper:+] .


// A title followed by one or more proper nouns
//20> noun[proper:+] -> noun[title], noun[proper:+], (noun[proper:+])*.


// A city name a particle and a proper noun makes a proper noun
// e.g. London's Docklands Light Railways
//20> noun[proper:+] -> noun[proper:+,city:+], part, adj*, noun[proper] .



// A Proper noun followed by a digit is a proper noun
// eg. Skynet 4 CB ATTENTION A L'ORDRE !!!
//20> noun[proper:+] -> noun[proper:+,period:~,place:~,firstname:~], dig .


//CB : A test with tagging rules 
Tagging:

//when using context and in case of only one name to avoid a double noun tree

21> noun[maj:+,firstname:~,fam:~,person:~,guess:+]  %= |noun[lemme:town];noun[lemme:city], prep[form:fof] |  noun[maj:+,city:+,place:+,propag:+] .



21>  noun[proper:+,guess:+] %= | noun[lemme:resident], prep[form:fof] |  noun[proper:+,place:+,propag:+] .

21>  noun[proper,toutmaj:~,celeb:~,bus:~,org:~] %= | noun[prof:+,maj:~] | noun[person:+,mwe:+,propag:+,proper:+].

21>  noun[proper,toutmaj:~,celeb:~,misc:~,bus:~,org:~] %= | noun[famlink:+,maj:~] | noun[person:+,mwe:+,propag:+,proper:+].

21>  noun[proper,toutmaj:~,celeb:~,misc:~,bus:~,org:~] %= noun[person:+,mwe:+,propag:+,proper:+]  | noun[famlink:+,maj:~] |.


21>  noun[proper,toutmaj:~,celeb:~,bus:~,org:~] %= noun[person:+,mwe:+,propag:+,proper:+]  |  (punct[comma:+]) , noun[lemme:"et_al."] |.


21>  noun[proper,toutmaj:~,celeb:~,org:~] %= noun[person:+,mwe:+,propag:+,proper:+]  |  (punct[comma:+]) , nadj[lemme:"et"], adv[lemme:"al."] |.

21> noun[proper:+,guess:+] %=  |nadj[prepers:+]| noun[person:+,mwe:+,propag:+,proper:+].

22>  noun[proper:+,guess:+] %= |noun[lemme:town];noun[lemme:city], prep[form:fof] , noun[city:+] , punct[comma] | noun[proper:+,place:+,mwe:+,org:+,city:+,propag:+] |conj |.

23>  noun[proper:+,guess:+] %= |noun[lemme:town];noun[lemme:city], prep[form:fof] , (noun[city:+] , punct[comma]) , noun[city:+], conj | noun[proper:+,place:+,mwe:+,org:+,city:+,propag:+] .