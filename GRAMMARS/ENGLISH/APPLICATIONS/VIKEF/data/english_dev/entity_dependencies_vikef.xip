//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : Entity XIP grammar
//!   filename   : entity_dependencies.xip
//!   Date       : 04/08/2003
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



DependencyRules:

// >>>>>>>>>>>>>EXTRACTIONS 

|noun#1[tutu]|
        LIXO(#1)

//|?#1[cr]|
 //     AUTHOR(#1)

|dig#1[timeperiod]|
        TIME(#1)

|dig#1[postalcode]|
        POSTALCODE(#1)

|NOUN#1[roomlocation]|
        ROOM(#1)

// Basic stuff 

| NOUN#2[bus,place]| 
        LOCORG(#2) 

|NOUN#1[place,ambig:~,org:~]|
        LOCATION(#1)

|NOUN#1[place,ambig:~,org,country:~,city:~,usastate:~,contin:~]|
        LOCORG(#1)

| NOUN#2[productname]| 
      PRODUCT(#2)

 | NOUN#2[org,place:~,alsoloc:~]| 
        ORGANISATION(#2)

 | NOUN#2[org,alsoloc]|  
     if(~LOCORG(#2))
        LOCORG(#2)


 | NOUN#2[bus,ambig:~,let:~,place:~]| 
        ORGANISATION(#2)

 | NOUN#2[person,ambig:~]| 
        if (~PERSON(#2))
        PERSON(#2)

 | NOUN#2[proper,celeb,toutmaj:~,ambig:~]| 
        if (~PERSON(#2))
        PERSON(#2)

 | NOUN#2[proper,celeb,fullname,ambig:~]| 
        if (~PERSON(#2))
        PERSON(#2)

 | NOUN#2{NADJ[country],NOUN[title],NOUN#3} |
        if (~PERSON(#3))
        PERSON(#3)

// |DIG#2[year,percent:~]|
     //   YEAR(#2)

// |NOUN#1[quoted]| 
//        QUOTED_ELEMENT(#1)

 |NOUN#2[city,ambig:~,org]|    
        LOCORG[city=+](#2)

 |NOUN#2[country,ambig:~,org]|
        LOCORG[country=+](#2)
  
 |NOUN#2[address,mwe]|
        LOCATION[address=+](#2)

  |NOUN#2[place,contin,ambig:~,abr:~,org]|
        LOCORG[contin=+](#2)

  |NOUN#2[place,country:~,city:~,contin:~,address:~,ambig:~,abr:~,org:~]|
        LOCATION(#2)

 |NOUN#2[place,country:~,city:~,contin:~,address:~,ambig:~,abr:~,org]|
        if(~LOCORG(#2))
        LOCORG(#2)
 
 |NOUN#1{?*,NOUN#2}|
        if(^LOCATION(#2) & LOCATION(#1))
        ~

|NOUN#1{?*,NOUN#2}|
        if(^LOCORG(#2) & LOCORG(#1))
        ~

 |DIG#2[date,mwe]|
          TEMPEXPR[date=+](#2)

 |ADV#1[tempadv] |
        TEMPEXPR(#1) 

 |ADV#1[tempexpr] |
        TEMPEXPR(#1) 

 |NOUN#1[time,date:~] |
        TEMPEXPR(#1) 

 |NOUN#2[date,proper:~]|
        TEMPEXPR[date=+](#2)

  |DIG#2[date]|
        TEMPEXPR[date=+](#2)

 |NOUN#1[phone]|
        PHONE(#1)

 |NOUN#1[url]|
        URL(#1)

 |NOUN#1[email]|
        EMAIL(#1)

|NOUN#1[hour]|
        HOUR(#1)

// |NP#1[tempexpr,date:~]{?[first,tempexpr:~]} |
    //    TEMPEXPR(#1)

|NOUN#1[event]|
        EVENT(#1)

|NOUN#1[law]|
        LAW(#1)
 
//|NP#1[tempexpr]|
  //      TEMPEXPR(#1)

 //|PP#1[tempexpr]{PREP,?[date:~,dig:~]}|
 //       TEMPEXPR(#1)

 |PP#1[tempexpr]{PREP,DIG#2[year:+]}|
        TEMPEXPR[date:+](#2)

//|PP#1{PREP[form:fin],NP{DIG#2[shortyear:+]}}|
//        TEMPEXPR[date:+](#2)

 |NUM#1[mwe,card,money:~]|
        COMPLEXNUM(#1)

// just a money dig
// pb with multiple extraction

 |DIG#2[money];NOUN#2[money];NUM#2[money]|
        MONEY(#2)

// percentages 

  |NUM#1{DIG,NOUN[percent:+]}|
        PERCENT(#1)

//2% to 3%
  |DIG#1{DIG[percent:+]}|
        PERCENT(#1)

  |DIG#1[percent:+]|
        PERCENT(#1)

  |DIG#1{?*,DIG#2[percent:+]}|
        if (^PERCENT(#2) & PERCENT(#1))
        ~
// units like 346 km/h

 |NOUN#1[mwe,unit]|
        UNIT(#1)



|?[det:~], NOUN#1[firstname,hmm_verb:~,hmm_vbi:~,hmm_vbpap:~,hmm_vbpast:~,hmm_vbprog:~,
         hmm_vpap:~,hmm_vpast:~,hmm_noun:~,hmm_aux:~,hmm_adj:~,hmm_nadj:~,misc:~,place:~,ambig:~,toutmaj:~]|
        PERSON(#1)


| NOUN#1[firstname,hmm_verb:~,hmm_vbi:~,hmm_vbpap:~,hmm_vbpast:~,hmm_vbprog:~,
         hmm_vpap:~,hmm_vpast:~,hmm_noun:~,hmm_aux:~,hmm_adj:~,hmm_nadj:~,misc:~,place:~,ambig:~,toutmaj:~]|
        PERSON(#1)


|NOUN#1{NOUN#2,PUNCT[form:fhyph],NOUN#3}|
        if (LOCATION(#2) & LOCORG(#3))
        LOCORG(#1)

|NOUN#1{NOUN#2,PUNCT[form:fhyph],NOUN#3}|
        if (LOCATION(#2) & LOCATION(#3))
        LOCATION(#1)

|NOUN#1{NOUN#2,PUNCT[form:fhyph],NOUN#3}|
        if (LOCORG(#2) & LOCORG(#3))
        LOCORG(#1)

// A TEST
|NOUN#5[person]{NOUN#1[org],NOUN#2[title],?*,NOUN#4[last]}|
        PROFESSION(#1,#2,#4)

|NOUN{NOUN#1[org],NOUN#2[title],NOUN#3[person]}|
        PROFESSION(#1,#2,#3)

|NOUN{NOUN#1[org],NOUN#2[prof],NOUN#3[person]}|
        PROFESSION(#1,#2,#3)

|NOUN#5[person]{NOUN#1[country],NOUN#2[title],?*,NOUN#4[last]}|
        PROFESSION(#1,#2,#4)

|NOUN{NOUN#1[country],NOUN#2[title],NOUN#3[person]}|
        PROFESSION(#1,#2,#3)

|NOUN{NOUN#1[country],NOUN#2[prof],NOUN#3[person]}|
        PROFESSION(#1,#2,#3)

// FOR EVALUATION PURPOSES 
// the name is DATE ;

if(TEMPEXPR[date](#1)) 
        DATE(#1)

if(DATE(#1) && ^TEMPEXPR[date](#1))
        ~

// CITATIONS FOR VIKEF 

//|NOUN#1[citation:+]|
  //      CITATION(#1)

 |DIG#1[ref:+,inpostcode=~]|
        REFNUMBER(#1) 

Script:

// AFTER MARKING AND BEFORE DELETIONS
// Propagation rules :

// >>>>>>>>>>>>>>MARQUAGE DES ELEMENTS A PROPAGER 

|NOUN#1[person]{?*,NOUN#2[proper,mwe:~,mwepart:~,particlename:~,orgend:~,orghead:~,place:~,last,bus:~,org:~,let:~,initial:~]}|
        { PERS##2=1;}

|NOUN#1[person,let:~,mwe:~,mwepart:~]{NOUN#2[firstname:~],NOUN#3}|
          { PERS##1=1;}

|NOUN#1[person]{?*,NOUN#2[firstname],NOUN#3[mwe:~,mwepart:~,celeb:~,last,proper,let:~,initial:~]}|
       { PERS##3=1;}

|NOUN#1[person]{NOUN#2[title],?*,NOUN#3[maj,mwe:~,mwepart:~,let:~,orgend:~,orghead:~,place:~,initial:~]}|
        { PERS##3=1;}

|NOUN#1[person]{NOUN#2[title],NOUN#3[person,mwe:~,mwepart:~,let:~,initial:~]}|
        { PERS##3=1;}

|NP#1{?*,NOUN#1[prof],NOUN#2[person]{?*,NOUN#3[last,mwe:~,mwepart:~,proper,let:~,initial:~]}}|
                { PERS##3=1;}

|NOUN#1[org]{NOUN#2[orgend:~,orghead:~,orgmod:~,place:~,vikef_term:~],?*,NOUN[orgend]}|
        { ORG##2=1;}

|NOUN#1[org]{NOUN#2[place:~,vikef_term:~],NOUN#3[orgMod],NOUN[orgend]}|
        { ORG##2=1;}

|NOUN#1[org:+,propag:+,vikef_term:~]|
        {ORG##1=1;}



//Sinon : 

|NOUN#1[org]{NOUN#2[place:~,vikef_term:~],NOUN#3[place:~,vikef_term:~],NOUN*,NOUN[orgend]}|
        { ORGINTER##2=1; ORGINTER##3=1 ;} // pour propager sur NP 

//print("passe:"+ORGINTER##3+"\n");



|NOUN#1{NOUN#2[guess:+],NOUN#3,NOUN#4[orgend]}|
        {ORG##2=1;}

|NOUN#1{NOUN#2[place:~],NOUN#4[orgend]}|
        { ORG##2=1;}

|NOUN#1{NOUN#2[guess:+],NOUN#4[orgmod]}|
        {ORG##2=1;}


|NOUN#1{NOUN#2[guess:+],NOUN#4[orghead]}|
        { ORG##2=1;}

|NOUN#1[person,propag,mwepart:~]| 
        {PERS##1=1;}    	

|NOUN#1[org,propag]| 
        {ORG##1=1;}    	

|NOUN#1[place,propag,org:~]| 
        {LOC##1=1;}    	

|NOUN#1[place,propag,org]| 
        {LOCORG##1=1;}  

|NOUN#1[proper,place,mwe,org:~]{?*,PREP,NOUN#2[propag]}|
        {LOC##2=1;}

|NOUN#1[proper,place,mwe,org]{?*,PREP,NOUN#2[propag]}|
        {LOCORG##2=1;}

|NOUN#1{NOUN#2[guess:+,period:~],NOUN#3[eventmod:+]}|
        {EVENT##2=1;}

// Cas Phillip Morris Corp: Les elements de "Phillip Morris"
// sont marques comme PERS, il faut les effacer et marquer 
// comme Org . 

|NOUN#1[org]{NOUN#2[person]{NOUN#3[firstname],NOUN#4[proper,place:~]}}|
        {ORG##4=1 ; PERS##4=0 ;  PERS##3=0 ;  }



// >>>>>>>>>>>>>>>>>> PROPAGATION

DependencyRules: 

|NOUN#1[maj,mwepart:~]| if(PERS##1:1 & ~PERSON(#1))
        PERSON(#1)

|NOUN#1[maj] | if ((ORG##1:1) & ~ORGANISATION(#1))
        ORGANISATION(#1)

 |NOUN#1[maj] | if ((LOC##1:1) & ~LOCATION(#1))
        LOCATION(#1)

|NOUN#1[maj]| if(EVENT##1:1 & ~EVENT(#1))
        EVENT(#1)

|NOUN#1[maj]| if(LOCORG##1:1 & ~EVENT(#1))
        LOCORG(#1)


// MARQUAGE AU NIVEAU DES CHUNKS 

// Si on a marque Video[ORGINTER]  Display[ORGINTER] Corp
// On veut que Video Display soit retrouve comme org,
// on ne peut le faire que si c'est dans un NP

|NP#1{NOUN#2,NOUN#3[last]}|
        if((ORGINTER##2:1) & (ORGINTER##3:1))
        ORGANISATION(#1)



/+++++++++++++++ VIKEF +++++++++++++++\

|NOUN#1{NOUN#2,PUNCT,NOUN#3{?*,NOUN#4}}|
      if(ORGANISATION(#1) & ^ORGANISATION(#4))
        ~

|NOUN#1[vikef_term:+]{?*,NOUN#2}|
        if(^LOCATION(#2))
        ~

|NOUN#1[vikef_term:+]{?*,NOUN#2}|
        if(^PERSON(#2))
        ~
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
// >>>>>>>>>>>>>>>>>>DELETIONS
// We delete entities included in larger entities
// >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

|NOUN#1{NOUN#2[person]{?,NOUN#3},?*} |
        if(ORGANISATION(#1) & ^ORGANISATION(#3))
        ~

|NOUN#1{NOUN#2[person]{?,NOUN#3},?*} |
        if(LOCORG(#1) & ^ORGANISATION(#3))
        ~

if(EVENT(#1) & ^EVENT(#2) & DAUGHTER(#1,#2))
        ~

|NOUN#1{?*,DIG#2}|
        if(EVENT(#1) & ^DATE(#2))
        ~

|NOUN#1{NOUN#2{?*,NOUN#3}}|
        if(LOCATION(#1) & ^LOCORG(#3))
        ~

|NOUN#1{NOUN{?*,NOUN#2}}|
        if (LOCORG(#1) & ^LOCORG(#2))
        ~

|NOUN#1{?*,NOUN{?*,NOUN#2}}|
        if(^ORGANISATION(#2) & PERSON(#1))
        ~

|NOUN#1{?*,NOUN#2{NOUN#3}}|
        if(ORGANISATION(#1) & ^ORGANISATION(#3))
        ~

|NOUN#1{NOUN{?*,NOUN#2}}|
        if(ORGANISATION(#1) & ^ORGANISATION(#2))
        ~

|NOUN#1{?*,NOUN#2{?*,NOUN#3}}|
        if(LOCATION(#1) & ^LOCATION(#3))
        ~
|NOUN#1{NOUN#2{NOUN#3}}|
        if(PERSON(#1) & ^ORGANISATION(#3))
        ~

|NOUN#1{?*,NOUN#2{?*,NOUN#3}}|
        if(LOCORG(#1) & ^PERSON(#3))
        ~

|NOUN#1{?*,NOUN#2{?*,NOUN#3}}|
        if(ORGANISATION(#1) & ^LOCATION(#3))
        ~

|NOUN#1{?*,NOUN#2}|
        if(LOCORG(#1) & ^LOCATION(#2))
        ~

|NOUN#1{?*,NOUN#2}|
        if(DATE(#1) & ^TEMPEXPR(#2))
        ~

|NOUN#1|
        if(LOCORG(#1) & ^LOCORG(#1))
        ~

|NOUN#1{?*,NOUN#2}| 
        if(DATE(#1) & ^PERSON(#2))
        ~

|NOUN#1{?*,NOUN#2}| 
        if(DATE(#1) & ^DATE(#2))
        ~

|NOUN#1{?*,NOUN#2}| 
        if(ORGANISATION(#1) & ^ORGANISATION(#2))
        ~

|NOUN#1{?*,DIG#2} |
        if(DATE(#1) & ^DATE(#2))
        ~
|DIG#1{?*,DIG#2} |
        if(DATE(#1) & ^DATE(#2))
        ~

|NOUN#1{?*,NOUN#2{?*,NOUN#3}}|
        if(LOCATION(#1) & ^PERSON(#3))
        ~

|NOUN#1{NOUN#1{NOUN#3}}| 
        if (LOCATION(#1) & ^PERSON(#3))
        ~

|NOUN#1{?*,NOUN#2{NOUN#3}} |
        if(LOCORG(#1) & ^LOCORG(#3))
        ~


|NOUN#1{NOUN#2{NOUN#3}}|
         if(^ORGANISATION(#3) & LOCORG(#1))
        ~

|NOUN#1{NOUN#1{?*,NOUN#3}}|
         if(ORGANISATION(#1) & ^PERSON(#3))
        ~

|NOUN#1{NOUN#2{?*,NOUN#3{?*,NOUN#4}}}|
        if(ORGANISATION(#1) & ^ORGANISATION(#4))
        ~


|NOUN#1{?*,NOUN#2{?*,NOUN#3}}|
        if (ORGANISATION(#1) & ^LOCORG(#3))
        ~ 
 
|NOUN#1{NOUN#2{?*,NOUN#3}}|
        if (LOCORG(#1) & ^PERSON(#3))
        ~

|NOUN#1{NOUN#2}| 
        if (^ORGANISATION(#2) & LOCATION(#1))
        ~

|NOUN#1{?*,NOUN#2{?*,NOUN#3}}|
        if (PERSON(#1) & ^LOCATION(#3))
        ~

|NOUN#1{?*,NOUN#2{?*,NOUN#3}}|
        if (PERSON(#1) & ^LOCORG(#3))
        ~

|NOUN#1{NOUN#2}| 
       if (^LOCATION(#2) & LOCORG(#1))
        ~

|NOUN#1{NOUN#2}| 
       if (^LOCATION(#2) & PERSON(#1))
        ~

|NOUN#1{?*,NOUN#2}|
        if (^PERSON(#2) & LOCATION(#1))
        ~
|NOUN#1{?*,NOUN#2}|
        if (^PERSON(#2) & LOCORG(#1))
        ~

|NOUN#1{?*,NOUN#2}|
        if (LOCATION(#1) & ^LOCORG(#2))
        ~

|NOUN#1{NOUN#2{NOUN#3}}|
        if (LOCORG(#1) & ^PERSON(#3))
        ~

|NOUN#1{NOUN#2{NOUN#3}}|
        if (ORGANISATION(#1) & ^PERSON(#3))
        ~

|NOUN#1{NOUN#2{NOUN#3{?*,NOUN#4}}}|
        if (LOCORG(#1) & ^ORGANISATION(#4))
        ~


|NOUN#1{?+,NOUN#2}|
        if (^ORGANISATION(#2) & LOCATION(#1))
        ~

|NOUN#1{?+,NOUN#2}|
        if (^ORGANISATION(#2) & LOCORG(#1))
        ~

|NOUN#1[date]{?+,NOUN#2[date]}|
        if (TEMPEXPR(#1) & ^TEMPEXPR(#2))
        ~

|NUM#1{DIG#2,NUM#3}|
        if (MONEY(#1) & ^MONEY(#2))
        ~


|NUM#1{NUM#2,NOUN#3}|
        if (MONEY(#1) & ^COMPLEXNUM(#2))
        ~

|NUM#1{NOUN#2,?+}|
        if (MONEY(#1) & ^LOCATION(#2))
        ~

|NUM#1{NOUN#2,?+}|
        if (MONEY(#1) & ^LOCORG(#2))
        ~

|NOUN#1{?,NOUN{?,NOUN#2}}|
        if(ORGANISATION(#1) & ^LOCATION(#2))
        ~

|NOUN#1{?,NOUN{?,NOUN#2}}|
        if(ORGANISATION(#1) & ^LOCORG(#2))
        ~

|NOUN#1{NOUN#2}|
        if(^ORGANISATION(#2) & LOCORG(#1))
        ~

|NOUN#1[org]{NOUN#2{NOUN#3,NOUN#4}}|
       if (ORGANISATION(#1) & ^ORGANISATION(#4))
        ~

|NOUN#1{?*,NOUN#2}|
        if(LOCATION(#1) & ^LOCATION(#2))
        ~

|NOUN#1{?*,NOUN#2}|
        if(LOCORG(#1) & ^LOCORG(#2))
        ~

|NOUN#1{NOUN#2[guess:+],NOUN#3[eventmod:+]}|
  if(EVENT(#1) & ^EVENT(#2))
        ~
|NOUN#1{DIG#2,NOUN#3}|
        if (EVENT(#1) & ^EVENT(#3))
        ~
        
 |NOUN#1{DIG#2,NOUN#3}|
        if (EVENT(#1) & ^DATE(#2))
        ~


|NOUN#1{NOUN#2{NOUN#3}}|
        if(ORGANISATION(#1) & ^LOCATION(#3))
        ~

|NOUN#1{NOUN#2{NOUN#3}}|
        if(ORGANISATION(#1) & ^LOCORG(#3))
        ~

|NOUN#1{NOUN#2{NOUN#3}}|
        if(ORGANISATION(#1) & ^ORGANISATION(#3))
        ~



|NOUN#1{NOUN#2}|
     if(PERSON(#1) & ^PERSON(#2))
        ~

|NOUN#1{NOUN#2{?*,NOUN#3{?*,NOUN#4}}}|
        if(PERSON(#1) & ^PERSON(#4))
        ~

|NOUN#1{NOUN#2{NOUN#3}}|
        if(ORGANISATION(#1) & ^PERSON(#3))
        ~

|NOUN#1{?*,NOUN#2,?*,NOUN#3[last]}|
        if (^ORGANISATION(#2) & EVENT(#1))
        ~

|NOUN#1{DIG#2,?+}|
        if (MONEY(#1) & ^TEMPEXPR(#2))
        ~

|NOUN#1{NOUN#2,?+}|
        if (^ORGANISATION(#2) & PERSON(#1))
        ~

|NOUN#1|
        if(^PERSON(#1) & PERSON(#1))
        ~

|PP#1{PREP,?,NOUN#2}|
     if(TEMPEXPR(#1) & ^TEMPEXPR(#2))
        ~
|PP#1{PREP,DIG#2}|
     if(TEMPEXPR(#1) & ^TEMPEXPR(#2))
        ~

|NOUN#1|
     if (PERS##1:1 & ^LOCATION(#1))
        ~ 

|NOUN#1|
     if (PERS##1:1 & ^LOCORG(#1))
        ~ 

|NOUN#1{ADV,NOUN#2}|
      if(TEMPEXPR(#1) & ^TEMPEXPR(#2))
        ~

|NOUN#1{?+,NOUN#2,?+}|
        if (^PERSON(#2) & LOCATION(#1))
        ~

|NOUN#1{?+,NOUN#2,?+}|
        if (^PERSON(#2) & LOCORG(#1))
        ~

| NOUN#1{NOUN#2,NOUN#3{?*,NOUN#4}} |
        if(PERSON(#1) & ^PERSON(#4))
        ~

| NOUN#1{?*,NOUN#3{?*,NOUN#4}} |
        if(PERSON(#1) & ^PERSON(#4))
        ~


|NOUN#1{NOUN#2[title],NOUN#3{?,NOUN#4}}|
        if (^LOCATION(#4) & PERSON(#1))
        ~

|NOUN#1{NOUN#2[title],NOUN#3{?,NOUN#4}}|
        if (^LOCORG(#4) & PERSON(#1))
        ~

|NOUN#1{NOUN#2[title],NOUN#3{?,NOUN#4}}|
        if (^PERSON(#4) & PERSON(#1))
        ~

|NOUN#1{NOUN#2}|
        if (^LOCATION(#2) & PERSON(#1[famlink]))
        ~

|NOUN#1{NOUN#2}|
        if (^LOCORG(#2) & PERSON(#1[famlink]))
        ~

|NOUN#1{?+,NOUN#2},?*|
        if (^PERSON(#2) & PERSON(#1))
        ~

|NOUN#1{?*,NOUN#2,?+}|
        if (^PERSON(#2) & PERSON(#1))
        ~

|NOUN#1{?+,NOUN#2}|
        if (^ORGANISATION(#2) & ORGANISATION(#1))
        ~
|NOUN#1{NOUN#2,?+}|
        if (^ORGANISATION(#2) & ORGANISATION(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^LOCATION(#2) & ORGANISATION(#1))
        ~

|NOUN#1{?+,NOUN#2}|
        if (^LOCORG(#2) & ORGANISATION(#1))
        ~

|NOUN#1{NOUN#2,?+}|
        if (^LOCATION(#2) & ORGANISATION(#1))
        ~

|NOUN#1{NOUN#2,?+}|
        if (^LOCORG(#2) & ORGANISATION(#1))
        ~

|NOUN#1{NOUN#2,?+}|
        if (^PERSON(#2) & ORGANISATION(#1))
        ~


 |PP#1{?*,NP#2{?*,NOUN#3[tempexpr]}}|
        if (^TEMPEXPR(#3) & TEMPEXPR(#1))
        ~

 |PP#1{?*,NP#2[tempexpr]}|
        if (^TEMPEXPR(#2) & TEMPEXPR(#1))
        ~

 |PP#1{PREP,NOUN#2}|
        if (^TEMPEXPR(#2) & TEMPEXPR(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^LOCATION(#2) & PERSON(#1))
        ~
 |NOUN#1|
        if (^LOCATION(#1) & LOCATION(#1))
        ~

|NOUN#1{?+,NOUN#2}|
        if (^LOCORG(#2) & PERSON(#1))
        ~
 |NOUN#1[bus:~]|
        if (^LOCORG(#1) & LOCATION(#1))
        ~
 |NOUN#1[bus]|
        if (LOCORG(#1) & ^LOCATION(#1))
        ~

 |NOUN#1{?*,NOUN#2[unit]}|
        if(^UNIT(#2) & UNIT(#1))
        ~

  |NOUN#1{NOUN#3[unit],NOUN#2[unit]}|
        if (^UNIT(#2) & ^UNIT(#1))
        ~

  |NOUN#1{NOUN#2,?+}|
        if(^LOCATION(#2) & QUOTED_ELEMENT(#1))
        ~

 |NOUN#1{NOUN#2,?+}|
        if(^LOCORG(#2) & QUOTED_ELEMENT(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^PERSON(#2) & PERSON(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^LOCATION(#2) & PERSON(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^LOCORG(#2) & PERSON(#1))
        ~

 |NOUN#1{NOUN#2,?+}|
        if (^LOCORG(#2) & PERSON(#1))
        ~
 

 |NOUN#1{?+,NOUN#2,?+}|
        if (^QUOTED_ELEMENT(#2) & PERSON(#1))
        ~


 |NOUN#1{NOUN#2,?+}|
        if (^LOCATION(#2) & EVENT(#1))
        ~

 |NOUN#1{NOUN#2,?+}|
        if (^LOCORG(#2) & EVENT(#1))
        ~


 |NOUN#1{NOUN#2,?+}|
        if (^LOCATION(#2) & LAW(#1))
        ~

 

 |NOUN#1{?+,NOUN#2}|
        if (^LOCATION(#2) & EVENT(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^LOCORG(#2) & EVENT(#1))
        ~
 
 |NOUN#1{?+,NOUN#2}|
        if (^ORGANISATION(#2) & PERSON(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^LOCATION(#2) & LAW(#1))
        ~

 |NOUN#1{?+,NOUN#2}|
        if (^LOCORG(#2) & LAW(#1))
        ~

|NOUN#1{?+,NOUN#2}|
        if (^LOCATION(#2) & ORGANISATION(#1))
        ~

|NOUN#1{?+,NOUN#2}|
        if (^LOCORG(#2) & ORGANISATION(#1))
        ~

|NOUN#1{?+,NOUN#2}|
        if (^PERSON(#2) & ORGANISATION(#1))
        ~

|NOUN#1{NOUN#2,?+}|
        if (^PERSON(#2) & LOCATION(#1))
         ~

|NOUN#1{NOUN#2,?+}|
        if (^PERSON(#2) & LOCORG(#1))
         ~

|NOUN#1{NOUN{NOUN{NOUN#2,?+}},?+}|
        if(PERSON(#1) & ^ORGANISATION(#2))
        ~

|NOUN#1{NOUN{NOUN#2,?+},?+}|
        if(PERSON(#1) & ^LOCATION(#2))
        ~

|NOUN#1{NOUN{NOUN#2,?+},?+}|
        if(PERSON(#1) & ^LOCORG(#2))
        ~

|NOUN#1{?+,NOUN{NOUN#2,?+}}|
        if(PERSON(#1) & ^PERSON(#2))
        ~



// a complex noun
// |NOUN#2[money]|
 //       MONEY(#2)


//| NP#2{?*,#1[last]} |
//	HEAD(#1,#2)
//
//| NP#2{?*,AP#1,#3[last]}|
//        MOD_PRE(#3,#1)
//
//
//| SC[start]{?*,NP#3, FV{?*,#2[last]}} |
//	if ( HEAD(#1,#3) )
//	SUBJ(#2,#1)
//
//| SC{?*, FV{?*,#1[last]}}, NP#3 |
//	if ( HEAD(#2,#3) )
//	OBJ(#1,#2)
//
//| SC{?*, FV#2{?*,#1[last]}} |
//        MAIN_VERB(#1)
//
//if ( SUBJ(#1,#2) & OBJ(#1,#3) )
//	SUBJOBJ(#2,#3)
//
//if ( SUBJ(#1,#2) | OBJ(#1,#3) )
//	HAS_ARG(#1)
//
//
//// Lexical disambiguation test 
//
////| #2[lemme:happy],  #1[lemme:person] |
// // if (MOD_PRE(#1,#2)) 
// //       CONTEXT_TR_FR(#2,#2)


// TEST for location 


//| NOUN#1[location:+]  |
//        LOCATION(#1)

//| ?#1[mwe:+] |
//        MWE(#1)



//Final :

//CleanAllLemmas;



/////////////////////////////////////////////////////////////////////////
// ADDITIONS, by Salah






DependencyRules:


// RELATIONS of internal structure elements with the whole entity

// PTITLE_OF (professional title)
|NOUN#1{NOUN#2[last:~,title]}|
if (PERSON(#1))
PTITLE_OF(#1,#2).

// double titles (not frequent, but found in CPO docs)
|NOUN#1{NOUN#[last:~,title], NOUN#2[last:~,abr,title]}|
if (PERSON(#1))
PTITLE_OF(#1,#2).

// Mark inverted firstnames with 'fstnameinvert', because not all of them are marked by previous rules)
|NOUN#1{?*[title,abr],NOUN,PUNCT[comma],NOUN*,NOUN#2}|
if (PERSON(#1) & #2[firstname=+,fstnameinvert=+])
~ .


// LASTNAME_OF (family name of a person)
|NOUN#1[firstname:~]{?*,NOUN[maj];NOUN[firstname],?*,NOUN#2[last:+,fstnameinvert:~]}|
 if (PERSON(#1) & #2[firstname=~,lastname=+])
 LASTNAME_OF(#1,#2).


// LASTNAME_OF (family name of a person)
|NOUN#1[firstname:~]{NOUN#2[last:+,firstname:~,fstnameinvert:~]}|
if (PERSON(#1) & ~LASTNAME_OF(#1,?) & #2[firstname=~,lastname=+])
LASTNAME_OF(#1,#2).


// LASTNAME_OF (family name of a person)
|NOUN#1[firstname:~]{?*,NOUN#2[fstnameinvert:~],?*,NOUN[last:+,fstnameinvert:+]}|
if (PERSON(#1) & ~PTITLE_OF(#1,#2) & #2[firstname=~,lastname=+])
LASTNAME_OF(#1,#2).


// FIRSTNAME_OF (first name of a person)
|NOUN#1[firstname:~]{?*[firstname:~],NOUN#2[lastname:~]}|
if ( PERSON(#1) & ~FIRSTNAME_OF(#1,?) & ~?(#1,#2) & #2[firstname=+])
FIRSTNAME_OF(#1,#2).

// FIRSTNAME_OF (first name of a person)
|NOUN#1[firstname:+]|
if ( PERSON(#1) & ~FIRSTNAME_OF(#1,?) )
FIRSTNAME_OF(#1,#1).

// FIRSTNAME2_OF (second firstname of a person, if any)
|NOUN#1[firstname:~]{?*,NOUN[firstname],NOUN#2[lastname:~]}|
if ( PERSON(#1) & ~?(#1,#2) & #2[firstname2=+])
FIRSTNAME2_OF(#1,#2).



// Modification of LOCORG to ORGANISATION if no +city, +country, +usastate, +contin

if (^LOCORG(#1) & #1[adj]) ~ .



if ( ^LOCORG(#1) & #1[city:~,usastate:~,country:~,contin:~] )
ORGANISATION(#1).

if ( ^LOCORG[city](#1) )
CITY[city=~](#1).

if ( ^LOCORG[country](#1) )
COUNTRY[country=~](#1).

if (^LOCORG(#1) & #1[usastate:+] )
STATE(#1).

if (^LOCORG(#1) & #1[contin:+] )
CONTINENT(#1).


////
// Missing locations (CITY, COUNTRY)

|#1[location,city,adj:~]|
if ( ~CITY(#1) )
CITY(#1).

|#1[location,country,adj:~]|
if ( ~COUNTRY(#1) )
COUNTRY(#1).

// Removing LOCATION if CITY or COUNTRY, etc.
if ( ^LOCATION(#1) & CITY(#1) ) ~ .


// If a node is an ORGANISATION and it contains a LOCATION
// extract the entity LOCATION and also the relation 'LOCATION_OF'

|?#1{?*,?#2[location,city];?#2[location,country];?#2[location,state]}|
if ( ORGANISATION(#1) & ~LOCATION(#1) & ~LOCATION_OF(?,#1) )
LOCATION_OF(#2,#1) .


//|?#1,?#2[city],#3[lemme:cedex],DIG,punct*,#4[country]|

// PART_OF org1 org2
// ex. "Vrije Universiteit Amsterdam, Department of Computer Science"
|NP{#1[last]},(punct[comma]),NP{#2[last]}|
if ( ORGANISATION(#1) & ORGANISATION(#2) )
PART_OF(#2,#1) .

// DATE: Internal structure
// if (DATE(#2) & Mother(#2,#1) ) PART_OF(#2,#1) .




////////////////////////////////////////////////////////////////////

// Refcode relations for persons. E.g. Paul Gut 1 ===> REFCODE(1, Paul Gut)
//|NOUN#1,DIG#2;?#2[symbol]|
//if (PERSON(#1))
//REFCODE(#2,#1).

// Refcode candidates
|DIG#1[maj:~];?#1[symbol,maj:~]|
if ( mother(#1,#2) & ~MARKER_CANDIDATE(#2) )
MARKER_CANDIDATE(#1).




//////////////////////////////////////////////////////////////////////
// Bibliographic citations
//////////////////////////////////////////////////////////////////////

/
// unary dep for entity type 'CitationLabel'
// ex. "[1]" or "[3,7]"
|punct[form:fobrack],(NP{dig[last]};punct[comma])*,NP[citlabel=+]{dig#1[last,citlabel=+]}|
if (_DocSection:"Default")
CITATIONLABEL(#1).
\



Marker:

1> NP[start,citlabel=+]{dig[citlabel=+,first,last]}, where (_DocSection:"References").

1> NP[person=+]{NOUN[first,last,person]}.
1> NP[prof=+]{NOUN[last,prof]}.

1> PP[person=+]{?*,NP[last,person]}.
1> PP[form=fin]{PREP[form:fin]}.



Sequence:


// ACHTUNG!! bug: does not add the citlabel feature into the DIG node
5> INS[bib=+] = NP[start,dig,citlabel],
                 punct[sent], where (_DocSection:"References") .

                 
// AUTHORS

// 10> AUTHORS @= |INS[bib]| NP{NOUN[first,last,person]} |punct[sent]| .

10> AUTHORS @= ~|?[start:~,bib:~]| 
             ( NP[person],
               ( punct[comma];conj[form:fand],
                 NP[proper];NOUN[proper] )*,
              punct[comma];conj[form:fand];[punct[comma],conj[form:fand]] ),
              NP[person,prof:~]
             |punct[sent]| .




             
// TITLE
15> TITLE @= |?[start], ?*[sent:~], punct[sent]|
              (?[sent:~];?[form:fcolon])*, ?[sent:~]
              |punct[sent]| .


// EDITORS at beginning
20> EDITORS @= ~|?[start:~,bib:~]| 
             ( NP[person],
               ( punct[comma];conj[form:fand],
                 NP[proper];NOUN[proper] )*,
              punct[comma];conj[form:fand];[punct[comma],conj[form:fand]] ),
              NP[person,prof:~]
              (punct[comma]),
              NP[lemme:"editor"] 
             |punct[sent]| .
             
// EDITORS in the middle of bib ref
20> EDITORS @= |TITLE,?*|
              NP[person];PP[form:fin,person],
              ( punct[comma];conj[form:fand];[punct[comma],conj[form:fand]],
                NP[proper];NOUN[proper] )*,
              (punct[comma]),
              NP[lemme:"editor"]
             |punct| .



DependencyRules:

// Assumes each bib ref body is provided as an input unit for XIP parsing
// see SplitRules


// Citation Body and CitationLabel_of
50> |TOP#1{INS[start]{NP[citlabel]{?#2[first,last,citlabel]},punct},?,?,?}|
if (_DocSection:"References")
CITATIONBODY(#1), BIBREFLABEL(#2), LABEL_OF(#2,#1).


// AUTHOR_OF
50> |TOP#1{ (?), AUTHORS{?*,NP{NOUN#2[last]}} }|
if ( CITATIONBODY(#1) & PERSON(#2) )
AUTHOR_OF(#2,#1).

// TITLE_OF
50> |TOP#1{ ?*, TITLE#2}|
if ( CITATIONBODY(#1) & ~TITLE_OF(#2,?) )
TITLE(#2), TITLE_OF(#2,#1).

// EDITOR_OF
50> |TOP#1{?*,EDITORS{?*,
      NP{NOUN#2[person,last]};NOUN#2[person];PP[form:fin]{?*,NP{NOUN#2[person,last]}},
    ?*,?[last]} }|
if ( CITATIONBODY(#1) & PERSON(#2) )
EDITOR_OF(#2,#1).

// DATE_OF
50> |TOP#1{?*,AUTHORS;TITLE;EDITORS,?*,NP[tempexpr]{?#2[last]}}|
if ( CITATIONBODY(#1) & ~DATE_OF(#2,?) )
DATE_OF(#2,#1).

// URL_OF
50> |TOP#1{?*,AUTHORS;TITLE;EDITORS,?*,NP{NOUN#2[url,last]},punct[end]}}|
if ( CITATIONBODY(#1) & ~URL_OF(#2,?) )
URL_OF(#2,#1).


// Cosmetics
80> if ( ^CITATIONBODY(#1) ) DOCUMENT(#1) .
if ( ^MARKER_CANDIDATE(#1) & ( DATE(#1) | CITATIONLABEL(#1) | BIBREFLABEL(#1) ) ) ~ .


