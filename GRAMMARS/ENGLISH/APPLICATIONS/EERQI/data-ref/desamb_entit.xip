//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : desamb_entit.xip
//!   Date       : 28/07/2004
//!   Author     : Caroline Brun
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

/some specific  disambiguation rules for entities\

Tagging:

// Warning this is dangerous 


1> noun<lemme:"Division"> = noun[orghead=~] | noun[lemme:"Biomodels"], noun[lemme:"Dept."] |.

1> noun<lemme:"faculty",maj> = noun[orghead=+,proper=+] | prep[form:fof] |.

//Gen. Hosp.

1> noun<lemme:"General"> %=  adj[lemme="general",maj=+] | noun[lemme="hosp."] |. 

1> nadj<maj:+> %= | noun[title:+] | noun[proper=+] | (punct[comma:+]), noun[firstname:+] |.

1> noun<guess,maj>, adj<guess,maj> = noun | noun[lemme:"et al."];noun[lemme:"et_al."] |.

1> pron<lemme:"us",toutmaj> , noun = |?[toutmaj:~] | noun |?[toutmaj:~] | .

1> prep<lemme:"on">, adj = |noun| prep | noun| .

1> noun<lemme:"International">, nadj = nadj | noun[eventmod] | .

// NOT A PROPER NAME 

1> noun<maj:~,guess:+,proper:+> %= noun[guess=+,proper:~].


1> noun<maj:+,lemme:"Di"> %= |noun[title:+] | noun[proper=+,countable=~,locpost=~,particlename=+].


1> noun<maj:+,vikef_term:~> %= |noun[title:+] | noun[proper=+,countable=~,locpost=~].

// April (-) June

1> noun<firstname:+,month:+> %= noun[month:+,firstname=~] | (punct[form:fhyph]), noun[month:+] |.

2>  noun<firstname:+,month:+> %=  |noun[month:+], (punct[form:fhyph])| noun[month:+,firstname=~] .

// test with rc

//? = ?[endwithcr2=+] | ?[cr2] |.

 // Chinese Foreign Minister Li Zhaoxing : Li is not a dig

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//VIKEF

// Allan G. Savage --> Savage = proper 

1> nadj<maj:+,proper:~,initial:~,country:~> %= |noun[firstname], (noun[initial:+]) |   noun[proper=+,maj=+].


// Semantic Services

1> noun<lemme:"Service",orghead>, noun<lemme:service>, verb = | adj[lemme:"semantic"] | noun<lemme:service>.


1> noun<lemme:"Fillmore",place> %= noun[celeb:+,place:~,proper:+].

1> dig[maj], noun =  |noun[hmm_tit];noun[title] | noun |noun[proper] |.

// See [1] --> See should be a verb

1> noun<proper,lemme:"See">, verb = verb | (punct), dig |.


// database Systems : System is not an orghead 

1> noun<lemme:"System">, noun<lemme:"system"> = |noun[vikef_term]| noun<lemme:"system">.

// Gene Ontology : Gene is not a firstname

1> noun<firstname>, noun<firstname:~> =  noun<firstname:~> | noun[vikef_term] |.

//DAML Library

1> noun<lemme:"Library"> %= | noun[vikef_term] | noun[countable].

//Andreas Eisele : Andreas --> location

1> noun[firstname:+,place:+] %= noun[proper:+, firstname:+] | noun[proper,fam] | .

1> noun<orgend>, noun<orgend:~> = | noun[vikef_term] | noun<orgend:~>.

1> noun<orghead> %= | noun[vikef_term] | noun<orghead:~>.

// Jan Wielemaker

1> noun<period,month,firstname> %=  noun<period:~,month:~,firstname:+>  | noun[proper] |.

//Workshop on Biocomputing --> Biocomputing is a noun 


1> verb[vprog,maj] %= | noun[eventmod], prep[lemme:"on"] | noun[changed=+,proper=+,maj=+].

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// T. S. Eliot : T. is not a measure but a noun with feature initial

1> meas[maj:+,abr:+]  %= noun[maj:+,initial=+] | (punct), noun[maj:+,initial] |.




// Hollywood is an adj (?) , but when it has a cap letter
// it should always be a noun

1> adj<maj:+,lemme:"hollywood"> %= noun[location:+,org:+,city:+,place:+,proper:+,noun:+,lemme:"Hollywood"].


//Mr Bush : Bush always a proper noun when with a cap letter

1> noun<lemme:"bush",maj> %=  noun[maj:+,proper:+,lemme:"Bush"].

2> verb<lemme:"bush",maj> %=  noun[maj:+,proper:+,lemme:"Bush"].


//The Atlantic 


2> nadj<lemme:"Atlantic">  %= |det[def] | noun[place:+,proper:+] .


2> noun<lemme:"Pacific"> %=  |det[def] | noun[place:+,proper:+] .

// Brock Associates Inc. --> Associates is a noun and not a verb


3> verb<lemme:associate,maj>, noun = |noun[proper]|  noun |noun[orgend]|.


// Federal Trade Commission : Comission is a noun and not a verb
//does not work problem

3> verb<lemme:commission>, noun  = |?[lemme=trade] | noun.

//Caen Peace Memorial : Memorial is a noun
3> nadj<maj,lemme:memorial>, noun = |noun[maj] | noun.


// add feature orghead to investment when start
// with cap letter and preceded by proper noun
// Tal Investment


3> noun<lemme:investment,sg,maj> = |noun[proper]| noun[orghead=+].

3> noun<lemme:group,sg> = |noun[proper,vikef_term:~];nadj[maj];adj[maj] | noun[orghead=+].


3> noun<lemme:unit,sg> = |noun[proper];nadj[maj];adj[maj] | noun[orghead=+].

3> noun<lemme:coast,sg> = |noun[proper];noun[maj] , (adj;nadj) | noun[locpost=+].

3> noun<lemme:forest,sg> = |noun[proper];noun[maj], (adj;nadj) | noun[locpost=+].

3> noun<lemme:peninsula,sg> = |noun[proper];noun[maj] , (adj;nadj) | noun[locpost=+].

3> noun<lemme:canyon,sg> = |noun[proper];noun[maj] , (adj;nadj) | noun[locpost=+].

3> noun<lemme:border,sg> = |noun[proper];noun[maj] , (adj;nadj) | noun[locpost=+].


3> noun<lemme:hotel,maj,pl>  = |noun[proper];noun[maj];nadj[maj], (adj;nadj) | noun[orghead=+].

3> noun<lemme:hotel,maj,sg>  = |noun[proper];noun[maj], (adj;nadj) | noun[orghead=+,alsoloc=+].


4> verb<maj:+,start:+> , noun<firstname:+> = noun | noun[proper] |.

//AGS Specialist Partners 


4> noun<lemme:partner,maj,pl> = |noun[proper];noun[maj], (adj;nadj) | noun[orghead=+].


//Enron Power Marketing


4>  verb<lemme:market,vprog,maj> , noun  = |noun[proper];noun[maj], (adj;nadj) | noun[orghead=+].
 


// Electronic Manufacturing Services Group

4> verb<lemme:service,maj>, noun  = |noun[proper];noun[maj], (adj;nadj) | noun | noun[orghead];noun[orgend] | .


//Tylan General Inc.

4> noun<guess>, adj<guess> =  noun | (noun;nadj;adj), noun[orghead];noun[orgend]| .

// XXX Brothers

4> noun<lemme:brother,maj,pl> = |noun[bus];noun[org] | noun[orgend=+].

//Larry Elder --> Elder is noun and not nadj

5> nadj[maj:+,country:~] %= | noun[firstname:+,fam:~,place:~,location:~]| noun[proper=+]. 



//"Ministry of Heals --> Heals noun"

6> verb<maj:+> %= |noun[lemme:"Ministry"], prep[form:fof]| noun[maj=+].

//dirty 

6> nadj<lemme:"fÃ¼r"> %= prep[lemme="for",form=ffor,prep=+,preporg=+]. 


6> noun<lemme:"Meta"> = |noun[guess:+,maj:+] , punct[comma:+] | noun[firstname=+].

6> dig<lemme:"li",maj:+> = noun[maj] |punct[comma:+], noun[firstname:+] |.

6> nadj<lemme:"und"> %= |noun[maj:+,guess:+] | conj[coord=+,form=fand].

6> noun<lemme:"f.">  %= |noun[maj:+] | prep[form=fof,prep=+,preporg=+] |noun[maj:+] | .

6> noun<lemme:"de"> %=  | noun[maj:+,title:~] | prep[form:fof,prep=+,preporg=+] | noun | .  

6> noun<lemme:"la"> = | noun[particlename] | noun[particlename=+] | noun[maj] | .

6> dig<lemme:"di"> %=  |noun[maj:+,orghead:+] | prep[form:fof,prep=+,preporg=+] | noun[maj:+,guess:+];noun[maj:+,proper:+] | . 

6> meas<lemme:"mol.",maj> %= |noun, conj[coord:+] | noun[maj=+].

6> noun<maj:+> %= |noun[lemme:"et al."], conj[coord:+] | noun[proper=+,maj=+,person=+,place=~].

//faculty

6> noun<maj:+,lemme:"faculty"> %= noun[orghead=+,proper=+].

6> noun<maj:+,lemme:"jerker"> %= |noun[maj] , punct[comma:+] | noun[firstname=+].

6> noun<maj:+,lemme:"Clarence"> = noun[firstname=~] | punct[form:fhyph] |.


6>  noun<maj:+,lemme:"Washington"> = noun[ambig=~] |(punct[comma:+]),  DIG[lemme:"DC"]| .

6> noun<maj:+,lemme="Christian">, nadj = |noun[proper], punct[comma]| noun.


// National Hospital
//National is not a proper noun

6> nadj, noun<proper,orghead> = nadj | noun[orghead] | .

6> noun<lemme:"Sofia"> = | noun[orghead];noun[orgend:~] | noun[firstname=~,city=+,place=+] |  noun[orghead];noun[orgend:~] |.

6> noun<lemme:"CO"> = |noun[city] , punct[comma] | noun[usastate=+].

6> noun<lemme:"Technische"> %= adj[maj=+].

6> noun<lemme:"Medical"> %= adj[maj=+].

6> noun<lemme:"international",maj> %= adj[maj=+] | noun[orghead] |.

// University Hospital

6>noun<lemme:"University"> = noun[orghead=~] | noun[lemme="Hospital", orghead] | .

6> adj<lemme:"genetic",maj> %= | adj | noun[lemme="genetic",maj=+,noun=+].


6> noun<lemme:"Deutsche"> %= adj[maj=+] .

6> noun<lemme:"Ulm"> = |dig| noun[city=+].

6> noun<lemme:"bologna",maj> = noun[city=+,place=+].

6> noun<lemme:"Strauss"> = noun[bus=~] | punct[comma], noun[initial];noun[firstname] |.

6> noun<lemme:"Shah"> = | noun[title:+] | noun[title=~] | punct[comma] |.

6> dig<lemme:"di"> = | noun[title:+] | noun[particlename=+] | noun[maj] | .

6> nadj<lemme:"double",maj> %= | | noun[proper=+,maj=+] | punct[comma], noun[initial];noun[firstname] | .

6> verb<maj> %= | (noun[title]) | noun[proper=+,maj=+] | punct[comma], noun[initial];noun[firstname] | .

6> adv<maj> %= |(noun[title]) | noun[proper=+,maj=+] | punct[comma], noun[initial];noun[firstname] | .

6> adj<maj> %= |(noun[title]) | noun[proper=+,maj=+] | punct[comma], noun[initial];noun[firstname] | .

6> nadj<maj> %= |(noun[title]) | noun[proper=+,maj=+] | punct[comma], noun[initial];noun[firstname] | .


6> noun<title,fam> = | noun[title]| noun[title=~] | punct[comma], noun[initial];noun[firstname] | .

6> noun<title,lemme:"Drive"> = | noun[title]| noun[lemme="Doctor"] |noun[maj] |.