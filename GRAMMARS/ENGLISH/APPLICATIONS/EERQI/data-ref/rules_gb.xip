tagging: 

//!!!!!!! We have to be careful: whenever a feature is eliminated, it will go back in the lexicon_rule. So, the word should be marked and be left out of the lexicon_rule !!!!!!!!!!!!

1> ?[form:fno,toutmaj] = ?[contr=~,gb=~,speccontr=~,func=~,forneg=~].
1> ?[form:fnot,toutmaj] = ?[contr=~,gb=~,speccontr=~,func=~,forneg=~].

// words getting features depending on their context

// little if not preceded by a determiner

1> ?[form_gb:flittle] = | ?[det:~,timefact:~] | ?[contr=+,gb=+,wmentsco=+].
1> ?[form_gb:flittle,start:+] = ?[contr=+,gb=+,wmentsco=+].

// "rather" is not a "contr" word when it is in front of adjectives

1> ?[form_gb:frather] = ?[gb=~,contr=~,weak=~,speccontr=~,func=~] | ?[adj:+] | .


// Certain abstracts are divided into sections by the author. The section names are in capital letters that are sometimes not seperated from the previous and following sentences by punctuation. If the words in the section titles have features for the change of direction, this can give wrong results. So these words shouldn't have these features - this rule is now implemented in the lexicon

1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,scope=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,mental=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,timefact=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,attitude=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,contr=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,possibility=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,article=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,change=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,func=~]. 
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,mech=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,nonot=~]. 
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,speccontr=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,specweak=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,weak=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,wscope=~].
1> ?[gb:+,scope:+,toutmaj:+] = ?[gb=~,wtime=~].
1> ?[gb:+,toutmaj:+,contr:+] = ?[gb=~,contr=~].

// mark words that are either "mental" or "scope"

1> ?[mental:+,contr:~] = ?[mentsco=+].

1> ?[scope:+] = ?[mentsco=+].

// mark words that are "mental", "scope" or "timefact"

1> ?[timefact,nonot:~] = ?[mentscotime=+].

1> ?[mentsco] = ?[mentscotime=+].

// mark words that are "mental", "scope" or "possibility"

1> ?[possibility] = ?[mentscoposs=+].

1> ?[mentsco] = ?[mentscoposs=+].

// mark words that are either "mental" or "cont"


1> ?[mental:+,contr:~,scope:~] = ?[mentcont=+].

1> ?[mental:~,contr:+,scope:~] = ?[mentcont=+].


// "factor" is not a level word within hyphened words

//1> ?[nohyph:+] = | ?[form:fhyph] | ?[level=~,gb=~,contr=~].

// gain-of-function

1> ?[nohyph:+] = ?[gb=~,change=~] | ?[form:fhyph] |.

// "challenge" is a term when preceded by a guessed word even when this word is not analyzed as its modifier 

1> ?[form_gb:fchallenge] = | ?[guess:+] | ?[contr=~,gb=~,nohyph=~,nounary=~] .

// "elucidate" has the feature "new" only if it is an infinitive

//1> verb[new:+] = | ?[form_gb:~finfto] | verb[new=~].

//1> verb[new:+,start:+] = verb[new=~].

//contexte dependent "negative":

//but .... not

1> ?[forneg:+,toutmaj:~] = | ?[form:fbut] , ?*[punct:~] | ?[forneg=~,negative=~] .

1> ?[forneg:+,toutmaj:~] = | ?[however] , ?*[punct:~] | ?[forneg=~,negative=~] .

1> ?[negative:+] = | ?[form:fbut] , ?*[punct:~] | ?[forneg=~,negative=~] .

1> ?[negative:+] = | ?[however] , ?*[punct:~] | ?[forneg=~,negative=~] .

// or not

1> ?[forneg:+,toutmaj:~] = | ?[form:for] | ?[forneg=~,negative=~] .

// "may not" "probably not" -> "not gets the feature negative so that it can make a negative relsent

1> ?[forneg,toutmaj:~] = | ?[possibility], (adv[form:~fbut]) | ?[negative=+] | ?[noneg:+] | .

1> ?[forneg,toutmaj:~] = | ?[form:fand], (adv[form:~fbut]) | ?[negative=+] | ?[noneg:+] |.

1> ?[forneg,toutmaj:~] = | ?[comma], (adv[form:~fbut]) | ?[negative=+] | ?[noneg:+] |.

1> ?[forneg,toutmaj:~,last:+] = | ?[possibility], (adv[form:~fbut]) | ?[negative=+]  .

1> ?[forneg,toutmaj:~,last:+] = | ?[form:fand], (adv[form:~fbut]) | ?[negative=+] .

1> ?[forneg,toutmaj:~,last:+] = | ?[comma], (adv[form:~fbut]) | ?[negative=+] .

// not only is not negative

1> ?[forneg:+,toutmaj:~] = ?[forneg=~,negative=~,contr=~,gb=~,func=~] | ?[noneg:+] |.

//contrary to

1> ?[contr,noun] = | ?[start], ?*[form:~fbut] | ?[negative=+] | ?[form:finfto] |.

1> ?[contr,noun] = | ?[start], ?*[however:~] | ?[negative=+] | ?[form:finfto] |.

1> ?[contr,noun,start] =  ?[negative=+] | ?[form:finfto] |.

