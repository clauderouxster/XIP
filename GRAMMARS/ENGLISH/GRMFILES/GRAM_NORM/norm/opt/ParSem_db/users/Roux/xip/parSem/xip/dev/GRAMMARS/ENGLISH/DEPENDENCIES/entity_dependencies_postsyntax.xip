//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : Entity XIP grammar
//!   filename   : entity_dependencies_postsyntax.xip
//!   Date       : 04/08/2003
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



DependencyRules:

// >>>>>>>>>>>>>EXTRACTIONS 

// We try to extract NPs for which
// Heads are entities, and then mark them 
// with the same tag 
// ex : Cult film American film director Quentin Tarentino is a person 

// Marking simple NP[det noun] like the Nixon 
//SIMPLE allow to rule out some
//undesirable analysis

/|NP#1{DET#3,NOUN#2[last]}| 
        SIMPLE(#1)

|NP#1{AP#2{ADJ#3[lemme:next_to]}}|
         SIMPLE(#1)

|NP#1{AP#2{ADV#3}}|
         SIMPLE(#1)

|NP#1{NOUN#1[proper],part#2[last]}|
         SIMPLE(#1)

|NP#1{ADV,NOUN#1[proper],part[last]}|
         SIMPLE(#1)

|NP#1{AP#2{NADJ#3[hmm_verb,prof:~]},NOUN#4[last]}|
        SIMPLE(#1)

|NP#1{AP#2{ADJ#3[partpas]},NOUN#4[last]}|
        SIMPLE(#1)

|NP#1{AP#2{ADJ#3[lemme:ago]},NOUN#4[last]}|
        SIMPLE(#1)

|NP#1{AP#2{ADJ#3[lemme:only]},NOUN#4[last]}|
        SIMPLE(#1)

|NP#1{QUANT[start]}|
        SIMPLE(#1)

|NP#1{AP#2{ADJ#3[modloc:~]},NOUN#4[last,place]}|
        SIMPLE(#1)

|NP#1{AP{ADJ[quant]},NOUN#2[last]}|
         SIMPLE(#1) 

|NP#1{AP{NADJ{ADJ[quant]}},NOUN#2[last]}|
         SIMPLE(#1) 

|NP#1{DET[form:fthat],?*,NOUN#2[last]}|
         SIMPLE(#1) 

|NP#1{NUM,?*,NOUN#2[last]}|
         SIMPLE(#1) 

|NP#1{?*,dig[date],?*,NOUN#2[last]}|
SIMPLE(#1) \


// NP MARKING  
//|NP#1{?+[comma:~,indef:~,partpas:~,hmm_verb:~,vprog:~,hmm_vpap:~,adv:~,prep:~,adj:~],NOUN#2[cr:~,cr2:~]}|
// if(PERSON(#2) & HEAD(#2,#1) & ~SIMPLE(#1) & ~PERSON(#1))
  //     PERSON(#1)

//|NP#1{?+[comma:~,indef:~,partpas:~,hmm_verb:~,hmm_vpap:~],NOUN#2[cr:~,cr2:~]{NOUN[prof:+]}}|
// if(PERSON(#2) & HEAD(#2,#1) & ~SIMPLE(#1) & ~PERSON(#1))
 //      PERSON(#1)

//|NP#1{?[hmm_verb:~,comma:~,indef:~,partpas:~,vprog:~,part:~],NOUN#2[cr:~,cr2:~]{?*,NOUN#3}}|
 //       if(PERSON(#2)& HEAD(#3,#1)& ~SIMPLE(#1)  & ~PERSON(#1))
 //         PERSON(#1)


/|NP#1{AP#3{?[adj,first,last]},NOUN#2[last]}|
        if(LOCORG(#2) & ~SIMPLE(#1))
        LOCORG(#1)\

//|NP#1{?*,NOUN#2[c_person]}|
//       if(HEAD(#2,#1))
//        LIXO(#1)

// With parts

|NP#1{NOUN#3[proper],PART,NOUN#2[person,org:~]}|
        if(~PERSON(#1) & ~ORGANISATION(#1) & ~LOCORG(#1))
        PERSON(#1)


|NP#1{NOUN#2[proper],PART,NOUN[last,locpost]}|
        LOCATION(#1)

|NP#1{?*,NOUN#2[person,org:~],PART,noun[last,org,place:~]}|
        if(ORGANISATION(#3))
         ORGANISATION(#1)

|NP#1{?*,NOUN#2[person,org:~],PART,NOUN#3[last,bus]}|
        if(ORGANISATION(#3))
         ORGANISATION(#1)

|NP#1{?*,NOUN#2[celeb,org:~],PART,noun#3[last,org]}|
        if(ORGANISATION(#3))
         ORGANISATION(#1)

|NP#1{?*,NOUN#2[celeb,org:~],PART,noun[last,bus]}|
           if(ORGANISATION(#3))
         ORGANISATION(#1)

|NP#1{NOUN#2[place,first],?*[dig:~,place:~],noun[last,orghead]}|
         ORGANISATION(#1)

|NP#1{NOUN#2[person],part,noun[last,orghead]}|
         ORGANISATION(#1)

|NP#1{NOUN#2[celeb,person:~],part,noun[last,orghead]}|
         ORGANISATION(#1)

|NP#1{NOUN#2,PART,NOUN#3}|
        if( ORGANISATION(#2) &  ORGANISATION(#3))
        ORGANISATION(#1)

|NP#1{NOUN#2,PART,NOUN#3[orghead]}|
        if( ORGANISATION(#2) )
        ORGANISATION(#1)


|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(PERSON(#2) & LOCORG(#3))
        LOCORG(#1)

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(LOCORG(#2) & ORGANISATION(#3))
        ORGANISATION(#1)

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(LOCORG[city:~,country:~,contin:~](#2) & LOCATION(#3))
        LOCORG(#1)


|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(LOCORG(#2) & LOCORG(#3))
        LOCORG(#1)

//=========== A TEST ============

//if(SUBJATTR(#1,#2) & PERSON(#1))
//        LIXO(#1,#2)

/ need to remove duplicates\

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(LOCORG(#2) & ^LOCORG(#3))
        ~

|NP#1{NOUN#2[proper],PART,NOUN[last,locpost]}|
      if(LOCATION(#1) & ^PERSON(#2))
        ~

|NP#1{?*,NOUN#2[person],PART,NOUN#3[last,org]}|
         if(^PERSON(#2) & ORGANISATION(#1))
        ~

|NP#1{?*,NOUN#2[person],PART,NOUN#3[last,org]}|
         if(^ORGANISATION(#3) & ORGANISATION(#1))
        ~

|NP#1{AP#3{?[adj,first,last]},NOUN#2[last]}|
        if(^LOCORG(#2) & LOCORG(#1))
        ~

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(^LOCORG(#2) & LOCORG(#1))
        ~
|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(^LOCATION(#3) & LOCORG(#1))
        ~

|NP#1{NOUN#2[place,first],?*,NOUN[last,orghead]}|
         if(ORGANISATION(#1) & ^LOCORG(#2))
        ~

|NP#1{NOUN#2[place,first],?*,NOUN[last,orghead]}|
         if(ORGANISATION(#1) & ^LOCATION(#2))
        ~

|NP#1{NOUN#2,PART,NOUN#3}|
        if( ^ORGANISATION(#2)  & ORGANISATION(#1))
         ~
|NP#1{NOUN#2,PART,NOUN#3}|
        if( ^ORGANISATION(#3)  & ORGANISATION(#1))
         ~

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(^LOCORG(#2) & ORGANISATION(#1))
        ~

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(^ORGANISATION(#3) & ORGANISATION(#1))
        ~

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(PERSON(#2) & ^ORGANISATION(#3))
        ~
|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(PERSON(#2) & ^LOCORG(#3))
        ~

|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(^PERSON(#2) & ORGANISATION(#1))
        ~
        
|NP#1{NOUN#2,PART,NOUN#3[last]}|
        if(^PERSON(#2) & LOCORG(#1))
        ~

|NP#1{?*,NOUN#2}|
if (PERSON(#1) & ^PERSON(#2))
        ~

|NP#1{?*,NOUN#2}|
        if (PERSON(#1) & ^LOCORG(#2))
        ~

|NP#1{?*,NOUN#2}|
        if (PERSON(#1) & ^ORGANISATION(#2))
        ~

|NP#1{NOUN#2,NOUN#3}|
        if  (PERSON(#1) & ^ORGANISATION(#2))
        ~

|NP#1{NOUN#2}|
        if  (PERSON(#1) & ^ORGANISATION(#2))
        ~

|NP#1{?*,AP{NADJ{NOUN#2}}}|
        if(^LOCORG(#2) & PERSON(#1))
        ~

//idem for location ?

/|NP#1{?*,NOUN#2}|
 if(LOCATION(#2) & HEAD(#2,#1))
       LOCATION(#1)\


/ need to remove duplicates\


/|NP#1{?*,NOUN#2}|
if (LOCATION(#1) & ^LOCATION(#2))
        ~\
