
// This file is generated automatically by contin.awk on the basis of '@'in the third column in the corpus.
DependencyRules:
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:braccetto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:che, contin=+], ?#3[lemma:vedere, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:distanza, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:lungo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:meraviglia, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:prima, contin=+], ?#3[lemma:vista, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:quanto, contin=+], ?#3[lemma:pare, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:suo, contin=+], ?#3[lemma:dire, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:tuttocampo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:a, contin=+, compcat=adv], ?#2[lemma:volte, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:a, contin=+, compcat=prep], ?#2[lemma:causa, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=prep], ?#2[lemma:differenza, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=prep], ?#2[lemma:mo, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=prep], ?#2[lemma:parte, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:a, contin=+, compcat=prep], ?#2[lemma:seconda, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:a, contin=+, compcat=verb], ?#2[lemma:morte, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:ad, contin=+, compcat=adv], ?#2[lemma:arte, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:ad, contin=+, compcat=adv], ?#2[lemma:esempio, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:al, contin=+, compcat=adj], ?#2[lemma:verde, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:al, contin=+, compcat=adv], ?#2[lemma:massimo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:al, contin=+, compcat=adv], ?#2[lemma:sicuro, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:al, contin=+, compcat=prep], ?#2[lemma:pari, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:al, contin=+, compcat=prep], ?#2[lemma:posto, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:all', contin=+, compcat=prep], ?#2[lemma:interno, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:allo, contin=+, compcat=adj], ?#2[lemma:scoperto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:arma, contin=+, compcat=noun], ?#2[lemma:da, contin=+], ?#3[lemma:fuoco, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:banca, contin=+, compcat=noun], ?#2[lemma:d, contin=+], ?#3[lemma:italia, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:ciò, contin=+, compcat=conj], ?#2[lemma:nondimeno, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:come, contin=+, compcat=adv], ?#2[lemma:mai, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:conferenza, contin=+, compcat=noun], ?#2[lemma:stampa, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:context, contin=+, compcat=noun], ?#2[lemma:free, contin=+], ?#3[lemma:grammar, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:così, contin=+, compcat=conj], ?#2[lemma:che, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:d', contin=+, compcat=adv], ?#2[lemma:ora, contin=+], ?#3[lemma:innanzi, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:d', contin=+, compcat=adv], ?#2[lemma:un, contin=+], ?#3[lemma:tratto, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:da, contin=+, compcat=adj], ?#2[lemma:capogiro, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:da, contin=+, compcat=adv], ?#2[lemma:tempo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:da, contin=+, compcat=prep], ?#2[lemma:parte, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:dal, contin=+, compcat=adv], ?#2[lemma:vivo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:dal, contin=+, compcat=conj], ?#2[lemma:momento, contin=+], ?#3[lemma:che, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:de, contin=+, compcat=adj], ?#2[lemma:santo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:decreto, contin=+, compcat=noun], ?#2[lemma:legge, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:del, contin=+, compcat=adv], ?#2[lemma:resto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:del, contin=+, compcat=adv], ?#2[lemma:tutto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adj], ?#2[lemma:massima, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adj], ?#2[lemma:rigore, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:buon', contin=+], ?#3[lemma:occhio, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:certo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:colpo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:fatto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:nuovo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:più, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:sfuggita, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:solito, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=adv], ?#2[lemma:sorpresa, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:di, contin=+, compcat=prep], ?#2[lemma:fronte, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:doctor, contin=+, compcat=noun], ?#2[lemma:j, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:fino, contin=+, compcat=adv], ?#2[lemma:a, contin=+], ?#3[lemma:nuovo, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:fra, contin=+, compcat=adv], ?#2[lemma:l', contin=+], ?#3[lemma:altro, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=adj], ?#2[lemma:corso, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adj], ?#2[lemma:via, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=adj], ?#2[lemma:vista, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:esclusiva, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:particolare, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:piedi, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:privato, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:realtà, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:salvo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:sostanza, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=adv], ?#2[lemma:tutto, contin=+], ?#3[lemma:e, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=conj], ?#2[lemma:modo, contin=+], ?#3[lemma:da, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=conj], ?#2[lemma:quanto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:base, contin=+], ?#3[lemma:a, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:cima, contin=+], ?#3[lemma:a, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:direzione, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:linea, contin=+], ?#3[lemma:con, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:mano, contin=+], ?#3[lemma:a, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:mezzo, contin=+], ?#3[lemma:a, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:sede, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:in, contin=+, compcat=prep], ?#2[lemma:vista, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:l', contin=+, compcat=adv], ?#2[lemma:, contin=+], ?#3[lemma:altro, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:lo, contin=+, compcat=adv], ?#2[lemma:stesso, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:longa, contin=+, compcat=noun], ?#2[lemma:manus, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:los, contin=+, compcat=noun], ?#2[lemma:alamos, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:los, contin=+, compcat=noun], ?#2[lemma:angeles, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:mass, contin=+, compcat=noun], ?#2[lemma:media, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:medio, contin=+, compcat=noun], ?#2[lemma:oriente, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:messa, contin=+, compcat=noun], ?#2[lemma:in, contin=+], ?#3[lemma:opera, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:nei, contin=+, compcat=prep], ?#2[lemma:confronti, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:nei, contin=+, compcat=prep], ?#2[lemma:pressi, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:nel, contin=+, compcat=adv], ?#2[lemma:frattempo, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:nel, contin=+, compcat=prep], ?#2[lemma:corso, contin=+], ?#3[lemma:di, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:new, contin=+, compcat=noun], ?#2[lemma:york, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:non, contin=+, compcat=conj], ?#2[lemma:appena, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:nota, contin=+, compcat=noun], ?#2[lemma:del, contin=+], ?#3[lemma:redattore, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:oltre, contin=+, compcat=conj], ?#2[lemma:che, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:altro, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:caso, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:difetto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:esempio, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:giunta, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:lo, contin=+], ?#3[lemma:meno, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:lo, contin=+], ?#3[lemma:più, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:ora, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:sempre, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=adv], ?#2[lemma:terra, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:per, contin=+, compcat=conj], ?#2[lemma:cui, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:pro, contin=+, compcat=adj], ?#2[lemma:capite, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:punto, contin=+, compcat=noun], ?#2[lemma:di, contin=+], ?#3[lemma:vista, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:quanto, contin=+, compcat=adv], ?#2[lemma:meno, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:san, contin=+, compcat=noun], ?#2[lemma:francisco, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:san, contin=+, compcat=noun], ?#2[lemma:marco, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:se, contin=+, compcat=adv], ?#2[lemma:non, contin=+], ?#3[lemma:altro, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:senza, contin=+, compcat=noun], ?#2[lemma:tetto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:sotto, contin=+, compcat=adv], ?#2[lemma:sotto, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:stati, contin=+, compcat=noun], ?#2[lemma:uniti, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:sul, contin=+, compcat=adv], ?#2[lemma:serio, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:tutt', contin=+, compcat=adv], ?#2[lemma:, contin=+], ?#3[lemma:a, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:tutt', contin=+, compcat=adv], ?#2[lemma:, contin=+], ?#3[lemma:al, contin=+] | 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[lemma:un, contin=+, compcat=adv], ?#2[lemma:pò, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:unione, contin=+, compcat=noun], ?#2[lemma:sovietica, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:via, contin=+, compcat=adv], ?#2[lemma:via, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:via, contin=+, compcat=noun], ?#2[lemma:libera, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:vox, contin=+, compcat=noun], ?#2[lemma:populi, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[lemma:waiting, contin=+, compcat=noun], ?#2[lemma:list, contin=+] | 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:braccetto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:che, contin=+], ?#3[surface:vedere, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:distanza, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:lungo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:meraviglia, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:prima, contin=+], ?#3[surface:vista, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:quanto, contin=+], ?#3[surface:pare, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:suo, contin=+], ?#3[surface:dire, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:tuttocampo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=adv], ?#2[surface:volte, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=prep], ?#2[surface:causa, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=prep], ?#2[surface:differenza, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=prep], ?#2[surface:mo, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=prep], ?#2[surface:parte, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:a, contin=+, compcat=prep], ?#2[surface:seconda, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:a, contin=+, compcat=verb], ?#2[surface:morte, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:ad, contin=+, compcat=adv], ?#2[surface:arte, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:ad, contin=+, compcat=adv], ?#2[surface:esempio, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:al, contin=+, compcat=adj], ?#2[surface:verde, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:al, contin=+, compcat=adv], ?#2[surface:massimo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:al, contin=+, compcat=adv], ?#2[surface:sicuro, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:al, contin=+, compcat=prep], ?#2[surface:pari, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:al, contin=+, compcat=prep], ?#2[surface:posto, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:all', contin=+, compcat=prep], ?#2[surface:interno, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:allo, contin=+, compcat=adj], ?#2[surface:scoperto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:arma, contin=+, compcat=noun], ?#2[surface:da, contin=+], ?#3[surface:fuoco, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:banca, contin=+, compcat=noun], ?#2[surface:d, contin=+], ?#3[surface:italia, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:ciò, contin=+, compcat=conj], ?#2[surface:nondimeno, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:come, contin=+, compcat=adv], ?#2[surface:mai, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:conferenza, contin=+, compcat=noun], ?#2[surface:stampa, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:context, contin=+, compcat=noun], ?#2[surface:free, contin=+], ?#3[surface:grammar, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:così, contin=+, compcat=conj], ?#2[surface:che, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:d', contin=+, compcat=adv], ?#2[surface:ora, contin=+], ?#3[surface:innanzi, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:d', contin=+, compcat=adv], ?#2[surface:un, contin=+], ?#3[surface:tratto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:da, contin=+, compcat=adj], ?#2[surface:capogiro, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:da, contin=+, compcat=adv], ?#2[surface:tempo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:da, contin=+, compcat=prep], ?#2[surface:parte, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:dal, contin=+, compcat=adv], ?#2[surface:vivo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:dal, contin=+, compcat=conj], ?#2[surface:momento, contin=+], ?#3[surface:che, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:de, contin=+, compcat=adj], ?#2[surface:santo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:decreto, contin=+, compcat=noun], ?#2[surface:legge, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:del, contin=+, compcat=adv], ?#2[surface:resto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:del, contin=+, compcat=adv], ?#2[surface:tutto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adj], ?#2[surface:massima, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adj], ?#2[surface:rigore, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:buon', contin=+], ?#3[surface:occhio, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:certo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:colpo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:fatto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:nuovo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:più, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:sfuggita, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:solito, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=adv], ?#2[surface:sorpresa, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:di, contin=+, compcat=prep], ?#2[surface:fronte, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:doctor, contin=+, compcat=noun], ?#2[surface:j, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:fino, contin=+, compcat=adv], ?#2[surface:a, contin=+], ?#3[surface:nuovo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:fra, contin=+, compcat=adv], ?#2[surface:l', contin=+], ?#3[surface:altro, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=adj], ?#2[surface:corso, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adj], ?#2[surface:via, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=adj], ?#2[surface:vista, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:esclusiva, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:particolare, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:piedi, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:privato, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:realtà, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:salvo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:sostanza, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=adv], ?#2[surface:tutto, contin=+], ?#3[surface:e, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=conj], ?#2[surface:modo, contin=+], ?#3[surface:da, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=conj], ?#2[surface:quanto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:base, contin=+], ?#3[surface:a, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:cima, contin=+], ?#3[surface:a, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:direzione, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:linea, contin=+], ?#3[surface:con, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:mano, contin=+], ?#3[surface:a, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:mezzo, contin=+], ?#3[surface:a, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:sede, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:in, contin=+, compcat=prep], ?#2[surface:vista, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:l', contin=+, compcat=adv], ?#2[surface:, contin=+], ?#3[surface:altro, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:lo, contin=+, compcat=adv], ?#2[surface:stesso, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:longa, contin=+, compcat=noun], ?#2[surface:manus, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:los, contin=+, compcat=noun], ?#2[surface:alamos, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:los, contin=+, compcat=noun], ?#2[surface:angeles, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:mass, contin=+, compcat=noun], ?#2[surface:media, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:medio, contin=+, compcat=noun], ?#2[surface:oriente, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:messa, contin=+, compcat=noun], ?#2[surface:in, contin=+], ?#3[surface:opera, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:nei, contin=+, compcat=prep], ?#2[surface:confronti, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:nei, contin=+, compcat=prep], ?#2[surface:pressi, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:nel, contin=+, compcat=adv], ?#2[surface:frattempo, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:nel, contin=+, compcat=prep], ?#2[surface:corso, contin=+], ?#3[surface:di, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:new, contin=+, compcat=noun], ?#2[surface:york, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:non, contin=+, compcat=conj], ?#2[surface:appena, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:nota, contin=+, compcat=noun], ?#2[surface:del, contin=+], ?#3[surface:redattore, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:oltre, contin=+, compcat=conj], ?#2[surface:che, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:altro, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:caso, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:difetto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:esempio, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:giunta, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:lo, contin=+], ?#3[surface:meno, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:lo, contin=+], ?#3[surface:più, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:ora, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:sempre, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=adv], ?#2[surface:terra, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:per, contin=+, compcat=conj], ?#2[surface:cui, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:pro, contin=+, compcat=adj], ?#2[surface:capite, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:punto, contin=+, compcat=noun], ?#2[surface:di, contin=+], ?#3[surface:vista, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:quanto, contin=+, compcat=adv], ?#2[surface:meno, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:san, contin=+, compcat=noun], ?#2[surface:francisco, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:san, contin=+, compcat=noun], ?#2[surface:marco, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:se, contin=+, compcat=adv], ?#2[surface:non, contin=+], ?#3[surface:altro, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:senza, contin=+, compcat=noun], ?#2[surface:tetto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:sotto, contin=+, compcat=adv], ?#2[surface:sotto, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:stati, contin=+, compcat=noun], ?#2[surface:uniti, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:sul, contin=+, compcat=adv], ?#2[surface:serio, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:tutt', contin=+, compcat=adv], ?#2[surface:, contin=+], ?#3[surface:a, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:tutt', contin=+, compcat=adv], ?#2[surface:, contin=+], ?#3[surface:al, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2), CONTIN_LOCUT(#2, #3). 
| ?#1[surface:un, contin=+, compcat=adv], ?#2[surface:pò, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:unione, contin=+, compcat=noun], ?#2[surface:sovietica, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:via, contin=+, compcat=adv], ?#2[surface:via, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:via, contin=+, compcat=noun], ?#2[surface:libera, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:vox, contin=+, compcat=noun], ?#2[surface:populi, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 
| ?#1[surface:waiting, contin=+, compcat=noun], ?#2[surface:list, contin=+] | 	 if ( ~CONTIN_LOCUT(#1, #2) ) 	 CONTIN_LOCUT(#1, #2). 


Sequence:
1> prep @= ?[contin:+, compcat:prep], (?[contin:+])*.
1> adj @= ?[contin:+, compcat:adj], (?[contin:+])*.
1> noun @= ?[contin:+, compcat:noun], (?[contin:+])*.
1> adv @= ?[contin:+, compcat:adv], (?[contin:+])*.
1> verb @= ?[contin:+, compcat:verb], (?[contin:+])*.
