/*
 * FConfiguration.java
 *
 * Created on April 25, 2008, 2:02 PM
 */

package extractionweb;

import java.io.DataOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * The configuration frame.
 * @author  CÃ©dric Tarsitano
 */
public class FConfiguration extends javax.swing.JFrame {
    
    private static boolean mConfigOK;
    
    /** Creates new form FConfiguration */
    public FConfiguration(boolean ok) {
        mConfigOK = ok;
        if(!mConfigOK){
            Main.proxyHost = "cornillon.grenoble.xrce.xerox.com";
            Main.proxyPort = 8000;
            Main.separator = "\t";
        }
        initComponents();
        Main.centerFramePosition(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        proxyCheckBox = new javax.swing.JCheckBox();
        proxyHostLabel = new javax.swing.JLabel();
        proxyPortLabel = new javax.swing.JLabel();
        separatorLabel = new javax.swing.JLabel();
        proxyHostTextField = new javax.swing.JTextField();
        proxyPortTextField = new javax.swing.JTextField();
        separatorTextField = new javax.swing.JTextField();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(saveForced());
        setTitle("Xerox Web Data Extraction - Configuration");
        setBackground(java.awt.Color.white);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        proxyCheckBox.setBackground(java.awt.Color.white);
        proxyCheckBox.setForeground(java.awt.Color.red);
        proxyCheckBox.setSelected(Main.proxy);
        proxyCheckBox.setText("Use proxy");
        proxyCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proxyCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(proxyCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 100, -1));

        proxyHostLabel.setForeground(java.awt.Color.red);
        proxyHostLabel.setText("Proxy host : ");
        proxyHostLabel.setEnabled(proxyCheckBox.isSelected());
        proxyHostLabel.setFocusable(false);
        proxyHostLabel.setRequestFocusEnabled(false);
        jPanel1.add(proxyHostLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, 80, 30));

        proxyPortLabel.setForeground(java.awt.Color.red);
        proxyPortLabel.setText("Proxy port : ");
        proxyPortLabel.setEnabled(proxyCheckBox.isSelected());
        proxyPortLabel.setFocusable(false);
        proxyPortLabel.setRequestFocusEnabled(false);
        jPanel1.add(proxyPortLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 80, 30));

        separatorLabel.setForeground(java.awt.Color.red);
        separatorLabel.setText("Separator : ");
        separatorLabel.setFocusable(false);
        separatorLabel.setRequestFocusEnabled(false);
        jPanel1.add(separatorLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, 80, 30));

        proxyHostTextField.setEditable(proxyCheckBox.isSelected());
        proxyHostTextField.setText(Main.proxyHost);
        proxyHostTextField.setEnabled(proxyCheckBox.isSelected());
        proxyHostTextField.setFocusable(proxyCheckBox.isSelected());
        jPanel1.add(proxyHostTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 60, 230, 30));

        proxyPortTextField.setEditable(proxyCheckBox.isSelected());
        proxyPortTextField.setText(String.valueOf(Main.proxyPort));
        proxyPortTextField.setToolTipText("Only numbers");
        proxyPortTextField.setEnabled(proxyCheckBox.isSelected());
        proxyPortTextField.setFocusable(proxyCheckBox.isSelected());
        jPanel1.add(proxyPortTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 100, 230, 30));

        separatorTextField.setText(Main.separator);
        separatorTextField.setToolTipText("The string separation between columns of a table when the data is saved");
        jPanel1.add(separatorTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 160, 230, 30));

        okButton.setBackground(new java.awt.Color(249, 248, 240));
        okButton.setForeground(java.awt.Color.red);
        okButton.setText("OK");
        okButton.setToolTipText("Save the current configuration");
        okButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel1.add(okButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 120, 30));

        cancelButton.setBackground(new java.awt.Color(249, 248, 240));
        cancelButton.setForeground(java.awt.Color.red);
        cancelButton.setText("Cancel");
        cancelButton.setToolTipText("You will loose the changes");
        cancelButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 230, 120, 30));

        saveButton.setBackground(new java.awt.Color(249, 248, 240));
        saveButton.setForeground(java.awt.Color.red);
        saveButton.setText("Save in a file");
        saveButton.setToolTipText("Export the current configuration in a file");
        saveButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jPanel1.add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 120, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 440, 300));

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void proxyCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proxyCheckBoxActionPerformed
    boolean b = proxyCheckBox.isSelected();
    
    proxyHostLabel.setFocusable(b);
    proxyHostLabel.setEnabled(b);
    proxyHostTextField.setFocusable(b);
    proxyHostTextField.setEditable(b);
    proxyHostTextField.setEnabled(b);
    
    proxyPortLabel.setFocusable(b);
    proxyPortLabel.setEnabled(b);
    proxyPortTextField.setFocusable(b);
    proxyPortTextField.setEditable(b);
    proxyPortTextField.setEnabled(b);
}//GEN-LAST:event_proxyCheckBoxActionPerformed

private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    Main.proxy = proxyCheckBox.isSelected();
    Main.separator = separatorTextField.getText();
    if(Main.proxy){
        if(proxyHostTextField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Proxy host is empty.\nPlease type it again.", "Warning", JOptionPane.WARNING_MESSAGE);
            proxyHostTextField.setText(Main.proxyHost);
            return;
        }
        Main.proxyHost = proxyHostTextField.getText();
        try{
            Main.proxyPort = new Integer(proxyPortTextField.getText());
            this.setVisible(false);
            Main.configIsClosed = true;
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "You can only type numbers for proxy port !\nPlease type it again.", "Warning", JOptionPane.WARNING_MESSAGE);
            proxyPortTextField.setText(String.valueOf(Main.proxyPort));
        }
    }
    else{
        saveForced();
        this.setVisible(false);
        Main.configIsClosed = true;
    }
}//GEN-LAST:event_okButtonActionPerformed

private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
    Main.proxy = proxyCheckBox.isSelected();
    Main.separator = separatorTextField.getText();
    if(Main.proxy){
        if(proxyHostTextField.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Proxy host is empty.\nPlease type it again.", "Warning", JOptionPane.WARNING_MESSAGE);
            proxyHostTextField.setText(Main.proxyHost);
            return;
        }
        Main.proxyHost = proxyHostTextField.getText();
        try{
            Main.proxyPort = new Integer(proxyPortTextField.getText());
            newConfigFile();
            this.setVisible(false);
            Main.configIsClosed = true;
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "You can only type numbers for proxy port !\nPlease type it again.", "Warning", JOptionPane.WARNING_MESSAGE);
            proxyPortTextField.setText(String.valueOf(Main.proxyPort));
        }
    }
}//GEN-LAST:event_saveButtonActionPerformed

private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
    saveForced();
    this.setVisible(false);
    Main.configIsClosed = true;
}//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * This method forces the backup of the configuration file if the parameters was not loaded successfully.
     * @return the default operation to do when the frame is closed.
     */
    private static int saveForced(){
        if(!mConfigOK){
            try{
                if(!Main.configFile.exists())
                    Main.configFile.createNewFile();
                FileOutputStream out = new FileOutputStream(Main.configFile);
                DataOutputStream dos = new DataOutputStream(out);
                dos.writeUTF("Proxy host : " + Main.proxyHost + "\nProxy port : " + Main.proxyPort + "\nSeparator : " + Main.separator + "\n");
                dos.close();
            }
            catch (IOException e){}
            mConfigOK = true;
        }
        Main.configIsClosed = true;
        return JFrame.DISPOSE_ON_CLOSE;
    }

    /**
     * This method is used to write the current values of the parameters into the configuration file.
     */
    private void newConfigFile(){
        try{
            FileOutputStream out = new FileOutputStream(Main.configFile);
            DataOutputStream dos = new DataOutputStream(out);
            dos.writeUTF("Proxy host : " + Main.proxyHost + "\nProxy port : " + Main.proxyPort + "\nSeparator : " + Main.separator + "\n");
            dos.close();
        }
        catch (IOException e){
            //JOptionPane.showMessageDialog(this, "Please check the file you selected.", "Error", JOptionPane.ERROR_MESSAGE);
            System.err.println(e.getMessage());
            e.printStackTrace();
        }
    }
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FConfiguration(mConfigOK).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okButton;
    private javax.swing.JCheckBox proxyCheckBox;
    private javax.swing.JLabel proxyHostLabel;
    private javax.swing.JTextField proxyHostTextField;
    private javax.swing.JLabel proxyPortLabel;
    private javax.swing.JTextField proxyPortTextField;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel separatorLabel;
    private javax.swing.JTextField separatorTextField;
    // End of variables declaration//GEN-END:variables

}
