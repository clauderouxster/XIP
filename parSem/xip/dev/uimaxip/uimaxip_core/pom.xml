<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xerox.xrce.uimaxip</groupId>
    <artifactId>uimaxip-core</artifactId>
    <packaging>jar</packaging>
    <version>1.0-SNAPSHOT</version>
    <name>uimaxip core</name>
    <description>
	Base libraries for XIP-based UIMA components
    </description>

    <dependencies>

        <!-- uima jars are deployed to the apache incubator maven
             repository, which is proxied by our internal repository
             on lautaret. -->
	<dependency>
	    <groupId>org.apache.uima</groupId>
	    <artifactId>uimaj-core</artifactId>
	    <version>2.3.0-incubating</version>
	    <type>jar</type>
	</dependency>

        <!-- jxip jars are deployed to our internal maven repository
             on lautaret by Gilbert's ant script -->
        <dependency>
            <groupId>com.xerox.jxip</groupId>
            <artifactId>jxip</artifactId>
            <version>10.01-32</version>
        </dependency>

        <!-- TODO: for every jar in the lib/ directory, we need to
             declare a dependency here. In this case, there's
             jcoref.jar, so we need to declare that here. Before we
             can do that, we need to create a pom like this one for
             jcoref. -->

    </dependencies>

    <build>

	<plugins>

            <plugin>
                <!-- This tells maven that it can do the "package"
                     phase of the maven lifecycle (building a jar) by
                     calling the ant target "jar" in build.xml, and
                     then copying dist/java6/uimaxip_core.jar to the
                     target/ directory with the name that maven
                     expects it to have. -->

                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <id>ant-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>ant</executable>
                    <arguments>
                        <argument>jar</argument>
                    </arguments>
                </configuration>
            </plugin>


            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.6</version>

                <executions>
                    <execution>
                        <id>ant-copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <!-- <ant antfile="build.xml" target="jar"/> -->
                                <copy file="dist/java6/uimaxip_core.jar"
                                      tofile="${project.build.directory}/${project.artifactId}-${project.version}.jar"/>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ant-clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <ant antfile="build.xml" target="clean"/> -->
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

	</plugins>

    </build>

    
    <!-- This is used by mvn deploy. You don't need to run mvn deploy
         when compiling from source. --> 

    <distributionManagement>

	<repository>
	    <id>releases</id>
	    <url>http://lautaret.grenoble.xrce.xerox.com:8081/nexus/content/repositories/releases</url>
	</repository>

	<snapshotRepository>
	    <id>snapshots</id>
	    <url>http://lautaret.grenoble.xrce.xerox.com:8081/nexus/content/repositories/snapshots</url>
	</snapshotRepository>

    </distributionManagement>


    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>


</project>
