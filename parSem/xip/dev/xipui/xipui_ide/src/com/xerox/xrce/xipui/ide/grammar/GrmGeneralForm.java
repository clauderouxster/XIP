/*
 * Xerox Research Centre Europe - Grenoble Laboratory
 * 
 * Copyright (c) 2006 - 2007 Xerox Corporation.  All Rights Reserved.
 * 
 * GrmGeneralForm.java
 *
 * Created on January 10, 2006, 11:49 AM
 */
package com.xerox.xrce.xipui.ide.grammar;

import com.xerox.xrce.xipui.GrmFile;
import com.xerox.xrce.xipui.ui.FileMenu;
import com.xerox.xrce.xipui.modules.ModuleContext;
import com.xerox.xrce.xipui.modules.PanelModule;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

/**
 *
 * @author  vgrassau
 */
public class GrmGeneralForm extends PanelModule implements KeyListener {

    /**
     * Creates new form GrmGeneralForm
     * @param properties 
     */
    public GrmGeneralForm(ModuleContext properties) {
        super(properties);
        initComponents();
        grammar.addKeyListener(this);
        hmm.addKeyListener(this);
        lookup.addKeyListener(this);
        tokenizer.addKeyListener(this);
        ntm.addKeyListener(this);
        flags.addKeyListener(this);
        init();
    }

    public void close() {
        removeAll();
        this.isClosed = true;
    }

    public void setEnabled(boolean b) {
        this.grammar.setEnabled(b);
        this.lookup.setEnabled(b);
        this.ntm.setEnabled(b);
        this.hmm.setEnabled(b);
        this.tokenizer.setEnabled(b);
        this.breadth.setEnabled(b);
        this.depth.setEnabled(b);
        this.flags.setEnabled(b);
    }

    public void keyTyped(KeyEvent e) {
    }

    public void keyReleased(KeyEvent e) {
        isModified();
    }

    public void keyPressed(KeyEvent e) {
    }

    private void isModified() {
        JMenuBar mb = (JMenuBar) getProperty(MENUBAR);
        FileMenu fileMenu = (FileMenu) mb.getComponent(0);
        fileMenu.setSavable(true);
    }

    private void init() {
        try {
            //Project p = (Project)properties.get(PROJECT);
            GrmFile grm = (GrmFile) getProperty("GRM_EDITED");
            if (grm != null) {
                grammar.setText(grm.getValue(GrmFile.INSTR_GRAMMAR));
                hmm.setText(grm.getValue(GrmFile.INSTR_HMM));
                ntm.setText(grm.getValue(GrmFile.INSTR_NTM));
                lookup.setText(grm.getValue(GrmFile.INSTR_LOOKUP));
                tokenizer.setText(grm.getValue(GrmFile.INSTR_TOKENIZER));
                flags.setText(grm.getValue(GrmFile.INSTR_FLAGS));
                if (grm.getValue(GrmFile.INSTR_STRATEGY) != null) {
                    if (grm.getValue(GrmFile.INSTR_STRATEGY).equalsIgnoreCase("BREADTH")) {
                        breadth.setSelected(true);
                    } else {
                        depth.setSelected(true);
                    }
                }
            } else {
                setEnabled(false);
            }
        } catch (Exception e) {
            severe("ERROR", e);
        }
    }

    public String getFlags() {
        return this.flags.getText();
    }

    public String getTokenizer() {
        return this.tokenizer.getText();
    }

    public String getNtm() {
        return this.ntm.getText();
    }

    public String getHmm() {
        return this.hmm.getText();
    }

    public String getGrammar() {
        return this.grammar.getText();
    }

    public String getLookup() {
        return this.lookup.getText();
    }

    public String getStrategy() {
        if (depth.isSelected()) {
            return "DEPTH";
        }
        if (breadth.isSelected()) {
            return "BREADTH";
        }
        return null;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        
        buttonGroup1 = new javax.swing.ButtonGroup();
        title = new javax.swing.JRadioButton();
        panel = new javax.swing.JPanel();
        flags = new javax.swing.JTextField();
        tokenizer = new javax.swing.JTextField();
        breadth = new javax.swing.JRadioButton();
        depth = new javax.swing.JRadioButton();
        lookup = new javax.swing.JTextField();
        ntm = new javax.swing.JTextField();
        hmm = new javax.swing.JTextField();
        grammar = new javax.swing.JTextField();
        labelFlags = new javax.swing.JLabel();
        labelTokenizer = new javax.swing.JLabel();
        labelLookup = new javax.swing.JLabel();
        labelNTM = new javax.swing.JLabel();
        labelHMM = new javax.swing.JLabel();
        labelGrammar = new javax.swing.JLabel();
        
        
        setLayout(new java.awt.GridBagLayout());
        
        setBackground(new java.awt.Color(255, 255, 255));
        title.setBackground(java.awt.Color.pink);
        title.setSelected(true);
        title.setText("General");
        title.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 102, 0)));
        title.setBorderPainted(true);
        title.setFocusPainted(false);
        title.setMargin(new java.awt.Insets(0, 0, 0, 0));
        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleActionPerformed(evt);
            }
        });
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(title, gridBagConstraints);
        
        panel.setLayout(new java.awt.GridBagLayout());
        
        panel.setBackground(new java.awt.Color(255, 255, 255));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(flags, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(tokenizer, gridBagConstraints);
        
        breadth.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(breadth);
        breadth.setText("BREADTH");
        breadth.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        breadth.setMargin(new java.awt.Insets(0, 0, 0, 0));
        breadth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breadthActionPerformed(evt);
            }
        });
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(breadth, gridBagConstraints);
        
        depth.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(depth);
        depth.setText("DEPTH");
        depth.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        depth.setMargin(new java.awt.Insets(0, 0, 0, 0));
        depth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depthActionPerformed(evt);
            }
        });
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(depth, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(lookup, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(ntm, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(hmm, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(grammar, gridBagConstraints);
        
        labelFlags.setText("Flags:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(labelFlags, gridBagConstraints);
        
        labelTokenizer.setText("Tokenizer:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(labelTokenizer, gridBagConstraints);
        
        labelLookup.setText("Lookup:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(labelLookup, gridBagConstraints);
        
        labelNTM.setText("NTM:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(labelNTM, gridBagConstraints);
        
        labelHMM.setText("HMM:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(labelHMM, gridBagConstraints);
        
        labelGrammar.setText("Grammar:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(labelGrammar, gridBagConstraints);
        
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        add(panel, gridBagConstraints);
        
    }// </editor-fold>//GEN-END:initComponents

    private void depthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depthActionPerformed
        isModified();
    }//GEN-LAST:event_depthActionPerformed

    private void breadthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breadthActionPerformed
        isModified();
    }//GEN-LAST:event_breadthActionPerformed

    private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
        if (title.isSelected()) {
            title.setBackground(Color.PINK);
            panel.setVisible(true);
        } else {
            title.setBackground(Color.WHITE);
            panel.setVisible(false);
        }
    }//GEN-LAST:event_titleActionPerformed
// Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton breadth;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton depth;
    private javax.swing.JTextField flags;
    private javax.swing.JTextField grammar;
    private javax.swing.JTextField hmm;
    private javax.swing.JLabel labelFlags;
    private javax.swing.JLabel labelGrammar;
    private javax.swing.JLabel labelHMM;
    private javax.swing.JLabel labelLookup;
    private javax.swing.JLabel labelNTM;
    private javax.swing.JLabel labelTokenizer;
    private javax.swing.JTextField lookup;
    private javax.swing.JTextField ntm;
    private javax.swing.JPanel panel;
    private javax.swing.JRadioButton title;
    private javax.swing.JTextField tokenizer;
// End of variables declaration//GEN-END:variables
}
