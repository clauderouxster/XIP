/*
 * Xerox Research Centre Europe - Grenoble Laboratory
 * 
 * Copyright (c) 2006 - 2007 Xerox Corporation.  All Rights Reserved.
 * 
 * GrmParameterForm.java
 *
 * Created on January 10, 2006, 12:02 PM
 */
package com.xerox.xrce.xipui.ide.grammar;

import com.xerox.xrce.xipui.GrmFile;
import com.xerox.xrce.xipui.ui.FileMenu;
import com.xerox.xrce.xipui.modules.ModuleContext;
import com.xerox.xrce.xipui.modules.PanelModule;
import com.xerox.xrce.xipui.ui.UIConstants;
import com.xerox.xrce.xipui.ui.XIPUIUtilities;
import java.awt.*;
import java.util.*;
import javax.swing.*;
import javax.swing.event.*;

/**
 *
 * @author  vgrassau
 */
public class GrmParameterForm extends PanelModule implements TableModelListener {

    private Object[][] data;

    /** Creates new form GrmParameterForm
     * @param properties 
     */
    public GrmParameterForm(ModuleContext properties) {
        super(properties);
        initComponents();

        tablePanel.add(table.getTableHeader(), BorderLayout.PAGE_START);
        init();
        add.setIcon(XIPUIUtilities.getIcon(UIConstants.ADD));
        remove.setIcon(XIPUIUtilities.getIcon(UIConstants.DELETE));
    }

    public void close() {
        removeAll();
        this.isClosed = true;
    }

    public void tableChanged(TableModelEvent e) {
        if (e.getType() == TableModelEvent.UPDATE) {
            JMenuBar mb = (JMenuBar) getProperty(MENUBAR);
            FileMenu fileMenu = (FileMenu) mb.getComponent(0);
            fileMenu.setSavable(true);
        }
    }

    public void setEnabled(boolean b) {
        this.table.setEnabled(false);
        this.add.setEnabled(b);
        this.remove.setEnabled(b);
    }

    private void init() {
        GrmFile grm = (GrmFile) getProperty("GRM_EDITED");
        if (grm != null) {
            String[] parameters = grm.getValues(GrmFile.INSTR_PARAMETER);
            data = new Object[parameters.length][1];
            for (int i = 0; i < parameters.length; i++) {
                data[i][0] = parameters[i];
            }
        } else {
            setEnabled(false);
        }
        this.table.setModel(new javax.swing.table.DefaultTableModel(data, new String[]{"File"}));
        table.repaint();
        table.revalidate();
    }

    public Vector getParameters() {
        Vector res = new Vector();
        int cptPath = table.getRowCount();
        for (int i = 0; i < cptPath; i++) {
            Object o = table.getValueAt(i, 0);
            if (o != null) {
                res.add(table.getValueAt(i, 0).toString());
            }
        }
        return res;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        title = new javax.swing.JRadioButton();
        panel = new javax.swing.JPanel();
        tablePanel = new javax.swing.JPanel();
        table = new javax.swing.JTable();
        remove = new javax.swing.JButton();
        add = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setBackground(new java.awt.Color(255, 255, 255));
        title.setBackground(java.awt.Color.pink);
        title.setSelected(true);
        title.setText("Parameters");
        title.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 102, 0)));
        title.setBorderPainted(true);
        title.setFocusPainted(false);
        title.setMargin(new java.awt.Insets(0, 0, 0, 0));
        title.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        add(title, gridBagConstraints);

        panel.setLayout(new java.awt.GridBagLayout());

        panel.setBackground(new java.awt.Color(255, 255, 255));
        tablePanel.setLayout(new java.awt.BorderLayout());

        table.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "File"
            }
        ));
        tablePanel.add(table, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(tablePanel, gridBagConstraints);

        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
        panel.add(remove, gridBagConstraints);

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        panel.add(add, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 8, 4, 4);
        add(panel, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        int row2Delete = table.getSelectedRow();
        if (row2Delete != -1) {
            int cptPath = table.getRowCount();
            Object[][] newData = new Object[cptPath - 1][1];
            int j = 0;
            for (int i = 0; i < cptPath; i++) {
                if (i != row2Delete) {
                    newData[j][0] = table.getValueAt(i, 0).toString();
                    j++;
                }
            }
            data = newData;
            reloadTable();
        }
    }//GEN-LAST:event_removeActionPerformed

    private void reloadTable() {
        this.table.setModel(new javax.swing.table.DefaultTableModel(data, new String[]{"File"}));
        table.repaint();
        table.revalidate();
    }

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        //ajout d'un nouvelle ligne 
        int cptPath = table.getRowCount();
        Object[][] newData = new Object[cptPath + 1][1];
        for (int i = 0; i < cptPath; i++) {
            newData[i][0] = table.getValueAt(i, 0);
        }
        data = newData;
        reloadTable();
    }//GEN-LAST:event_addActionPerformed

    private void titleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleActionPerformed
        if (title.isSelected()) {
            title.setBackground(Color.PINK);
            panel.setVisible(true);
        } else {
            title.setBackground(Color.WHITE);
            panel.setVisible(false);
        }
    }//GEN-LAST:event_titleActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JPanel panel;
    private javax.swing.JButton remove;
    private javax.swing.JTable table;
    private javax.swing.JPanel tablePanel;
    private javax.swing.JRadioButton title;
    // End of variables declaration//GEN-END:variables
}
