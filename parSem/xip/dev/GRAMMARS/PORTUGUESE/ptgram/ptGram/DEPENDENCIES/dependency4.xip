//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!                                                                            !
//! --- CONTENTS ---                                                           !
//!   Project    : Portuguese XIP grammar                                      !
//!   filename   : dependency4.xip                                             !
//!   Date       : 2006/March                                                  !
//!   Author     : Nuno Mamede                                                 !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!                                                                            !
//!   Dependency file treating mofifiers, and apposits                         !
//!                                                                            !
//!   Dependencies handled in this file:   MOD                                 !
//!                                        POSS                                !
//!                                        APPOSIT                             !
//!                                        CLITIC                              !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


DependencyRules:

////////////////////////////////////////////////////////////////////////////////
//
// MOD DEPENDENCY
//
////////////////////////////////////////////////////////////////////////////////

//========================================================
// premodifiers within a NP chunk
//========================================================

// Example: a belissima banana -> MOD_PRE(banana, belissima)
// Example: uma grande banana  -> MOD_PRE(banana, grande)
// Example: duas belas banana  -> MOD_PRE(banana, belas)
//
| NP#3{?*, #2[punct:~,symbol:~,conj:~,prep:~], #1[SEM-unitype:~]} |
 if ( HEAD(#1,#3) & ~DETD(#1,#2) & ~MOD(?,#2) & ~QUANTD(?,#2) )
   MOD[pre=+](#1,#2)

//NJM+JB, 2011/10/27
// Example: A profusamente anunciada entrevista -> MOD_PRE(anunciada, profusamente)
//
| NP{adv#1, pastpart#2;adj#2, ?*} |
 if ( ~MOD(?,#1) & ~QUANTD(?,#1) )
   MOD[pre=+](#2,#1)


//========================================================
// ADVP premodifiers inside an AP chunk
//========================================================
//NJM+JB, 2011/10/24
// Example: rápida e completamente alegre -> MOD_PRE(alegre, completamente)
//
| AP#1{advp#2} |
 if ( HEAD(#3,#1) & HEAD(#4,#2) & ~MOD(#3,#4) & ~QUANTD(#3,#4) )
   MOD[pre=+](#3,#4)


//========================================================
// adv premodifiers of a NP, PP, AP or ADVP chunk
//========================================================
//NJM+JB, 2011/10/27
// Example: claramente mais gorda -> MOD_PRE(gorda, claramente)
//
| AP#4{adv#1[advquant:~,advcomp:~],adv#2,?*} |
 if ( HEAD(#3,#4) & QUANTD(#3,#2) & ~MOD(?,#1) )
   MOD[pre=+](#3,#1)

//NJM+JB, 2011/10/27 update excluding "certamente"
// Example: rápida e completamente alegre -> MOD_PRE(alegre, completamente)
// Example: uma quantia não apurada mas certamente superior
//
| adv#1[lemma:~certamente],adj#2 |
 if ( ~MOD(?,#1) & ~QUANTD(#2,#1))
   MOD[pre=+](#2,#1)

//NJM+JB, 2011/10/27
// Example: claramente bastante gorda -> MOD_PRE(gorda, bastante)
//
| AP#4{adv#1,adv#2[lemma:bastante];adv#2[lemma:muito];adv#2[lemma:pouco];adv#2[lemma:bem];adv#2[lemma:nada],?*} |
 if ( HEAD(#3,#4) & MOD(#3,#2) & ~MOD(?,#1) )
   MOD[pre=+](#3,#1)


| adv#1[lemma:~certamente],adv#2 |
 if ( ~MOD(?,#1) & ~QUANTD(#2,#1) )
   MOD[pre=+](#2,#1)


//========================================================
// premodifiers within a PP, NP or AP chunk
//========================================================

// Example: a belissima banana -> MOD_PRE(banana, belissima)
// Example: uma grande banana  -> MOD_PRE(banana, grande)
// Example: duas belas meninas -> MOD_PRE(banana, belas)
// Example: ainda pessoa       -> MOD_PRE(pessoa, ainda)
// Example: uma grande banana  -> MOD_PRE(banana, grande)
// Example: duas belas meninas -> MOD_PRE(banana, belas)
//
| #3{?*,adv#2[lemma:~certamente];adj#2;pastpart#2, noun#1[SEM-unitype:~];adj#1;pastpart#1} |
 if ( HEAD(#1,#3) & ~DETD(#1,#2) & ~MOD(#1,#2)  & ~QUANTD(#1,#2) )
   MOD[pre=+](#1,#2)

// Example: ... da bonita raça.
// Example: ... da bonita antepassada raça.
// Example: ... da nossa antepassada raça.
// Example: ... da minha raça.
// Example: ... de variadas raças.
//
| ?[noun:~]{?*, adj#1;pastpart#1;pron#1, adj*,pastpart*, noun#2[SEM-unitype:~]} |
 if ( ~QUANTD(#2,#1) & ~MOD(#2,#1) & ~DETD(#2,#1) )
    MOD[pre=+](#2,#1)


//========================================================
// ADVP pre modify VPs
//========================================================

//NJM+JB, 2010/12/30
// Example: ... O Pedro começou a lentamente acordar ...            -> MOD_PRE(acordar, lentamente)
//
| #1[verb];sc#1, (PUNCT[comma]), ADVP#2, (PUNCT[comma])  |
 if ( VDOMAIN(#3,#5) & HEAD(#3,#1) & HEAD(#4,#2) & ~MOD(?,#4) & ~QUANTD(#3,#4) & (#4<#5) )
   MOD[pre=+](#5,#4)


//========================================================
// ADVP post modify ADVPs and VPs
//========================================================

// Example: ... vendo muito bem... -> MOD_POST(bem, muito)
//
| advp#1, advp#2 |
 if ( HEAD(#3,#1) & HEAD(#4,#2) & ~MOD(?,#4) & ~QUANTD(#3,#4))
   MOD[post=+](#3,#4)

// Example: O Pedro leu, consequentemente...                    -> MOD_POST(vendo, bem)
// Example: O Pedro riu  acidentalmente                         -> MOD_POST(caiu, acidentalmente)
// Example: ...que a Manuela gostava muito de bichos de peluche -> MOD_POST(gostava, muito)
// Example: temos de ir já resolver o problema                  -> MOD_POST(resolver, já)
//
| #1[verb];sc#1, (PUNCT[comma]), ADVP#2 |
 if ( HEAD(#3,#1) & (VHEAD(#3,#5) | VDOMAIN(#3,#5)) & HEAD(#4,#2) & ~MOD(?,#4) & ~QUANTD(#5,#4) & (#4>#5))
   MOD[post=+](#5,#4)

| #1[verb];sc#1, (PUNCT[comma]), ADVP#2 |
 if ( HEAD(#3,#1) & (VHEAD(#3,#5) | VDOMAIN(#3,#5)) & HEAD(#4,#2) & ~MOD(?,#4) & ~QUANTD(#5,#4) & (#4<#5))
   MOD[pre=+](#5,#4)


// Example: ... vendo as bananas maduras muito bem...       -> MOD_POST(vendo, bem)
// Example: O Pedro riu quando caiu ao chão acidentalmente  -> MOD_POST(caiu, acidentalmente)
// Example: ...que a Manuela gostava de bichos de peluche muito -> MOD_POST(gostava, muito)
//
| #1[verb];sc#1, ?[verb:~,scfeat:~], (AP;PP), (PUNCT[comma]), ADVP#2 |
 if ( HEAD(#3,#1) & HEAD(#4,#2) & ~MOD(?,#4) & ~QUANTD(#3,#4))
   MOD[post=+](#3,#4)



//========================================================
// AP post modify NPs
//========================================================

// Example: um dos alunos mais espertos -> MOD_POST(alunos, espertos)
//
//OLD ->  | NP#1{?*, #3[SEM-unitype:~,pers:~]};PP#1{?*, #3[SEM-unitype:~]}, AP*, AP#2 |   em 07/02/2013: uma pasta vedante
//
| NP#1{?*, #3[pers:~]};PP#1{?*, #3[SEM-unitype:~]}, AP*, AP#2 |
 if ( HEAD(#3,#1) & HEAD(#4,#2) & ~mod(?,#4) & ~QUANTD(?,#4) )
   MOD[post=+](#3,#4)


// Example: Manuela, quando estava sozinha, vingava-se... -> MOD_POST(Manuela, sozinha)
//
// Comentada em 2007/09/10 njm+Jorge
// a relação de MOD entre Manuela e sozinha é apenas indirecta, já que o AP
// (sozinha) é um atributo do sujeito da oração subordinada temporal (quando ...)
// que não está expresso por ser correferente do sujeito da oração principal.
//
//| NP#1, PUNCT[comma], sc, AP#2 |
// if ( HEAD(#3,#1) & HEAD(#4,#2) & ~mod(?,#4) & ~QUANTD(?,#4) )
//   MOD[post=+](#3,#4)


// Pre-modifier within a NP when this pre-modifier is in a embedded structure
// we have to have a MOD(rapariga,bela) AND NOT a MOD(rapariga,ainda mais bela)
// Example: A ainda mais bela rapariga.
//
| NP#2{?*, AP#1[last:~]} |
if ( HEAD(#4,#2) & HEAD(#3,#1) & ^MOD(#4,#1) )
   MOD[pre=+](#4,#3)




//========================================================
// PP post modify VPs NPs APs and PPs
//========================================================

//NJM+JB, 2011/01/12  [the following change: ~QUANTD(#4,?) --> ~QUANTD(#4,#3)]
// Example: fabricante de ratos para computador -> MOD_POST(fabricante, ratos)
//                                              -> MOD_POST(fabricante,computador)
//
| NP#1, AP*, PP*, AP*, PP#2 |
 if ( HEAD(#3[SEM-unitype:~,pers:~,mult:~],#1) & HEAD(#4[nop:~],#2) & ~MOD(#3,#4) & ~PREDSUBJ(?,#4) & ~QUANTD(#4,#3) & ~CLASSD(#4,#3) )
   MOD[post=+](#3,#4)


//NJM+JB, 2011/01/12  [the following change: ~QUANTD(#4,?) --> ~QUANTD(#4,#3)]
// Example: O João, de 26 anos, comeu o bolo -> MOD_POST(João, anos)
//
| NP#1{?*, ?[SEM-unitype:~,pers:~]}, ?[comma], PP#2, ?[comma] |
 if ( HEAD(#3,#1) & HEAD(#4,#2) & ~mod(#3,#4) & ~PREDSUBJ(?,#4) & ~QUANTD(#4,#3)  ~CLASSD(#4,#3) )
   MOD[post=+](#3,#4)


//NJM, 2007/09/10
// Example: O número de licensas emitidas pela câmara para a construção aumentou muito
//                                               -> MOD_POST(emitidas, câmara)
//                                               -> MOD_POST(emitidas, construção)
//
| AP#1, AP*, PP*, PP#2 |
 if ( HEAD(#3,#1) & HEAD(#4,#2) & ~MOD(#3,#4) )
   MOD[post=+](#3,#4)


// Example: fabricante (mundial) de ratos para computador -> MOD_POST(ratos, computador)
//
| PP#1, AP*, PP*, PP#2 |
 if ( HEAD(#3,#1) & HEAD(#4,#2) & ~MOD(#3,#4)  & ~QUANTD(#4,#3) )
   MOD[post=+](#3,#4)


// Example: fabricar ratos de computador na China   -> MOD_POST(fabricar, computador)
//                                                  -> MOD_POST(fabricar, China)
// Example: O Pedro comprou cinco milhões de livros -> *MOD_POST(comprou, livros)
//
//2007/09/10 : PP do not mofify coopelative auxiliary verbs
//
| #1[verb];#1[pastpart], ?*[verb:~,scfeat:~], pp#2 |
 if ( VDOMAIN(?,#4) & HEAD(#4,#1) & HEAD(#3,#2) & ~mod(#4,#3) & ~PREDSUBJ(#4,#3) & ~compl(#4,#3) &
      ~QUANTD(?,#3) & // NJM+JB, 2011/05/10 corrected problem ~QUANTD(#3,?)
                      // NJM+JB, 2011/03/29 PROBLEMA COM A FRASE "O Pedro obedeceu a tudo isso." falta o MOD
      ~CLASSD(#3,?) &
      ~PREDSUBJ(#4,?)
    )
   MOD[post=+](#4, #3)

//NJM+JB, 2011/03/29
// Example: O Pedro obedeceu a tudo isso -> MOD_POST(obedeceu, isso)
//
| #1[verb];#1[pastpart], ?*[verb:~,scfeat:~], pp#2 |
 if ( VDOMAIN(?,#4) & HEAD(#4,#1) & HEAD(#3,#2) & ~mod(#4,#3) & ~PREDSUBJ(#4,#3) & ~compl(#4,#3) &
      ( QUANTD(#3[lemma:isso],?[lemma:tudo]) || QUANTD(#3[lemma:isto],?[lemma:tudo])|| QUANTD(#3[lemma:aquilo],?[lemma:tudo]) ) &
      ~PREDSUBJ(#4,?) )
   MOD[post=+](#4, #3)



// Example: Quem contracena com Denzel Washington em "The Training Day"?
//                  -> MOD_POST(contracena, Denzel Washington)
//                  -> MOD_POST(contracena, "The Training Day")
//
| sc#3, (ADVP;?[verb])*, ?*[verb:~,scfeat:~], PP#2 |
 if ( VDOMAIN(#1,#5) & HEAD(#1,#3) & HEAD(#4,#2) & ~MOD(#5,#4) & ~QUANTD(#5,#4))
   MOD[post=+](#5,#4)



//========================================================
// ADVP modify the quantifier TODO;NENHUM (PRE and POST)
//
// (unless the adverb is before the verb: O Pedro praticamente leu o Livro todo -> MOD(leu,praticamente)
//
//========================================================

//NJM+JB, 2010/12/22
// Mod focus dependency between a focus adverb and the quantifier determiner TODO.
//
// Example: "O Pedro leu o livro todo praticamente -> MOD_POST(todo,praticamente)
//
| ADVP{#1[first,last,advfocus]}, NP;PP, NP#2[lemma=todo];NP#2[lemma=nenhum] |
if ( HEAD(#3,#2) & ~MOD(?,#1) )
   MOD[post=+,focus=+](#3,#1)

//NJM+JB, 2010/12/22
// Mod focus dependency between a focus adverb and the quantifier determiner TODO.
//
// Example: O Pedro leu o livro todo, praticamente -> MOD_POST(todo,praticamente)
//
| NP;PP, NP#2[lemma=todo];NP#2[lemma=nenhum], (PUNCT[comma]), ADVP{#1[first,last,advfocus]}  |
if ( HEAD(#3,#2) & ~MOD(?,#1) )
   MOD[post=+,focus=+](#3,#1)

//NJM+JB, 2010/12/22
//
// Example: O Pedro leu o livro praticamente todo -> MOD_PRE(todo,praticamente)
//
| ADVP{#1[first,last,advfocus]}, NP#2[lemma=todo];NP#2[lemma=nenhum] |
if ( ^MOD(?[verb],#1) & HEAD(#3,#2) )
   MOD[pre=+,focus=+](#3,#1)

//NJM+JB, 2010/12/22
// Example: O Pedro leu todo o livro praticamente -> MOD_POST(todo,praticamente)
//
| NP#3{?*,#2[lemma=todo];#2[lemma=nenhum]}, (PUNCT[comma]), ADVP{#1[first,last,advfocus]} |
if ( QUANTD(#5,#2) & ^MOD[post](?[verb],#1) & HEAD(#5,#3) )
   MOD[post=+,focus=+](#2,#1)

//NJM+JB, 2010/12/29
// Example: O Pedro leu, rapidamente, todo o livro praticamente -> MOD_POST(todo,praticamente)
//
| NP#3{?*,#2[lemma=todo];#2[lemma=nenhum]}, (PUNCT[comma]), ADVP{#1[first,last,advfocus]} |
if ( QUANTD(#5,#2) & HEAD(#5,#3) & ~MOD[post](?,#1) )
   MOD[post=+,focus=+](#2,#1)



//========================================================
// "É QUE" focus
//========================================================

//NJM+JB, 2011/12/28
// Example: Quem é que estuda de noite -> MOD_PRE(quem,é que)
| SC{pron#4[interrog], ADVP#1} |
if ( ^MOD(#3,#2) & VDOMAIN(?,#3) & HEAD(#2[lemma:"é que",advfocus],#1) & HEAD(#5,#4) )
   MOD[post=~,pre=+,focus=+](#5,#2)


//NJM+JB, 2011/12/28
// Example: A escola é que fez isso -> MOD_POST(escola,é que)
| NP#4, ADVP#1 |
if ( ^MOD(#3,#2) & VDOMAIN(?,#3) & HEAD(#2[lemma:"é que",advfocus],#1) & HEAD(#5,#4) )
   MOD[post=+,pre=~,focus=+](#5,#2)







//========================================================
// ADVP modify NPs (PRE and POST)
//========================================================

//NJM+JB, 2009/06/29
// Mod focus dependency between a focus adverb and a NP or PP.
//
// Example: come exclusivamente maçãs      -> MOD_PRE(maçãs,exclusivamente)
// Example: gosta exclusivamente de livros -> MOD_PRE(livros,exclusivamente)
//
| ADVP{#1[first,last,advfocus]}, NP#2;PP#2 |
if ( HEAD(#3,#2) & ~MOD(?,#1) )
   MOD[pre=+,focus=+](#3,#1)

//NJM+JB, 2010/12/22
// Example: O Pedro leu praticamente todo o livro -> MOD_POST(todo,praticamente)
//
| ADVP{#1[first,last,advfocus]}, NP#3{?*,#2[lemma=todo];#2[lemma=nenhum]} |
if ( ^MOD[pre](#5,#1) & HEAD(#5,#3) & QUANTD(#5,#2) )
   MOD[pre=+,focus=+](#2,#1)

//NJM+JB, 2011/01/21
// Example: O Pedro leu pura e simplesmente o material -> MOD_POST(material,pura e simplesmente)
// Example: gosta exclusivamente de livros policiais   -> MOD_PRE(livros,exclusivamente)
//
| ADVP{#1[first,last,advfocus]}, NP#3;PP#3 |
if ( ^MOD(#2,#1) & VDOMAIN(?,#2) & HEAD(#4,#3) )
   MOD[post=~,pre=+,focus=+](#4,#1)

//NJM+JB, 2011/12/22
// Example: aí é que a noite fica complicada-> MOD_POST(aí,é que)
| ADVP{#3,#1[lemma:"é que",advfocus]} |
if ( ^MOD(#2,#1) & VDOMAIN(?,#2) )
   MOD(#2,#3)

| ADVP{#3,#1[lemma:"é que",advfocus]} |
if ( ^MOD(#1,#3) )
   MOD[post=+,pre=~,focus=+](#3,#1)



//========================================================
// ADVP post modify VPs
//========================================================

// Mod dependency between a simple verbal finite form and an adverb that is just on its left.
// Example: anunciou oficialemente
// maybe more constraints are necessary...
//
| VF{?*, #1[last]}, ADVP{#2[first,last]} |
if ( ~MOD(?,#2) )
   MOD[post=+](#1,#2)

| sc#3, ?*[verb], ADVP#2 |
 if ( VDOMAIN(#1,#5) & HEAD(#1,#3) & HEAD(#4,#2) & ~MOD(?,#4) & ~QUANTD(?,#4))
   MOD[post=+](#5,#4)

// Temporal expression corresponding to NPs are temporal modifiers
//
// Example: Ele chega Domingo
//
| #1[verb];#1[pastpart], ?*[verb:~], NP#2 |
 if ( head(#4,#1) & head(#3[time],#2) & VDOMAIN(?,#4) & ~mod(?,#3) & ~PREDSUBJ(#4,#3) & ~compl(#4,#3) & ~QUANTD(#3,?) )
   MOD[post=+,temporal=+](#4, #3)


//========================================================
// premodifier of a NP chunk (word CUJO)
//========================================================

//NJM+JB, 2011/03/30
// Example: O lugar cujo proprietário fugiu -> MOD_PRE(proprietário, cujo)
//
| SC{?#1[lemma:cujo], ?*[noun:~], #2[noun]} |
 if ( HEAD(#3,#2) & ~MOD(?,#1) )
   MOD[pre=+](#3,#1)


//========================================================
// PRON pre modify VPs (CDIR or CINDIR)
//========================================================

//NJM+JB, 2010/07/23
// Mod dependency between a proclitic and a VP.
// (later on some of these are converted into CINDIR or CDIR)
//
// Example: O Pedro não o ofereceu    ->   MOD_PRE(ofereceu,o)
//
//| NP#3{pron}, #2[verb];sc{?*,#2[verb]} |
//if ( HEAD(#1,#2) & VDOMAIN(?,#1) & HEAD(#4,#3) & ~MOD(#4,#1) )
//   MOD[pre=+](#1,#4)


//========================================================
// Coordination
//========================================================

// Example:
//
 if ( mod[pre](#1,#2) & coord(#3,#2) & coord(#3,#4) & ~coord(#1,#4) & ~mod(#1,#4) )
   MOD[pre=+](#1,#4)

// Example:
//
 if ( mod[post](#1,#2) & coord(#3,#2) & coord(#3,#4) & ~coord(#1,#4) & ~mod(#1,#4) )
   MOD[post=+](#1,#4)


// Example:
//
 if ( mod[pre](#1,#2) & clink(#3,#2) & ~coord(#1,#3) & ~mod(#1,#3) )
   MOD[pre=+](#1,#3)

// Example:
//
 if ( mod[post](#1,#2) & clink(#3,#2) & ~coord(#1,#3) & ~mod(#1,#3) )
   MOD[post=+](#1,#3)

// Example:
//
 if ( mod[pre](#1,#2) & clink(#2,#3) & ~mod(#1,#3) )
   MOD[pre=+](#1,#3)

// Example:
//
 if ( mod[post](#1,#2) & clink(#2,#3) & ~mod(#1,#3) )
   MOD[post=+](#1,#3)


//NJM+JB, 2011/01/18
// Example: O Pedro disse clara, inequívoca e sucintamente que ia a Lisboa
//
 if ( coord[c-mente](#3,#4) & ^mod[c-mente:~](#1,#4) )
   MOD[c-mente=+](#1,#4)

//NJM+JB, 2011/05/3
// Example: O Pedro estuda particular e principalmente Geologia
//
 if ( coord[c-mente](#3,#4) & ^mod[c-mente](#1,#4[advfocus]) )
   MOD[focus=+](#1,#4)




//========================================================
// FOCUS
//========================================================

// If the adverb modifier has the focus feature it is passed to the MOD fuctions
//
// Example: A escola fundamentalmente faz isso  -> MOD_PRE(fez,precisamente)
//
 if ( ^MOD(#1,#2[advfocus]) )
   MOD[focus=+](#1,#2)



//========================================================
// NEG
//========================================================

// If the adverb modifier has the neg feature it is passed to the MOD fuctions
//
// Example: O Pedro não gosta nada disso  -> MOD_NEG(gosta,não)
//                                        -> MOD_NEG(gosta,nada)
 if ( ^MOD(#1,#2[neg]) )
   MOD[neg=+](#1,#2)



//========================================================
// REPAIR (EXCEPTIONS)
//========================================================

// Example: o livro inteiro -> QUANTD(livro,inteiro)
//
 if ( ^mod[post](#1,#2[lemma:inteiro]) )
   QUANTD(#1,#2)





////////////////////////////////////////////////////////////////////////////////
//
// CLITIC DEPENDENCY (beteween a clitic pronoun and the last verb of the verbal chain
//
////////////////////////////////////////////////////////////////////////////////

// Example: pode enganar-se -> CLITIC(enganar,se)
// Example: enganar-se-ia -> CLITIC(enganar,se)
//
| #5, #4 |
if ( VDOMAIN(#1,#2) & HEAD(#3[cli],#4) & HEAD(#2,#5) )
  CLITIC[post=+](#2,#3)


// Example: podia ter-se enganado -> CLITIC(enganado,se)
// Example: podia-se ter enganado -> CLITIC(enganado,se)
// Example: poder-se-ia ter enganado -> CLITIC(enganado,se)
//
if ( VDOMAIN(#1,#2) & HEAD(#3[cli],#4) & (#3 > #1) & (#3 < #2)  & ~CLITIC(#2,#3))
  CLITIC[pre=+](#2,#3)

// Example: estava-o a ler -> CLITIC(ler,o)
//
| VASP#5{?*,#4[cli],?*};VMOD#5{?*,#4[cli],?*};VTEMP#5{?*,#4[cli],?*}, ?*, #3 |
if ( VDOMAIN(#1,#2) &  HEAD(#2,#3) & HEAD(#1,#5) & ~CLITIC(#2,#4))
  CLITIC[pre=+](#2,#4)

// Example: pode tê-lo de ler -> CLITIC(ler,o)
//
| VASP#5{?*,#4[cli],?*};VMOD#5{?*,#4[cli],?*};VTEMP#5{?*,#4[cli],?*}, ?*, #3 |
if ( VDOMAIN(#1,#2) &  HEAD(#2,#3) & HEAD(#6,#5) & (#6 > #1) & (#6 < #2) & ~CLITIC(#2,#4) )
  CLITIC[pre=+](#2,#4)


// Example: não se poderia ter enganado             -> CLITIC(enganado,se)
// Example: O Pedro não o estava a ler              -> CLITIC(ler,o)
// Example: O Pedro nunca acabou de o começar a ler -> CLITIC(ler,o)
// Example: O Pedro não pode começá-lo a ler.       -> CLITIC(ler,o)
//
// Example: O Pedro nem acabou de o começar a ler (NÂO FUNCIONA devido ao "NEM")
//
|#4, #6{pron[nom:~,pers]}, VASP#8;VMOD#8;VTEMP#8;VF#8|
if ( VDOMAIN(#1,#2) & HEAD(#3,#6) & HEAD(#5,#4) & HEAD(#1,#8) & MOD[PRE](#2,#5)  & ~CLITIC(#2,#3) )
CLITIC[pre=+](#2,#3)


// Example: Alguém o leu -> CLITIC(leu,o)      MOVED TO  BE EXECUTED AFTER SUBJ
//
//|#4, #6{pron[nom:~,pers]}, VASP#8;VMOD#8;VTEMP#8;VF#8|
//if ( VDOMAIN(#1,#2) & HEAD(#3,#6) & HEAD(#5,#4) & HEAD(#1,#8) & SUBJ[PRE](#2,#5[indef])  & ~CLITIC(#2,#3) )
//CLITIC[pre=+](#2,#3)

// Example: O João acabou de o ler -> CLITIC(ler,o)
//
| VASP#5;VMOD#5;VTEMP#5, #4{pron[nom:~,pers]}, ?*, #3 |
if ( VDOMAIN(#1,#2) &  HEAD(#2,#3) & HEAD(#6,#5) & HEAD(#7,#4) & (#7 > #1) & (#7 < #2) & ~CLITIC(#2,#7) )
  CLITIC[pre=+](#2,#7)



// IN A SC node

//NJM+JB, 2010/07/29
// Example: Quem o detestou   -> CLITIC(detestou,o)
//
| SC{pron[qu];rel[qu], ?*, NP#4{pron#5[nom:~,pers,first,last]}, ?*, #3[verb]} |
if ( VDOMAIN(#1,#2) & HEAD(#2,#3) & HEAD(#5,#4) & ~CLITIC(#2,#5) )
  CLITIC[pre=+](#2,#5)

//NJM+JB, 2010/07/29
// Example: Quem o tinha ajudado   -> CLITIC(ajudado,o)
//
| SC{pron[qu];rel[qu], ?*, NP#4{pron#5[nom:~,pers,first,last]}, ?*, #3[verb]} |
if ( VDOMAIN(#2,#1) & HEAD(#2,#3) & HEAD(#5,#4) & ~CLITIC(#1,#5) )
  CLITIC[pre=+](#1,#5)


////////////////////////////////////////////////////////////////////////////////
//
// POSS DEPENDENCY
//
////////////////////////////////////////////////////////////////////////////////

// Example: o seu movimento -> POSS(movimento, seu)
// Example: meu amigo       -> POSS(movimento, meu)
//
 if ( ^MOD(#1,#2[poss]) & HEAD(#1,#3) )
  POSS(#1,#2)

//NJM, 2011/07/01
//Retirada a restição da cabeça do NP não poder ser uma unidade de medida
// Example: a sua data de falecimento -> POSS(data, sua)
//
//NJM, 2009/04/03
// Example: os meus 5 amigos -> POSS(amigos, meus)
//
| NP#3{?*, #2[poss], ?*, #1} |
 if ( HEAD(#1,#3) & ~DETD(#1,#2) & ~MOD(?,#2) & ~POSS(?,#2) & ~QUANTD(?,#2) )
   POSS[pre=+](#1,#2)

//NJM+JB, 2010/03/17
// Example: As raparigas minhas  -> POSS(raparigas,minhas)
// Example: o livro meu          -> POSS(livro,meu)
//
| PP#2;NP#2, NP#1{PRON[poss,last,first]} |
 if ( HEAD(#3,#2) & HEAD(#4,#1) & ~POSS(#3,#4) )
   POSS[post=+](#3,#4)



////////////////////////////////////////////////////////////////////////////////
//
// APPOSITE DEPENDENCY
//
////////////////////////////////////////////////////////////////////////////////

//NJM, 2011/04/28
// Example: O João, de (seu) nome Silva, disse isso.
//                      -> APPOSIT(João, Silva)
//
| np#1, punct[comma];punct[paren,left];punct[bracket,left], PP#5, np#2, punct[comma];punct[paren,right];punct[bracket,right] |
 if ( head(#3,#1) & head(#4[SEM-Hindividual],#2) &
      (head(#6[lemma:nome],#5) || head(#6[lemma:apelido],#5)  ||
       head(#6[lemma:"nome próprio"],#5)   || head(#6[lemma:"nome de baptismo"],#5) ||
       head(#6[lemma:"nome de casado"],#5) || head(#6[lemma:"nome de família"],#5)  || head(#6[lemma:"nome de solteiro"],#5) ||
       head(#6[lemma:"nome completo"],#5)  || head(#6[lemma:"nome de guerra"],#5)   || head(#6[lemma:"nome de código"],#5) ) &
      prepd(#6,?[lemma:de]
      ) &
      ~coord(?,#3) )
   APPOSIT[reduced=+](#3,#4)


// Example: A pata, cozinheira no palácio, fez um jantar requintado.
// Example: A pata (cozinheira no palácio) fez um jantar requintado.
//                      -> APPOSIT(pata, cozinheira)
//
| np#1, punct[comma];punct[paren,left];punct[bracket,left], np#2,(pp), punct[comma];punct[paren,right];punct[bracket,right] |
 if ( head(#3,#1) &
      head(#4,#2) &
      ~coord(?,#3) &  )
   APPOSIT[reduced=+](#3,#4)


//NJM, 2010/12/23
// Example: A Maria, mãe do Pedro.
// Example: A Maria mãe do Pedro.
//                      -> APPOSIT(Maria, mãe)
//
| np#1, punct[comma];punct[paren,left];punct[bracket,left], np#2, pp, punct[end] |
 if ( head(#3,#1) &
      (head(#4[SEM-Hprofession],#2) | head(#4[title],#2) | head(#4[SEM-Hcargo],#2) | head(#4[relative],#2) | head(#4[affiliation],#2)) &
      ~coord(?,#3) )
   APPOSIT[reduced=+](#3,#4)


// Example: ... a mãe do Pedro, Maria
// Example: ... a mãe do Pedro, Maria.
//                      -> APPOSIT(Maria, mãe)
//
| np#2, pp*, punct[comma];punct[paren,left];punct[bracket,left], np#1[end] |
 if ( head(#3,#1) &
      (head(#4[SEM-Hprofession],#2) | head(#4[title],#2) | head(#4[SEM-Hcargo],#2) | head(#4[relative],#2) | head(#4[affiliation],#2)) &
      ~coord(?,#3) & ~APPOSIT(#4,#3) )
   APPOSIT[reduced=+](#3,#4)

| np#2, pp*, punct[comma];punct[paren,left];punct[bracket,left], np#1, punct |
 if ( head(#3,#1) &
      (head(#4[SEM-Hprofession],#2) | head(#4[title],#2) | head(#4[SEM-Hcargo],#2) | head(#4[relative],#2) | head(#4[affiliation],#2)) &
      ~coord(?,#3) & ~APPOSIT(#4,#3) )
   APPOSIT[reduced=+](#3,#4)


// Example: "há quem recorde a presença de Diamantino Durão, tio de Durão Barroso, nas reuniões
//                      -> APPOSIT(Diamantino Durão, tio)
//
| PP#1, punct[comma];punct[paren,left];punct[bracket,left], np#2, (pp), punct[comma];punct[paren,right];punct[bracket,right] |
 if ( head(#3[proper,SEM-Hpeople],#1) &
      (head(#4[SEM-Hprofession],#2) | head(#4[title],#2) | head(#4[SEM-Hcargo],#2) | head(#4[relative],#2) | head(#4[affiliation],#2)) &
      ~coord(?,#3) & ~APPOSIT(#4,#3) )
   APPOSIT[reduced=+](#3,#4)



// Example: A pata, que é cozinheira no palácio, fez um jantar requintado.
//                      -> APPOSIT(pata, cozinheira)
//
| np#1, punct[comma];punct[paren,left];punct[bracket,left],
  sc{?#8[lemma=que],?*,?#5[last,verb]}, (advp;?[verb])*, np#2;ap#2, (pp),
  punct[comma];punct[paren,right];punct[bracket,right] |
 if ( head(#3,#1) &
      (head(#4[SEM-Hprofession],#2) | head(#4[title],#2) | head(#4[SEM-Hcargo],#2) | head(#4[relative],#2) | head(#4[affiliation],#2)) &
      head(#6,#5) & vdomain(#6,#7[lemma:ser]) & ~coord(?,#3) )
   APPOSIT[reduced=+](#3,#4), APPOSIT(#3,#8)


//NJM 26/06/???? (now the apposit relation is not anymore with the PP, but with the NP)
//
// Apposition when the governor is the head of a NP
// constrained to proper noun apposition.
//
// Example: O rei de Marrocos, Faruc, ....
//                      -> APPOSIT(rei, Faruc)
//
| NP#1, PP, punct[comma];punct[paren,left];punct[bracket,left], NP{#2[noun,proper]}, punct[comma];punct[paren,right];punct[bracket,right] |
if ( HEAD(#3,#1) & ~APPOSIT(#3,#2) & ~APPOSIT(#2,#3) )
   APPOSIT[reduced=+](#3,#2)


//CH, 08/May/2007
// Apposition also is considered between a proper noun and its abbreviation
// Example:  A Procuradoria Geral da República (PGR)
//
// ATENÇÃO: Idealmente deveria haver informação que o nome #1 é uma
//          multi-word-expression, mas esta informação não está disponível neste momento.
//
| NP{?*,#1[proper, last]};PP{prep,?*,#1[proper,last]}, punct[paren,left], NP{noun#2[toutmaj,first,last]}, punct[paren,right] |
   APPOSIT[reduced=+](#1,#2)


//CH, 14/May/2007
// Admitting more complex contexts (and absence of commas) when the proper noun is at the
// beginning of the sentence as the preceeding rules have a more restricted context.
//
// Example: Geraldo Alckmin, candidato do Partido da Social Democracia Brasileira (PSDB)
//          e antigo governador do estado de São Paulo, não foi além....
//
| NP[start]{?*,#1[proper, last]}, punct[comma], NP{?*,noun#2[last,proper:~]} |
if ( ~CLINK(#1,#2) & ~APPOSIT(#1,#2) & ~APPOSIT(#2,#1) )
   APPOSIT[reduced=+](#1,#2)

| ADVP[start], NP{?*,#1[proper, last]}, punct[comma], NP{?*,noun#2[last,proper:~]} |
if ( ~CLINK(#1,#2) & ~APPOSIT(#1,#2) & ~APPOSIT(#2,#1) )
   APPOSIT[reduced=+](#1,#2)


//NJM, 2007/06/26
// 2 consecutive nouns, if the first is:
//                         an adj (political party, religian, gentilic) or
//                         a noun (profession, family relation)
//                      and the second is a Proper noun,
// then there is an APPOSIT relation between them.
//
// Example: O português  José Magalhães escreveu um livro (the same as O socialista, José Magalhães, escreveu um livro)
// Example: O socialista José Magalhães escreveu um livro (the same as O socialista, José Magalhães, escreveu um livro)
// Example: O tio        José Magalhães escreveu um livro (the same as O socialista, José Magalhães, escreveu um livro)
// Example: O deputado   José Magalhães escreveu um livro (the same as O socialista, José Magalhães, escreveu um livro)
//
| NP[start]{?*,#1[last, gentilic]}, NP{?*,noun#2[last,proper]} |
if ( ~CLINK(#1,#2) & ~APPOSIT(#1,#2) )
   APPOSIT[reduced=+](#1,#2)

| NP[start]{?*,#1[last, title]}, NP{?*,noun#2[last,proper]} |
if ( ~CLINK(#1,#2) & ~APPOSIT(#1,#2) )
   APPOSIT[reduced=+](#1,#2)

| NP[start]{?*,#1[last, relative]}, NP{?*,noun#2[last,proper]} |
if ( ~CLINK(#1,#2) & ~APPOSIT(#1,#2) )
   APPOSIT[reduced=+](#1,#2)

| NP[start]{?*,#1[last, affiliation]}, NP{?*,noun#2[last,proper]} |
if ( ~CLINK(#1,#2) & ~APPOSIT(#1,#2) )
   APPOSIT[reduced=+](#1,#2)
