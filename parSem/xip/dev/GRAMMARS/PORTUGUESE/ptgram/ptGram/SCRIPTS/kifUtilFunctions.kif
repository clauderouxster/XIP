//
//****************** Display node information *******************************

function getVipersInNode(node n){
     //get features
     smap features=n.features();

     vector vipersInNode;
     string f;

     //descobrir todas as features viper.
     for (f in features) {
          //se a feature tiver no mapa de vipers
          if (f in viperVector){
               vipersInNode.push(f);
          }
     }

     return(vipersInNode);
}

function displayFeatures(node n) {
     smap m=n.features();
     println("  -Features: ",m);
}

function displayNode(node n) {
     //acesso ao lemma
     vector lemma=n.lemma(); //more than one value can be returned return(true);

     //acesso á categoria do Nó
     string pos=n.pos();

     //print da informação do nó
     println("Node: ",pos);
     println("  -Lemma: ",lemma);

     displayFeatures(n);
}


//Encontrar nó anterior
function displayPreviousNode(node n){
     print("Previous: ");
     if (n.previous()){
          displayNode(n.previous());
     }
     else{
          n= n.parent();
          if (n.previous()){
               n=n.previous();
               displayNode(n.child());
               //TODO ciclo para percorrer todos os childs
          }
     }

}

//Encontra próximo nó
function displayNextNode(node n){
     print("Next: ");
     if (n.next()){
          displayNode(n.next());
          } else {
          n=n.parent();
          if (n.next()){
               n=n.next();
               displayNode(n.child());
          }
     }
}

//Encontrar nó anterior
function getPreviousNode(node n){

     if(n==null){
          return(null);
     }

     if (n.previous()){
          return(n.previous());
     }
     else{
          n=n.parent();
          if (n.previous()){
               n=n.previous();
               return(n.last());
          }
          else{
               return(null);
          }
     }

}

//Encontra próximo nó
function getNextNode(node n){

     if(n==null){
          return(null);
     }

     if (n.next()){
          return(n.next());
          } else {
          n=n.parent();
          if (n.next()){
               n=n.next();
               return(n.child());
          }
          else{
               return(null);
          }
     }
}
