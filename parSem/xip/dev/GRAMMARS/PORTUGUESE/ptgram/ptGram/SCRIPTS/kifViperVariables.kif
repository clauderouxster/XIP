//FOR DEBUG PRINTS
bool debugViper=false;
//bool debugViper=true;


// vector with all viper classes
// used to retrieve viper classes from nodes
vector viperVector = [ 
  "01I",             // QueF0 V (importar)
  "01T",             // QueF0 V QueF1 (causar)
  "02",              // QueF0 V Prep1 QueF1 (resultar de)
  "03",              // (mandar) 
  "04",              // (Nnr+QueF)0 V Nhum1 (most psychologic verbs type-1: irritar)
  "05",              // (Nnr+QueF)0 V a Nhum1 (most psycologic verbs type-2: agradar a)
  "05R",             // QueF0 V Prep1 N1 (abonar a favor de)
  "06",              // Nhum0 V QueF1 (mental perception: saber, pensar; volition: querer, ordenar)
  "07",              // Nhum0 V Prep1 (Vinf0)1 (aprender a)
  "08",              // N0 V Prep1 QueF1 (prestar-se a, depender de, resultar em, contar com)
  "09",              // Nhum V QueF1 a Nhum2 (dizer)
  "10",              // N0 V QueF1 Prep2 N2 (apostar)
  "11",              // N0 V N1 a QueF2 (obrigar)
  "12",              // N0 V N1 de (Vinf1)2 (impedir)
  "13",              // N0 V N1 de QueF2 (informar)
  "14",              // N0 V N1 Prep2 QueF2 (pagar)
  "15",              // N0 V (Ntmp)1 a (Vinf0)2 (passar)
  "16",              // N0 V (Ntmp)1 a (Vinf0)2 (passar)
  "31H",             // Nhum0 V (falecer)
  "31I",             // - V (chover, amanhecer)
  "31CL",            // Npc0 V (suar, feder)
  "31PL",            // Npl0 V (abundar, pulular)
  "31R",             // N0 V (morrer, florir)
  "32A",             // N0 V N1 [apparition] (construir)
  "32C",             // N0 V N1 *[apparition] (rasgar)
  "32CL",            // N0 V (Nbp de NHum)1 (pentear)
  "32CV",            // N0 V N1 = N0 converter N1 em V-n (caramelizar)
  "32H",             // Nhum0 V Nhum1 (assassinar)
  "32NM",            // N0 V Quant (pesar, medir, valer)
  "32PL",            // N0 V Npl1 (colecionar)
  "32R",             // N0 V Nc1 (estrelar (ovo))
  "32TA",            // N0 V N1 = N0 tornar V-a N1 (arredondar)
  "33",              // N0 V a N1 (telefonar)
  "33MV",            // N0 V Manner (portar-se, comportar-se)
  "33NM",            // N0 V Prep1 Quant (ascender)
  "34",              // N0 V de N1 (saber)
  "35LD",            // N0 V Loc-dyn Nloc1 (sair, entrar)
  "35LS",            // N0 V Loc-stat Nloc1 (viver, residir, morar)
  "35R",             // N0 V Prep1 N1 (confiar)
  "35S",             // N0 V com N1 [symmetry] (concordar, casar)
  "36DT",            // Nhum0 V N1 a Nhum2 (oferecer, roubar) 
  "36R",             // N0 V N1 Prep N2 (substituir, transformar)
  "36S1",            // N0 V N1 com N2 [object symmetry] (misturar)
  "36S2",            // N0 V N1 com N2 [subject-object symmetry] (discutir)
  "36TA",            // N0 V N1 Prep2 N2 = N0 tornar N1 V-a  Prep N2 (adequar)
  "38L1",            // N0 Vloc N1 (atravessar, ocupar)
  "38L2",            // N0 V N1 = N0 meter N1 em Vloc-n (enjaular)
  "38L3",            // Nloc0 V N1 (encerrar)
  "38L4",            // N0 V N1 = N0 meter V-n1 em Nloc-destiny2 (envenenar)
  "38L5",            // N0 V N1 = N0 tirar V-n1 de Nloc-source2 (desengordurar)
  "38LD",            // N0 V-dyn N1 Loc2 Nloc-destiny2 (pousar)
  "38LR",            // N0 V-stat N1 Loc2 Nloc2 (situar)
  "38LS",            // N0 V-dyn N1 Loc2 Nloc-source2 (pousar)
  "38LT",            // N0 V-dyn N1 Loc2 Nloc-source2 Loc3 Nloc-source2 (transferir)
  "38PL",            // N0 V N1 Prep Npl2 (dividir)
  "38R",             // N0 V N1 Loc2 Nloc-destiny2 (remeter)
  "38TD",            // N0 V N1 Loc2 Nloc-source2 (retirar)
  "39",              // N0 V N1 Pred (eleger, nomear)
  "40",              // N0 V N1 Prep1 N2 (bater com-em)
  "41",              // N0 V Prep1 N1 Prep2 QueF2 (apelar)
  "42S"              // N0 V com N1 Prep2 N2 [subject-object symmetry] (comungar)
];
