//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe
//!
//! Copyright (c) 2006 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! Authors include: Caroline Hagege, Nuno Mamede
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
Translation:

//-- MORPHOLOGICAL CATEGORIES ----------------------------------------------------------
					// DESCRIPTION		EXAMPLE
Abbr 		= [abbr=+].		// abbreviation		ca.::circa+Adv+Abbr
Acc 		= [acc=+].		// accusative case	o::ele+Pron+Acc+3P+Masc+Sg
Aug		= [aug=+].		// augmentative		balona::bala+Noun+Aug+Fem+Sg
Card 		= [card=+].		// cardinal		duzentos::duzentos+Num+Card+Masc
City 		= [city=+].		// city name		Lisboa::Lisboa+Prop+City+NP+Fem+Sg
Comp		= [comp=+].		// comparative 		pior::mau+Adj+Comp+MF+Sg
Cond 		= [cond=+].		// conditional 		amaríamos::amar+Verb+Cond+1P+Pl
Continent 	= [continent=+].	// continent name	Europa::Europa+Prop+Continent+Fem+Sg
Corr		= [corr=+].		// correlation particl	esto é::isto_é+Prt+Corr
Country		= [country=+].		// country name		Portugal::Portugal+Prop+Country+NP+Masc+Sg
Curr		= [curr=+].		// currency		100$::100$+Dig+Curr
Dat		= [dat=+].		// dative case		lhe::ele+Pron+Dat+3P+Masc+Sg
Date		= [date=+].		// date  		31/12/2000::31/12/2000+Dig+Date
Def		= [def=+].		// definite  		o::o+Art+Def+Masc+Sg
Deg		= [deg=+].		// degree  		180°::180°+Dig+Deg
Dem		= [dem=+].		// demonstrative  	este::este+Pron+Dem+Masc+Sg
Desig		= [desig=+].		// designation particle eis::eis+Prt+Desig
Dim		= [dim=+].		// diminutive  		balitas::bala+Noun+Dim+Fem+Pl
Emph		= [emph=+].		// emphasis particle  	lá::lá+Prt+Emph
Etc		= [etc=+].		// particle "et cetera" etc::et_cetera+Prt+Etc
Excl		= [excl=+].		// exclusion particle  	somente::somente+Prt+Excl
Fam		= [lastname=+].		// family (last) name  	Veiga::Veiga+Prop+Fam+MF+Sg
Fem		= [fem=+].		// feminine  		bala::bala+Noun+Fem+Sg
FutInd		= [fut=+,ind=+].	// future indicative  	amarão::amar+Verb+FutInd+3P+Pl
FutSubj		= [fut=+,subj=+].	// future subjunctive  	amardes::amar+Verb+FutSubj+2P+Pl
Geo		= [geographic=+].		// geographic name  	Mediterrâneo::Mediterrâneo+Prop+Geo+Masc+Sg
Gerund		= [gerund=+].		// gerund  		amando::amar+Verb+Gerund
Giv		= [giv=+].		// given (first) name  	Ruy::Ruy+Prop+Giv+Masc+Sg
ImpInd		= [impf=+,ind=+].	// imperfect indicative amava::amar+Verb+ImpInd+3P+Sg
ImpSubj		= [impf=+,subj=+].	// imperfect subjunct. 	amásseis::amar+Verb+ImpSubj+2P+Pl
Impv		= [impv=+].		// imperative  		amai::amar+Verb+Impv+2P+Pl
Incl		= [incl=+].		// inclusion particle  	mesmo::mesmo+Prt+Incl
Indef		= [indef=+].		// indefinite  		uma::um+Art+Indef+Fem+Sg
Inf		= [inf=+].		// infinitive  		amar::amar+Verb+Inf
InfFlex		= [infflex=+].		// inflect. infinitive  amarmos::amar+Verb+InfFlex+1P+Pl
Initial		= [initial=+].		// initials  		A.S.::A.S.+Initial
Int		= [int=+].		// intensive (superl.) 	gordíssimo::gordo+Adj+Int+Masc+Sg
Interrog	= [interrog=+].		// interrogative  	quando::quando+Adv+Interrog
Leg		= [legal=+].		// legal term  		S.A.::Sociedade_Anônima+Prop+Leg+Fem+Sg
MF		= [masc=+,fem=+].	// masc. or fem.  	artista::artista+Noun+MF+Sg
Masc		= [masc=+].		// masculine  		caso::caso+Noun+Masc+Sg
Misc		= [misc=+].		// miscellaneous (name) Guernica::Guernica+Prop+Misc+Masc+Sg
Neg		= [Neg=+].		// negation  		não::não+Adv+Neg
//Nom		= [Nom=+].		// nominative case  	ele::ele+Pron+Nom+3P+Masc+Sg
NP		= [no_art=+].		// used without article aquilo::aquilo+Pron+Dem+NP+Masc+Sg
Ord		= [ord=+].		// ordinal  		primeira::primeiro+Num+Ord+Fem+Sg
Org		= [org=+].		// organisation name  	ONU::Organização_das_Nações_Unidas+Prop+Org+Fem+Sg
Percent		= [percentage=+].		// percentage  		23%::23%+Dig+Percent
Perf		= [perf=+,ind=+].	// perfect indicative  	amou::amar+Verb+Perf+3P+Sg
Pers		= [pers=+].		// personal (pronoun)  	mim::eu+Pron+Pers+1P+MF+Sg
Pl		= [pl=+].		// plural  		balas::bala+Noun+Fem+Pl
Pluperf		= [pluperf=+].		// pluperfect  		amara::amar+Verb+Pluperf+1P+Sg
Pol		= [pol=+].		// political entity  	EST::Estremadura+Prop+Pol+Fem+Sg
Pop		= [Pop=+].		// popular  		sinhá::sinhá+Title+Fem+Sg+Pop
Pos		= [Pos=+].		// positive particle  	sim::sim+Prt+Pos
Poss		= [Poss=+].		// possessive  		minha::meu+Pron+Poss+Fem+Sg
PresInd		= [pres=+,ind=+].	// present indicative  	amo::amar+Verb+PresInd+1P+Sg
PresSubj	= [pres=+,subj=+].	// present subjunctive  ames::amar+Verb+PresSubj+2P+Sg
Ref		= [ref=+].		// reference particle  	cf.::cf.+Prt+Ref
Refl		= [refl=+].		// reflexive pronoun  	si::se+Pron+Refl+P+3P+MF+SP
Rel		= [rel=+].		// relative  		cujas::cujo+Det+Rel+Fem+Pl
Rom		= [rom=+].		// roman number  	IX::IX+Dig+Rom
SP		= [sg=+,pl=+].		// sin/gular or plural  	autóbus::autóbus+Noun+Masc+SP
Sci		= [sci=+].		// scientific name  	Marte::Marte+Prop+Sci+NP+Masc+Sg
Sg		= [sg=+].		// singular  		bala::bala+Noun+Fem+Sg
Soc		= [soc=+].		// society name  	Xerox::Xerox+Prop+Soc+Fem+Sg
Tel		= [tel=+].		// telephone number  	1-234-56-78::1-234-56-78+Dig+Tel
Time		= [time=+].		// time  	 	12:30::12:30+Dig+Time
Usastate	= [state=+].		// state of the USA  	California::California+Prop+Usastate+Fem+Sg
Year		= [year=+].		// year (period) 	2002-2003::2002-2003+Dig+Year
1P		= [1p=+].		// first person  	nós::nós+Pron+Nom+1P+MF+Pl
2P		= [2p=+].		// second person 	tu::tu+Pron+Nom+2P+MF+Sg
3P		= [3p=+].		// third person 	ele::ele+Pron+Nom+3P+Masc+Sg
pastpart	= [pastpart=+].
verb		= [verb=+].
pronrel	= [pronrel=+].


// Adding translations for NE features. (NE added in the fst)
// Geo already defined and translated as geographic
Mountain	= [mountain=+].
Desert		= [desert=+].
Island		= [island=+].
Water_mass	= [water-mass=+].	// foz+Noun^^+Geo+Water_mass+General
Water_go	= [water-go=+].		// riacho+Noun^^+Geo+Water_go+General
River		= [water-go=+].		// Guadiana+Prop+Loc+River
Change_place	= [change_place=+].	// viagem+Noun^^+Change_place
Transport	= [transport_mean=+].	// carro+Noun^^+Transport
AdminArea	= [admin_area=+].	// distrito+Noun^^+AdminArea+General
General		= [general=+].
// City : already defined and translated as city
Instal		= [instal=+].		// aeroporto+Noun^^+AdminArea+General+Instal
Local		= [local=+].		// aqui+Adv^^+Local
CardPoint	= [cardinal_p=+].	// norte+Noun^^+Cardpoint
Region		= [region=+].		// Alentejo+Prop+Loc+Region+AdminArea 
State		= [state=+].		// Alagoas+Prop+State 
Admin		= [administration=+]. 	// parlamento+Noun^^+Org+Admin
Company		= [company=+].		// Adecco+Prop+Org+Company  
Postmod		= [sufixo_em=+].	// Airways+Noun+Org+Company+Postmod 
Instit		= [institution=+].
Party		= [partido=+].		// Batasuna+Prop+Org+Instit+Party  
Paper		= [jornal=+].		// Expresso+Prop+Paper+Company
Profession	= [profession=+].
FirstName	= [firstname=+].
LastName	= [lastname=+].
Demonym		= [nationality=+].
Context_address = [introd_street=+].    // avenida+Noun^^+Context_address 
Cardpoint	= [cardinal_p=+].	// cardinal point references 




// for punctuations and special symbols:



Accent		= [accent=+].		// accent
Bracket		= [bracket=+].		// bracket
Comma 		= [comma=+].		// comma
Dash		= [dash=+].		// dash
Dots		= [dots=+].		// dots
Left		= [left=+].		// left (paren or bracket)
Paren		= [paren=+].		// parenthesis
Punct		= punct.		// punctuation
Quote		= [quote=+].		// quotation mark
Right		= [right=+].		// right (paren or bracket)
//Sent		= [sent=+].		// sentence final punctuation
Slash	 	= [slash=+].		// slash or backslash
Symbol		= symbol.		// special symbol


// additional markers (c.f. map4xip)
d_adj		= [d_adj=+].		// derived from adjective
d_num		= [d_num=+].		// derived from numeral

// source identifier
\#lex		= [src=lex].		// morph. analyzer
\#lex\-noacc	= [src=lexA].		// de-accented analyser
\#spec		= [src=spec].		// special lexicon
\#guess		= [src=guess].		// guesser
\#open		= [src=open].		// open class FST



//== HMM TAGS ==================================================================

hmm_ADJ			= [hmm_ADJ=+].
hmm_ADJPL		= [hmm_ADJPL=+].
hmm_ADJSG		= [hmm_ADJSG=+].
hmm_ADV			= [hmm_ADV=+].
//hmm_ADVCOMP		= [hmm_ADVCOMP=+].
hmm_AUXBE		= [hmm_AUXBE=+].
hmm_AUXBEINF		= [hmm_AUXBEINF=+].
hmm_AUXBEINFPRON	= [hmm_AUXBEINFPRON=+].
hmm_AUXBEPRON		= [hmm_AUXBEPRON=+].
hmm_AUXHAV		= [hmm_AUXHAV=+].
hmm_AUXHAVINF		= [hmm_AUXHAVINF=+].
hmm_AUXHAVINFPRON	= [hmm_AUXHAVINFPRON=+].
hmm_AUXHAVPRON		= [hmm_AUXHAVPRON=+].
hmm_CM			= [hmm_CM=+].
hmm_CONJ		= [hmm_CONJ=+].
hmm_CONJCOMP		= [hmm_CONJCOMP=+].
hmm_CONJSUB		= [hmm_CONJSUB=+].
hmm_DEMPL		= [hmm_DEMPL=+].
hmm_DEMSG		= [hmm_DEMSG=+].
hmm_DETINT		= [hmm_DETINT=+].
hmm_DETINTPL		= [hmm_DETINTPL=+].
hmm_DETINTSG		= [hmm_DETINTSG=+].
hmm_DETPL		= [hmm_DETPL=+].
hmm_DETRELPL		= [hmm_DETRELPL=+].
hmm_DETRELSG		= [hmm_DETRELSG=+].
hmm_DETSG		= [hmm_DETSG=+].
hmm_DIG			= [hmm_DIG=+].
hmm_GER			= [hmm_GER=+].
hmm_GERPRON		= [hmm_GERPRON=+].
hmm_INF			= [hmm_INF=+].
hmm_INFPRON		= [hmm_INFPRON=+].
hmm_INTERJ		= [hmm_INTERJ=+].
hmm_ITEM		= [hmm_ITEM=+].
hmm_LETTER		= [hmm_LETTER=+].
hmm_NEG			= [hmm_NEG=+].
hmm_NOUN		= [hmm_NOUN=+].
hmm_NPL			= [hmm_NPL=+].
hmm_NPROP		= [hmm_NPROP=+].
hmm_NSG			= [hmm_NSG=+].
hmm_POSSPL		= [hmm_POSSPL=+].
hmm_POSSSG		= [hmm_POSSSG=+].
hmm_PREP		= Prep .
hmm_PREPADV		= [hmm_PREPADV=+].
hmm_PREPDEMPL		= [hmm_PREPDEMPL=+].
hmm_PREPDEMSG		= [hmm_PREPDEMSG=+].
hmm_PREPDETPL		= [hmm_PREPDETPL=+].
hmm_PREPDETSG		= [hmm_PREPDETSG=+].
hmm_PREPPRON		= [hmm_PREPPRON=+].
hmm_PREPQUANTPL		= [hmm_PREPQUANTPL=+].
hmm_PREPQUANTSG		= [hmm_PREPQUANTSG=+].
hmm_PREPREL		= [hmm_PREPREL=+].
hmm_PREPRELPL		= [hmm_PREPRELPL=+].
hmm_PREPRELSG		= [hmm_PREPRELSG=+].
hmm_PRON		= [hmm_PRON=+].
hmm_PRONPL		= pron[hmm_PRONPL=+].
hmm_PRONREL		= [hmm_PRONREL=+].
hmm_PRONRELPL		= [hmm_PRONRELPL=+].
hmm_PRONRELSG		= [hmm_PRONRELSG=+].
hmm_PRONSG		= pron[hmm_PRONSG=+].
hmm_PUNCT		= [hmm_PUNCT=+].
hmm_QUANTPL		= [hmm_QUANTPL=+].
hmm_QUANTSG		= [hmm_QUANTSG=+].
hmm_SYM			= [hmm_SYM=+].
hmm_VERBF		= [hmm_VERBF=+].
hmm_VERBFPRON		= [hmm_VERBFPRON=+].
hmm_VPP			= [hmm_VPP=+].


// Take advantage of HMM tags to refine categories dealt by the parser
hmm_ADVCOMP 		= [advcomp=+].



// categories

Adj 		= adj.			// adjective 		gordas::gordo+Adj+Fem+Pl
Adv		= adv.			// adverb 		ontem::ontem+Adv
Art		= art.			// article		um::um+Art+Indef+Masc+Sg
Command		= interj[command=+].	// order		silêncio::silêncio+Command
Conj		= conj.			// conjunction  	com que::com_que+Conj
Det		= det.			// determiner 		outro::outro+Det+Indef+Masc+Sg
Dig		= num[dig=+].		// digital number  	123::123+Dig
For		= foreign.		// foreign word  	the::the+For
Interj		= interj.		// interjection  	ai de mim::ai_de_mim+Interj
Item		= num[item=+].		// list item		a)::a)+Item
Let		= symbol[letter=+].	// single letter  	K::K+Let
Meas		= noun[meas=+].		// measure (unit)  	km::quilómetro+Meas+SP
Noun		= noun[common=+].	// common noun  	bala::bala+Noun+Fem+Sg
Num		= num.			// number  		dez::dez+Num+Card+MF
Onom		= interj[onom=+].	// onomatopoeia  	miau::miau+Onom
//PastPart	= pastpart.		// past participle  	amados::amar+Verb+PastPart+Masc+Pl
Prep		= prep.			// preposition 		por::por+Prep
//Pron		= pron.			// pronoun  		elas::elas+Pron+Nom+3P+Fem+Pl
Prop		= noun[proper=+].		// proper name  	Anna::Anna+Prop+Giv+Fem+Sg
//Prt		= prt.			// particle  		mesmo::mesmo+Prt+Incl
Title		= noun[title=+].	// title  		senhor::senhor+Title+Masc+Sg
//Verb		= verb.			// verb  		amo::amar+Verb+PresInd+1P+Sg



Categorydefinition:

[verb:+, pastpart:+] = Pastpart.	// past participle  	amados::amar+Verb+PastPart+Masc+Pl
[verb:+, pron:+] = Verb[pron:+].	// contracted form verb+clitic  afogar-se
[verb:+,pron:~] = Verb.			// verb  		amo::amar+Verb+PresInd+1P+Sg
//[prep:+,rel:~,pron:~] = Prep. // this def does not work but should. use of hmm_PREP
//[pron:+,prep:+,rel:+] = Rel[pronrel:+,prep:+]. 
[rel:+] = Rel[pronrel:+].			// pronoun  		elas::elas+Pron+Nom+3P+Fem+Pl
[dem:+] = Pron[dem:+].			// demonstrativo	estas
[indef:+] = Pron[indef:+].		// indefinidos		muitos, poucos, varios, alguns....
[poss:+] = Pron[poss:+] .		// possessivos		minha
[pers:+] = Pron[pers:+] .		// pronomes pessoais
hmm_PRONSG[nom:+,pron:+] = Pron[pers:+,nom:+] .	// pron pessoais nominativo


