//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! L2F - Spoken Language Systems Laboratory / INESC-ID Lisboa                 !
//!                                                                            !
//! Copyright (c) 2006 INESC-ID Lisboa.  All Rights Reserved.                  !
//!                                                                            !
//! --- CONTENTS ---                                                           !
//!   Project    : Portuguese XIP grammar                                      !
//!   filename   : LGLocation.xip                                              !
//!   Date       : 2006/October                                                !
//!   Author     : Luís Romão with some completion of CH		       !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//!                                                                            !
//!  Location and address rules                                                !
//!                                                                            !
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


// $Id: LGLocation.xip,v 1.2 2008/10/21 15:20:03 chagege Exp $

Sequence:


////////////////////////////////////////////////////////////////////////////////
// LOCATION RULES (ex. Nova Lisboa, Cidade da Guatemala, norte da França)  
////////////////////////////////////////////////////////////////////////////////

// Monte + X to avoid to have them as a mountain
// e.g; Monto Gordo
3> noun[location=+,city=+, admin_area=+] = ?[lemma:monte,maj], ?[surface:Gordo];?[surface:Choro].
3> noun[location=+,city=+, admin_area=+] = ?[lemma:monte,maj], ?[lemma:de], (art[def]), ?[surface:Caparica].

// E.g. Nova Iorque, Nova Lisboa
3> NOUN[location=+,city=+, admin_area=+] = ?[lemma:novo];?[lemma:nova], noun[location,city].
3> NOUN[location=+,city=+, admin_area=+] = ?[lemma:new], ?[maj].

3> NOUN[location=+,city=+, admin_area=+] = ?[lemma:são], ?[lemma:Petersburgo].

// Sao Petersburgo
3> noun[location=+,city=+, admin_area=+] = ?[lemma:rio], prep[lemma:de], ?[lemma:janeiro].
// E.g. Novo México, Nova Zelândia, Nova Escócia
3> NOUN[location=+, admin_area=+] = ?[lemma:novo];?[lemma:nova], noun[location].

// E.g Cidade do México, Cidade da Guatemala
3> NOUN[location=+, city=+, admin_area=+] = noun[maj,lemma:cidade], prep[lemma:de], (?[lemma:o]), noun[location].

// Terceiro Mundo
3> noun[location=+,admin_area=+,region=+] = ?[surface:Terceiro], ?[surface:Mundo] .

// América do Sul, norte da França, China Septentrional
3> NOUN[location=+, geographic=+,region=+] = noun[location], prep[lemma:de], (?[lemma:o]), noun[cardinal_p].
3> NOUN[location=+, geographic=+,region=+] = noun[cardinal_p,maj:+], prep[lemma:de], (?[lemma:o]), noun[location].

// RUNHAREM
3> noun[location=+,geographic=+,region=+] = noun[location,region,maj], adj[adj_cardp,maj:+].
3> noun[location=+,geographic=+,region=+] = noun[country], adj[adj_cardp,maj:+].

// República Popular da China, República Centro-Africana, República de Cabo Verde
3> NOUN[location=+,country=+, admin_area=+] @= ?[lemma:República], (?[lemma:popular];?[lemma:democrático];?[lemma:islâmico]), (prep[lemma:de], (?[lemma:o])), ?+[maj], (prep, (art), ?+[maj])*. 

//Estados Unidos, Reino Unido, Emiratos Árabes Unidos
3> NOUN[location=+,country=+, admin_area=+] = ?[lemma:estados];?[lemma:reino];?[lemma:emiratos],(?), ?[lemma:unidos];?[lemma:unido].


////////////////////////////////////////////////////////////////////////////////
// LOCATION with "MONTE"
////////////////////////////////////////////////////////////////////////////////

// Monte Estoril
3> noun[city=+,admin_area=+,location=+] = noun[surface:"Monte"], ?[city] .

// Evora Monte
3> noun[city=+,admin_area=+,location=+] = ?[city], noun[surface:"Monte"] .

// RUNHAREM
// Location with Area Metropolitana de + city
3> noun[admin_area=+,city=+,location=+] @= ?[surface:"Área"], ?[surface:Metropolitana], prep[lemma:de], ?[city] .

////////////////////////////////////////////////////////////////////////////////
// LOCATION RULES (without context) for WATER
////////////////////////////////////////////////////////////////////////////////

// rio (water location)
3> noun[location=+, water-go=+, geographic=+] @= ?[lemma:rio, maj], ?+[maj], (prep, (art), ?+[maj])*.

// oceanos (water location)
3> noun[location=+, water-mass=+, geographic=+] @= ?[lemma:oceano,maj], ?+[maj].
3> ? @= ?[lemma:oceano,maj:~], ?[maj:+,location=+,water-mass=+,geographic=+] .

// mares (water location)
3> noun[location=+, water-mass=+, geographic=+] @= ?[surface:Mar], (prep[lemma:de]), (art), ?+[maj], (prep, (art), ?+[maj])*.

// CH added
// lakes
3> noun[location=+, water-mass=+, geographic=+] @= ?[lemma:lago,maj], (art; ?[maj]; prep[lemma:de])*.

// CH added
// canal
3> noun[location=+, water-mass=+, geographic=+] @= ?[lemma:canal, maj], (prep[lemma:de]), (art), ?+[maj], (prep;art;?[maj])*.
// lagoa
3> noun[location=+, water-mass=+, geographic=+] @= ?[lemma:lagoa, maj], (prep[lemma:de]), (art), ?+[maj], (prep;art;?[maj])*.
// golfo
3> noun[location=+, water-mass=+, geographic=+] @= noun[lemma:golfo, maj], (prep[lemma:de]), (art), ?+[maj], (prep;art;?[maj])*.
// Baia
3> noun[location=+, water-mass=+, geographic=+] @= noun[lemma:baía, maj], (prep[lemma:de]), (art), ?+[maj], (prep;art;?[maj])*.
// estreito
3> noun[location=+, water-mass=+, geographic=+] @= ?[lemma:estreito, maj], (prep[lemma:de]), (art), ?+[maj], (prep;art;?[maj])*.

////////////////////////////////////////////////////////////////////////////////
// LOCATION RULES (without context) for admin area
////////////////////////////////////////////////////////////////////////////////

//Grande Lisboa, Grande Paris
3> noun[location=+, admin_area=+,division=+] @= ?[lemma:grande, maj], ?[location].

//Países de Leste (Países Asiáticos)
3> noun[location=+, admin_area=+] @= ?[lemma:país, pl], adj[maj].
3> noun[location=+, admin_area=+] @= ?[lemma:país, pl], prep[lemma:de], ?+[maj].

//Região Autonóma dos Açores (Madeira)
3> noun[location=+, admin_area=+] @= ?[lemma:região, maj], ?[lemma:autónomo], prep[lemma:de], (art), ?+[maj], (prep, (art), ?+[maj])*.

//Médio Oriente, Próximo Oriente
3> noun[location=+, admin_area=+] @= ?[lemma:médio, maj];?[lemma:próximo], ?[lemma:oriente].
3> noun[location=+, admin_area=+] @=  ?[lemma:oriente], ?[lemma:médio, maj];?[lemma:próximo].




////////////////////////////////////////////////////////////////////////////////
// LOCATION RULES (without context) for geographic
////////////////////////////////////////////////////////////////////////////////


// montanha, cordilheira, serra, vale, ilha , peninsula, etc. These words are marked in the lexicon.
//3> noun[location=+, geographic=+] @= ?[lemma:montanha];?[lemma:cordilheira];?[lemma:serra];?[lemma:monte], (prep[lemma:de]), (art), 
//?+[maj], (prep, (art), ?+[maj])*.
// CH
3> noun[location=+, geographic=+, mountain=+] @= noun[mountain:+,maj:+,toutmaj:~], (prep[lemma:de]), (art), ?+[maj], (prep;art;?+[maj])*. 
3> noun[location=+, geographic=+, island=+] @= noun[island:+,maj:+,toutmaj:~], (prep[lemma:de]), (art), ?+[maj], (prep;art;?+[maj])*. 

////////////////////////////////////////////////////////////////////////////////
// LOCATION RULES (without context) for extended
////////////////////////////////////////////////////////////////////////////////

// campo de concentracao de LOC
3> noun[location=+, extended=+] @= ?[lemma:campo,maj],prep[lemma:de], ?[lemma:concentração,maj], prep[lemma:de], (?[lemma:o]), noun[location].


// palácio/castelo/torre/mosteiro etc. de...
3> noun[location=+, extended=+] @= ?[lemma:palácio];?[lemma:castelo];?[lemma:mosteiro];?[lemma:torre, sg],(prep[lemma:de], (?[lemma:o])), 
?+[maj], (prep, (art), ?+[maj])*.


//Centro Comercial Colombo
3> noun[location=+, extended=+] @= ?[lemma:centro, maj], ?[lemma:comercial], ?+[maj], (prep, (art), ?+[maj])*.

//Teatro Nacional D. Maria
3> noun[location=+, extended=+] @= ?[lemma:teatro, maj], (adj), ?+[maj], (prep, (art), ?+[maj])*.

//Cinema X, Cine-teatro da Guarda, Auditório Municipal
3> noun[location=+, extended=+] @= ?[lemma:cinema, maj];?[lemma:cine-teatro];?[lemma:cineteatro];?[lemma:auditório], (adj), ?+[maj], (prep, (art), ?+[maj])*.

//Centro de Congressos de Lisboa
3> noun[location=+, extended=+] @= ?[lemma:centro, maj], prep[lemma:de], ?[lemma:congresso], (prep[lemma:de]), ?+[maj], (prep, (art), ?+[maj])*.

//Estádio do X, Estádio Alvalade XII
3> noun[location=+, extended=+] @= ?[lemma:estádio, maj], (prep[lemma:de]), (art), ?+[maj], (prep, (art), ?+[maj])*.

//Quartel
3> noun[location=+, extended=+] @= ?[lemma:quartel, maj], (adj), (prep[lemma:de]), (art), ?+[maj], (prep, (art), ?+[maj])*.


//Jardim da Estrela
3> noun[location=+, extended=+] @= ?[lemma:jardim, maj], prep[lemma:de], (art), ?+[maj], (prep, (art), ?+[maj])*.

//Cemitério dos Prazeres
3> noun[location=+, extended=+] @= ?[lemma:cemitério, maj], prep[lemma:de], (art), ?+[maj], (prep, (art), ?+[maj])*.

// Porto de Lisboa
3> noun[location=+, extended=+] @= ?[lemma:porto, maj], prep[lemma:de], (art), ?+[maj], (prep, (art), ?+[maj])*.

//País 
3> noun[location=+, extended=+] @= ?[lemma:país, maj].


//Minas da Panasqueira, Mina de X de Y
3> noun[location=+, extended=+] @= ?[lemma:mina, maj], prep[lemma:de], (art), ?+[maj], (prep, (art), ?+[maj])*.

//Praia da Rocha
3> noun[location=+, geographic=+, region=+] @= ?[lemma:praia, maj], prep[lemma:de], (art), ?+[maj], (prep, (art), ?+[maj])*.


//Quinta do Lago, Quinta da Marinha
3> noun[location=+, extended=+] @= ?[lemma:quinta, maj], (prep[lemma:de]), (art), ?+[maj], (prep, (art), ?+[maj])*.


////////////////////////////////////////////////////////////////////////////////
// Non contextual ADDRESS RULES (ex. Rua Alves Redol, 9, 1000-029 Lisboa)
////////////////////////////////////////////////////////////////////////////////

// USELESS FOR THE NEW HAREM
//3> NOUN[location=+, correio=+] @= ?[lemma:rua, maj];?[lemma:avenida, maj];?[lemma:praça, maj];
 //  ?[lemma:praceta, maj];?[lemma:largo, maj]; ?[lemma:travessa, maj];?[lemma:alameda, maj];
 //  ?[lemma:via, maj];?[lemma:estrada, maj], (prep), (art), ?+[maj], (prep, ?[maj])*, (punct[comma:+]), 
//   (?[lemma:número];(?[surface:n], ?[symbol])), num, 
 //  (punct[comma:+]), (noun, ?[lemma:esquerdo];?[lemma:esq];?[lemma:direito];?[lemma:dir]);
  // (?[lemma:r],?[slash:+],?[lemma:c]), (?[lemma:lote], ?),(punct[dash:+]), (num), (?+[maj]), (prep, (art), ?+[maj])* .

3> NOUN[location=+, admin_area=+, street=+] @= noun[introd_street, maj], (prep), (art), ?+[maj], (prep, ?[maj])*.
   
3> NOUN[location=+, admin_area=+, street=+] @= (prep), (art), ?+[maj], (prep, ?[maj])* , ?[surface:"Street"].   


// in Lisboa
3> noun[location=+,admin_area=+, street=+] @= noun[lemma:campo,maj], adj[lemma:novo];adv[lemma:pequeno].
3> noun[location=+,admin_area=+, street=+] @= noun[lemma:campo,maj], prep[lemma:de], ?[lemma:Santana] .
3> noun[location=+,admin_area=+, street=+] @= noun[lemma:campo,maj], prep[lemma:de], art[def], noun[maj], prep[lemma:de], art[def], ?[lemma:pátria] .

//Caixa Postal 
//3> noun[location=+, correio=+] @= ?[lemma:caixa, maj], ?[lemma:postal], (num, punct*[dash])+.

//Sala X
3> noun[location=+, admin_area=+, building=+] @= ?[lemma:sala, maj], (?[lemma:número]), num;noun.
3> noun[location=+, admin_area=+, building=+] @= ?[lemma:sala, maj], ?[lemma:n], ?[lemma:º], num;noun.

// Vivenda Mar e Serra
// CH
3> noun[location=+,admin_area=+, building=+] @= ?[surface:"Vivenda"], ?[maj:+], (conj[coord]), (prep[lemma:de];?[maj:+])* .



// condado, bairro, estado, regiao, vila etc.
// CH - add restriction in order to avoid to take "secretario de [Estado da Cultura]" 
// Refine the rules in order to consider different subtypes.
3> ? @= | ?*[cargo:~] |  noun[maj:+,admin_area:+,general:+,city:+,start_loc=+,location=+], (adj[maj]), (prep[lemma:de]; art; ?[maj,end_loc=+])+.
3> ? @= | ?*[cargo:~] | noun[maj:+,admin_area:+,general:+,city:~,start_loc=+,location=+], (adj[maj]),(prep[lemma:de]; art; ?[maj,end_loc=+])+.




////////////////////////////////////////////////////////////////////////////////
// CONTEXTUAL LOCATION RULES (ex. Cidade do México, rio Tejo, Lisboa, Portugal)  
////////////////////////////////////////////////////////////////////////////////
 
// rios (water location)
4> ? @= ?[lemma:rio], ?+[maj,water-go=+,location=+,geographic=+,start_loc=+], (prep; art; ?[maj,location=+,geographic=+,water-go=+,end_loc=+])*.

// estuario, delta, foz, bacia de XXX 
4> ? @= noun[geographic,water-mass,proper:~], prep[lemma:de], (art),  ?+[maj,water-mass=+,location=+, geographic=+, start_loc=+],  (prep, (art), ?+[maj,location=+,geographic=+,water-mass=+,end_loc=+])*.



// water location (regata em... navegar em... naufragar em... nadar em... mergulhar em... etc)
4> ? @= verb[nautic_activ], prep[lemma:em], (art[def]), ?+[maj,water-mass=+,location=+,geographic=+,start_loc=+], (prep, (art), ?+[maj])*.
4> ? @= noun[lemma:regata], prep[lemma:em], (art[def]), ?+[maj,water-mass=+,location=+,geographic=+,start_loc=+], (prep, (art), ?+[maj])*.


 
//desaguar (rio)
4> ? @= ?+[maj,location=+,water-go=+,geographic=+,start_loc=+], (prep, (art), ?+[maj])*, ?[lemma:desaguar].

4> ? @= ?[lemma:desaguar], prep[lemma:em], (?[lemma:o]), ( ?[maj,location=+,start_loc=+]; prep; art)*.


// na(s)/pela(s) margen(s) de/do...
4> ? @= ?[lemma:margem], prep[lemma:de], (?[lemma:o]), ?[maj,location=+,water-go=+,geographic=+,start_loc=+], (?[maj,location=+,water-go=+,geographic=+,end_loc=+]; prep; art)*.


////////////////////////////////////////////////////////////////////////////////
// CONTEXTUAL LOCATION RULES for admin_area
////////////////////////////////////////////////////////////////////////////////
// It would be better to generalize and use grammatical functions and a specialized lexicon(semantic features todo later)

// residir/morar/viver/localizar-se/situado em
5>? @=  ?[permanency], (?[refl]),  prep[lemma:em], (?[lemma:o]), ?[maj, general:~,island:~,mountain:~, planeta:~, location=+, admin_area=+, start_loc=+], (prep ; art ; ?[maj,admin_area=+, location=+, end_loc=+])*.



// viajar para / mudar para / ir para /vir para/ deslocar-se para/ exilar-se para
3> ? @= verb[change_place], (?[refl]), prep[lemma:para], (art), ?[maj, general:~,general:~,island:~,mountain:~, planeta:~, admin_area=+,location=+,start_loc=+], (prep; art; ?[maj,admin_area=+,location=+,end_loc=+])* .

// viagem, partida, mudanca, deslocacao (de metro) para...
3> ? @= noun[change_place], (prep, noun[transport_mean]), prep[lemma:para], (art), ?[maj,general:~,island:~,mountain:~, planeta:~,admin_area=+,location=+,start_loc=+], (prep; art; ?[maj,admin_area=+,location=+,end_loc=+])* .

// Ir a
3> ? @= verb[lemma:ir], prep[lemma:a], (art), ?[maj,general:~,island:~,mountain:~, org:~, admin_area=+,location=+,start_loc=+], (prep; art; ?[maj,admin_area=+,location=+,end_loc=+])* .

// partir de, deslocar-se de, vir de, regressar de
3> ? @= verb[change_place,surface:~parte], prep[lemma:de], (art), ?[maj,general:~,island:~,mountain:~, admin_area=+,location=+,start_loc=+], (prep; art; ?[maj,admin_area=+,location=+,end_loc=+])* .

//  (a pé, de autocarro, etc.) de/a/para
3> ? @= verb[change_place], (?[refl]),(adv), prep[lemma:de], noun[transport_mean], (adv), prep[lemma:de];?[lemma:a];?[lemma:o];prep[lemma:para], (?[lemma:o]), ?[maj,general:~,island:~,mountain:~, location=+,admin_area=+,start_loc=+], (prep; art; ?[maj,admin_area=+,location=+,end_loc=+])* .


// (na/no /do/da) cidade/vila/aldeia/vilarejo/bairro/freguesia/concelho/lugar de...
3> ? @= noun[admin_area, instal:~,  general ,maj:~, city:+], prep[lemma:de], (art), ?[maj,city=+,start_loc=+], (prep;art;?[maj,city=+,end_loc=+])*.

// na região de... na zona de...
3> ? @=  art, noun[admin_area,general,maj:~,city:~], prep[lemma:de], (art), ?[maj,location=+,admin_area=+,start_loc=+], (prep;art;?[maj,admin_area=+,location=+,end_loc=+])*.

// nascer em/morrer em
3> ? @= ?[lemma:nascer];?[lemma:morrer], prep[lemma:em], (art), ?[maj, time:~, location=+,admin_area=+,start_loc=+], (prep; art; ?[maj,location=+,admin_area=+,end_loc=+])* .

// chegar a/de/em (br)
3> ? @= verb[lemma:chegar], prep[lemma:em];prep[lemma:a];prep[lemma:de], (art), ?[maj, time:~, planeta:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .

// aterrar em...
3> ? @= verb[lemma:aterrar], prep[lemma:em], (art), ?[maj,planeta:~,time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// levantar voo de...
3> ? @= verb[lemma:levantar],noun[lemma:voo], prep[lemma:de], (art), ?[maj,planeta:~,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// ser (originário/oriundo/natural) de...
3> ? @= verb[lemma:ser], ?[lemma:oriundo];?[lemma:natural];?[lemma:originário], prep[lemma:de], (art), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// o caminho/a estrada para
3> ? @=  art[def],?[lemma:caminho];?[lemma:estrada], prep[lemma:para], (art), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// exilar-se em, exilado em
3> ? @= ?[lemma:exilar], (?[refl]), prep[lemma:em], (art), ?[maj,time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// ser destacado para
3> ? @= verb[lemma:ser];verb[lemma:ir], ?[lemma:destacar], prep[lemma:para], (art), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .

  

// ter lugar em
// CH added restriction "Ter lugar em Fevereiro"
3> ? @= verb[lemma:ter], ?[lemma:lugar], prep[lemma:em], (art), ?[maj,month:~,period:~,time:~,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// passar (as) férias em...
3> ? @= verb[lemma:passar], (art), ?[lemma:férias], prep[lemma:em], (art), ?[maj,time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// fazer a tropa em
3> ? @= verb[lemma:fazer], (art), ?[lemma:tropa], prep[lemma:em], (art), ?[maj, time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .

// cumprir serviço militar em
3> ? @= verb[lemma:cumprir], (art), ?[lemma:serviço], ?[lemma:militar],  prep[lemma:em], (art), ?[maj, time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .




// fazer (o exame de) X ano em NP
// fazer (o exame de) X classe em NP
3> ? @= ?[lemma:fazer]; (art, ?[lemma:exame], prep[lemma:de]), (?[lemma:o]),noun, ?[lemma:classe];?[lemma:ano], prep[lemma:em], (?[lemma:o]), ?[maj, time:~, location=+,admin_area=+,start_loc=+], (prep; art; ?[maj,end_loc=+,admin_area=+,location=+])*.

// ser em...
// already done through permanency verb

// estar em...
// already done through permanency verb


// colocado em...
3> ? @= ?[lemma:colocar], prep[lemma:em], (art), ?[maj,time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// aqui em... cá em... ali em... lá em...
3> ? @= adv[local], prep[lemma:em], (art), ?[maj, time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .

// (A)o sul/norte de ....
//3> ? @= art, noun[cardinal_p], prep[lemma:de], (art), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


//sair de...
3> ? @= ?[lemma:sair], prep[lemma:de], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// ficar ao pé de... 
3> ? @= ?[lemma:ficar], prep[lemma:a], art[def], noun[lemma:pé], prep[lemma:de], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// ficar perto/longe de...
3> ? @= ?[lemma:ficar], ?[lemma:perto];?[lemma:longe], prep[lemma:de], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// ficar em...
// already done with permanency verbs


// onde (é que) fica/é ...?
3> ? @= ?[lemma:onde], (?[lemma:ser], ?[lemma:que]), ?[verb,permanency], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// onde se situa...
3> ? @= ?[lemma:onde], (?[lemma:ser], ?[lemma:que]), ?[lemma:se], ?[lemma:situar], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// Y é em X
// already done with permanency verbs

// vai dar a...
3> ? @= ?[lemma:ir], ?[lemma:dar], prep[lemma:a], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// escola/colégio em/de...
3> ? @= ?[lemma:escola], (adj), prep[lemma:de];prep[lemma:em], (art[def]), ?[maj, time:~, start_loc=+,location=+,admin_area=+,school=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .
3> ? @= ?[lemma:colégio], prep[lemma:de];prep[lemma:em], (art[def]), ?[maj,time:~, start_loc=+,location=+,admin_area=+,school=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .


// estar/ser preso em...
3> ? @= ?[lemma:estar], ?[lemma:preso], prep[lemma:em], (art[def]), ?[maj, time:~, start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .




// X tem Y habitantes / Quantos habitantes tem X?
3> ? @= ?[lemma:quanto], ?[lemma:habitante], ?[lemma:ter], ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])* .
3> ? @=  ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj,end_loc=+,location=+,admin_area=+])*, ?[lemma:ter], num, ?[lemma:habitante] .

// X jantou/almoçou em...
3> ? @= ?[lemma:jantar], prep[lemma:em], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj, time:~, end_loc=+,location=+,admin_area=+])* .
3> ? @= ?[lemma:lanchar], prep[lemma:em], (art[def]), ?[maj,start_loc=+,location=+,admin_area=+], (prep; art; ?[maj, time:~, end_loc=+,location=+,admin_area=+])* .




////////////////////////////////////////////////////////////////////////////////
// CONTEXTUAL  Virtual location  RULES (ex. Rua Alves Redol, 9, 1000-029 Lisboa)
////////////////////////////////////////////////////////////////////////////////


//Números de telefone
3> ? @= ?[lemma:"tel."];?[lemma:Tel];?[lemma:tel];?[lemma:telemóvel];?[lemma:telefone];?[lemma:extensão], ?*, ?[lemma:":"],  num[location=+,virtual=+,start_loc=+], num*[location=+,virtual=+,end_loc=+].

//E-mail
3> ? @= ?[lemma:"email"];?[lemma:e-mail], ?*, ?[lemma:":"],  num[location=+,virtual=+,start_loc=+], noun[location=+,virtual=+,end_loc=+].


//enviar um/por e-mail para X
// CH commented this rule as X can be a person name
//3> noun[location=+, virtual=+] @= |?[lemma:enviar], ?[surface:um];prep[lemma:por], ?[lemma:e-mail];?[lemma:email], ?[lemma:para];?[lemma:a]|  noun.

//o website X, online em X
// using regexp on the noun
3> noun[location=+, virtual=+] = ?[lemma="(http://)www.?+"] .





////////////////////////////////////////////////////////////////////////////////
// CONTEXTUAL   extended  location  RULES 
////////////////////////////////////////////////////////////////////////////////

// campo de concentração
4> ? @= ?[lemma:campo],prep[lemma:de], ?[lemma:concentração], prep[lemma:de], (art[def]), ?[maj,start_loc=+,location=+,extended=+], (prep;art;?[maj,location=+,extended=+])* . 


// praia de XXX
4> ? @= ?[lemma:praia], prep[lemma:de], (art[def]), ?[maj,start_loc=+,location=+,geographic=+,region=+], (prep;art;?[maj,location=+,geographic=+,region=+])* . 


//Hotéis, Pousadas, Pensões, Residenciais CONFLITO COM ORGANIZAÇÕES...




//conjunção + disjunção treated in LGLAst
// add restriction in order to avoid LOCATION(Sporting) in "O jogo entre o Sporting e o Benfica"
//10> NOUN[location=+, admin_area=+] @= |noun[location,org:~], ?[lemma:e];?[lemma:ou], (prep), (art)| ?+[maj, toutmaj:~], (prep[lemma:de], (?[lemma:o]), ?+[maj])*.
//10> NOUN[location=+, admin_area=+] @= ?+[maj, toutmaj:~], (prep[lemma:de], (?[lemma:o]), ?+[maj])* |?[lemma:e];?[lemma:ou], (prep), (art), ?[location,org:~] |.

