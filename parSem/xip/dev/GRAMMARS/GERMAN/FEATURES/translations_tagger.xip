//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Copyright (c) 2006 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! File:	translations_tagger.xip
//! Content:	translations for the tagger of the german XIP grammar (without HMM)
//!
//! Language:	GERMAN
//!
//! Author:	Anne Schiller
//!
//! Created: 	17-Jan-2006
//! Updated:	06-Sep-2006
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


Translation:


//== MORPHOLOGICAL TAGS =======================================================
//-- MAIN CATEGORIES ----------------------------------------------------------

Adj		= [adj=+,pre_noun=+].		// attributive adjective
PAdj		= [adj=+,pronom=+,pre_noun=+].	// adjective-like pronoun
Adv		= adv[pre_noun=+].		// adverb
Conj		= conj.			// conjunction
Cpd		= trunc[pre_noun=+].		// truncated word part (e.g. "Haus-")
Det		= det.			// determiner
Num		= num[pre_noun=+].		// numeral ("drei")
Dig		= num[ dig=+,pre_noun=+ ].	// roman or decimal number ("3", "III") 
Noun		= noun.			// (common) noun
Itj		= itj.			// interjection
Ptcl		= ptcl.			// particle
Punct		= punct.		// punctuation
Pron		= pron.			// pronoun
Verb		= verb.			// verb
Prop		= noun[ proper=+].	// proper noun
Pronadv		= adv[ pronom=+, pre_noun=+].	// pronominal adverb ("danach", "womit")

Prep		= Prep.			// preposition (before NP)
Postp		= Postp.		// postposition (after NP)
PrepDet		= prep[ det=+ ].	// preposition with determiner	("zum")

// special cases:
Symbol		= symbol.		// special symbol
Predet		= det[ predet=+ ].	// pre-determiner ("solch [ein ...]")

Fuge		= [ fuge=+ ].


//-- GENDER -------------------------------------------------------------------

Masc		= [ masc=+ ].
Fem		= [ fem=+ ].
Neut		= [ neut=+ ].

MN		= [ masc=+, neut=+ ].
MF		= [ masc=+, fem=+ ].
FN		= [ fem=+, masc=+ ].

//-- NUMBER -------------------------------------------------------------------

Sg		= [ sg=+].
Pl		= [ pl=+].


//-- CASE ----------------------------------------------------------------------

Nom		= [ nom=+ ].
Acc		= [ acc=+ ].
Dat		= [ dat=+ ].
Dat2		= [ dat=+, arch=+ ].
Gen		= [ gen=+ ].
GenS		= [ gen=+, marked_gen=+, pre_noun=+ ].


//-- COMBINED AGREEMNENT FEATURE
mnom	= [mnom=+].
macc	= [macc=+].
mdat	= [mdat=+].
mgen	= [mgen=+].
fnom	= [fnom=+].
facc	= [facc=+].
fdat	= [fdat=+].
fgen	= [fgen=+].
nnom	= [nnom=+].
nacc	= [nacc=+].
ndat	= [ndat=+].
ngen	= [ngen=+].
xnom	= [xnom=+].
xacc	= [xacc=+].
xdat	= [xdat=+].
xgen	= [xgen=+].


//-- DECLENSION ---------------------------------------------------------------- 

St		= [ strong=+].
Wk		= [ weak=+ ].

// for determiners
AgrSt		= [ strong=+ ].
AgrWk		= [ weak=+ ].

Pred		= [ pred=+, attr=~ ].	// non-attributive adjective
Attr		= [ attr=+ ].		// attributive adjective

Invar		= [invar=+].

//-- PERSON --------------------------------------------------------------------
1P		= [ p1=+ ].
2P		= [ p2=+ ].
3P		= [ p3=+ ].


//-- VERBTYPE ------------------------------------------------------------------
Aux		= [ aux=+ ].			// auxiliary
Modal		= [ modal=+ ].			// modal verb
Trans		= [ trans=+ ].			// transitive
Intr		= [ trans=- ].			// intransitive

//--  VERB TENSE ---------------------------------------------------------------
Past		= [ past=+ ].			// present	[Präsens]
Pres		= [ pres=+ ].			// past		[Präteritum]



//-- VERB FORM (or mood) -------------------------------------------------------
Indc		= [ finite=+, indic=+ ].			// indicative
Subj		= [ finite=+, subjc=+, nursubjc=+ ].			// subjunctive [Konjunktiv]
IndcSubj	= [ finite=+, indic=+, subjc=+ ].		
Imp		= [ imp=+ ].				// imperative
PPast		= [ ppast=+ ].			// past participle
Inf		= [ inf=+ ].				// infinitive
Izu		= [ inf=+, zu=+ ].			// infinitive with "zu"
InfBare		= [ zu=- ].

V1		= [ v1=+, req_pref=+ ].		// verb position in main clause ("Er kommt an.")
V2		= [ v2=+ ].		// verb position in subordinate ("weil er ankommt.")


PPres		= [ ppres=+ ].		// present participle
PPrzu		= [ pprzu =+ ].		// present participle with "zu"



//-- DEGREE OF COMPARISON ------------------------------------------------------
Pos		= [ pos=+ ].
Comp		= [ comp=+ ].
Sup		= [ super=+ ].
Sup2		= [ super=+, sup_am=+ ].


//-- DETERMINER AND PRONOUNS ---------------------------------------------------
Def		= [ def=+ ].		// definite
Dem		= [ dem=+ ].		// demonstrative
Indef		= [ indef=+ ].		// indefinite
Pers		= [ pers=+ ].		// personal pronoun
Poss		= [ poss=+ ].		// possessive
Quant		= [ quant=+ ].		// quantifying ("viel")
Recp		= [ recp=+ ].		// reciprocal ("einander")
Refl		= [ refl=+ ].		// reflexive ("sich")
Rel		= [ rel=+ ].		// relative
Wh		= [ wh=+ ].		// interrogative 


//-- CONJUNCTION TYPES ---------------------------------------------------------
Coord		= [ coord=+,pre_noun=+ ].	// coordinating conjunction "und", "oder"
Coord1		= [ coord1=+ ].		// first part of coord. ("entweder"...)
Coord2		= [ coord2=+,pre_noun=+ ].	// second part of coord. (... "oder")	
Subord		= [ subord=+ ].		// subordinating conjunction ("wenn")
Infzu		= [ infzu=+ ].		// for conjuctions which require following "zu"
SAdv		= [ sadv=+ ].		// sentential adverb ("denn", "doch", "aber")


//-- PREPOSITION TYPES ---------------------------------------------------------
Crc		= [ crc=+ ]. 
Preprep		= [ preprep=+ ].	// bis zum Ende

//-- ADVERB OR PARTICLE TYPES --------------------------------------------------
Neg		= [ neg=+].
PAdv		= [ padv=+, pre_noun=+ ].	// adverb-like preposition ("unter [1000 Euro]")
AMod		= [ mod_adj=+, pre_noun=+ ].	// adjective or adverb modifier ("zu [schnell]")

Pref		= [ pref=+ ].			// (verb) prefix
Sep		= [ vpref=sep ].
Unsep		= [ vpref=unsep ].
Infzu		= [ infzu=+].

//-- NUMERALS ------------------------------------------------------------------
Card		= [ card=+ ].
Ord		= [ ord=+ ].
Dec		= [ dec=+ ].		// decimal number
Fract		= [ fract=+ ].		// fractal ("drittel")
Rom		= [ roman=+ ].


//-- NOUN TYPES ----------------------------------------------------------------
Lang		= [ lang=+ ].			// language
Day		= [ day=+ ].			// week day ("Montag")
Month		= [ month=+ ].			// month ("Dezember")

Bus		= [ bus=+ ].
Continent	= [ geo=+, continent=+ ].
Country		= [ geo=+, country=+ ].
Doc		= [ doc=+ ].
First		= [ name=+, firstname=+ ].
Lake		= [ geo=+, lake=+ ].
Last		= [ name=+, lastname=+ ].
Org		= [ org=+ ].
Prod		= [ prod=+ ].			// product name ("Mercedes")
Region		= [ geo=+, region=+ ].
River		= [ geo=+, river=+ ].
Sea		= [ geo=+, sea=+ ].
State		= [ geo=+, state=+ ].
Town		= [ geo=+, town=+ ].
TownCountry	= [ geo=+, town=+, country=+ ].
TownState	= [ geo=+, town=+, state=+ ].
Part		= [ part=+ ].			// part of name ("St. [Ulrich]")

Premod		= [premod=+, mod_noun=+, pre_noun=+].	// pre-modifier ("St. [Ulrich]")
Postmod		= [postmod=+ ].		// post-modifier  {"[Paintshop] Pro")

//-- PUNCTUATIONS AND SYMBOLS --------------------------------------------------
Comma		= [ comma=+, pre_noun=+ ].
Quote		= [ quote=+, skip=+, pre_noun=+ ].
Semicolon		= [ semicolon=+ ].
Sent		= [ sent=+, sent_sep=+ ].
Colon		= [ colon=+, sent_sep=+ ].
Bullet		= [ sent_sep=+ ].
Dots		= [ sent_sep=+, skip=+ ].
Dash		= [ dash =+, skip=+, sent_sep=+, pre_noun=+ ].
Slash		= [ slash =+, coord=+, pre_noun=+ ].

Curr		= [ curr=+ ].

// other:

Abbr		= [ abbr=+ ].
Acron		= [ acron=+ ].
Coll		= [ colloq=+ ].		// colloquial
Date		= [ date=+ ].
Elid		= [ elid=+ ].
ElidS		= [ elid_s=+ ].
Email		= [ email=+ ].
Expr		= [ expr=+ ].
Foreign		= [ foreign=+ ].
Init		= [ init=+ ].		// initial letter (with dot)
Letter		= [ letter=+ ].		// single letter
Sgml		= [ sgml=+ ].

Time		= [ time=+ ].
Title		= [ title=+ ].
Common		= [ common=+ ].
Unit		= [ unit=+ ].
Url		= [ url=+ ].
Polite		= [ polite=+ ].

// derivational markers
NAdj		= [ nadj=+ ].
NInf		= [ ninf=+ ].

//spelling codes (**check for further use ...)
\^Err		= [ err=+ ].
\^ErrLem	= [ err=+ ].
\^ErrSrf	= [ err=+ ].
\^New		= [ newspell=+ ].
\^NewSrf	= [ newspell=+ ].
\^NewLem	= [ newspell=+ ].		
\^Old		= [ oldspell=+ ].
\^OldLem	= [ oldspell=+ ].
\^OldSrf	= [ oldspell=+ ].


// lexical source markers
\#lex		= [ lex=+ ].
\#guess		= [ guessed=+ ].
\#open		= [ guessed=+, openclass=+ ].

// ranking (for compounds)
rank1 = [rank = 1 ].
rank2 = [rank = 2 ].
rank3 = [rank = 3 ].
rank4 = [rank = 4 ].
rank5 = [rank = 5 ].
rank6 = [rank = 6 ].
rank7 = [rank = 7 ].
rank8 = [rank = 8 ].
rank9 = [rank = 9 ].

Filter = [ filter=+].
Filter1 = [ filter1 =+ ].
Filter2 = [ filter2 =+ ].
Filter3 = [ filter3 =+ ].
Filter4 = [ filter4 =+ ].

Prefer = [prefer =+ ].


Low = [low=+].
Upp = [upp=+].



// -------------------------------------------------------------
// more tags:
//Angle
//Backslash
//Begin
//Bracket
//Copyright
//Degree
//Double
//Paragraph
//Paren
//Percent
//Left
//Right
//Slash
//Single
//Math
//Music
//Underscore


CategoryDefinition:
[adj:+,pred:+] = adjp[adjp=+,verbal=-].
[adj:+,pred:~] = adja[adja=+,verbal=-].
