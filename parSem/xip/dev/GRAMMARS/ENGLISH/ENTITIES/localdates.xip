//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : localdates.xip
//!   Date       : 12/08/2003
//!   Author     : C. Brun - minor modifications by CH
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// A local grammar for time expressions and dates, and hour

//STILL A PB ON 1200/1100

Sequence:

// Marquage 
// potential years written in letters
// | in | nineteen seventy-nine
12> ? = | prep[lemme:in];prep[lemme:since];prep[lemme:during];noun[lemme:year] | num[mwe:+, card:+, lemme:"nineteen?+", year=+,tempexpr=+] |?[noun:~,adj:~]| .
12> ? = | prep[lemme:in];prep[lemme:since];prep[lemme:during];noun[lemme:year] | num[mwe:+, card:+, lemme:"nineteen?+", year=+,tempexpr=+] | | .
12> ? = | prep[lemme:in];prep[lemme:since];prep[lemme:during];noun[lemme:year] | num[mwe:+, card:+, lemme:"?+thousand?*", year=+,tempexpr=+] | ?[noun:~,adj:~] | .
12> ? = | prep[lemme:in];prep[lemme:since];prep[lemme:during];noun[lemme:year] | num[mwe:+, card:+, lemme:"?+thousand?*", year=+,tempexpr=+] |  | .


// Expressions for dates :

// Numerical dates : I use the feature spec attached to "/" + add fslash
// Month/Day/Year or Year/Day/Month or Year/Month/Day or Day/Month/Year


7> dig[mwe=+,date=+]  @= dig[month], punct[spec:+,form:fslash], dig[day], punct[spec:+,form:fslash], dig[year];dig[shortyear].

7> dig[mwe=+,date=+]  @= dig[month], punct[form:fhyph,left,right], dig[day], punct[form:fhyph,left,right], dig[year];dig[shortyear].


7> dig[mwe=+,date=+]  @= dig[year];dig[shortyear], punct[spec:+,form:fslash], dig[day],punct[spec:+,form:fslash], dig[month].

7> dig[mwe=+,date=+]  @= dig[year];dig[shortyear], punct[form:fhyph,left,right], dig[day],punct[form:fhyph,left,right],  dig[month].

7> dig[mwe=+,date=+]  @= dig[year];dig[shortyear], punct[spec:+,form:fslash], dig[month], punct[spec:+,form:fslash], dig[day].

7> dig[mwe=+,date=+]  @= dig[year];dig[shortyear], punct[form:fhyph,left,right], dig[month],punct[form:fhyph,left,right], dig[day].

7> noun[mwe=+,date=+]  @= (noun[day]), dig[day], punct[form:fhyph,left,right], dig[month], punct[form:fhyph,left,right], dig[year];dig[shortyear].
 
7> noun[mwe=+,date=+]  @= (noun[day]), dig[day], punct[spec:+,form:fslash], dig[month], punct[spec:+,form:fslash], dig[year];dig[shortyear].



//1898/99 ou 1989/1990
// problems with 1200/1100
7> dig[mwe:+,date=+]@ = | ?[form:~fhyph] |  dig[year],  punct[spec:+,form:fslash],  dig[year];dig[shortyear] , (dig[year]) .

//2/96
//7>  dig[mwe:+,date=+] = | ?[form:~fhyph] | dig[day],  punct[spec:+,form:fslash],  dig[year];dig[shortyear].


// "Latin" Dates

// The third century after/ before Christ 

7>  noun[mwe=+,date=+] @= | det[def] | num[ord], noun[lemme:century], (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].



// The third century/millennium  AC | BC | AD

7>  noun[mwe=+,date=+] @= | det[def] | num[ord], noun[lemme:century];noun[lemme:millennium], noun[lemme:BC,toutmaj]; noun[lemme:AC,toutmaj] ; noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj].

7>  noun[mwe=+,date=+] @= | det[def] | dig[ord], noun[lemme:century];noun[lemme:millennium], (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].

// The third century AC | BC | AD

7>  noun[mwe=+,date=+] @= | det[def] | dig[ord], noun[lemme:century];noun[lemme:millennium], noun[lemme:BC,toutmaj];noun[lemme:AC,toutmaj];noun[lemme:AD];noun[lemme:ad,toutmaj].

7>  noun[mwe=+,date=+] @= | det[def] | num[ord], noun[lemme:century];noun[lemme:millennium].


// the year 800 after/before Christ 
7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,  (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].

7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,   noun[lemme:BC,toutmaj] .

7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,   noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj].
7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,   noun[lemme:AC,toutmaj] .

// AB 2012.06.20 remove day feature on dig
7>  noun[mwe=+,date=+] @= dig[ord,day=~] , (punct[form:fhyph,left,right]) , noun[lemme:century];noun[lemme:millennium].

//the 1560s BC
7> noun[mwe=+,date=+] @= | det[def] | noun[guess,date] ,noun[lemme:BC,toutmaj];noun[lemme:AC,toutmaj];noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj].


// 800 after before Christ
7>  noun[mwe=+,date=+] @= dig, (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].

7>  noun[mwe=+,date=+] @= dig,  noun[lemme:BC,toutmaj].

7>  noun[mwe=+,date=+] @= dig,  noun[lemme:AC,toutmaj] .

7>  noun[mwe=+,date=+] @= noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj], dig .


/------ 1991-92 -- 15-16 -------\

//8> dig[mwe=+,day=+] @= dig[day:+],punct[form:fhyph,left,right],dig[day:+].

// MODIF FOR GM

//8> dig[mwe=+,day=+] @= dig[day:+],punct[form:fhyph,left],dig[day:+].

// Coord on digits : to be tested

8> dig[mwe=+,day=+]@= dig[day:+], (punct[comma:+], dig[day:+])*, conj[coord], dig[day:+] .

/in or Jan 98-99\

8> dig[mwe=+,year=+,date=+] @= |prep[form:fin];noun[month]| dig[shortyear],punct[form:fhyph,left,right];punct[form:fslash,left,right],dig[shortyear].

8> dig[mwe=+,year=+,date=+] @=  dig[shortyear],(punct[comma:+], dig[shortyear:+])*, conj[coord],  dig[shortyear].

8> pp[time=+,tempexpr=+,interval=+] @= prep[lemme:from], dig[year],punct[form:fhyph,left,right], dig[year];dig[shortyear].

8> dig[mwe=+,year=+,date=+] @=  dig[year],punct[form:fhyph,left,right], dig[year];dig[shortyear].

//8> dig[mwe=+,year=+,date=+] @=  dig[year],(punct[comma:+], dig[year:+])*, conj[coord],  dig[year].


/------------ MULTIWORD DATES -------------------\

// April/March (1990) found in corpora
9>  noun[time=+,mwe=+,month=+] @= noun[month], (punct[spec:+,form:fslash];punct[form:fhyph,left,right]), noun[month].

//COORD for Months

9>  noun[time=+,mwe=+,month=+] @= noun[month], (punct[comma:+], noun[month])* , conj[coord],  noun[month].

// the early 1980's
11> noun[time=+,mwe=+] @= |det[def] | ?[time,dig:~] , part;punct[quote], noun[guess,date] .

11> noun[time=+,mwe=+,date=+] @= | det[def] |    
                          ?[time,dig:~];?[preperiod,dig:~],
                          (punct[form:fhyph,left,right]),dig[year],part,(conj[coord],dig,part) .

11> noun[time=+,mwe=+] @= | det[def] |    
                          ?[time,dig:~];?[preperiod,dig:~],
                          (punct[form:fhyph,left,right]),noun[guess,date],(conj[coord],noun[guess,date]) .
// the 1980's
11> noun[time=+,mwe=+,date=+] @= | det[def] | dig[year],part,(conj[coord],dig,part)  .

// the 1980s with the guesser
//11> noun[time=+,mwe=+,date=+] @=   noun[guess,date], conj[coord], noun[guess,date] .

// avoiding to take after and before as first element of the RHS
11> noun[time=+,mwe=+] @= ?[time,dig:~,month:~,conj:~,prep:~], dig[year,date=+].

11> noun[year=+,mwe=+]  @= dig[year],part .

// ! bloque la remontee du trait

// !X:! remonte automatiquement le trait a tout les noeuds au dessus


// next August, 31.
//11> noun[time=+,!month, mwe=+,t_relat=+] @ = ?[preperiod, dig:~], noun[month], (punct[comma:+]), dig[day]. 


// early December, mid-December
11> noun[time=+,!month,mwe=+,t_relat=+] @= ?[time,dig:~,day:~,month:~,prep:~];?[preperiod,dig:~,adj:~],
                                 (punct[form:fhyph,left,right]),
                                  noun[month], prep[form:fof],dig[year].

11> noun[time=+,!month,mwe=+,t_relat=+] @= ?[time,dig:~,day:~,month:~,prep:~];?[preperiod,dig:~,adj:~],(punct[form:fhyph,left,right]), noun[month].

//Additions CB  

// Sunday (,) December / 21 or the 21st /  (, 1998)

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month], (dig[day]) , (punct[comma:+]), dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month], det[def], dig[day,ord] , (punct[comma:+]), dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month],(punct[comma:+]), dig[day].

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month], det[def], dig[day,ord].



// Sunday 21 December 1999 
11> noun[time=+,mwe=+,date=+] @= noun[day],(punct[comma:+]),dig[day],(punct[comma:+]), noun[month],(punct[comma:+]),dig[year].
11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), dig[day], noun[month].

// found in corpora (AFP english news)
// on May 1 of 2004
11> noun[time=+, mwe=+, date=+] @= noun[month], dig[day], prep[lemme:of], dig[year]. 



11>  noun[time=+,mwe=+,date=+] @= noun[day], dig[day].

// the 20th of October 1999

11> noun[time=+,mwe=+,date=+] @= |det[def] | dig[day];num[ord],(prep[form:fof]),noun[month],((punct[comma:+]), dig[year];dig[shortyear]).

11> noun[time=+,mwe=+,date=+] @= dig[day], noun[month], (punct[comma:+]), dig[year].

// December 1999 --- 21 December 1999 --- December 21, 1999

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day:+], punct[comma:+], dig[year:+] , (noun[day]).

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def], dig[day,ord], punct[comma:+],dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def],dig[day,ord], dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], punct[comma:+];punct[quote] ,dig[shortyear] |?[noun:~]| .
11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], punct[comma:+];punct[quote] ,dig[shortyear] || .

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def],dig[day,ord], punct[comma:+],dig[shortyear]  |?[noun:~]|.

11> noun[time=+,mwe=+,date=+] @=  noun[month], prep[form:fof], dig[year];dig[shortyear].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], dig[shortyear].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def],dig[day,ord], dig[shortyear].

11> noun[time=+, mwe=+, interval=+] @= noun[month], dig[day], prep[lemme:to], dig[day] .
11> noun[time=+, mwe=+, interval=+] @= | ?[lemme:~from] | noun[month], dig[day], prep[lemme:to], (noun[month]), dig[day] .
11> noun[time=+, mwe=+, interval=+] @= | | noun[month], dig[day], prep[lemme:to], (noun[month]), dig[day] .

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma]), det[def], dig[ord,day] .
11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma]), dig[day] .

11> noun[time=+,mwe=+,date=+] @= dig[day],noun[month].

12> noun[time=+,mwe=+,date=+] @= (dig[day]), noun[month], punct[comma:+], dig[shortyear] |?[unit:~,percent:~,c_person:~] |.

12> noun[time=+,mwe=+,date=+] @= (dig[day]), noun[month], ( punct[comma:+]) ,dig[year].

12> noun[time=+,mwe=+,date=+] @= (dig[day]), noun[month], dig[shortyear].



// December 21 or No : December , 21 dangerous : more context needed : a year : Dec
//11> noun[time=+,mwe=+,date=+] @= noun[month],dig[day]. DONE ABOVE



//12> noun[time=+,mwe=+,date=+] @= noun[month], dig[day], (punct[comma:+], dig[year]).

// CH adding a left context in order to avoid the third of {January, 1999}
12> noun[time=+,mwe=+,date=+] @= | ?[comma:~,prep:~] | noun[month], (punct[comma:+]), dig[year].
12> noun[time=+,mwe=+,date=+] @= | | noun[month], (punct[comma:+]), dig[year].


// Starting with a year : 1999 August 11

12> noun[time=+,mwe=+,date=+] @= dig[year], (punct[comma:+]), noun[month], (punct[comma:+]), dig[day].

// 1999 December (without a day)
12> noun[time=+,mwe=+,date=+] @= dig[year], (punct[comma:+]), noun[month].

12>  noun[time=+,mwe=+,date=+] @= noun[month], dig[year];dig[shortyear].

// Time expressions like Winter 2002 : apply on noun or nadj

12> noun[tempexpr=+,mwe=+,date=+] @= nadj[period:+], dig[year].

12> noun[tempexpr=+,mwe=+,date=+] @= nadj[period:+], dig[shortyear].

// Calendar|Fiscal year 2003

12> noun[tempexpr=+,mwe=+,date=+] @= adj[lemme:fiscal];noun[lemme:calendar], (noun[lemme:year]), dig[year] .


// avoiding "quarter 2004" in "first quarter 2004" to be taken as a noun
12> noun[tempexpr=+,mwe=+,date=+] @= | ?[num:~,det:~] | noun[period:+,lemme:~month], dig[year].

12> noun[tempexpr=+,mwe=+,date=+] @= | ?[num:~,det:~] | noun[period:+,lemme:~month], dig[shortyear].


14> noun[tempexpr=+,mwe=+,date=+] @= dig[day:+,ord:+], noun[lemme:"day"], prep[form:fof], noun[date].

//for years that became dates


Tagging:



13> dig[year:+] %= | prep[form:fin], dig[year:+] , conj[coord] | dig[year:+,date:+] .


Sequence:

// From time to time

14> pp[tempexpr=+] @= prep[form:fin];prep[form:fsince];prep[form:fduring], (det[def]), noun[date:+,mwe:~].

14> pp[tempexpr=+] @= prep[form:fin];prep[form:fsince];prep[form:fduring], dig[year];num[mwe,year].

14> pp[tempexpr=+] @= prep[form:fin];prep[form:fsince];prep[form:fduring],(det[def]), noun[mwe:+,tempexpr:+] .

14> pp[time=+,tempexpr=+,interval=+] @= prep[form:ffrom], dig[year];dig[shortyear], prep[form:finfto], dig[year];dig[shortyear].

14> pp[time=+,tempexpr=+,t_freq=+] @= prep[form:ffrom], ?[lemme:time], prep[form:finfto], ?[lemme:time] .

// From year until year
14> pp[time=+,tempexpr=+,interval=+] @= prep[form:ffrom], dig[year];dig[shortyear], prep[lemme:until], dig[year];dig[shortyear].

// Between year and year
14> pp[time=+,tempexpr=+,interval=+] @= ?[lemme:between], dig[year];dig[shortyear], ?[lemme:and], dig[year];dig[shortyear].

// Through year and year
14> pp[time=+,tempexpr=+,interval=+] @= ?[lemme:through], dig[year];dig[shortyear], ?[lemme:and], dig[year];dig[shortyear].



// Expressions for hours :

// These 3 rules have been deplaced from Chunker.xip :rules 9>
// I add the post-hours modifier : PM AM GMT, etc 
// CB: problems with categories and tokenzation on these items

15> noun[hour:+] @=  num[card:+], adv[form:foclock],  (?[posthour:+]), (?[timezone:+]).
15> noun[hour:+] @=  dig[card:+], adv[form:foclock], (?[posthour:+]), (?[timezone:+]).

// CH half past three
15> noun[hour:+] @ = quant[predet], ap[preperiod], num[card:+], (?[posthour:+]), (?[timezone:+]) .


// 03:04 AM est 

15>  noun[hour:+] @= dig[time,year:~], noun[lemme:"Am"];noun[lemme:"Pm"], (noun[lemme:"est"];noun[lemme:"EST"];noun[lemme:"west"];noun[lemme:"West"]).

// for 03:04:89 +007
15> noun[hour:+] @= dig[time,year:~], (?[posthour:+]), (?[timezone:+]) .

15> noun[hour:+] @= dig[year:~], ?[posthour:+], (?[timezone:+]) .

15> noun[tempexpr:+,hour:+]  @= dig[year:~],  noun[lemme:hour], dig[year:~], noun[lemme:minute],  conj[coord], dig[year:~], noun[lemme:second] .

15> noun[tempexpr:+,hour:+]  @= num[card:+],  noun[lemme:hour], num[card:+], noun[lemme:minute],  conj[coord], num[card], noun[lemme:second].

15> noun[tempexpr:+,hour:+]  @= dig[year:~],  noun[lemme:hour], dig[year:~], conj[coord], noun[lemme:minute] .

15> noun[tempexpr:+,hour:+]  @= num[card:+], noun[lemme:hour], num[card:+], conj[coord], noun[lemme:minute] .

// CH - To treat "ages" indications
16> noun[e_age=+] = dig;num, (punct[form:fhyph]), noun[period], ?[lemme:old] .

// has to be treated after layer 12 (see marking rules at the beginning of the file)
// the year two thousand
16> noun[mwe=+,date=+,tempexpr=+] @= | det[def] | noun[lemme:year], num[mwe:+,year:+] .




IDRules:

// should be processed after dates ...

18> dig[mwe=+,card:+] -> dig+[last:~,rom:~],
                   punct+[form:fslash],  
                  dig[last,first:~,rom:~,card:+].





