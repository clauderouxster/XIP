//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : localgram_npr.xip
//!   Date       : 10/02/2003
//!   Author     : Caroline Brun
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



Sequence: 


//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// *************GALATEAS

// Essex Sarah Countess of

1> noun[proper:+,person:+,mwe:+] @=  |noun[place,start] | noun+[firstname], noun[title], prep[form:fof];noun[particlename]. 

1> noun[proper:+,mwe:+,org:+] @= noun+[proper], noun[lemme:"Gallery"].

//Brickdale Eleanor Fortescue 

1> noun[proper:+,person:+,mwe:+] @=  noun[proper,guess,start];noun[celeb,proper,start,firstname:~];noun[proper,firstname:~,start,locpost:~], (noun[title]),  noun+[celeb:~,firstname,maj], (noun[particlename]) , noun[celeb,proper].

1> noun[proper:+,person:+,mwe:+] @= |noun[celeb,start], noun[lemme:"y"] |   noun[proper,guess];noun[celeb,proper,firstname:~];noun[proper,firstname:~,locpost:~], (noun+[celeb,proper]) , (noun[let,maj];noun[initial]), (noun[title]),  noun+[celeb:~,firstname,maj], (noun[particlename]) , (dig[rom,maj]), (det[lemme:"the"], nadj[lemme:"elder"];adj[lemme:"young"];noun[lemme:"Younger"])  .

2> noun[proper:+,person:+,mwe:+] @=  noun[proper,guess,start,title:~];noun[celeb,proper,start,firstname:~,title:~];noun[proper,locpre:~,firstname:~,start,title:~,locpost:~,place:~], (noun+[celeb,proper]) , (noun[let,maj];noun[initial]), (noun[title]),  noun+[celeb:~,firstname], (noun[particlename]) , (dig[rom,maj]), (det[lemme:"the"], nadj[lemme:"elder"];adj[lemme:"young"];noun[lemme:"Younger"])  .


1> noun[proper:+,person:+,mwe:+] @=  noun[proper,guess,start,title:~];noun[celeb,proper,start,firstname:~,title:~];noun[proper,firstname:~,start,locpost:~,locpre:~,title:~],(noun[let,maj];noun[initial]),  noun+[celeb:~,firstname,maj:~], (noun[particlename]) , (det[lemme:"the"], nadj[lemme:"elder"];adj[lemme:"young"];noun[lemme:"Younger"]).


1>  noun[proper:+,person:+,mwe:+] @=  | noun[lemme:"artist"] | noun[proper] , noun[lemme:"y"],  noun[proper] , punct[comma], noun+[firstname] .

1> noun[proper:+,person:+,mwe:+] @= noun[proper,guess];noun[celeb,proper];noun[fam,proper], punct[comma], noun+[firstname], (noun[particlename]) , (det[lemme:"the"], nadj[lemme:"Elder"];adj[lemme:"younger"]).  

1> noun[proper:+,person:+,mwe:+] @= noun[proper,guess];noun[celeb,proper];noun[fam,proper], punct[comma], noun+[initial] | punct[form:fopar]|.

1>  noun[proper:+,person:+,mwe:+] @= | noun[lemme:"artist"] | noun[proper,guess];noun[celeb,proper];noun[fam,proper], punct[comma], noun+[initial]. 

1>  noun[proper:+,person:+,mwe:+] @= noun[celeb,proper], noun+[let,maj].

1>  noun[proper:+,person:+,mwe:+] @= noun[maj,start,proper], noun+[let,maj].

// phone numbers

1> noun[mwe:+,phone=+] @= | noun[lemme:"tel"], (punct[lemme:":"]) | punct[form:fopar] , dig[lemme:"+%d",dec:~];dig[lemme:"+%d%d",dec:~];dig[lemme:"%d%d",dec:~] , punct[form:fcpar], dig+. 


1> noun[mwe:+,phone=+] @= dig[lemme:"+%d%d*",dec:~], dig[lemme:"%d%d+",dec:~], dig+[lemme:"%d%d+",dec:~].

1>  noun[mwe:+,phone=+] @=  punct[form:fopar], dig[lemme:"%d%d",dec:~];dig[lemme:"+%d%d*",dec:~], punct[form:fcpar], (punct[form:fhyph]) , dig+[lemme:"%d%d+",dec:~],(punct[form:fhyph]) ,  dig+[lemme:"%d%d+",dec:~].

1>  noun[mwe:+,phone=+] @= (punct[form:fopar]), dig[lemme:"+%d",dec:~];dig[lemme:"1"];dig[lemme:"+%d%d",dec:~] , (punct[form:fcpar]), dig+[lemme:"%d%d+",dec:~], (punct[form:fhyph]) , dig[lemme:"%d%d+",dec:~], dig+[lemme:"%d%d+",dec:~].


//places

1>  noun[mwe:+,place:+,address:+] @= dig, (punct[comma:+]), nadj[lemme:"chemin"];?[lemme:"rue"];noun[lemme:"Chemin"] , (noun[lemme:"de"];nadj[lemme:"du"]), noun+[proper,orghead:~,orgend:~,orgmod:~] , (dig*, noun+[place], (noun[lemme:"CEDEX"]) ).


// Quoted relation for elements between quotes, which can be on interest ???
// for example "Andy Warhol" is a Song, some context may help later 
// to determine "real"  tags ...


//1> noun[quoted:+,proper:+] @=    |?[guille:~]| ?[guille:+,proper:+];?[guille:+,punct:+],  ?*[guille], ?[guille:+,proper:+];?[guille:+,punct:+] |?[guille:~]| .

//1> noun[quoted:+,proper:+] @=    ?[guille:+,proper:+,start];?[guille:+,punct:+], ?*[guille], ?[guille:+,proper:+];?[guille:+,punct:+] |?[guille:~]| .

//1> noun[quoted:+,maj:+] @=    |?[guille:~]| ?[guille:+,maj:+];?[guille:+,punct:+],  ?*[guille], ?[guille:+,maj:+];?[guille:+,punct:+] |?[guille:~]| .

//1> noun[quoted:+,maj:+] @=    ?[guille:+,maj:+,start];?[guille:+,punct:+], ?*[guille], ?[guille:+,maj:+];?[guille:+,punct:+] |?[guille:~]| .

1> noun[quoted:+,proper:+] @=    |?[guille:~]| ?[guille:+,proper:+] |?[guille:~]| .

1> noun[quoted:+,maj:+] @=    |?[guille:~]| ?[guille:+,maj:+] |?[guille:~]| .


// Information Minister/Secretary ...

1> noun[mwe:+,features:!] = | ?[firstname:~,initial:~]| noun[proper,place:~,orghead:~,firstname:~,orgend:~];noun[maj,orgend:~,orghead:~,firstname:~,place:~,symbol:~], (adj) ,(noun[proper:~,symbol:~];adj), noun[lemme:Minister,!features:!];noun[lemme:Secretary,!features:!];noun[prof:+,!features:!,maj].

// Non-Ambiguous person names 
// not so sure :

1> noun[proper:+,mwe:+,maj:+] @= adv[lemme:"al."];noun[lemme:"al",particlename], punct[form:fhyph,left,right], noun[maj].


2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+], (dig[rom];pron[maj,lemme:I];noun[proper,maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~]),  noun+[particlename];det[lemme:an,maj,toutmaj:~], (punct[form:fhyph,left,right]), (noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,eventmod:~,firstname:~]),noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,city:~,country:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,eventmod:~,city:~,country:~];nadj[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,eventmod:~,city:~,country:~]  .


//WARNING
2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,month:~], nadj[maj,guess].


2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,month:~],noun[maj,place:~,orghead:~,address:~,guess] |?[maj:~]|.

// DANGEROUS RULE :

//2> noun[proper:+,person:+,mwe:+] @=  |?[guess:~,proper:~,punct:~,prep:~]|  noun[proper,place:~],  noun+[particlename];det[lemme:an,maj,toutmaj:~], (punct[form:fhyph,left,right]), noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~].

//2> noun[proper:+,person:+,mwe:+] @=   noun[proper,place:~,orghead:~,orgend:~],  noun+[particlename];det[lemme:an,maj,toutmaj:~], (punct[form:fhyph,left,right]), noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,place:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,place:~].

2> noun[proper:+,person:+,mwe:+] @= |?[guess:~,proper:~]| (noun[initial,maj,bus:~]) , noun+[particlename], (punct[form:fhyph,left,right]), noun[proper,guess:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,locpost:~,lawmod:~]
;noun[maj,countable:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,locpost:~,lawmod:~].

2> noun[proper:+,person:+,mwe:+] @= |?[guess:~,proper:~]| (noun[initial,maj,bus:~]) , det[lemme:an,maj,toutmaj:~], (punct[form:fhyph,left,right]), noun[proper,guess:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,locpost:~,lawmod:~].
//NEW !!!!

2> noun[proper:+,person:+,mwe:+] @=  | | noun+[particlename], (punct[form:fhyph,left,right]), ( noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,eventmod:~]),noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~];noun[maj,countable:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,eventmod:~,notinorg:~] .

//2> noun[proper:+,person:+,mwe:+] @=  |?[orghead:~]  | noun+[particlename];det[lemme:an,maj,toutmaj:~], (punct[form:fhyph,left,right]), ( noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~];noun[maj,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,eventmod:~]), noun[proper,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,place:~];noun[maj,countable:~,particlename:~,orghead:~,orgend:~,locpost:~,locpre:~,address:~,eventmod:~,notinorg:~,place:~] .

// WITH FIRSTNAME

2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,place:~,celeb:~,fam:~], (dig[rom];pron[maj,lemme:I]),  prep[form:fof], ( noun[place], conj[coord] ) , noun[place].

2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,place:~,celeb:~,fam:~], dig[rom];pron[maj,lemme:I], (noun[proper,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,locpost:~,place:~]).



2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,quoted:~,place:~,month:~], 
				   (noun+[maj,initial];adj[maj];nadj[maj,country:~];noun[let]),
				    noun*[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,firstname:~,locpre:~,address:~,onlyplace:~,eventmod:~,cr2:~,cr:~,org:~,bus:~],  
	noun[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,onlyplace:~,eventmod:~,country:~,city:~,cr:~,cr2:~,firstname:~,bus:~,vprog:~,org:~,acron:~,countable:~,phone:~,day:~,month:~];noun[proper,firstname:~,maj,fam,locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,day:~,month:~,country:~,city:~] , 
		(dig[rom,maj];pron[maj,lemme:I]) .



2>noun[person:+,mwe:+,proper:+] @= noun[firstname,quoted:~,place:~,month:~],noun*[firstname,quoted:~,place:~,month:~], (noun+[maj,initial];adj[maj];nadj[maj]), noun*[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,firstname:~,locpre:~,address:~,onlyplace:~,eventmod:~,cr2:~,cr:~,org:~,bus:~],  noun[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,onlyplace:~,eventmod:~,country:~,city:~,cr:~,cr2:~,fam,bus:~,vprog:~,org:~,acron:~,toutmaj:~,countable:~,phone:~,firstname:~] , (dig[rom];pron[maj,lemme:I]) .


2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,quoted:~,place:~,month:~,fam:~,celeb:~], (noun[maj,initial];noun[let,maj]), 	noun[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,onlyplace:~,eventmod:~,country:~,city:~,cr:~,cr2:~,bus:~,vprog:~,org:~,acron:~,countable:~,phone:~,day:~,month:~].

2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,fam:~,celeb:~], (noun[maj,initial];noun[let,maj]), noun*[locpost:~,particlename:~,maj,orghead:~,orgend:~,orgmod:~,firstname:~,locpre:~,address:~,onlyplace:~,eventmod:~,cr2:~,cr:~,org:~,bus:~],  noun[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,onlyplace:~,eventmod:~,country:~,city:~,cr:~,cr2:~,fam,bus:~,vprog:~,org:~,acron:~,toutmaj:~,countable:~,firstname:~].

 
2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,quoted:~,place:~,month:~], noun[maj,proper,fam,orghead:~,orgend:~,orgmod:~];noun[locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,onlyplace:~,eventmod:~,country:~,city:~,cr:~,cr2:~,firstname:~,bus:~,vprog:~,org:~,acron:~,toutmaj:~,maj,lawmod:~,firstname=~,verb:~,hmm_verb:~,proper], (noun[titlepost:+]) | | .


2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,quoted:~,place:~,month:~], noun[maj,proper,fam];noun[locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,onlyplace:~,eventmod:~,country:~,city:~,cr:~,cr2:~,firstname:~,bus:~,vprog:~,org:~,acron:~,toutmaj:~,maj,phone:~,lawmod:~,guess], (noun[titlepost:+]) |?[proper:~]| .

2> noun[proper:+,person:+,mwe:+] @= noun[guess,initial,bus:~], noun*[proper,orgend:~,orgmod:~,orghead:~,cr:~,cr2:~,place:~],  noun[proper,orgend:~,orgmod:~,orghead:~,cr:~,cr2:~,place:~].
 


//Henry of Guise
2> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+,place:~],  prep[form:fof] , noun[proper,orghead:~,orgend:~,orgmod:~].

2>noun[person:+,mwe:+,proper:+] @= |?[firstname:~]| noun+[initial,maj,bus:~] , noun[particlename:~,maj,guess];noun[particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,address:~,orgend:~,orgmod:~,place:~] , noun[particlename:~,maj,guess];noun[particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,address:~,orgend:~,orgmod:~,city:~,country:~,contin:~,bus:~], (dig[rom];noun[titlepost]).


2>noun[person:+,mwe:+,proper:+] @=|?[firstname:~]|  noun+[initial,maj,bus:~] , noun[cr:~,cr2:~,particlename:~,maj,guess,acron:~];noun[cr:~,cr2:~,particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,address:~,orgend:~,orgmod:~,place:~,acron:~].


2>noun[person:+,mwe:+,proper:+] @= | | noun+[initial,maj,bus:~] , noun[particlename:~,maj,guess];noun[particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,address:~,orgend:~,orgmod:~,place:~] , noun[particlename:~,maj,guess,bus:~];noun[particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,address:~,orgend:~,orgmod:~,city:~,country:~,contin:~,bus:~], (noun[titlepost:+];dig[rom:+]).


2>noun[person:+,mwe:+,proper:+] @=  noun+[initial,maj,bus:~] , noun[cr:~,cr2:~,particlename:~,maj,guess,acron:~];noun[cr:~,cr2:~,particlename:~,maj,proper,locpost:~,orghead:~,locpre:~,address:~,orgend:~,orgmod:~,bus:~,acron:~,city:~,country:~].

// to prevent ... Commonwealth of the Virginia Home page : PERSON(Virginia Home Page)
2>noun[person:+,mwe:+,proper:+] @= | ?[orgcountry:~], ? | noun+[firstname,pl:~,quoted:~,place,toutmaj:~], (noun[maj,initial,orghead:~,toutmaj:~]), noun+[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,toutmaj:~,tempexpr:~] .

2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,pl:~,quoted:~,place,toutmaj:~], (noun[maj,initial]), noun*[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,toutmaj:~,tempexpr:~],  noun[locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,toutmaj:~,tempexpr:~].


//2> noun[person:+,mwe:+,proper:+] @= noun+[firstname,pl:~,quoted:~,place:~], noun[quoted], noun+[orghead:~,orgend:~,orgmod:~,maj,locpost:~,particlename:~,locpre:~,address:~].

//For Georges pompidou and the pb of plural !
2>noun[person:+,mwe:+,proper:+] @= noun+[firstname,pl,sg,quoted:~,place:~], (noun[firstname,pl,sg,place:~]), (noun[maj,initial]),   noun+[maj,locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,countable:~].

//2>  noun[proper:+,person:+,mwe:+] @= noun+[let,maj], (punct), noun[proper,firstname:~,particlename:~,maj,locpost:~,orghead:~,locpre:~,address:~,orgend:~,orgmod:~,toutmaj:~,country:~].

// A test using professions and family links

3> noun[person:+,mwe:+,proper:+] @= | noun[prof:+,maj:~] |  noun[maj,toutmaj:~,bus:~,org:~] , noun[proper,toutmaj:~,celeb:~,orghead:~,orgend:~,orgmod:~,maj,locpost:~,particlename:~,locpre:~,address:~] .

3> noun[person:+,mwe:+,proper:+] @= | noun[prof:+] |  noun[maj,toutmaj:~,bus:~,org:~,guess] , noun[proper,toutmaj:~,orghead:~,orgend:~,orgmod:~,maj,locpost:~,particlename:~,locpre:~,address:~] .

3> noun[person:+,mwe:+,proper:+] @= | noun[famlink:+,maj:~] |  noun[proper,toutmaj:~,time:~] , noun[proper,toutmaj:~,celeb:~,orghead:~,orgend:~,orgmod:~,maj,locpost:~,particlename:~,locpre:~,address:~,time:~] .

//3> noun[person:+,mwe:+,famlink:+,proper:+] @= noun[proper,toutmaj:~] , noun[proper,toutmaj:~,celeb:~] | noun[famlink:+] |.



// Locations

// Adresses 
// 111, Wisconsin Avenue NE , Washington DC  10001

//2nd Floor

2> noun[adresspart=+] @= dig , noun[lemme:"floor"].


2> noun[adresspart=+] @= noun[lemme:"floor"], dig.

//Blcok D

2>  noun[adresspart=+]@= noun[lemme:"block"], dig.

2>  noun[adresspart=+]@= noun[lemme:"block"], noun[let]. 

2> noun[adressbox=+] @=   noun[lemme:"Po"], noun[lemme:"box"], noun[lemme:"%C%d+"], noun[lemme:"GT"].

2> noun[adressbox=+] @= noun[lemme:"Po"], noun[lemme:"box"], dig .

2> noun[adressbox=+] @= noun[lemme:"Po"], noun[lemme:"box"], noun[lemme:"%d+%+"].

2> noun[adressbox=+] @= noun[lemme:"P.O.Box"],  dig, (noun[lemme:"GT"]).

2> noun[adressbox=+] @= noun[lemme:"P.O."], noun[lemme:"box"], dig, (noun[lemme:"GT"]).

2> noun[adressbox=+] @= noun[lemme:"P.O."], noun[lemme:"box"], noun[lemme:"%d+%+"].

2> noun[adressbox=+] @= noun[lemme:"P"], noun[lemme:"O"],  noun[lemme:"box"], dig , noun[lemme:"GT"].


2> noun[proper:+,place:+,address=+,mwe=+]  @= dig, noun[city] , punct[comma:+],  noun[country] | | .

2> noun[proper:+,place:+,address=+,mwe=+]  @= dig, noun[city] , punct[comma:+],  noun[country] |?[title:~,prof:~] | .

// One capital Place
2> noun[mwe:+,place:+,address:+] @= num, nadj[maj];noun[maj], noun[lemme:"place"].

8> noun[mwe:+,place:+,address:+] = (dig), noun[lemme:"plaza"];noun[lemme:"Edificio"] , noun[proper] .

2> noun[mwe:+,place:+,address:+] @= dig,  (punct[comma:+]),  noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], punct[comma:+], noun[usastate:+], (dig)  .

2> noun[mwe:+,place:+,address:+] @= dig,  (punct[comma:+]),  noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], (punct[comma], noun[place:+]), (dig)  .

2> noun[mwe:+,place:+,address:+] @=  noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], punct[comma:+], noun[usastate:+], (dig)  .

2> noun[mwe:+,place:+,address:+] @= dig, (nadj[lemme:"upper"]), (nadj[lemme:"grand"]),  noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], (dig).

2> noun[mwe:+,place:+,address:+] @= (nadj[modloc]),  noun+[proper,address:~], (dig[ord]), noun[locpost:+,address:+], (?[lemme:NE];?[lemme:SE];?[lemme:NW];?[lemme:SW]), (punct[comma:+]), noun[city:+], (dig).

2> noun[mwe:+,place:+,address:+] @= dig,  (punct[comma:+]),  noun+[proper,address:~], noun[address:+].

//152 West 57 Street
2> noun[mwe:+,place:+,address:+] @= dig, noun[modloc] , dig[ord], noun[locpost,address].

3>  noun[mwe:+,place:+,address:+] = (noun[modloc]), noun+[proper,address:~,person:~,bus:~,orgend:~,orgmod:~,orghead:~,place:~], noun[address:+].

3>  noun[mwe:+,place:+,address:+] =  |det;prep | num[ord];dig[ord],  noun[locpost,address].



//2>  noun[mwe:+,place:+,address:+] @= noun+[proper,address:~,person:~], noun[address:+].
  
// Walker House

2> noun[proper:+,place:+,mwe:+,org=+] = (nadj[lemme:"grand"]), noun[proper];noun[maj], noun[lemme:"house",vprog:~].


// The Russian village of Barenstburg

2>noun[proper:+,place:+,mwe:+]@=  (adj[country];nadj[country]), noun[locpost], prep[form:fof],  noun[place:+];noun[guess:+,propag=+].

2>noun[proper:+,place:+,mwe:+,city:+] @= |det[def], (?[adj:+,country:~]) , (adj[country];nadj[country]) , noun[lemme:city];noun[lemme:town];noun[lemme:island];noun[lemme:village],  prep[form:fof] | noun[guess,maj], noun+[guess,maj].


2> noun[proper:+,place:+,mwe:+]@=    noun[lemme:state], prep[form:fof], noun[place:+].


//2>noun[proper:+,place:+,mwe:+] @= (adj[country];nadj[country]) , noun[lemme:city];noun[lemme:town];noun[lemme:island];noun[lemme:village],  prep[form:fof] , noun[place:+];noun[guess,propag=+].

// Federal Republic of Germany

//German Republic

2>  noun[proper:+,place:+,mwe:+,country:+]  @= nadj[country];adj[country], (nadj[maj];adj[maj]), noun[orgcountry].

2> noun[proper:+,country:+,place:+,mwe:+]  @= (nadj[maj,guess:~];adj[maj,guess:~]),  noun[orgcountry], prep[form:fof], noun[proper,country].

2> noun[proper:+,place:+,mwe:+,features:!]  @=  (nadj[maj,guess:~];adj[maj,guess:~]),  noun[orgcountry], prep[form:fof],(det[def]),  noun[proper,place,!features:!].



// Some modifiers like Greater London

2> noun [proper:+,city:+,place:+,mwe:+] @= adj[maj], noun[city].
                   
//Lower Saxony

2> noun[proper:+,place:+,mwe:+,features:!] @= ?[lemme:Lower];?[lemme:lower];?[lemme:upper];?[lemme:middle], noun[place:+,!features:!].


// Southern Africa, South of Andalusia
2> noun[proper:+,place:+,features:!,mwe:+] @= (nadj[country:+]), ?[modloc:+],  noun[place:+,!features:!].

2> noun[proper=+,place=+,features:!,mwe=+] @=  ?[modloc:+], prep[form:fof], noun[place:+,!features:!].

3> noun[proper=+,place=+,city=+,notinorg=+] @= noun[city:+,ambig=~], punct[comma:+], noun[usastate:+,city:~].

//other cases : (?)
3> noun[proper:+,mwe:+,place:+,features:!] @= noun[place:+,!features:!,usastate:~,city:~,country:~], punct[comma:+], noun[usastate:+].

// Canari Islands; Grimsburry Castle

3> noun[place:+,mwe:+] @=  adj[maj];nadj[maj];noun[place,mwe:~] , noun[proper,firstname:~,month:~], (nadj;adj), noun[locpost:+].

3> noun[place:+,mwe:+] @=  adj[maj];nadj[maj];noun[place,mwe:~] , noun[maj,firstname:~,month:~], (nadj;adj),noun[locpost:+].

//10> noun[place:+,mwe:+] @=   noun[proper,firstname:~,month:~];noun[maj,firstname:~,month:~] , (part),(nadj;adj), noun[locpost:+].

10> noun[place:+,mwe:+] @=   (noun[proper,celeb:~,firstname:~,month:~,title:~,place:~]), noun[proper,firstname:~,month:~,title:~,celeb:~];noun[proper,place] , (part),(nadj;adj), noun[locpost:+].

3> noun[place:+,mwe:+] @=   nadj[maj,cardpoint] ,  noun[locpost:+].



// Victoria Land ????
3> noun[place:+,mwe:+] @=   noun[maj,firstname,ambig], (nadj;adj),noun[locpost:+].


// Iberian Peninsula 
3> noun[place:+,org:!]  @= (nadj[modloc];adj[modloc];noun[lemme:"sub"]), (punct[form:fhyph]) , nadj[country:+];adj[country:+], noun[locpost:+];noun[country,!org:!];noun[contin,!org:!].

//Hui Sui Road : Several (2 for the moment ?) nouns/adj allowed when they are NOT places : previous rule for places


// Camp David ; Rio Grande
3>  noun[place:+] @=  noun[locpre:+];noun[lemme:River], (noun[lemme:"de"]), noun[proper,orghead:~,orgend:~,orgmod:~] .
10>  noun[place:+] @=   noun[locpre:+];noun[lemme:River], noun[proper,person].
// Territory of the US.
3> noun[proper:+,place:+,mwe:+] @= noun[locpost:+], prep[form:fof], (det[def]),  noun[place];noun[place].

// TEST

4> noun[proper:+,place:+,mwe:+]  @= | prep[form:fbetween], (det[def]), noun[proper,place],  conj[coord], (det[def]) |  noun[maj,org:~].

4> noun[proper:+,place:+,mwe:+]  @= | prep[form:fbetween], (det[def])  | noun*[maj], noun[maj,org:~] | conj[coord], (det[def]), noun[proper,place] |.

//4> noun[proper:+,place:+,mwe:+,bus:+,city:+]  @= noun[city] , punct[comma:+],  noun[country].


//London's Victoria Station 


//5> noun[place:+,mwe:+] @= noun[country];noun[city], part, noun[proper,let:~,pl:~,firstname:~];adj[maj];nadj[maj], (noun[proper,let:~,pl:~];adj[maj];nadj[maj]),(noun[proper,let:~,pl:~,firstname:~];adj[maj];nadj[maj]),   noun[locpost:+].
5>  noun[proper:+,place:+,mwe:+,!bus,!org] @= noun[country];noun[city],  part, noun[place:+,city:~.country:~,!bus:!,!org:!].



//8>  noun[proper:+,title:+,person:+] @= noun[place],  ?[title:+].
//WARNING

9> noun[proper:+,person:+,mwe:+,title:+] @=  (nadj[country];noun[country,toutmaj:~]), ?+[title:+];?[hmm_tit:+], noun*[lawmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,org:~], (noun[maj,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,org:~]), noun[maj,proper,period:~,eventmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,org:~] |verb;punct| .

9> noun[proper:+,person:+,mwe:+,title:+] @=  (nadj[country];noun[country,toutmaj:~];noun[city,toutmaj:~]), (adj[maj,start:~,c_person:~];nadj[maj,start:~,c_person:~]), ?+[title:+,titlepost:~];?[hmm_tit:+,titlepost:~], noun*[lawmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,org:~], (noun[maj,period:~,eventmod:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~,org:~]), noun[lawmod:~,proper,locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,org:~,ambig:~,wordpart:~,period:~,eventmod:~,tempexpr:~,title:~];noun[lawmod:~,maj,title:~,locpost:~,particlename:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,org:~,ambig:~,wordpart:~,period:~,eventmod:~,tempexpr:~] , (dig[rom,maj]) .

//9> noun[proper:+,person:+,mwe:+,title:+] = noun+[title],   noun[person]. 

9> noun[proper:+,person:+,mwe:+,title:+] @= (nadj[country]), (adj[maj];nadj[maj]), ?+[title:+,toutmaj:~];?+[hmm_tit:+,toutmaj:~],  noun[person].

// Context to avoid Mr James Molyneux, Mr Trimble  --> PERS(Mr James Molyneux, Mr)
//9>  noun[proper:+,person:+,mwe:+,title:+] @= noun[person],  (punct[comma:+]), noun[title];noun[abr,hmm_tit] |?[noun:+,maj:~];?[noun:~]| .

10>  noun[proper:+,person:+,mwe:+,title:+] @= (nadj[country];noun[country]), (adj[maj]), ?[title:+,toutmaj:~,mwe:~];?[hmm_tit:+,toutmaj:~],  noun[person];noun[celeb].


//In case the person has'nt be detected before ;

10>  noun[proper:+,person:+,mwe:+,title:+] @= (adj[maj]),  ?[title:+,toutmaj:~];?[hmm_tit:+,toutmaj:~], (noun*[maj,place:~]), noun[fam,maj,org:~,countable:~];noun[firstname,maj].
//inverted nouns 
//Smith, Christoper Henry
10> noun[proper:+,person:+,mwe:+] @= noun[maj,proper,orgend:~,orghead:~,orgmod:~,place:~,bus:~,org:~,tempexpr:~], punct[comma], noun+[firstname:+,month:~] , (noun[initial]), (noun[particlename]) | |.


10> noun[proper:+,person:+,mwe:+] @= noun[maj,proper,orgend:~,orghead:~,orgmod:~,place:~,bus:~,org:~,tempexpr:~], punct[comma], noun+[firstname:+,month:~] , (noun[initial]), (noun[particlename]) | ?[maj:~,coord:~] |.

//WARNING !!!
//2> noun[proper:+,person:+,mwe:+] @=  noun+[firstname:+,place:~,ambig:~], (noun[maj,initial];noun[maj,let]) ,  noun+[maj,toutmaj:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,locpost:~,eventmod:~,firstname:~].

11> noun[proper:+,person:+,mwe:+] @= noun+[firstname:+], noun[maj,initial],  noun[proper,toutmaj:~,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,locpost:~,eventmod:~,place:~,bus:~].


11> noun[proper:+,person:+,mwe:+] @=  noun+[firstname:+,place:~], noun[maj,initial], noun[proper] | noun[proper:~] |.

11> noun[proper:+,person:+,mwe:+] @=  noun+[firstname:+,place:~], noun[maj,initial] .



//10>  noun[proper:+,person:+,mwe:+,title:+] @= (adj[maj]), ?[title:+];?[hmm_tit:+,toutmaj:~], prep[form:fof],  noun[place].

//10>  noun[proper:+,person:+,mwe:+,title:+] @= (adj[maj]), ?[title:+];?[hmm_tit:+,toutmaj:~,famlink:~], prep[form:fof],  noun[maj,place:~,bus:~].


//10>  noun[proper:+,person:+,mwe:+] @= noun[proper,orgcountry:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~], (noun[proper,orgcountry:~,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~]) , noun[celeb].



// Mr. A. G. Smith

// Normally Street should be St: need to do it in desamb 
// could be a person or a location, like St Louis

//10> noun[proper:+,person:+,mwe:+] = (nadj[country]), (adj[maj];nadj[maj]), noun[title,toutmaj:~], noun[proper,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~];noun[maj,locpost:~,particlename:~,proper,orghead:~,orgend:~,orgmod:~,locpre:~,address:~,place:~].

// St Patrick the Divine, Charles the Great

11> noun[proper:+,person:+,mwe:+] = noun[firstname,country:~], det[def], adj;nadj;noun[maj,bus:~,org:~].

// Ambassador Abdallah Baali of Algeria

11> noun[proper:+,person:+,mwe:+,title:+] @= noun[proper:+,person:+,mwe:+,title:+],  prep[form:fof], noun[place] |?[noun:~]| .

//12> noun[proper:+,person:+] @=  (adj[maj]), ?[title:+];?[hmm_tit:+], prep[form:fof],  noun[place].

// VIKEF BIBLIO

//11>  noun[proper:+,person:+,mwe:+,title:+] = noun[maj];noun[proper], punct[comma], noun[maj,initial]. 

// 
11> noun[proper:+,person:+,mwe:+]@= noun[person], (punct[comma]), noun[titlepost].




// Sequences of firstnames 

11> noun[proper:+,person:+,mwe:+]@= noun[firstname], noun+[firstname] | |.

11> noun[proper:+,person:+,mwe:+]@= noun[firstname], noun+[firstname] | ?[maj:~] |.

//William Brice Stadium
11> noun[proper:+,mwe:+,place=+] @= noun[person,mwe];noun[firstname], noun[locpost,maj].

// TEST 

11> noun[proper:+,person:+,mwe:+]@= noun[person], noun[lemme:"de"], noun[city].

//====================== Proper Nouns Grouping ========================================

IDrules:
 


// One or more proper nouns, followed by a comma, followed by a usastate:+
// eg Atlantic City, N.J.

//15> noun[proper:+,city:+] -> noun[proper:+], (noun[proper:+])*, punct[comma:+], noun[usastate:+].


// At least 2 proper nouns, maybe more at the end of a clause.
// CAUTION WITH THE FOLLOWING EXAMPLE "He told Mary John was sick
// or "He told Mary John Doe was sick
//30> noun[proper:+] -> noun[proper:+], noun+[proper:+] .


// A title followed by one or more proper nouns
//20> noun[proper:+] -> noun[title], noun[proper:+], (noun[proper:+])*.


// A city name a particle and a proper noun makes a proper noun
// e.g. London's Docklands Light Railways
//20> noun[proper:+] -> noun[proper:+,city:+], part, adj*, noun[proper] .



// A Proper noun followed by a digit is a proper noun
// eg. Skynet 4 CB ATTENTION A L'ORDRE !!!
//20> noun[proper:+] -> noun[proper:+,period:~,place:~,firstname:~], dig .


//CB : A test with tagging rules 
Tagging:

//when using context and in case of only one name to avoid a double noun tree

21> noun[maj:+,firstname:~,fam:~,person:~,guess:+]  %= |noun[lemme:town];noun[lemme:city], prep[form:fof] |  noun[maj=+,city=+,place=+,propag=+] .



21>  noun[proper:+,guess:+] %= | noun[lemme:resident], prep[form:fof] |  noun[proper:+,place:+,propag:+] .

21>  noun[proper,toutmaj:~,celeb:~,bus:~,org:~,maj:+] %= | noun[prof:+,maj:~] | noun[person:+,mwe:+,propag:+,proper:+,maj:+] | | .

21>  noun[proper,toutmaj:~,celeb:~,bus:~,org:~,maj:+] %= | noun[prof:+,maj:~] | noun[person:+,mwe:+,propag:+,proper:+,maj:+] | ?[orgend:~]| . 

21>  noun[proper,time:~,toutmaj:~,celeb:~,misc:~,bus:~,org:~] %= | noun[famlink:+,maj:~] | noun[person:+,mwe:+,propag:+,proper:+].

21>  noun[proper,toutmaj:~,celeb:~,misc:~,bus:~,org:~] %= noun[person:+,mwe:+,propag:+,proper:+]  | noun[famlink:+,maj:~] |.


21>  noun[proper,toutmaj:~,celeb:~,bus:~,org:~] %= noun[person:+,mwe:+,propag:+,proper:+]  |  (punct[comma:+]) , noun[lemme:"et_al."] |.


21> noun[proper:+,guess:+] %=  |nadj[prepers:+]| noun[person:+,mwe:+,propag:+,proper:+].

22>  noun[proper:+,guess:+] %= |noun[lemme:town];noun[lemme:city], prep[form:fof] , noun[city:+] , punct[comma] | noun[proper:+,place:+,mwe:+,org:+,city:+,propag:+] |conj |.

23>  noun[proper:+,guess:+] %= |noun[lemme:town];noun[lemme:city], prep[form:fof] , (noun[city:+] , punct[comma]) , noun[city:+], conj | noun[proper=+,place=+,mwe=+,org=+,city=+,propag=+] .


//23 >  noun<proper:+> = | noun{noun[title:+],noun[proper:+]} , conj | noun[proper=+,person=+].
