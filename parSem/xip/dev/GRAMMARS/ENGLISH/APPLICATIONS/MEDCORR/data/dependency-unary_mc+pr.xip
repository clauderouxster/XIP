//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2006 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : english grammar for political risk detection
//!   filename   : dependency-unary_pr.xip
//!   Date       : October 2006
//!   Author     : Aude Rebotier, Ágnes Sándor
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// This file creates the dependencies necessary to the programm colorPR.sh :
// 1. unary dependencies (with french names) are used for highlighting
// 2. TABLEAU is necessary to build a table


Variables:
string lemmenoyau;
string lemmeactor;
string lemmetarget;
string actortype;

DependencyRules:

//1. Creation of unary dependencies, that are used for highlighting
// règle qui sert uniquement lorsque le trait topic est étendu à tous les événements retenus (en cas de filtrage, pour que tous les événements soient surlignés avec leurs coordonnées). Pour éviter les chevauchement de surlignage, on choisit de garder l'événement le plus emboîté.

if ( ^EVENT[topic](#1,#2,#3,#4,#5,#6,#7) & EVENT[topic](#11,#12,#13,#14,#15,#16,#17) & CORE-DRIVE(#3,#13))
	~

| #3[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4,#5,#6,#7) )
	NOYAU[factual=+](#3).

| #4[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4[fictivenode:~],#5,#6,#7) )
	AGENT[factual=+](#4).

| #5[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4,#5[fictivenode:~],#6,#7) )
	CIBLE[factual=+](#5).

| #6[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4,#5,#6[fictivenode:~],#7) )
	LIEU[factual=+](#6).

| #7[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4,#5,#6,#7[fictivenode:~]) )
	TEMPS[factual=+](#7).

| #1[factual=+] |
if ( EVENT[factual](#1[fictivenode:~],#2,#3,#4,#5,#6,#7) )
	SOURCE[factual=+](#1).


| #10[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4[fictivenode],#5,#6,#7) & COORDINATE[actor](#3,#10[fictivenode:~]))
	AGENT[factual=+](#10).

| #10[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4,#5[fictivenode],#6,#7) & COORDINATE[target](#3,#10[fictivenode:~]) )
	CIBLE[factual=+](#10).

| #10[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4,#5,#6[fictivenode],#7)  & COORDINATE[loc-pr](#3,#10[fictivenode:~]))
	LIEU[factual=+](#10).

| #10[factual=+] |
if ( EVENT[factual](#1,#2,#3,#4,#5,#6,#7[fictivenode])  & COORDINATE[time](#3,#10[fictivenode:~]) )
	TEMPS[factual=+](#10).

| #10[factual=+] |
if ( EVENT[factual](#1[fictivenode],#2,#3,#4,#5,#6,#7)   & SRC[factual](#3,#10[fictivenode:~]))
	SOURCE[factual=+](#10).



if ( NOYAU[factual](#1) & EXT(#1,#2) )
	EXTENSION[factual=+](#1,#2). 

if ( EVENT[factual,information](#1,#2,#3,#4,#5,#6,#7) )
	NOYAU[information=+](#3).

if ( EVENT[topic](#1,#2,#3,#4,#5,#6,#7) )
	NOYAU[topic=+](#3).

if ( EVENT[topic](#1,#2,#3,#4[fictivenode:~],#5,#6,#7) )
	AGENT[topic=+](#4).

if ( EVENT[topic](#1,#2,#3,#4,#5[fictivenode:~],#6,#7) )
	CIBLE[topic=+](#5).

if ( EVENT[topic](#1,#2,#3,#4,#5,#6[fictivenode:~],#7) )
	LIEU[topic=+](#6).

if ( EVENT[topic](#1,#2,#3,#4,#5,#6,#7[fictivenode:~]) )
	TEMPS[topic=+](#7).

if ( EVENT[topic](#1[fictivenode:~],#2,#3,#4,#5,#6,#7) )
	SOURCE[topic=+](#1).

if ( EVENT[topic](#1,#2,#3,#4[fictivenode],#5,#6,#7) & COORDINATE[actor](#3,#10[fictivenode:~]))
	AGENT[topic=+](#10).

if ( EVENT[topic](#1,#2,#3,#4,#5[fictivenode],#6,#7) & COORDINATE[target](#3,#10[fictivenode:~]) )
	CIBLE[topic=+](#10).

if ( EVENT[topic](#1,#2,#3,#4,#5,#6[fictivenode],#7)  & COORDINATE[loc-pr](#3,#10[fictivenode:~]))
	LIEU[topic=+](#10).

if ( EVENT[topic](#1,#2,#3,#4,#5,#6,#7[fictivenode])  & COORDINATE[time](#3,#10[fictivenode:~]) )
	TEMPS[topic=+](#10).

if ( EVENT[topic](#1[fictivenode],#2,#3,#4,#5,#6,#7)   & SRC(#3,#10[fictivenode:~]))
	SOURCE[topic=+](#10).

if ( NOYAU[topic](#1) & EXT(#1,#2) )
	EXTENSION[topic=+](#1,#2).


// amélioration de l'affichage pour les extensions

if ( ^EXTENSION[topic](#5,#1) & HEAD2(#1,#2) & ~PREPD(#1,#3) )
	EXTENSION(#5,#2).

if ( ^EXTENSION[factual](#5,#1) & HEAD2(#1,#2) & ~PREPD(#1,#3) )
	EXTENSION(#5,#2).

if ( ^EXTENSION(#5,#1) & HEAD2(#1,#2[prep]) & PREPD(#1,#3) )
	EXTENSION(#5,#2).


//talks on training (on training n'est pas un chunk)
if ( ARGUMENT[ext](#1,#2) & PREPD(#2,#3) & ~HEAD2(#2,?[prep]) & (EXTENSION[topic](#1,#2) | HEAD2(#2,#4) & EXTENSION[topic](#1,#4)) )
	EXTENSION[topic=+](#1,#3)

if ( ARGUMENT[ext](#1,#2) & PREPD(#2,#3) & ~HEAD2(#2,?[prep]) & (EXTENSION[factual](#1,#2) | HEAD2(#2,#4) & EXTENSION[factual](#1,#4)) )
	EXTENSION[factual=+](#1,#3)

|#3{#1[first],#2[last]}|
if (^EXTENSION(#5,#1) & EXTENSION(#5,#2))
	EXTENSION(#5,#3)

|#1{?*,#2}|
if (EXTENSION(#5,#1) & ^EXTENSION(#5,#2))
	~

if (^EXTENSION(#5,#1) & PREPD(#1,#2) & HEAD2(#1,#3))
	EXTENSION(#5,#3)

//on prend tout le chunk pour le noyau
if (^NOYAU[topic](#1) & HEAD2(#1,#2))
	NOYAU(#2)

if (^NOYAU[information](#1) & HEAD2(#1,#2))
	NOYAU(#2)





//conflits entre les dépendances unaires
if (EXTENSION[topic](?,#1) & ^LIEU[topic](#1) & ARGUMENT[obj](#1) & ~LOCORG(#1) & ~LOCATION(#1))
	~

if (LIEU[topic](#1) & ^CIBLE[topic](#1))
	~

if (EXTENSION[factual](?,#1) & ^LIEU[factual](#1) & ARGUMENT[obj](#1) & ~LOCORG(#1) & ~LOCATION(#1))
	~

if (LIEU[factual](#1) & ^CIBLE[factual](#1))
	~


// 2. création de la dépendance TABLEAU (sélectionne les événements qui doivent apparaître dans le tableau)
//cette dépendance contient 10 éléments obligatoires qui correspondent aux 10 premiers arguments :
//(factualité, source, driver, noyau, acteur, type de l'acteur, cible, type de la cible, lieu, date) 
// et un nombre indéterminé d'éléments facultatifs (les extensions)


// traitement préparatoire : ajout des type des EN acteur ou cible
if (COORDINATE[actor](#1,#2) & (NETYPE(#2,#3) | HEAD2(#4,#2) & NETYPE(#4,#3)) & ~COORDINATE-WITH-TYPE[actor](#1,#2,?) & actortype=#2[surface]+" \["+#3[lemme]+"\]" )
	COORDINATE-WITH-TYPE[actor=+](#1,#2, ##noun[lemme=actortype])

if (COORDINATE[actor](#1,#2[fictivenode:~]) & ~COORDINATE-WITH-TYPE[actor](#1,#2,?))
	COORDINATE-WITH-TYPE[actor=+](#1,#2,#2)

if (COORDINATE[target](#1,#2) & (NETYPE(#2,#3) | (HEAD2(#4,#2) & NETYPE(#4,#3))) & ~COORDINATE-WITH-TYPE[target](#1,#2,?) & actortype=#2[surface]+" \["+#3[lemme]+"\]" )
	COORDINATE-WITH-TYPE[target=+](#1,#2, ##noun[lemme=actortype])


if (COORDINATE[target](#1,#2[fictivenode:~]) & ~COORDINATE-WITH-TYPE[target](#1,#2,?))
	COORDINATE-WITH-TYPE[target=+](#1,#2,#2)


//groupement des coordonnées de même type dans une seule dépendance
if (COORDINATE-WITH-TYPE[actor](#1,#2,#12) & COORDINATE-WITH-TYPE[actor](#1,#3,#13) & COORDINATE-WITH-TYPE[actor](#1,#4,#14) & COORDINATE-WITH-TYPE[actor](#1,#5,#15)  & ~DONE[actor](#1,#2) & ~DONE[actor](#1,#3) & ~DONE[actor](#1,#4)  & ~DONE[actor](#1,#5) & #2<#3 & #3<#4 & #4<#5 & lemme1=#12[lemme]+"; "+#13[lemme]+"; "+#14[lemme]+"; "+#15[lemme])
	COORDINATE-WITH-TYPE[actor=+, merged=+](#1,##noun[lemme=lemme1]), DONE[actor=+](#1,#2), DONE[actor=+](#1,#3), DONE[actor=+](#1,#4), DONE[actor=+](#1,#5)

if (COORDINATE-WITH-TYPE[actor](#1,#2,#12) & COORDINATE-WITH-TYPE[actor](#1,#3,#13) & COORDINATE-WITH-TYPE[actor](#1,#4,#14)  & ~DONE[actor](#1,#2) & ~DONE[actor](#1,#3) & ~DONE[actor](#1,#4)  & #2<#3 & #3<#4 & lemme1=#12[lemme]+"; "+#13[lemme]+"; "+#14[lemme])
	COORDINATE-WITH-TYPE[actor=+](#1,##noun[lemme=lemme1]), DONE[actor=+](#1,#2), DONE[actor=+](#1,#3), DONE[actor=+](#1,#4)

if (COORDINATE-WITH-TYPE[actor](#1,#2,#12) & COORDINATE-WITH-TYPE[actor](#1,#3,#13) & ~DONE[actor](#1,#2) & ~DONE[actor](#1,#3)  & #2<#3 & lemme1=#12[lemme]+"; "+#13[lemme])
	COORDINATE-WITH-TYPE[actor=+](#1,##noun[lemme=lemme1]), DONE[actor=+](#1,#2), DONE[actor=+](#1,#3)


if (COORDINATE-WITH-TYPE[target](#1,#2,#12) & COORDINATE-WITH-TYPE[target](#1,#3,#13) & COORDINATE-WITH-TYPE[target](#1,#4,#14) & COORDINATE-WITH-TYPE[target](#1,#5,#15)  & ~DONE[target](#1,#2) & ~DONE[target](#1,#3) & ~DONE[target](#1,#4)  & ~DONE[target](#1,#5) & #2<#3 & #3<#4 & #4<#5 & lemme1=#12[lemme]+"; "+#13[lemme]+"; "+#14[lemme]+"; "+#15[lemme])
	COORDINATE-WITH-TYPE[target=+, merged=+](#1,##noun[lemme=lemme1]), DONE[target=+](#1,#2), DONE[target=+](#1,#3), DONE[target=+](#1,#4), DONE[target=+](#1,#5)

if (COORDINATE-WITH-TYPE[target](#1,#2,#12) & COORDINATE-WITH-TYPE[target](#1,#3,#13) & COORDINATE-WITH-TYPE[target](#1,#4,#14)  & ~DONE[target](#1,#2) & ~DONE[target](#1,#3) & ~DONE[target](#1,#4)  & #2<#3 & #3<#4 & lemme1=#12[lemme]+"; "+#13[lemme]+"; "+#14[lemme])
	COORDINATE-WITH-TYPE[target=+](#1,##noun[lemme=lemme1]), DONE[target=+](#1,#2), DONE[target=+](#1,#3), DONE[target=+](#1,#4)

if (COORDINATE-WITH-TYPE[target](#1,#2,#12) & COORDINATE-WITH-TYPE[target](#1,#3,#13) & ~DONE[target](#1,#2) & #2<#3 & ~DONE[target](#1,#3) & lemme1=#12[lemme]+"; "+#13[lemme])
	COORDINATE-WITH-TYPE[target=+](#1,##noun[lemme=lemme1]), DONE[target=+](#1,#2), DONE[target=+](#1,#3)



if (SRC[factual](#1,#2) & SRC[factual](#1,#3) & SRC[factual](#1,#4) & SRC[factual](#1,#5)  & ~DONE[factual](#1,#2) & ~DONE[factual](#1,#3) & ~DONE[factual](#1,#4)  & ~DONE[factual](#1,#5) & #2<#3 & #3<#4 & #4<#5 & lemme1=#2[lemme]+"; "+#3[lemme]+"; "+#4[lemme]+"; "+#5[lemme])
	SRC[factual=+, merged=+](#1,##noun[lemme=lemme1]), DONE[factual=+](#1,#2), DONE[factual=+](#1,#3), DONE[factual=+](#1,#4), DONE[factual=+](#1,#5)

if (SRC[factual](#1,#2) & SRC[factual](#1,#3) & SRC[factual](#1,#4)  & ~DONE[factual](#1,#2) & ~DONE[factual](#1,#3) & ~DONE[factual](#1,#4)  & #2<#3 & #3<#4 & lemme1=#2[lemme]+"; "+#3[lemme]+"; "+#4[lemme])
	SRC[factual=+](#1,##noun[lemme=lemme1]), DONE[factual=+](#1,#2), DONE[factual=+](#1,#3), DONE[factual=+](#1,#4)

if (SRC[factual](#1,#2) & SRC[factual](#1,#3) & ~DONE[factual](#1,#2) & ~DONE[factual](#1,#3)  & #2<#3 & lemme1=#2[lemme]+"; "+#3[lemme])
	SRC[factual=+](#1,##noun[lemme=lemme1]), DONE[factual=+](#1,#2), DONE[factual=+](#1,#3)


if (COORDINATE-WITH-TYPE[loc-pr](#1,#2) & COORDINATE-WITH-TYPE[loc-pr](#1,#3) & COORDINATE-WITH-TYPE[loc-pr](#1,#4) & COORDINATE-WITH-TYPE[loc-pr](#1,#5)  & ~DONE[loc-pr](#1,#2) & ~DONE[loc-pr](#1,#3) & ~DONE[loc-pr](#1,#4)  & ~DONE[loc-pr](#1,#5) & #2<#3 & #3<#4 & #4<#5 & lemme1=#2[lemme]+"; "+#3[lemme]+"; "+#4[lemme]+"; "+#5[lemme])
	COORDINATE-WITH-TYPE[loc-pr=+, merged=+](#1,##noun[lemme=lemme1]), DONE[loc-pr=+](#1,#2), DONE[loc-pr=+](#1,#3), DONE[loc-pr=+](#1,#4), DONE[loc-pr=+](#1,#5)

if (COORDINATE-WITH-TYPE[loc-pr](#1,#2) & COORDINATE-WITH-TYPE[loc-pr](#1,#3) & COORDINATE-WITH-TYPE[loc-pr](#1,#4)  & ~DONE[loc-pr](#1,#2) & ~DONE[loc-pr](#1,#3) & ~DONE[loc-pr](#1,#4)  & #2<#3 & #3<#4 & lemme1=#2[lemme]+"; "+#3[lemme]+"; "+#4[lemme])
	COORDINATE-WITH-TYPE[loc-pr=+](#1,##noun[lemme=lemme1]), DONE[loc-pr=+](#1,#2), DONE[loc-pr=+](#1,#3), DONE[loc-pr=+](#1,#4)

if (COORDINATE-WITH-TYPE[loc-pr](#1,#2) & COORDINATE-WITH-TYPE[loc-pr](#1,#3) & ~DONE[loc-pr](#1,#2) & ~DONE[loc-pr](#1,#3)  & #2<#3 & lemme1=#2[lemme]+"; "+#3[lemme])
	COORDINATE-WITH-TYPE[loc-pr=+](#1,##noun[lemme=lemme1]), DONE[loc-pr=+](#1,#2), DONE[loc-pr=+](#1,#3)

//on ramène toutes les COORDINATE-WITH-TYPE à trois arguments
if (^COORDINATE-WITH-TYPE(#1,#2))
	COORDINATE-WITH-TYPE(#1,#2,#2)


// on marque les COORDINATE-WITH-TYPE qui seront utiles pour construire les TABLEAU
if (^COORDINATE-WITH-TYPE[actor](#1,#2, #3) & ~DONE[actor](#1,#2))
	COORDINATE-WITH-TYPE[unique=+](#1,#3)

if (^COORDINATE-WITH-TYPE[target](#1,#2,#3) & ~DONE[target](#1,#2))
	COORDINATE-WITH-TYPE[unique=+](#1,#3)

if (^COORDINATE-WITH-TYPE[loc-pr](#1,#3) & ~DONE[loc-pr](#1,#2))
	COORDINATE-WITH-TYPE[unique=+](#1,#3)



if (^SRC[factual](#1,#2) & ~DONE[factual](#1,#2))
	SRC[unique=+](#1,#2)

if (^SRC[counter-factual](#1,#2) & ~DONE[counter-factual](#1,#2))
	SRC[unique=+](#1,#2)

if (^SRC[possible](#1,#2) & ~DONE[possible](#1,#2))
	SRC[unique=+](#1,#2)


if (^DONE(#1,#2))
	~



//1)éléments obligatoires
//if (EVENT[topic,factual](#1,#2,#3,#4,#5,#6,#7) & lemmenoyau=#3[lemme])
//	TABLEAU[topic=+, factual=+](##noun[lemme="F"],#1,#2,##noun[lemme=lemmenoyau],#4,#5,#6,#7)
		
//if (EVENT[topic,factual:~](#1,#2,#3,#4,#5,#6,#7) & lemmenoyau=#3[lemme])
//	TABLEAU[topic=+](##noun[lemme="NF"],#1,#2,##noun[lemme=lemmenoyau],#4,#5,#6,#7)		

//if (EVENT[factual, topic:~](#1,#2,#3,#4,#5,#6,#7) & lemmenoyau=#3[lemme])
//	TABLEAU[factual=+](##noun[lemme="F"],#1,#2,##noun[lemme=lemmenoyau],#4,#5,#6,#7)

//if (EVENT[information](#1,#2,#3,#4,#5,#6,#7,#8) & ^TABLEAU(#9,#1,#2,#3,#4,#5,#6,#7) & lemmenoyau=#3[lemme])
//	TABLEAU[information=+](#9,#1,#2,##noun[lemme=lemmenoyau],#4,#5,#6,#7)

//si on veut garder comme noyau la forme fléchie
if (EVENT[topic,factual](#1,#2,#3,#4,#5,#6,#7))
	TABLEAU[topic=+, factual=+](##noun[lemme="F"],#1,#2,#3,#4,#5,#6,#7)
		
if (EVENT[topic,factual:~](#1,#2,#3,#4,#5,#6,#7))
	TABLEAU[topic=+](##noun[lemme="NF"],#1,#2,#3,#4,#5,#6,#7)		

if (EVENT[factual, topic:~](#1,#2,#3,#4,#5,#6,#7))
	TABLEAU[factual=+](##noun[lemme="F"],#1,#2,#3,#4,#5,#6,#7)

if (EVENT[information](#1,#2,#3,#4,#5,#6,#7,#8) & ^TABLEAU(#9,#1,#2,#3,#4,#5,#6,#7))
	TABLEAU[information=+](#9,#1,#2,#3,#4,#5,#6,#7)



// ajout du type des EN sur le lemme
if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7) & COORDINATE-WITH-TYPE[actor, unique](#3,#11))
	TABLEAU(#20,#1,#2,#3,#11,#5,#6,#7)


if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7) & COORDINATE-WITH-TYPE[target, unique](#3,#11))
	TABLEAU(#20,#1,#2,#3,#4,#11,#6,#7)




//2) extensions (0 à 2)
if (^TABLEAU[topic](#20,#1,#2,#3,#4,#5,#6,#7) & EXTENSION[topic](#3,#10))
	TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#10)

if (^TABLEAU[topic](#20,#1,#2,#3,#4,#5,#6,#7,#10) & EXTENSION[topic](#3,#11) & (#10<#11 | #11<#10))
	TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#10,#11)

if (^TABLEAU[factual, topic:~](#20,#1,#2,#3,#4,#5,#6,#7) & EXTENSION[factual](#3,#10))
	TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#10)

if (^TABLEAU[factual, topic:~](#20,#1,#2,#3,#4,#5,#6,#7,#10) & EXTENSION[factual](#3,#11) & (#11<#10 | #10<#11))
	TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#10,#11)


if (^EXTENSION[factual](?,#1))
	EXTENSION(#1)

if (^EXTENSION[topic](?,#1))
	EXTENSION(#1)


//3) source et date du texte (uniquement quand on analyse un fichier xml)


if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8,#9) & INFOSOURCE(#21) & INFODATE(#22))
	TABLEAU(#21,#22,#20,#1,#2,#3,#4,#5,#6,#7,#8,#9)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8,#9) & ~INFOSOURCE(?) & INFODATE(#22))
	TABLEAU(##noun[lemme="-"],#22,#20,#1,#2,#3,#4,#5,#6,#7,#8,#9)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8,#9) & INFOSOURCE(#21) & ~INFODATE(?))
	TABLEAU(#21,##noun[lemme="-"],#20,#1,#2,#3,#4,#5,#6,#7,#8,#9)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8,#9) & ~INFOSOURCE(?) & ~INFODATE(?))
	TABLEAU(##noun[lemme="-"],##noun[lemme="-"],#20,#1,#2,#3,#4,#5,#6,#7,#8,#9)



if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8) & INFOSOURCE(#21) & INFODATE(#22))
	TABLEAU(#21,#22,#20,#1,#2,#3,#4,#5,#6,#7,#8)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8) & INFOSOURCE(#21) & ~INFODATE(?))
	TABLEAU(#21,##noun[lemme="-"],#20,#1,#2,#3,#4,#5,#6,#7,#8)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8) & ~INFOSOURCE(?) & INFODATE(#22))
	TABLEAU(##noun[lemme="-"],#22,#20,#1,#2,#3,#4,#5,#6,#7,#8)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7,#8) & ~INFOSOURCE(?) & ~INFODATE(?))
	TABLEAU(##noun[lemme="-"],##noun[lemme="-"],#20,#1,#2,#3,#4,#5,#6,#7,#8)


if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7) & INFOSOURCE(#21) & INFODATE(#22))
	TABLEAU(#21,#22,#20,#1,#2,#3,#4,#5,#6,#7)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7) & INFOSOURCE(#21) & ~INFODATE(?))
	TABLEAU(#21,##noun[lemme="-"],#20,#1,#2,#3,#4,#5,#6,#7)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7) & ~INFOSOURCE(?) & INFODATE(#22))
	TABLEAU(##noun[lemme="-"],#22,#20,#1,#2,#3,#4,#5,#6,#7)

if (^TABLEAU(#20,#1,#2,#3,#4,#5,#6,#7) & ~INFOSOURCE(?) & ~INFODATE(?))
	TABLEAU(##noun[lemme="-"],##noun[lemme="-"],#20,#1,#2,#3,#4,#5,#6,#7)


/
// 3. affichage pour Goldminer - ces dépendances ont servi pour l'agora (mars 2007).
if (COORDINATE[target](#1,#2))
	COORDINATE_TARGET(#1,#2)

if (COORDINATE[actor](#1,#2))
	COORDINATE_ACTOR(#1,#2)


if (COORDINATE[loc-pr](#1,#2))
	COORDINATE_LOC_PR(#1,#2)


if (COORDINATE[time](#1,#2))
	COORDINATE_TIME(#1,#2)
\
/
if ( SRC(#1,#2) )
   SRC(#1).
\


