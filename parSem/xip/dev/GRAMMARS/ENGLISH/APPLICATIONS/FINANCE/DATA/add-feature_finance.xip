Tagging:

//words

// Nicholas complex

1> ?[firstname] = ?[firstname=~] | ?[lemme:complex] | .

// Grant Date

1> ?<lemme:Grant> = ?[firstname=~] | ?[lemme:date] | .

// PowerShares Actively Managed Exchange-Traded Fund Trust

1> ?<lemme:manage,past,maj> = | ?[lemme:actively,maj] | adj .

// Loisdale court: address:+,locpost:+

1> ?<lemme:court> = | dig, ?[proper] | ?[address=+, orghead=~, locpost=+].

//1555 N. River Center Drive

1> ?<lemme:drive,maj> = | ?[maj] | noun[address=+, locpost=+].

// 1818 Market Street, Suite 2400

1> ?<lemme:market,maj> = ?[time_span_n=~,proper=+] | ?[address:+] | .

//4 Copley Place

1> ?<lemme:place,maj> = | ?[proper] | ?[address=+,hmm_verb=~,verb=~].

//750 Third Avenue
//NUM(4-9)+[maj:+,ord:+,num:+,hmmselection:+,first:+]
//    Third(4-9)+[maj:+,ord:+,num:+,hmmselection:+,first:+]
//DIG(4-7)+[day:+,ord:+,dig:+,hmmselection:+]
//     3rd(4-7)-[day:+,ord:+,dig:+,hmmselection:+]

1> ?[ord,maj] = ?[proper=+] | ?[address:+] | .


// Karen Dunn Kelley is not recognized as one person name, because "Kelley" is als a firstname. Whenever a firstname comes after a firstname and a family nam, we delete the firstname feature

1> ?[firstname] = | ?[firstname], ?[fam,proper,maj] | ?[firstname=~] .

// Roman is a firstname

1> ?<lemme:Roman> = ?[firstname] | (?[initial]), ?[proper] | .


//Dr. Matina S. Horner is not recognized as one person name, because "Matina" has the features location:+,city:+,place:+

1> ? = | ?[title] | ?[firstname=+,org=~,place=~] | ?[initial], ?[proper] | .

// Organisations that finish with an IndustryClassification word will not be IndustryClassification

1> ? = | ?[fam] | ?[IndustryClassification=~] .

1> ? = | ?[guess] | ?[IndustryClassification=~] .

// orgends

1> ?<lemme:BV> = noun[orgend=+].  // bureau virtuel

1> ?<lemme:B\.V\.> = noun[orgend=+].  // bureau virtuel

1> ?<lemme:Congo> = ?[curr=~].

1> ?[curr] = ?[currency=+].

1> ?[currency,symbol:~] = ?[currencies=+,invtype=+,MiscellaneousCharacteristics=+].

1> ?<lemme:currency> = ?[currencies=+,invtype=+,MiscellaneousCharacteristics=+].

1> ?<lemme:Loc> = ?[proper=~].


//1> ?<lemme:8> = ?

1> ?<lemme:Saint> = ?[title=~].

//usazipcode: only after usastate

1> ?[usazipcode] = | ?[usastate:~,abr:~] | ?[usazipcode=~] .

1> ?<lemme:Private> = ?[title=~].

1> ?<lemme:Financial> = ?[firstname=~].

///////////////////////////////// 1 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

// maj and proper without words that are not parts of organisation names [noorgpart]

1> ?[noorgpart:~,maj] = | ?[title:~] | ?[!majfororg=+].

1> ?[noorgpart:~,maj,start] = ?[!majfororg=+] | ?[maj] | .

//1> ?[noorgpart:~,proper] = ?[properfororg=+].

// elimination of orghead and orgend after noorgpart 

1> ?[orghead] = | ?[noorgpart] | ?[orghead=~] .

1> ?[orgend] = | ?[noorgpart] | ?[orgend=~] .

1> ?<lemme:care> = | ?[lemme:health] | noun[verb=~,hmm_verb=~] .

1> ?<lemme:staple> = | ?[lemme:consumer] | noun .

1> ?<lemme:clear> = ?[verb=~,hmm_verb=~] | ?[lemme:corporation] | .

1> ?<lemme:fund,maj> = noun[verb=~,hmm_verb=~].

1> ?<lemme:stock> = noun[verb=~,hmm_verb=~].

1> ?<lemme:cost> = noun[verb=~,hmm_verb=~] .

1> ?<lemme:advantage,maj> = noun[verb=~,hmm_verb=~] .

//1> ?<lemme:cost> = noun[verb=~,hmm_verb=~] | punct | .

//1> ?<lemme:cost> = | ?[lemme:identify] | noun[verb=~,hmm_verb=~] .

1> ?<lemme:service> = noun[verb=~,hmm_verb=~] .

1> ?<lemme:bank> = noun[verb=~,hmm_verb=~] .

1> ?<lemme:broker> = noun[verb=~,hmm_verb=~] .

1> ?<lemme:line> = noun[verb=~,hmm_verb=~] .

1> ?<lemme:fee> = noun[verb=~,hmm_verb=~].

1> ?<lemme:Fee> = noun[verb=~,hmm_verb=~].

1> ?<lemme:FEE> = noun[verb=~,hmm_verb=~].

1> ?<lemme:market> = noun[verb=~,hmm_verb=~].

1> ?<lemme:deposit,maj> = noun[verb=~,hmm_verb=~].

1> ?<lemme:drink> = noun[verb=~,hmm_verb=~].

11> ?<lemme:trust> = noun[verb=~,hmm_verb=~].

1> ?<lemme:trustee> = noun[verb=~,hmm_verb=~].

1> ?<lemme:anchor> = noun[verb=~,hmm_verb=~].

1> ?<lemme:rise> = verb.

1> ?<lemme:identify> = adj | ?[lemme:cost] |.

1> ?<lemme:house,vprog> = noun.

1> ?<lemme:purchase,partpas> = | ?[lemme:option] | adj.

1> ?<lemme:lend,vprog> = noun.

1> ?<lemme:manage,partpas> = adj | ?[lemme:commodity] | .

1> ?<lemme:retail,vprog> = noun.

1> ?<lemme:limit,partpas,end> = adj.

1> ?<lemme:limit,partpas,maj> = adj.

1> ?<lemme:limit,partpas> = adj | punct| .

1> ?<lemme:guarantee,partpas,end> = adj.

1> ?<lemme:guarantee,partpas,maj> = adj.

1> ?<lemme:guarantee,partpas> = adj | punct| .

1> ?<lemme:drive,partpas,end> = adj.

1> ?<lemme:drive,partpas,maj> = adj.

1> ?<lemme:drive,partpas> = adj | punct| .

1> ?<lemme:Escrow,partpas> = adj .

1> ?<lemme:appropriate,partpas> = adj .

1> ?<lemme:manufacture,vprog> = noun .

1> ?<lemme:process,vprog> = noun .

1> ?<lemme:shop,vprog> = noun .

//Davis Selected Avisers LLP

1> ?<lemme:select,past> = adj | ?[lemme:adviser] |.

// Smithfield, RI[usastate,abr] location:+,city:+,place:+,proper:+

1> ?[start,maj] =  ?[location=+,city=+,place=+,proper=+] | ?[comma], ?[usastate], (dig+) | .

// percolate sg and pl so that rules containing plural hold for compounds

1> noun[pl,last] = noun[!pl=+]. 

1> noun[sg,last] = noun[!sg=+]. 


// ... - continued marks the end of an indicator, mark the last word before continued

1> ? = ?[!endword=+] | (punct), ?[lemme:continued,end] | .

1> ? = ?[!endword=+] | (punct), ?[lemme:continue,end] | .

1> ? = ?[!endword=+] | (punct), punct[paren], ?[lemme:continued], punct[end] | .

1> ? = ?[!endword=+] | (punct), punct[paren], ?[lemme:continue], punct[end] | .

//cont'd

1> ? = ?[!endword=+] | (punct), punct[paren], ?[lemme:cont\.], ?[lemme:would], punct[end] | .

1> ? = ?[!endword=+] | (punct), ?[lemme:continued], punct[end] | .

1> ? = ?[!endword=+] | (punct), ?[lemme:continue], punct[end] | .

1> ? = ?[!endword=+] | (punct), ?[lemme:cont\.], ?[lemme:would], punct[end] | .

// Independent Directors 1 (concluded)

1> ? = ?[!endword=+] | (punct), ?[lemme:concluded,end] | .

1> ? = ?[!endword=+] | (punct), ?[lemme:conclude,end] | .

1> ? = ?[!endword=+] | (punct), punct[paren], ?[lemme:concluded], punct[end] | .

1> ? = ?[!endword=+] | (punct), punct[paren], ?[lemme:conclude], punct[end] | .

/////////////////////////////// 2 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\
// ):[_interj]

1> ? = ?[!endword=+] | punct[paren], ?[lemme:continued], interj[end] | .

1> ? = ?[!endword=+] | punct[paren], ?[lemme:continue], interj[end] | .

1> ? = ?[!endword=+] | punct[paren], ?[lemme:cont\.], ?[lemme:would], interj[end] | .


// mark the last word of a sentence before a colon

//1> ? = ?[!endword=+] | ?[form:fcolon,end] |.

1> ? = ?[!endword=+] | punct[end] |.

1> ? = ?[!endword=+] | punct, punct[end] |.

// mark the last word of a sentence before a reference number 

1> ? = ?[!endword=+] | dig[percent:~,date:~,year:~,money:~], punct[end] |.

1> ? = ?[!endword=+] | dig[end,percent:~,date:~,year:~,money:~] |.

1> ? = ?[!endword=+] | (punct), ?[paren], ?[dig,percent:~,money:~], ?[paren,end] | .

1> ? = ?[!endword=+] | (punct), ?[paren], ?[let], ?[paren,end] | .

1> ? = ?[!endword=+] | (punct), ?[paren], ?[indef], ?[paren,end] | .

1> ? = ?[!endword=+] | punct, ?[dig,percent:~,end] | .

1> ? = ?[!endword=+] | punct, ?[let,end] | .

1> ? = ?[!endword=+] | punct, ?[indef,end] | .

// mark the last word of a sentence before ):

1> ? = ?[!endword=+] | interj[end] |.

// mark the last word of a sentence before unaudited

1> ? = ?[!endword=+] | ?[lemme:unaudited] | . 

1> ? = ?[!endword=+] | ?[paren], ?[lemme:unaudited], ?[paren] | . 

// _end is also _endword 

1> ?[end] =  ?[!endword=+].

1> punct[endword] = punct[endword=~].

// cont and unaudited are never endword

1> ?[cont,endword] = ?[endword=~].

1> ?<lemme:unaudited,endword> = ?[endword=~].

//Officers who are not Directors

1> ?<lemme:officer,start> = ?[officer=+,posit=~] | ?[lemme:who], ?[lemme:be], ?[lemme:not], ?[lemme:director,endword] |.

// Director Since 

1> ?[trustfunction] = ?[tenureind=+] | ?[lemme:since] | .

1> ?<lemme:since> = | ?[trustfunction,tenureind] | ?[tenureind=+] .

// Year First

1> ?<lemme:year,start> = ?[tenureind=+] | ?[lemme:First,endword] |.

//// Date Service Began

1> ?<lemme:date> = ?[tenureind=+,length=~] | ?[lemme:service,service=~], ?[lemme:begin] |.


// words

1> ?<lemme:set> = ?[indicate=+,md=+] | ?<lemme:forth> | .

// words that are not verbs in the corpus, are not hmm_verb
1> verb;noun<noverb> = noun[verb=~,hmm_verb=~].


//interested board member: if a past participle begins a sentence, it is not a verb, but an adjective
1> adj,verb<past,start> = adj.

// in "the Company" Company - is not a company name

1> ?<lemme:company> = | det[def] | ?[orghead=~].

// BUSINESS DEVELOPMENT CORPORATIONS - is not a company name

1> ?<lemme:corporation,pl> =  ?[orghead=~].

// BUSINESS DEVELOPMENT CORPORATIONS - is not a company name

// inside director
1> prep,nadj,adv<lemme:inside> = nadj | ?[trustfunction] |.

// not interested
1> ?[interested] = | ?[lemme:not] | ?[interested=~,uninterested=+].

//investment_advisor

1> ?<lemme:advisor,maj> = | ?[paren] | ?[investment_advisor=+] | ?[paren] | .

1> ?<lemme:adviser,maj> = | ?[paren] | ?[investment_advisor=+] | ?[paren] | .

1> ?<lemme:adviser,maj,start,end> = ?[investment_advisor=+] .

1> ?<lemme:advisor,maj,start,end> = ?[investment_advisor=+] .

1> ?<lemme:adviser,maj> = | ~prep, det | ?[investment_advisor=+] .

1> ?<lemme:advisor,maj> = | ~prep, det | ?[investment_advisor=+] .

1> ?<lemme:subadviser,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .
////////////////////////////////// 3 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
1> ?<lemme:subadvisor,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadviser,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisor,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisers,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisors,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisers,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisors,maj> = | ~prep, det | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:adviser,maj> = | det[start] | ?[investment_advisor=+] .

1> ?<lemme:advisor,maj> = | det[start] | ?[investment_advisor=+] .

1> ?<lemme:subadviser,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisor,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadviser,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisor,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisers,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisors,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisers,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisors,maj> = | det[start] | ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadviser,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisor,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadviser,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisor,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisers,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:subadvisors,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisers,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

1> ?<lemme:Subadvisors,maj,start,endword> = ?[investment_advisor=+,sub_advisor=+] .

// exception for Advisor
// the Adviser's ADV." | ./txtparse

1> ?[investment_advisor] = ?[investment_advisor=~] | ?[lemme:'s], ?[lemme:ADV] |.

//legal counsel

1> ?<lemme:counsel,start,endword> = ?[legal_counsel=+,posit=~,functionaltitle=~] .

//distributor

1> ?<lemme:distributor,start> = ?[distributor=+] | ?[comma] | .

1> ?<lemme:distributor,maj,endword> = | ?[comma] | ?[distributor=+] .

1> ?<lemme:distributor,maj,endword> = | ?[lemme:and] | ?[distributor=+] .

1> ?<lemme:distributor,start,endword> = ?[distributor=+] .

1> ?<lemme:distributor,maj> = | det | ?[distributor=+] .

1> ?<lemme:distributor,maj,start> = ?[distributor=+] | verb | .

// administrator

1> ?<lemme:administrator,start> = ?[administrator=+] | ?[comma] | .

1> ?<lemme:administrator,maj,endword> = | ?[comma] | ?[administrator=+] .

1> ?<lemme:administrator,maj,endword> = | ?[lemme:and] | ?[administrator=+] .

1> ?<lemme:administrator,start,endword> = ?[administrator=+] .

1> ?<lemme:administrator,maj> = | ?[lemme:fund,maj] | ?[administrator=+] .

1> ?<lemme:administrator,maj> = | det | ?[administrator=+] .

1> ?<lemme:administrator,maj,start> = ?[administrator=+] | verb | .


// underwriter and distributor

1> ?<lemme:distributor> = | ?[service_provider], ?[coord] | ?[distributor=+] .

//transfer agent

// the Fund's transfer

1> ?<lemme:transfer> = | det[def], ?[fund], ?[lemme:'s] | ?[transfer_agent=+] .

// Funds as orgend

1> ?<lemme:fund,maj,pl> = | ?[proper] | ?[orgend=+].
//////////////////////////////////// 4 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
// Advisors as orgend

1> ?<lemme:advisor,maj,pl> = | ?[proper] | ?[orgend=+].

1> ?<lemme:adviser,maj,pl> = | ?[proper] | ?[orgend=+].

// common feature for service providers

//1> ?[legal_counsel] = ?[service_provider=+].

1> ?[investment_advisor] = ?[service_provider=+].

1> ?[administrator] = ?[service_provider=+].

1> ?[distributor] = ?[service_provider=+].

1> ?[independent_auditor] = ?[service_provider=+].

1> ?[transfer_agent] = ?[service_provider=+].

1> ?[custodian] = ?[service_provider=+].

// body

//member of the Trustees

2> ?<lemme:trustee,pl> = | ?[lemme:member], ?[lemme:of], ?[lemme:the] | ?[body=+,trustfunction=~,posit=~].

// posit

2> ?<lemme:chair> = ?[posit=+] | ?[lemme:of] |.


// invtypeword - for invention types

//1> noun[orgend:~] = noun[!invtypeword=+].
//1> nadj[orgend:~] = nadj[!invtypeword=+].
//1> adj[orgend:~] = adj[!invtypeword=+].
1> noun = ?[!invtypeword=+].
1> nadj = ?[!invtypeword=+].
1> adj = ?[!invtypeword=+].
1> ?[orgend,pl] = ?[!invtypeword=+]. // Real Estate Investment Trusts 
1> ?[orgend] = ?[!invtypeword=+] | ?[maj] | . // Diversified Telecommunication Services
1> punct = ?[!invtypeword=+] | ?[invtypeword,punct:~] | .
1> conj = ?[invtypeword=+].
1> punct[comma] = ?[invtypeword=+].
1> prep = ?[!invtypeword=+].

