parser p(_current+"english-domain-json.grm");

vector results;
int sent;
svector listfeats=["AWAPARA","CONTRIBUTION","CONTRAST","EMPH",
     "VIS","NOSTAT","STATKNOW","ATTITUDE","CHANGE",
     "GROW","OLDSTAT","WEAKCONTR","IMPORTANCE","SURPRISE"
];

function incremente() {
     sent++;
}

function stock(dependency d) {
     ssmap feats=d.features();
     string key;
     svector keeps;
     primemap res;
     bool awapara=false;
     string depname=d.name();
     
     if (depname in ["IMPSENT","IMPSUMMARY","SUMMARY","TITLE"]) {
          keeps.push(depname);
          depname="SENT";
     }

     for (key in listfeats) {
          if (feats.test(key)==true) {
               if (key=="AWAPARA")
                    awapara=true;
               keeps.push(key);
          }
     }

     //     printlnerr(keeps,feats);

     if (results.size()>0 and results[-1]["id"]==sent) {
          if (results[-1]["AWAPARA"]==false and awapara==true)
               results[-1]["AWAPARA"]=true;

          if (results[-1].test(depname)) {
               results[-1][depname].push(d.parameters()[0].surface());
               results[-1][depname+"_F"].push(keeps);
          }
          else {
               results[-1][depname]=[d.parameters()[0].surface()];
               results[-1][depname+"_F"]=[keeps];
          }
     }
     else {
          res["id"]=sent;
          res["AWAPARA"]=awapara;
          res["md"]=[];
          res[depname]=[d.parameters()[0].surface()];
          res[depname+"_F"]=[keeps];
          results.push(res);
     }
}

function addtheword(node n) {
     if (results.size()>0 and results[-1]["id"]==sent) {
          results[-1]["md"].push(n.surface());
     }
     else {
          primemap res;
          res["id"]=sent;
          res["AWAPARA"]=false;
          res["md"]=[n.surface()];
          results.push(res);
     }
}


string rule = @"
Script:

incremente();

if (TITLE$1(#1) | SENT$1(#1) | IMPSENT$1(#1) | SUMMARY$1(#1) | IMPSUMMARY$1(#1) | ORGANISATION$1(#1) | LOCATION$1(#1) | LOCORG$1(#1) | PERSON$1(#1) | AUTHOR$1(#1) | CONCEPT$1[IMPSENT](#1)) {
     stock($1);
}

|#1[MD]| {
     addtheword(#1);
}


"@;

p.addendum(rule,true);

//string phrase="We propose the design and implementation of effective Social Learning Analytics (SLA) present significant challenges.";
//p.parse(phrase);

int nb;
p.parsexml(_args[0],0,nb);

println(results.json());


