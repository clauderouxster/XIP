DependencyRules:


// These rules delete highlighting in certain sentences in legal documents

// sentences containing just 1 KSWDEP, which contains _CONTR:+ and also containing legal words should not be highlighted

//This intentional, defiant conduct in court proceedings exhibits a main risk posed to the opposing counsel as they are limited in their ability to fairly and adequately address all claims.
//KSWDEP_VIS(address_MD:+,limited_MD:+)

| #3[legal] |
if ( @_xtd.legaldoc->Test() & ^KSWDEP(#1[contr],#2) )
    LIXO(#1,#2).

| #3[legal] |
if ( @_xtd.legaldoc->Test() & ^KSWDEP(#1,#2[contr]) )
    LIXO(#1,#2).

if ( @_xtd.legaldoc->Test() & ^LIXO(#1,#2) & KSWDEP(#3,#4) & #1~:#3 )
    KSWDEP(#1,#2).

if ( @_xtd.legaldoc->Test() & IMPSENT(#1) & LIXO(#2,#3) )
    SENT(#1).

| #2[md=~] |
if ( @_xtd.legaldoc->Test() & IMPSENT(#1) & SENT(#1) )
    ~.

if ( @_xtd.legaldoc->Test() & IMPSUMMARY(#1) & LIXO(#2,#3) )
    SUMMARY[contribution=+](#1).

| #2[md=~] |
if ( @_xtd.legaldoc->Test() & IMPSUMMARY(#1) & SUMMARY(#1) )
    ~.

if ( @_xtd.legaldoc->Test() & ^IMPSUMMARY(#1) & SUMMARY(#1) )
    ~.

if ( @_xtd.legaldoc->Test() & ^IMPSENT(#1) & SENT(#1) )
    ~.

if ( @_xtd.legaldoc->Test() & ^LIXO(#1,#2) )
    KSWDEP(#1,#2).


// If an IMPSENT only has NOVSTAT or TEMPSTAT / OLD / STATKNOW, these features are not relevant and the IMPSENT is SENT

if ( @_xtd.legaldoc->Test() & IMPSENT[novstat,contrast:~,emph:~,nostat:~,attitude:~,change:~,grow:~,importance:~,surprise:~,contr:~](#1) )
   SENT[novstat=+](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSENT[novstat](#1) & SENT[novstat](#1) )
   ~.

if ( @_xtd.legaldoc->Test() & ^SENT[novstat](#1) )
   SENT[novstat=~](#1).

if ( @_xtd.legaldoc->Test() & IMPSENT[statknow,contrast:~,emph:~,nostat:~,attitude:~,change:~,grow:~,importance:~,surprise:~,contr:~](#1) )
   SENT[statknow=+](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSENT[statknow](#1) & SENT[statknow](#1) )
   ~.

if ( @_xtd.legaldoc->Test() & ^SENT[statknow](#1) )
   SENT[statknow=~](#1).

if ( @_xtd.legaldoc->Test() & IMPSENT[tempstat,contrast:~,emph:~,nostat:~,attitude:~,change:~,grow:~,importance:~,surprise:~,contr:~](#1) )
   SENT[tempstat=+](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSENT[tempstat](#1) & SENT[tempstat](#1) )
   ~.

if ( @_xtd.legaldoc->Test() & ^SENT[tempstat](#1) )
   SENT[tempstat=~](#1).

if ( @_xtd.legaldoc->Test() & IMPSENT[old,contrast:~,emph:~,nostat:~,attitude:~,change:~,grow:~,importance:~,surprise:~,contr:~](#1) )
   SENT[old=+](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSENT[old](#1) & SENT[old](#1) )
   ~.

if ( @_xtd.legaldoc->Test() & ^SENT[old](#1) )
   SENT[old=~](#1).


// the md's should be deleted

| #1[md=~] |
if ( SENT(#2) )
   ~.

// NOVSTAT or TEMPSTAT / OLD / STATKNOW should be eliminated in IMPSENT

if ( @_xtd.legaldoc->Test() & ^IMPSENT[old](#1) )
   IMPSENT[old=~](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSENT[statknow](#1) )
   IMPSENT[statknow=~](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSENT[tempstat](#1) )
   IMPSENT[tempstat=~](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSENT[novstat](#1) )
   IMPSENT[novstat=~](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSUMMARY[old](#1) )
   IMPSUMMARY[old=~](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSUMMARY[statknow](#1) )
   IMPSUMMARY[statknow=~](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSUMMARY[tempstat](#1) )
   IMPSUMMARY[tempstat=~](#1).

if ( @_xtd.legaldoc->Test() & ^IMPSUMMARY[novstat](#1) )
   IMPSUMMARY[novstat=~](#1).



///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////

//For local testing only:
/
| #3[legal] |
if ( ^KSWDEP(#1[contr],#2) & ~LIXO(?,?) )
    LIXO(#1,#2).

| #3[legal] |
if ( ^KSWDEP(#1,#2[contr]) & ~LIXO(?,?) )
    LIXO(#1,#2).

if ( ^LIXO(#1,#2) & KSWDEP(#3,#4) & #1~:#3 )
    KSWDEP(#1,#2).

if ( IMPSENT(#1) & LIXO(#2,#3) )
    SENT(#1).

| #2[md=~] |
if ( IMPSENT(#1) & SENT(#1) )
    ~.

if ( IMPSUMMARY(#1) & LIXO(#2,#3) )
    SUMMARY[contribution=+](#1).

| #2[md=~] |
if ( IMPSUMMARY(#1) & SUMMARY(#1) )
    ~.


if ( ^IMPSUMMARY(#1) & SUMMARY(#1) )
    ~.

if ( ^IMPSENT(#1) & SENT(#1) )
    ~.

if ( ^LIXO(#1,#2) )
    KSWDEP(#1,#2).
\
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


if ( SENT(#1) & CONCEPT(#2) )
    LIXO[impsent=+](#2).

if ( SENT(#1) & CONCEPT(#2,#3) )
    LIXO[impsent=+](#2,#3).

if ( SENT(#1) & CONCEPT(#2,#3,#4) )
    LIXO[impsent=+](#2,#3,#4).


if ( SENT(#1) & CONCEPT(#2,#3,#4,#5) )
    LIXO[impsent=+](#2,#3,#4,#5).

if ( SENT(#1) & CONCEPT(#2,#3,#4,#5,#6) )
    LIXO[impsent=+](#2,#3,#4,#5,#6).


if ( ^LIXO[impsent](#1) )
    CONCEPT[impsent=~](#1).

if ( ^LIXO[impsent](#1,#2) )
    CONCEPT[impsent=~](#1,#2).

if ( ^LIXO[impsent](#1,#2,#3) )
    CONCEPT[impsent=~](#1,#2,#3).

if ( ^LIXO[impsent](#1,#2,#3,#4) )
    CONCEPT[impsent=~](#1,#2,#3,#4).

if ( ^LIXO[impsent](#1,#2,#3,#4,#5) )
    CONCEPT[impsent=~](#1,#2,#3,#4,#5).

////////

if ( SENT(#1) & ^CONCEPT[impsent](#2) )
    ~.

if ( SENT(#1) & ^CONCEPT[impsent](#2,#3) )
    ~.

if ( SENT(#1) & ^CONCEPT[impsent](#2,#3,#4) )
    ~.


if ( SENT(#1) & ^CONCEPT[impsent](#2,#3,#4,#5) )
    ~.

if ( SENT(#1) & ^CONCEPT[impsent](#2,#3,#4,#5,#6) )
    ~.
