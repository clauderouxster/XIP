//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : lexicon.xip
//!   Date       : 10/02/2003
//!   Author     : Caroline Hagege
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



Vocabulary:


// *********** Treatment of the quotes (treated as markups) ****************** //



\"  <>*= [guille=+].


/marking compound words\
=+ += [compend:+].


// XT Demonstrative determiners
this  : det += [det_dem=+].
these : det += [det_dem=+].
that  : det += [det_dem=+].


/ASSIGNMENT OF UNIQUE FEATURES TO INDIVIDUAL LEMMATA\
/====================================================\

// CH
// Deleting the feature coord:+ to the lemma "than"
than += [coord=~,form=fthan].


// CH
// Adding a feature [time:+] to the adverbs "late" and "early" and to adjective

early += [time:+].
late += [time:+].
recently += [time:+].
lately += [time:+].


// CH
// Adding a feature ftwice to the word "twice"
twice += [form:ftwice].




// CH, March 2002
// Adding a feature form:pronthing to the words "anything", "everything" and "nothing"
// (for better disambiguation)
anything += [form:pronthing] .
everything += [form:pronthing] .
nothing += [form:pronthing].


// CH, March 2002
// Adding the feature fwill on the word "will"
will += [form:fwill].
want += [form:fwant].

// CH, March 2002
// Adding the feature fcan on the word "can"
can += [form:fcan].


// Adding the feature fsuch on the word such
such += [form:fsuch].

// CH, 4th Feb.
// Adding the feature fmore on the word "more"
more += [form:fmore].


if += [form:fif].

// CH, 8th Jan.
// Adding the feature fpercent on the "word" "per cent" which is coded as a noun
percent += [percent:+].
per_cent += [percent:+]. //CB : idem for the multiword



// CH, 14th November
// Adding the feature fsince on the word "since" (can be conj or prep)
since += [form:fsince].




// CH 05th November
// Adding the feature fduring to the preposition during
during += [form:fduring, sc_pduring:+].



// CH 12th October
// Adding a feature cardpoint:+ to the words North South East West.
// They are tagged as noun (proper or common) which can be a probleme in the chunking of NP's
// e.g. The massive North Korean complex is analyzed as 2 nominal chunks where North is the nucleus 
// of the first one
North += [cardpoint:+].
north += [cardpoint:+].
South += [cardpoint:+].
south += [cardpoint:+].
West += [cardpoint:+].
west += [cardpoint:+].
East += [cardpoint:+].
east += [cardpoint:+].



// CH July 02
// Adding a feature fmake to the lemma "make"
make += [form:fmake].

// CH 7th November
// Adding a feature fsaid to the lemma "said" 
said += [form:fsaid].



// CH 24th October
// Adding a feature ftake to the forms of the verb take
take += [form:ftake].

// CH 24th October
// Adding a feature fplace to the form place in singular
place += [form:fplace].

// CH 8th October
// Adding feature form:fborn to "born" that is just taken as an adjective
born += [form:fborn].


// CH 24th September
// Adding the feature numer:+ to nouns like thousand, dozen, hundred ...
thousand += [numer:+].
hundred += [numer:+].
dozen += [numer:+].

// CH
// nouns that quantifies
number += [numer:+].
plenty += [numer:+].
bit += [numer:+].


// CH 14th September
// Adding a feature prefix:+ to some prefixes
anti += [prefix:+].
post += [prefix:+].
semi += [prefix:+].
non += [prefix:+].
pro += [prefix:+].
under += [prefix:+].
over += [prefix:+].
re += [prefix:+].
beta += [prefix:+].
ex += [prefix:+].
co += [prefix:+].




// CH 29th August
one += [form:fone, numer:+].

none += [numer:+,negat:+].




// CH 16th August
// To change all the wh-words in the lexicon.
// All where, when, are added the feature wh
// note: how is already categorized as adverb with feature wh.
where = adv[adv=+, wh=+, form=fwhere].
when = adv[adv=+, wh=+, form=fwhen].
why = adv[adv=+, wh=+, form=fwhy].
wherein = adv[adv=+, wh=+, form=fwherein].


// CH 19th September
// Adding a feature wh to the lemma wether

whether = conj[conj=+, wh=+, form=fwhether].



// CH 16th August
// Adding a feature fwhat to the lemma what
what += [form=fwhat].


// CH 15th October
// Adding a feature fwhich and wh to the lemma which
which += [form=fwhich, wh=+].


// CH 3rd August
// It is useless to try to disambiguate WH- words. So who will always be tagged as pron [wh:+, nom:+]
// Only in a later stage it will be possible to decide wether WHO is an interrogative pronoun or relative pronoun. To change in the lexicon.
// The first and 2nd  one corresponds to "whose"
// The 3nd one corresponds to one of the output of whom
// The 4th one correspondes to the other output of whom
// The 5th one to one of the output of who
// The  6th to the other output of who
whose: pron[gen:+] = pron[wh:+,form:fwho,gen:+] .
who : pron[gen:+] = pron[wh:+,form:fwho,gen:+].
who : pron[wh:+,obl:+] = pron[wh:+,form:fwho,obl:+].
whom = pron[wh:+,obl:+,form:fwho].
who : pron[rel:+] = pron[wh:+,form:fwho,obl:+,nom:+].
who : pron[wh:+,nom:+] = pron[wh:+,form:fwho,obl:+,nom:+].

she += [fem=+].
he  += [masc:+].
they += [pl:+].

// CH . Adding a special feature numerable:+ to words like "chapter", "line", "page".
// In order to deal properly things like "Chapter 2"
chapter : noun[noun:+] += [numerable:+].
page : noun[noun:+] += [numerable:+].
line : noun[noun:+] += [numerable:+].

// CH 6th Auguts
// Considering "no" as a quantifier in order to be coherent with some, any. 
no = quant[quant=+,form=fno].

// CH
// Several as a quantifier
several = quant[quant=+].

// CH 29th October
// Adding feature form:fso to the lemma "so"
so += [form:fso].


// Adding the feature flater to the lemma "late" form "later"
late : adv[compar:+] += [form=flater]. 

/"There" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the morpho-analyzer????\
/Agnes to change HMM tagger to include "There" as a pronoun\
/there does NOT agree with the verb so MAY NOT be the subject at all!\

there : adv[adv:+] += [form=fthere].

it : pron[pron:+] += [form=fit].

/Agnes to modify HMM tagger to ensure "but" is assigned the tag +Coord when\
/it is followed by a verb "He was happy but was tired"\
// CH adding a feature fbut to each form of but
but += [form=fbut].


/Shouldn't "do" be analysed as an auxiliary verb in the morpho-analyzer??\
/do : verb[verb:+] += [verb=+,aux=+].\
do : verb[verb:+] += [form=fdo].

/The feature "auxbh" is used for the verbs "be" and "have" whereas "fhave" is only used for the verb "have"\
have : verb += [auxbh=+,form=fhave].


/The feature "auxbh" is used for the verbs "be" and "have" whereas "fbe" is only used for the verb "be"\
be : verb += [auxbh=+,cop=+,form=fbe].


/CH Adding a "cop" feature to the copulative verbs, in order to be able to extract the predicative dependencies\
become : verb[verb:+] += [cop=+].
seem : verb[verb:+] += [cop=+].
feel : verb[verb:+] += [cop=+].
remain : verb[verb:+] += [cop=+].
// adding also the feature form:fgo to the forms of "go"
go : verb[verb:+] += [cop=+, form=fgo].
grow : verb[verb:+] += [cop=+].
turn : verb[verb:+] += [cop=+].

// CH Adding a "cop2" feature to copulative verbs (that also can be transitive "normal" verbs)
smell : verb[verb:+] += [cop2=+].
taste : verb[verb:+] += [cop2=+].
sound : verb[verb:+] += [cop2=+].
appear : verb[verb:+] += [cop2=+].
look : verb[verb:+] += [cop2=+].
get : verb[verb:+] += [cop2=+, form=fget].



up += [p_up:+].
about += [p_about:+, sc_pabout:+].
across += [p_across:+, sc_pacross:+].
ahead += [p_ahead:+].
along +=  [p_along:+].
around +=  [p_around:+, sc_paround:+].
apart += [p_apart:+].
aside += [p_aside:+].
away += [p_away:+].
back += [p_back:+].
behind += [p_behind:+,sc_pbehind:+].
by += [p_by:+, form:fby, sc_pby:+].
/"by" is used before present participles "by illegally leaving"\
/HOWEVER we don't want GV{by fleeing} despots!!\
down += [p_down:+, sc_pdown:+].
forth += [p_forth:+].
forward += [p_forward:+].
in = prep[p_in=+,form=fin, sc_pin:+].
into += [p_into:+, sc_pinto:+].
off += [p_off:+, sc_poff].
on += [p_on:+, sc_pon:+].
open += [p_open:+].
out += [p_out:+].
over += [p_over:+, sc_pover:+].
through += [p_through:+, sc_pthrough:+].
to = prep[form=finfto,p_to=+, sc_pto:+].
// we eliminate the other interpretation of TO. This has only the PREP category.

together += [p_together:+].
under += [p_under:+].

against += [sc_pagainst:+].

// CH
alongside += [form:falongside].

// CH 28th Agustt
// Assignment of the feature form:fbefore and form:fafter for the words before and after
before += [form:fbefore,time:+].
after += [form:fafter, time:+].
between += [form:fbetween].
/"before" is used before present participles "before realising"\
/GV{before reducing} their benefits - IS THIS CORRECT????\
//before : prep[prep:+] += [form:fbefore].




// Adding the feature feven to word "even"
even += [form:feven].

// CH, adding feature fwhile to word "while"
while += [form:fwhile].

// CH Prepositons. Add a feature to all preposition that can govern a PP argument
aboard += [sc_paboard:+].

/"for" has a special use before present participles"\
for : prep[prep:+] += [form=ffor,sc_pfor:+].
of : prep[prep:+] += [form:fof,sc_pof:+].

/"without" is used before present participles "without realising"\
without : prep[prep:+] += [form:fwithout,sc_pwithout:+].


/"with" is used before present participle nouns "with housing etc a prob"\
/these are then chunked as GVs by mistake\
with : prep[prep:+] += [form:fwith,sc_pwith:+].


at : prep[prep:+] += [form=fat,sc_pat:+].
include : verb[verb:+,prog:+] += [form=fincluding].
since : prep[prep:+] += [form=fsince,sc_psince:+].
from : prep[prep:+] += [form=ffrom,sc_pfrom:+].
towards: prep[prep:+] += [sc_ptowards:+].
upon: prep[prep:+] += [sc_pupon:+].
onto: prep[prep:+] += [sc_ponto:+].
between: prep[prep:+] += [sc_pbetween:+].
within: prep[prep:+] += [form:fwithin,sc_pwithin:+].
under: prep[prep:+] += [sc_punder:+].
among: prep[prep:+] += [sc_pamong:+].
above: prep[prep:+] += [sc_pabove:+].
//before: prep[prep:+] += [sc_pbefore:+].
after : prep[prep:+] += [sc_pafter:+].
beyond: prep[prep:+] += [sc_pbeyond:+].
beneath: prep[prep:+] += [sc_pbeneath:+].


// CH 28th September
// Adding the feature form:flike to "like".
// Feature like:+ is added in order to ensure compatibility with biotip version
like += [form:flike, sc_plike:+,like:+].

// CH Adding a "indspeech" feature to verbs that introduces free indirect speech
// to add in the fst (these verbs were not marked as vsay in Comlex
believe : verb[verb:+] += [indspeech=+]. 
feel : verb[verb:+] += [indspeech=+].
suppose : verb[verb:+] += [indspeech=+].
imagine : verb[verb:+] += [indspeech=+].
expect : verb[verb:+] += [indspeech=+].
presume : verb[verb:+] += [indspeech=+].
assume : verb[verb:+] += [indspeech=+].
remind: verb[verb:+] += [indspeech=+,iobj=+].
suggest: verb[verb:+] += [indspeech=+].
show: verb[verb:+] += [indspeech=+].
disagree: verb[verb:+] += [indspeech=+]. 
hope: verb[verb:+] += [indspeech=+]. 

// CH To add in the fst 
// BEHIND is a particle for leave (not present in Comlex)
leave: verb[verb:+] += [p_behind:+].

// TEST
//speak: verb[verb:+] += [sc_pabout=+].

/"here" can be an adverb or a dummy subject ie some kind of noun or np\
/should this be indicated in the HMM tagger perhaps to include "here" as a pronoun\
/here : adv[adv:+] += [form=fhere].\


/not is used as an adverb to negate infinitive verbs - he decided not to go\
/to avoid all preceding adverbs from being included in the IV we need to distinguish just "not"\
not : adv[adv:+] += [form=fnot].


// CH adding ftoo to the adverb too
too : adv[adv:+] += [form:ftoo]. 



/here does NOT agree with the verb so MAY NOT be the subject at all!\
here : adv[adv:+] += [form=fhere].



// CH Adding the feature form:fthat to that even if it is tagged differently than conj.
that += [form:fthat].

/"those" is a relative pronoun which immediately precedes VPAP but not VPAST\
those : pron[pron:+] += [form=fthose].

// CH adding feautre form:fthis to the form this
this += [form:fthis].
these += [form:fthese].


/to allow only "and" in NP-> AP, conj, AP[first:~], noun[last]\
and : conj[conj:+] += [form:fand].


// CH adding the feater form:fable to the word able
able += [form:fable].


// CH adding feature form:for to OR
or : conj[conj:+] += [form:for].


// feature fhome on home
home += [form:fhome].


/for use in the marking rule to exclude "in" as an adj if followed\
//by another adj: "women in American universities are...\
//in : adj[adj:+] += [form=fin].


// CH 6th August
// whole is marked in order to construct quantifier the whole
whole: nadj[nadj:+] += [form:fwhole].


/// CH 8th August
// forms each and other are marked in order to be able to construct "each other" as a whole (see adjust.xip).
// After correcting the lexicon, these features won't be useful anymore
// better typing of preperiod elements
each  : quant[quant:+] += [form:feach,preperiod:+,predet:+,c_set:+].
every : quant[quant:+] += [preperiod:+,c_set:+].
per   : prep           += [preperiod:+,c_set:+].
most  : quant          += [preperiod:+,c_set:+].

// Considering "no" as a quantifier in order to be coherent with some, any. 
no = quant[quant=+,form=fno].
several  = quant[quant=+].
a_lot_of = quant[quant=+].

other: adj[adj:+] += [form:fother].


// CH 22 August
// Adding the features fhow fmany, and fmuch to how, many and much
how += [form:fhow].
many += [form:fmany].
much += [form:fmuch].
often += [form:foften].
few += [form:ffew].
long += [form:flong].
far += [form:ffar].


//required for composed adverbs such as "two weeks ago"
// add the temporal relation introduced (ago = before)
//     and the reference (reference time, speech time, event time)
ago     : adv[adv:+] += [temp_rel:before,temp_ref:s,form:fago].
// 'in' and 'on' do not always introduce temporal relations
//   these cases are treated in localgram_temp
//in                   += [temp_rel:during, form:fin].
//on                   += [temp_rel:during, form:fon].
//at       : prep[prep:+] += [temp_rel:during, form=fat,sc_pat:+].
in                   += [form:fin].
on                   += [form:fon].
at       : prep[prep:+] += [form=fat,sc_pat:+].
during               += [temp_rel:during, form:fon].
// later
late : ?[compar:+] += [temp_rel:after, temp_ref:r,form:flater].
// later
early : ?[compar:+] += [temp_rel:before, temp_ref:r].
before               += [temp_rel:before,temp_ref:r,form:fbefore].
after                += [temp_rel:after, temp_ref:r,form:fafter].
soon : adv[compar:+] += [temp_rel:before, temp_ref:r].
soon : adv[compar:~] += [temp_rel:after, temp_ref:s].



include  : verb[verb:+,prog:+] += [temp_rel:during, form=fincluding].
since                   += [temp_rel:starts_with, form=fsince,sc_psince:+].
from     : prep[prep:+] += [temp_rel:starts_with].
// 'to' will be given temp_rel later, because it's ambiguous (local_gram_temp)
//to       : prep[prep:+] += [temp_rel:ends_with, form=fto].
until    : prep[prep:+] += [temp_rel:ends_with, form=funtil].
till     : prep[prep:+] += [temp_rel:ends_with, form=ftill].
through  : prep[prep:+] += [temp_rel:during, form=fthrough].
within   : prep[prep:+] += [temp_rel:just_after, temp_ref:r].
toward   : prep[prep:+] += [sc_ptowards:+].
towards  : prep[prep:+] += [sc_ptowards:+].
upon     : prep[prep:+] += [sc_pupon:+].
onto     : prep[prep:+] += [sc_ponto:+].
//between  : prep[prep:+] += [temp_rel:between, sc_pbetween:+, form:fbetween].
within   : prep[prep:+] += [temp_rel:after, sc_pwithin:+].
under    : prep[prep:+] += [sc_punder:+].
among    : prep[prep:+] += [sc_pamong:+].
above    : prep[prep:+] += [sc_pabove:+].
beyond   : prep[prep:+] += [sc_pbeyond:+].
beneath  : prep[prep:+] += [sc_pbeneath:+].




current              += [preperiod=+, temp_rel:present].
last     : ?[verb:~] += [preperiod=+, temp_rel:just_before].
previous             += [preperiod=+, temp_rel:just_before].
// the following two are commented (XT) because too ambiguous 
//   will be treated later
//follow   : ?[verb:~, vprog] += [preperiod:+, temp_rel:just_after,  temp_ref:r].
//come     : ?[verb:~, vprog] += [preperiod=+, temp_rel=just_after,  temp_ref=+].
//In order to make the categories of "next" and "last" coherent, we change the
// category of next (adj) to nadj (XT ???)
next              = nadj[nadj:+, preperiod=+, temp_rel:just_after].


recent   += [temp_rel:before,temp_ref:s].
ancient  += [temp_rel:before].
antique  += [temp_rel:before].
former   += [temp_rel:before].
old      += [temp_rel:before].

//late     += [preperiod:+, temp_rel:before, temp_ref:s, compar:~].
//new      += [period:+].


meanwhile  : adv += [temp_rel:present, temp_ref:r, tempexpr:+].
afterwards : adv += [temp_rel:after, temp_ref:r, tempexpr:+].
recently   : adv += [temp_rel:before, temp_ref:r, tempexpr:+].
presently  : adv += [temp_rel:present, temp_ref:s, tempexpr:+].
currently  : adv += [temp_rel:present, temp_ref:s, tempexpr:+].
overnight  : adv += [period:h,  period_length:+, posttime:+, lower_unit:h, lower_number:10,
			spec_period=ni, period_frequ:1, period_frequ_unit:d].


// Adding the feature preperiod:+ to the lemma future, past
past              = nadj[nadj:+, preperiod=+, temp_rel:just_before].
future            = nadj[nadj:+, temp_rel:after].



// adverbs representing approximation and exactness
exactly   += [t_mod:exact].
just      += [t_mod:exact].
precisely += [t_mod:exact].
approximately += [t_mod:approx].
strictly  += [t_mod:exact].
about     += [t_mod:approx].
nearly    += [t_mod:approx].
around    += [t_mod:approx].
roughly   += [t_mod:approx].
more_or_less += [t_mod:approx].
almost    += [t_mod:less_than].
next_to   += [t_mod:less_than].
towards   += [t_mod:less_than].
nigh      += [t_mod:less_than].
over      += [t_mod:more_than].
practically  += [t_mod:less_than].
early   : ?[compar:~]  += [t_mod:start,time:+].
late    : ?[compar:~]  += [t_mod:end,time:+].
dusk      += [t_mod:end,time:+].
dawn    : noun[proper:~]  += [t_mod:start,time:+].
morning   += [t_mod:start,time:+].
//start     += [t_mod:start,time:+].
begin   : noun[vprog]  += [t_mod:start,time:+].   // beginning
beginning += [t_mod:start,time:+].
middle    += [t_mod:mid,time:+].
mid       += [t_mod:mid,time:+].
end  : ?[adj:~,verb:~]  += [t_mod:end,time:+].
//soon : adv[compar:~] += [t_mod:start].

recently  += [time:+].
lately    += [time:+].

// locutions with t_mod can be found in localgram2


speaker : noun[noun:+] += [form:fspeaker].

\( : punct += [form=fopar,strongbreak=+].
\) : punct += [form=fcpar].
\[ : punct += [form=fopar,strongbreak=+].
\] : punct += [form=fcpar].
\{ : punct += [form=fopar,strongbreak=+].
\} : punct += [form=fcpar].
- : punct += [form=fhyph,strongbreak=+].
: : punct += [form=fcolon,strongbreak=+].
; : punct += [form=fsemicolon,strongbreak=+].
\? : punct += [form=fquest]. // CH 16th August
\/ : punct += [form=fslash].  //CB
\^ : punct += [form=fcirc]. //CB


`` : punct[punct:+,quote:+] += [form=foquotes].
'' : punct[punct:+,quote:+] += [form=fcquotes].

/ "`" is an unknown character \
` : punct += ./needtospecifywhattypeofpunct!\




/**** ASSIGNING ADDITIONAL FEATURES TO ONE OR MORE LEMMATA **** \
/================================================================\


//The token "I" has only one morphological analysis namely a pronoun
//However, "I" may also be a roman numeral - NP{King George I} 
//{PRON;DIG}+[dig:+,pron:+,nom:+,personal:+,rom:+,rom:?,p1:+,sg:+,maj:+,toutmaj:+]
//I[pron:+] += dig[rom:+].
//PRON(2-2)+[dig:+,pron:+,nom:+,personal:+,rom:+,p1:+,sg:+,maj:+,toutmaj:+]
I : pron[pron:+, p1:+, sg:+, gen:~] += [dig:+,rom:+].
  



//to allow NP{Judge Fritz W. Alexander 2nd}
judge : noun[noun:+] += [title:+].


//required to exclude such adjectives from NPs such as NP{75 feet high}
long : nadj[nadj:+] += [meas:+].
wide : nadj[nadj:+] += [meas:+].
high : nadj[nadj:+] += [meas:+].





//Quants which modify NPs starting with a determiner
all  : quant[quant:+] += [predet:+].
half : quant[quant:+] += [predet:+].
// CH 4th September
// We have to start with the most specific case. If it fails, the general case is then applied
both : quant[quant:+] += [predet:+,form:fboth].
both += [form:fboth].

//amount = quant[quant:+, predet:+] .

// CH 13th September
// Considering neither as a quantifier only and adding the feature form:fneither
// The feature predet:+ is added in order to avoid the construction of an NP just done with neither.
neither = quant[form:fneither,quant:+, predet:+, negat:+].

//ADDITIONAL PROPER NOUNS
noriega : noun[noun:+] += [proper:+].

// AC BC AD   XT
AC  += [around_christ:+,form:fafter].
AD  += [around_christ:+,form:fafter].
BC  += [around_christ:+,form:fbefore].
BCE += [around_christ:+,form:fbefore].


// XT
// fourty is not correct, but used
fourty  = num[num=+,card=+].



//feature "posthour" to A.M. etc. CB TO CHECK WITH TOKENISATION

AM   : adv  +=[posthour=am].
Am   : noun +=[posthour=am].
A.M. : adv  +=[posthour=am].
a.m. : adv  +=[posthour=am].
am   : noun +=[posthour=am].
Pm   : noun +=[posthour=pm].
PM   : adv  +=[posthour=pm].
P.M. : adv  +=[posthour=pm].
p.m. : adv  +=[posthour=pm].
pm   : noun +=[posthour=pm].
AM.   : noun +=[posthour=am].
AM.   : adv  +=[posthour=am].
am.   : noun +=[posthour=am].
PM.   : noun +=[posthour=pm].
PM.   : adv  +=[posthour=pm].
pm.   : noun +=[posthour=pm].
afternoon    +=[posthour=pm].
evening      +=[posthour=pm].
morning      +=[posthour=am].
night        +=[posthour=pm].





//the feature "period" is used rather than "time" which
//causes NPs such as "The most dangerous day+time" to be excluded
//as well as "The celebration Monday"!


// careful, sometimes abbreviations are tagged as 'meas'
second     : noun += [period:s,  period_length:1, lower_unit:s, lower_number:1, temp_level:t].
sec        += [period:s,  period_length:1, lower_unit:s, lower_number:1, temp_level:t].
s          += [period:s,  period_length:1, lower_unit:s, lower_number:1, temp_level:t].
sec.       += [period:s,  period_length:1, lower_unit:s, lower_number:1, temp_level:t].
s.         += [period:s,  period_length:1, lower_unit:s, lower_number:1, temp_level:t].
minute     = noun[period:mi, period_length:1, lower_unit:s, lower_number:60, temp_level:t].
min        += [period:mi, period_length:1, lower_unit:s, lower_number:60, temp_level:t].
m          += [period:mi, period_length:1, lower_unit:s, lower_number:60, temp_level:t].
min.       += [period:mi, period_length:1, lower_unit:s, lower_number:60, temp_level:t].
m.         += [period:mi, period_length:1, lower_unit:s, lower_number:60, temp_level:t].
hour       : noun += [period:h,  period_length:1, lower_unit:mi, lower_number:60, temp_level:t].
h          += [period:h,  period_length:1, lower_unit:mi, lower_number:60, temp_level:t].
h.         += [period:h,  period_length:1, lower_unit:mi, lower_number:60, temp_level:t].
day        : noun += [period:d,  period_length:1, lower_unit:h, lower_number:24, temp_level:d].
night      : noun += [period:h,  period_length:+, posttime:+, lower_unit:h, lower_number:10,
			spec_period=ni, period_frequ:1, period_frequ_unit:d].

daytime    : noun += [period:h,  period_length:+, posttime:+, lower_unit:h, lower_number:10,
			spec_period=dt, period_frequ:1, period_frequ_unit:d].
dawn       : noun[proper:~] += [period:h,  period_length:+, posttime:+,
			spec_period:mo, period_frequ:1, period_frequ_unit:d].
morning    : noun += [period:h,  period_length:+, posttime:+,
			spec_period:mo, period_frequ:1, period_frequ_unit:d].
evening    : noun += [period:h,  period_length:+, posttime:+,
			spec_period:ev, period_frequ:1, period_frequ_unit:d].
dusk       : noun += [period:h,  period_length:+, posttime:+,
			spec_period:ev, period_frequ:1, period_frequ_unit:d].
afternoon  : noun += [period:h,  period_length:+, posttime:+, lower_unit:h, lower_number:10,
			spec_period:af, period_frequ:1, period_frequ_unit:d].
weekend    : noun += [period:d,  period_length:2, lower_unit:d, lower_number:2, 
			spec_period:w, period_frequ:1, period_frequ_unit:w].
week       : noun += [period:w,  period_length:1, lower_unit:d, lower_number:7, temp_level:w].
			//period_frequ:1, period_frequ_quant:7, 
			//period_frequ_unit:d].
month      : noun += [period:mo, period_length:1, lower_unit:d, lower_number:30, temp_level:m].
// quarter special case as it is very ambiguous. Explicitely treated with the lemma in rules (see marking_temp.xip and search "quarter"
//quarter = noun[tempexpr:+,period:+,t_relat:+].
semester   : noun += [period:mo, period_length:6, lower_unit:mo, lower_number:6, 
			period_frequ:2, period_frequ_unit:y, temp_level:y].
year       : noun += [period:y,  period_length:1, lower_unit:mo, lower_number:12, temp_level:y].
decade     : noun += [period:y,  period_length:10, lower_unit:y, lower_number:10, temp_level:y].
century    : noun += [period:y,  period_length:100, period_frequ:1, lower_unit:y, lower_number:100, temp_level:y].
millennium : noun += [period:y,  period_length:1000, lower_unit:y, lower_number:1000, temp_level:y].

// Correcting previous errors
// minutes is coded as a nadj, we want it to be a noun
//minute = noun[period:mi, period_length:1].



//This feature is used in conjunction with the sequence marking rule
//which assigns the feature time to these tokens only when they
//are preceded by a token bearing the feature preperiod
//This allows NP{last Spring} and also NP{The Prague Spring}
//to avoid NP{Fred} NP{Winters}
// changed by XT 
//    XT removed plural negation
Spring : noun += [time:+, period:mo, spec_period:sp, period_length:3, period_frequ:1, period_frequ_unit:y].
spring : noun += [time:+, period:mo, spec_period:sp, period_length:3, period_frequ:1, period_frequ_unit:y].
Summer : noun += [time:+, period:mo, spec_period:su, period_length:3, period_frequ:1, period_frequ_unit:y].
summer : noun += [time:+, period:mo, spec_period:su, period_length:3, period_frequ:1, period_frequ_unit:y].
Autumn : noun += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
autumn : noun += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
Fall   : noun[vprog:~] += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
//fall   : noun[vprog:~] += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
Winter : noun += [time:+, period:mo, spec_period:wi, period_length:3, period_frequ:1, period_frequ_unit:y].
winter : noun += [time:+, period:mo, spec_period:wi, period_length:3, period_frequ:1, period_frequ_unit:y].

// CB CORR !!!!  A VERIFIER

// changed by XT
Spring : nadj += [time:+, period:mo, spec_period:sp, period_length:3, period_frequ:1, period_frequ_unit:y].
spring : nadj += [time:+, period:mo, spec_period:sp, period_length:3, period_frequ:1, period_frequ_unit:y].
Summer : nadj += [time:+, period:mo, spec_period:su, period_length:3, period_frequ:1, period_frequ_unit:y].
summer : nadj += [time:+, period:mo, spec_period:su, period_length:3, period_frequ:1, period_frequ_unit:y].
Autumn : nadj += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
autumn : nadj += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
Fall   : nadj += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
//fall   : nadj += [time:+, period:mo, spec_period:fa, period_length:3, period_frequ:1, period_frequ_unit:y].
Winter : nadj += [time:+, period:mo, spec_period:wi, period_length:3, period_frequ:1, period_frequ_unit:y].
winter : nadj += [time:+, period:mo, spec_period:wi, period_length:3, period_frequ:1, period_frequ_unit:y].

//time : noun   += [period=+, period_length:+].
 
// 60s
"%d*%d0s" : noun += [decade=+].
// sixties and Co
twenty  : noun[pl] += [decade=+].
thirty  : noun[pl] += [decade=+].
forty   : noun[pl] += [decade=+].
fifty   : noun[pl] += [decade=+].
sixty   : noun[pl] += [decade=+].
seventy : noun[pl] += [decade=+].
eighty  : noun[pl] += [decade=+].   
ninty   : noun[pl] += [decade=+].
ninety  : noun[pl] += [decade=+].


(M)(m)onday    : noun += [time=+,period=d,day=1,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(M)(m)ondays   : noun += [time=+,period=d,day=1, pl:+,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(T)(t)uesday   : noun += [time=+,period=d,day=2,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(T)(t)uesdays   : noun += [time=+,period=d,day=2, pl:+,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(W)(w)ednesday : noun += [time=+,period=d,day=3,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(W)(w)ednesdays : noun += [time=+,period=d,day=3, pl:+,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(T)(t)hursday  : noun += [time=+,period=d,day=4,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(T)(t)hursdays  : noun += [time=+,period=d,day=4, pl:+,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(F)(f)riday    : noun += [time=+,period=d,day=5,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(F)(f)ridays    : noun += [time=+,period=d,day=5, pl:+,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(S)(s)aturday  : noun += [time=+,period=d,day=6,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(S)(s)aturdays  : noun += [time=+,period=d,day=6, pl:+,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(S)(s)unday    : noun += [time=+,period=d,day=7,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(S)(s)undays    : noun += [time=+,period=d,day=7, pl:+,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].

MONDAY    : noun += [time=+,period=d,day=1,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
TUESDAY   : noun += [time=+,period=d,day=2,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
WEDNESDAY : noun += [time=+,period=d,day=3,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
THURSDAY  : noun += [time=+,period=d,day=4,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
FRIDAY:   : noun += [time=+,period=d,day=5,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
SATURDAY  : noun += [time=+,period=d,day=6,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
SUNDAY    : noun += [time=+,period=d,day=7,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].


(m)(M)on  : noun += [time=+,period=d,day=1,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(t)(T)ue  : noun += [time=+,period=d,day=2,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(w)(W)ed  : noun += [time=+,period=d,day=3,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(w)(W)ed  : adj  += [time=+,period=d,day=3,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(t)(T)hu  : noun += [time=+,period=d,day=4,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(t)(T)hur : noun += [time=+,period=d,day=4,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(f)(F)ri  : noun += [time=+,period=d,day=5,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(f)(F)rid : noun += [time=+,period=d,day=5,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(s)(S)at  : noun += [time=+,period=d,day=6,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
(s)(S)un  : noun += [time=+,period=d,day=7, 
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].

//Mon.  : noun += [time=+,period=d,day=1,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Tue.  : noun += [time=+,period=d,day=2,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Wed.  : noun += [time=+,period=d,day=3,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Thu.  : noun += [time=+,period=d,day=4,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Thur. : noun += [time=+,period=d,day=4,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Fri.  : noun += [time=+,period=d,day=5,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Frid. : noun += [time=+,period=d,day=5,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Sat.  : noun += [time=+,period=d,day=6,
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].
//Sun.  : noun += [time=+,period=d,day=7, 
//			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:w, temp_level:d].

(j)(J)an  : noun += [time=+,month=1,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(f)(F)eb  : noun += [time=+,month=2,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(m)(M)ar  : noun += [time=+,month=3,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(a)(A)pr  : noun += [time=+,month=4,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(j)(J)un  : noun += [time=+,month=5,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(j)(J)ul  : noun += [time=+,month=6,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(a)(A)ug  : noun += [time=+,month=7,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(s)(S)ep  : noun += [time=+,month=8,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(s)(S)ept : noun += [time=+,month=9,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(o)(O)ct  : noun += [time=+,month=10,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(n)(N)ov  : noun += [time=+,month=11,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(d)(D)ec  : noun += [time=+,month=12,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].


(j)(J)an. += [time=+,month=1,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(f)(F)eb. += [time=+,month=2,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(m)(M)ar. += [time=+,month=3,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(a)(A)pr. += [time=+,month=4,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(m)(M)ay. += [time=+,month=5,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(j)(J)un. += [time=+,month=6,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(j)(J)ul. += [time=+,month=7,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(a)(A)ug. += [time=+,month=8,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(s)(S)ep. += [time=+,month=9,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(s)(S)ept. += [time=+,month=9,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(o)(O)ct. += [time=+,month=10,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(n)(N)ov. += [time=+,month=11,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(d)(D)ec. += [time=+,month=12,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].

(j)(J)anuary   += [time=+,month=1,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(f)(F)ebruary  += [time=+,month=2,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(m)(M)arch  : noun   += [time=+,month=3,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(a)(A)pril     += [time=+,month=4,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(m)(M)ay       += [time=+,month=5,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(j)(J)une      += [time=+,month=6,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(j)(J)uly      += [time=+,month=7,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(a)(A)ugust    += [time=+,month=8,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(s)(S)eptember += [time=+,month=9,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(o)(O)ctober   += [time=+,month=10,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(n)(N)ovember  += [time=+,month=11,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
(d)(D)ecember  += [time=+,month=12,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].

JANUARY   += [time=+,month=1,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
FEBRUARY  += [time=+,month=2,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
MARCH  : noun  += [time=+,month=3,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
APRIL     += [time=+,month=4,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
MAY       += [time=+,month=5,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
JUNE      += [time=+,month=6,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
JULY      += [time=+,month=7,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
AUGUST    += [time=+,month=8,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
SEPTEMBER += [time=+,month=9,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
OCTOBER   += [time=+,month=10,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
NOVEMBER  += [time=+,month=11,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].
DECEMBER  += [time=+,month=12,period=mo,
			spec_period:+, period_length:1, period_frequ:1, period_frequ_unit:y, temp_level:m].


// 2000
Y2K       : noun += [time=+,year=+].

// CH adding features on temporal elements
yesterday = noun[tempexpr:+,t_relat:+].
today     = noun[tempexpr:+,t_relat:+].
tomorrow  = noun[tempexpr:+,t_relat:+].
tonight   = noun[tempexpr:+,t_relat:+, period:h,  period_length:+, 
			spec_period=ni, period_frequ:1, period_frequ_unit:d].

right_now = adv[tempexpr:+,notly:+,t_relat:+].
now       = adv[tempexpr:+,notly:+,t_relat:+].



// Special feature for words like period
period : noun += [time_span=+].
//age    : noun += [time_span=+].   // XT age is too ambiguous
date   : noun += [time_span=+].
moment   : noun += [time_span=+].
duration : noun += [time_span=+].
epoch  : noun += [time_span=+].
era    : noun += [time_span=+].
interval: noun += [time_span=+].
lifetime: noun += [time_span=+].
season : noun += [time_span=+].
time    : noun += [time_span=+].


   //    week   : period_length:7, period:d,  period_frequ:1, period_frequ_quant:7, period_frequ_unit:d,


// adverbs carrrying the c_set:+ feature
repeatedly  += [c_set:+,tempexpr:+,period_frequ:X,period_frequ_unit:X].
frequently  += [c_set:+,tempexpr:+,period_frequ:X,period_frequ_unit:X].
sometimes   += [c_set:+,tempexpr:+,period_frequ:X,period_frequ_unit:X].
often       += [c_set:+,tempexpr:+,period_frequ:X,period_frequ_unit:X].
daily       += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_unit:d].
nightly     += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_unit:d, period:h, spec_period:ni].
weekly      += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_unit:w].
biweekly    += [c_set:+,tempexpr:+,period_frequ:2,period_frequ_unit:w].
monthly     += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_unit:mo].
semimonthly += [c_set:+,tempexpr:+,period_frequ:2,period_frequ_unit:mo].
fortnightly += [c_set:+,tempexpr:+,period_frequ:2,period_frequ_unit:mo].
bimonthly   += [c_set:+,tempexpr:+,period_frequ:2,period_frequ_unit:mo].
quarterly   += [c_set:+,tempexpr:+,period_frequ:4,period_frequ_unit:y].
yearly      += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_unit:y].
annual      += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_unit:y].
annually    += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_unit:y].
semiannual  += [c_set:+,tempexpr:+,period_frequ:2,period_frequ_unit:y].
biannual    += [c_set:+,tempexpr:+,period_frequ:2,period_frequ_unit:y].
biennial    += [c_set:+,tempexpr:+,period_frequ:1,period_frequ_quant:2,period_frequ_unit:y].



// adding feature season:+ to seasons
//summer : noun[period:+] += [season=+].
//autumn : noun[period:+] += [season=+].
//winter : noun[period:+] += [season=+].
//spring : noun[period:+] += [season=+].








// Time Zone indicators
GMT  +=[timezone=gmt].
gmt  +=[timezone=gmt].
ACDT += [timezone:+,t_absolut:+].
ACST += [timezone:+,t_absolut:+].
ADT += [timezone:+,t_absolut:+].
AEDT += [timezone:+,t_absolut:+].
AEST += [timezone:+,t_absolut:+].
AKST += [timezone:+,t_absolut:+].
AKDT += [timezone:+,t_absolut:+].
BST += [timezone:+,t_absolut:+].
CDT += [timezone:+,t_absolut:+].
CEDT += [timezone:+,t_absolut:+].
CEST += [timezone:+,t_absolut:+].
CET += [timezone:+,t_absolut:+].
CST += [timezone:+,t_absolut:+].
EDT += [timezone:+,t_absolut:+].
EST += [timezone:+,t_absolut:+].
EEST += [timezone:+,t_absolut:+].
GMT += [timezone:+,t_absolut:+].
MDT += [timezone:+,t_absolut:+].
MST += [timezone:+,t_absolut:+].
PDT += [timezone:+,t_absolut:+].
PST += [timezone:+,t_absolut:+].
UTC += [timezone:+,t_absolut:+].
WEDT += [timezone:+,t_absolut:+].
WET += [timezone:+,t_absolut:+].
WST += [timezone:+,t_absolut:+].






noon     : noun += [hour:12].
midnight : noun += [hour:24].
midday   : noun += [hour:12].
1               += [smallhour:+,hour:+].
2               += [smallhour:+,hour:+].
3               += [smallhour:+,hour:+].
4               += [smallhour:+,hour:+].
5               += [smallhour:+,hour:+].
6               += [smallhour:+,hour:+].
7               += [smallhour:+,hour:+].
8               += [smallhour:+,hour:+].
9               += [smallhour:+,hour:+].
10              += [smallhour:+,hour:+].
11              += [smallhour:+,hour:+].
12              += [smallhour:+,hour:+].
13              += [hour:+].
14              += [hour:+].
15              += [hour:+].
16              += [hour:+].
17              += [hour:+].
18              += [hour:+].
19              += [hour:+].
20              += [hour:+].
21              += [hour:+].
22              += [hour:+].
23              += [hour:+].
24              += [hour:+].
one      : num  += [smallhour:+,hour:+,day:+].
two      : num  += [smallhour:+,hour:+,day:+].
three    : num  += [smallhour:+,hour:+,day:+].
four     : num  += [smallhour:+,hour:+,day:+].
five     : num  += [smallhour:+,hour:+,day:+].
six      : num  += [smallhour:+,hour:+,day:+].
seven    : num  += [smallhour:+,hour:+,day:+].
eight    : num  += [smallhour:+,hour:+,day:+].
nine     : num  += [smallhour:+,hour:+,day:+].
ten      : num  += [smallhour:+,hour:+,day:+].
eleven   : num  += [smallhour:+,hour:+,day:+].
twelve   : num  += [smallhour:+,hour:+,day:+].
thirteen  : num += [day:+].
fourteen  : num += [day:+].
fifteen   : num += [day:+].
sixteen   : num += [day:+].
seventeen : num += [day:+].
eighteen  : num += [day:+].
nineteen  : num += [day:+].
ninteen   : num += [day:+].
twenty    : num += [day:+].
twenty-one    : num += [day:+].
twenty-two    : num += [day:+].
twenty-three  : num += [day:+].
twenty-four   : num += [day:+].
twenty-five   : num += [day:+].
twenty-six    : num += [day:+].
twenty-seven  : num += [day:+].
twenty-eight  : num += [day:+].
twenty-nine   : num += [day:+].
thirty        : num += [day:+].
thirty-one    : num += [day:+].



o'clock  : adv += [form:foclock].


// CH
Easter : noun += [time:+,tempexpr:+,date:+,feast_event:+].
Christmas : noun += [time:+,tempexpr:+,date:+,feast_event:+].
Xmas : noun += [time:+,tempexpr:+,date:+,feast_event:+].
Thanksgiving : noun += [time:+,tempexpr:+,date:+,feast_event:+].
Halloween : noun += [time:+,tempexpr:+, date:+,feast_event:+].
New_Year's_Day : noun += [time:+,tempexpr:+,date:+,feast_event:+].


//J-C +=[form=fjc].
//J-C. +=[form=fjc].
//J.-C +=[form=fjc].
//J.-C. +=[form=fjc].
//JC +=[form=fjc].




//VERB PARTICLES THAT ARE TAGGED AS ADVERBS
//Many verb particles are tagged as adverbs and get included in chunk
//of following verb in sentence: "The group that broke FV{away was} ...." 
//By including the "part" feature they may be excluded from verb chunks
//while still allowing other adverbs to be included

aboard : adv += [vpart=+].
along : adv += [vpart=+].
around : adv += [vpart=+].
aside : adv += [vpart=+].
away : adv += [vpart=+].
back : adv += [vpart=+].
bottom : adv += [vpart=+].
by : adv += [vpart=+].
down : adv += [vpart=+].
forth : adv += [vpart=+].
//in : adv += [vpart=+]."in"notincludedasrulebelowchangesitsPOSto"prep"
off : adv += [vpart=+].
out : adv += [vpart=+].
over : adv += [vpart=+].
together : adv += [vpart=+].
through : adv += [vpart=+].
up : adv += [vpart=+].



/**** REPLACING SEVERAL MORPHOLOGICAL ANALYSES WITH JUST ONE****\
/================================================================\




//Replaces all possible analyses of "but" output by the morphological analyser
//with "conjunction" to avoid foll issue
//1248>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} !!FV{but was} NFV{delayed}
//1>GROUP{SC{NP{The pullout} FV{had}} NFV{been scheduled} PP{for NP{Sunday}} SC{BG{but} FV{was}} NFV{delayed} 
//but = conj[sub:+].


/"another" as a determiner is indefinite AGNES \
another : det[det] += [indef:+].
