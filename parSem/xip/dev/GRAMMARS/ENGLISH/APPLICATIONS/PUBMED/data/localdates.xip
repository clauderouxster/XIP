//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : localdates.xip
//!   Date       : 12/08/2003
//!   Author     : C. Brun
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// A local grammar for time expressions and dates, and hours

Sequence:




// Expressions for dates :

// Numerical dates : I use the feature spec attached to "/" + add fslash
// Month/Day/Year or Year/Day/Month or Year/Month/Day or Day/Month/Year

7> noun[mwe=+,date=+]  @= (noun[day]), dig[day], punct[spec:+,form:fslash], dig[month], punct[spec:+,form:fslash] ,(dig[year];dig[shortyear]).

7> noun[mwe=+,date=+]  @= dig[month], punct[spec:+,form:fslash], dig[day],punct[spec:+,form:fslash], (dig[year];dig[shortyear]).

7> noun[mwe=+,date=+]  @= dig[month], punct[form:fhyph,left,right], dig[day], punct[form:fhyph,left,right], (dig[year];dig[shortyear]).
 
7> noun[mwe=+,date=+]  @= (dig[year];dig[shortyear]), punct[spec:+,form:fslash], dig[day],punct[spec:+,form:fslash], dig[month].

7> noun[mwe=+,date=+]  @= (dig[year];dig[shortyear]), punct[form:fhyph,left,right],  dig[day],punct[form:fhyph,left,right],  dig[month].

7> noun[mwe=+,date=+]  @= (dig[year];dig[shortyear]), punct[spec:+,form:fslash], dig[month],punct[spec:+,form:fslash], dig[day].

7> noun[mwe=+,date=+]  @= (dig[year];dig[shortyear]), punct[form:fhyph,left,right], dig[month],punct[form:fhyph,left,right], dig[day].

7> noun[mwe=+,date=+]  @= (noun[day]), dig[day], punct[form:fhyph,left,right], dig[month],punct[form:fhyph,left,right],(dig[year];dig[shortyear]).

7> noun[mwe=+,date=+]  @= (noun[day]), dig[day], punct[spec:+,form:fslash], dig[month],punct[spec:+,form:fslash], (dig[year];dig[shortyear]).

// "Latin" Dates

// The third century after/ before Christ 

7>  noun[mwe=+,date=+] @= | det[def] | num[ord], noun[lemme:century], (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].



// The third century/millennium  AC | BC | AD

7>  noun[mwe=+,date=+] @= | det[def] | num[ord], noun[lemme:century];noun[lemme:millennium], noun[lemme:BC,toutmaj]; noun[lemme:AC,toutmaj] ; noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj].

7>  noun[mwe=+,date=+] @= | det[def] | dig[ord], noun[lemme:century];noun[lemme:millennium], (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].

// The third century AC | BC | AD

7>  noun[mwe=+,date=+] @= | det[def] | dig[ord], noun[lemme:century];noun[lemme:millennium], noun[lemme:BC,toutmaj];noun[lemme:AC,toutmaj];noun[lemme:AD];noun[lemme:ad,toutmaj].

7>  noun[mwe=+,date=+] @= | det[def] | num[ord], noun[lemme:century];noun[lemme:millennium].

// the year 800 after/before Christ 
7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,  (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].

7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,   noun[lemme:BC,toutmaj] .

7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,   noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj].
7> noun[mwe=+,date=+] @= | det[def] | noun[lemme:year], dig,   noun[lemme:AC,toutmaj] .

7>  noun[mwe=+,date=+] @= dig[ord] , (punct[form:fhyph,left,right]) , noun[lemme:century];noun[lemme:millennium].

//the 1560s BC
7> noun[mwe=+,date=+] @= | det[def] | noun[guess,date] ,noun[lemme:BC,toutmaj];noun[lemme:AC,toutmaj];noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj].


// 800 after before Christ
7>  noun[mwe=+,date=+] @= dig, (prep[form:fbefore];prep[form:fafter]), noun[lemme:Christ].

7>  noun[mwe=+,date=+] @= dig,  noun[lemme:BC,toutmaj].

7>  noun[mwe=+,date=+] @= dig,  noun[lemme:AC,toutmaj] .

7>  noun[mwe=+,date=+] @= noun[lemme:AD,toutmaj];noun[lemme:ad,toutmaj], dig .


/------ 1991-92 -- 15-16 -------\

8> dig[mwe=+,day=+] @= dig[day:+],punct[form:fhyph,left,right],dig[day:+].

// Coord on digits : to be tested

8> dig[mwe=+,day=+]@= dig[day:+], (punct[comma:+], dig[day:+])*, conj[coord], dig[day:+] .

/98-99\

8> dig[mwe=+,year=+,date=+] @= dig[shortyear],punct[form:fhyph,left,right],dig[shortyear].

8> dig[mwe=+,year=+,date=+] @=  dig[shortyear],(punct[comma:+], dig[shortyear:+])*, conj[coord],  dig[shortyear].

8> dig[mwe=+,year=+,date=+] @= dig[year],punct[form:fhyph,left,right],(dig[year];dig[shortyear]).

8> dig[mwe=+,year=+,date=+] @=  dig[year],(punct[comma:+], dig[year:+])*, conj[coord],  dig[year].


/------------ MULTIWORD DATES -------------------\

// April/March (1990) found in corpora
9>  noun[time=+,mwe=+,month=+,date=+] @= noun[month], (punct[spec:+,form:fslash];punct[form:fhyph,left,right]), noun[month].

//COORD for Months

9>  noun[time=+,mwe=+,month=+,date=+] @= noun[month], (punct[comma:+], noun[month])* , conj[coord],  noun[month].

// the early 1980's
11> noun[time=+,mwe=+,date=+] @= |det[def] | ?[time,dig:~] , part;punct[quote], noun[guess,date] .

11> noun[time=+,mwe=+,date=+] @= | det[def] |    
                          ?[time,dig:~];?[preperiod,dig:~],
                          (punct[form:fhyph,left,right]),dig[year],part,(conj[coord],dig,part) .

11> noun[time=+,mwe=+,date=+] @= | det[def] |    
                          ?[time,dig:~];?[preperiod,dig:~],
                          (punct[form:fhyph,left,right]),noun[guess,date],(conj[coord],noun[guess,date]) .
// the 1980's
11> noun[time=+,mwe=+,date=+] @= | det[def] | dig[year],part,(conj[coord],dig,part)  .

// the 1980s with the guesser
11> noun[time=+,mwe=+,date=+] @=   noun[guess,date], conj[coord], noun[guess,date] .

11> noun[time=+,mwe=+,date=+] @= ?[time,dig:~], dig[year].

11> noun[year=+,mwe=+]  @= dig[year],part .

// ! bloque la remontee du trait

// !X:! remonte automatiquement le trait a tout les noeuds au dessus

// early December, mid-December
11> noun[time=+,!month,mwe=+,date=+] @= ?[time,dig:~,day:~,month:~];?[preperiod,dig:~],
                                 (punct[form:fhyph,left,right]),
                                  noun[month], prep[form:fof],dig[year].
11> noun[time=+,!month,mwe=+,date=+] @= ?[time,dig:~,day:~,month:~];?[preperiod,dig:~],
                                 (punct[form:fhyph,left,right]),
                                  noun[month].
//Additions CB 

// Sunday (,) December / 21 or the 21st /  (, 1998)
// CLAUDE 

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month], dig[day], (punct[comma:+]), dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month], det[def], dig[day,ord] , (punct[comma:+]), dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month], dig[day].

11> noun[time=+,mwe=+,date=+] @= noun[day], (punct[comma:+]), noun[month], det[def], dig[day,ord].

11>  noun[time=+,mwe=+,date=+] @= noun[day], dig[day].

// Sunday 21 December 1999 
11> noun[time=+,mwe=+,date=+] @= noun[day],(punct[comma:+]),dig[day],(punct[comma:+]), noun[month],((punct[comma:+]),dig[year]).

// the 20th of October 1999
// Pourquoi inclure le det dans noun ?
// ce n'est pas plutot le contexte ?

11> noun[time=+,mwe=+,date=+] @= (det[def]),dig[day],(prep[form:fof]),noun[month],((punct[comma:+]), dig[year];dig[shortyear]).


// December 1999 --- 21 December 1999 --- December 21, 1999

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], punct[comma:+], dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def], dig[day,ord], punct[comma:+],dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def],dig[day,ord], dig[year].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], punct[comma:+],dig[shortyear].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def],dig[day,ord], punct[comma:+],dig[shortyear].

11> noun[time=+,mwe=+,date=+] @=  noun[month], prep[form:fof], dig[year];dig[shortyear].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[day], dig[shortyear].

11> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), det[def],dig[day,ord], dig[shortyear].

12> noun[time=+,mwe=+,date=+] @= dig[day], noun[month], (punct[comma:+]), dig[year].

12> noun[time=+,mwe=+,date=+] @= (dig[day]), noun[month], punct[comma:+], dig[shortyear].

12> noun[time=+,mwe=+,date=+] @= (dig[day]), noun[month], dig[year].

12> noun[time=+,mwe=+,date=+] @= (dig[day]), noun[month], dig[shortyear].

// December 21 or No : December , 21 dangerous : more context needed : a year : Dec
//11> noun[time=+,mwe=+,date=+] @= noun[month],dig[day]. DONE ABOVE

// 21 December 1999

12> noun[time=+,mwe=+,date=+] @= dig[day],noun[month].

12> noun[time=+,mwe=+,date=+] @= noun[month], dig[day].

12> noun[time=+,mwe=+,date=+] @= noun[month], (punct[comma:+]), dig[year].


// Starting with a year : 1999 August 11

12> noun[time=+,mwe=+,date=+] @= dig[year], (punct[comma:+]), noun[month], (punct[comma:+]), dig[day].

// 1999 December (without a day)
12> noun[time=+,mwe=+,date=+] @= dig[year], (punct[comma:+]), noun[month].

12>  noun[time=+,mwe=+,date=+] @= noun[month], dig[year];dig[shortyear].

// Time expressions like Winter 2002 : apply on noun or nadj

12> noun[tempexpr=+,mwe=+,date=+] @= nadj[period:+], dig[year].

12> noun[tempexpr=+,mwe=+,date=+] @= nadj[period:+], dig[shortyear].

12> noun[tempexpr=+,mwe=+,date=+] @= noun[period:+], dig[year].

12> noun[tempexpr=+,mwe=+,date=+] @= noun[period:+], dig[shortyear].

// From time to time

12> pp[tempexpr=+] @= prep[form:fin];prep[form:fsince], (det[def]), noun[date:+].

12> pp[tempexpr=+] @= prep[form:fin];prep[form:fsince], dig[year].

12> pp[time=+,tempexpr=+] @= prep[form:ffrom], dig[year], prep[form:finfto], dig[year];dig[shortyear].

12> pp[time=+,tempexpr=+] @= prep[form:ffrom], ?[lemme:time], prep[form:finfto], ?[lemme:time] .

// From date1 to date2 

//12>  pp[time=+,tempexpr=+] @= prep[form:ffrom], noun[date:+], prep[form:finfto], noun[date:+] .

// Expressions for hours :

// These 3 rules have been deplaced from Chunker.xip :rules 9>
// I add the post-hours modifier : PM AM GMT, etc 
// CB: problems with categories and tokenzation on these items

13> noun[hour:+] @=  num[card:+], adv[form:foclock],  (?[posthour:+]) .
13> noun[hour:+] @=  dig[card:+], adv[form:foclock], (?[posthour:+]) .

// CH half past three
13> noun[hour:+] @ = quant[predet], ap[preperiod], num[card:+], (?[posthour:+]).

// for 03:04:89 +007
13> noun[hour:+] @= dig[time,year:~], (?[posthour:+]).

13> noun[hour:+] @= dig[year:~], ?[posthour:+].

13> noun[tempexpr:+,hour:+]  @= dig[year:~],  noun[lemme:hour], dig[year:~], noun[lemme:minute],  conj[coord], dig[year:~], noun[lemme:second] .

13> noun[tempexpr:+,hour:+]  @= num[card:+],  noun[lemme:hour], num[card:+], noun[lemme:minute],  conj[coord], num[card], noun[lemme:second].

13> noun[tempexpr:+,hour:+]  @= dig[year:~],  noun[lemme:hour], dig[year:~], conj[coord], noun[lemme:minute] .

13> noun[tempexpr:+,hour:+]  @= num[card:+], noun[lemme:hour], num[card:+], conj[coord], noun[lemme:minute] .
IDRules:

// should be processed after dates ...

14> dig[mwe=+,card:+] -> dig+[last:~,rom:~],
                   punct*[form:fslash],  
                  dig[last,first:~,rom:~,card:+].
