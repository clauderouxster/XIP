//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2006 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : english grammar for political risk detection
//!   filename   : add-feature3_pr.xip
//!   Date       : October 2006
//!   Author     : Aude Rebotier, Ágnes Sándor
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



Tagging: 

11> verb<lemme:start> = verb[sc_ing=+].

5> ADV[lemme:close_to] %= PREP[prep=+].

11> verb = verb[base=+] | ?*[verb:~], ?[form:fby], verb%[vprog,samesubj=+] | .


//we consider whether to

11> ?[verb] = ?[base=+] | ?*[verb:~], ?[form:fwhether], ?[form:finfto], ?%[verb,samesubj=+] | .


Marker:
// le trait maj dans les noms composés
50> NOUN#1[maj=+]{?[first, maj, noun],?*}.

/there is\
15> adv[form:fthere, noplace=+], (verb[form:fhave]), verb[form:fbe], (det[indef]), (quant), adj*, noun.

/the buildings\
20> noun[vprog, lemme:build, commonplace=+].

/the military complex	!! le chunking n'est pas correct quand l'expression est précédée d'une préposition\
20> ?[adj, complex], nadj[lemme:complex, commonplace=+].

20> noun[building, place=+, commonplace=+].

/marquer les prépositions qui commencent la phrase\
20>prep[start, firstprep=+], ?*[verb:~], verb[partpas:~, inf:~].
20>adv[start], prep[firstprep=+], ?*[verb:~], verb[partpas:~, inf:~].

//les noms composés: le trait evnt porté par un nom ne doit pas toujours être percolé au nom composé dont il fait partie 
// Iraq Survey Group leader David Kay (survey)
30> noun[evnt=~]{?*[lemme:~of], noun[evnt, last:~], ?*[lemme:~of], noun[evnt:~]}.

// National Council of Resistance of Iran
30> noun[evnt=~]{?*, ?[form:fof], ?*, noun[evnt], ?*}.
35> noun[evnt=~]{?[first, evnt:~], ?*[evnt:~], ?[last,evnt:~]}.

//Atomic Energy Organization
35> noun[org:+, evnt=~].

//we will respond[base] by many ways, for example by holding[samesubj] back on oil sales. - to get the subject of "holding"

//11> ?[verb] = ?[base=+] | ?*[verb:~], ?[form:fby], ?%[vprog,samesubj=+] | .
//11> ?[vprog] = | ?[base],  ?*[verb:~], ?[form:fby] |  ?[samesubj=+] .



//***************************************
// toute la partie suivante est peut-être à supprimer : les traits nst, seco semblent n'être plus utilisés

Tagging:
// all words that have the feature "say" or "saythat" also have the feature "nst"

//11> ?[say] = ?[nst=+].
//11> ?[saythat] = ?[nst=+].


//11> ?[sc_hows] = ?[seco=+].
//11> ?[indspeech] = ?[seco=+].
//11> ?[sc_ing] = ?[seco=+].
//11> ?[sc_np_adjpred] = ?[seco=+].
//11> ?[sc_np_advpred] = ?[seco=+].
//11> ?[sc_np_ing] = ?[seco=+].
//11> ?[sc_np_nppred] = ?[seco=+].
//11> ?[sc_np_toinf] = ?[seco=+].
//11> ?[sc_pabout] = ?[seco=+].
//11> ?[sc_pabove] = ?[seco=+].
//11> ?[sc_pacross] = ?[seco=+].
//11> ?[sc_pafter] = ?[seco=+].
//11> ?[sc_pagainst] = ?[seco=+].
//11> ?[sc_pamong] = ?[seco=+].
//11> ?[sc_paround] = ?[seco=+].
//11> ?[sc_pas] = ?[seco=+].
//11> ?[sc_pat] = ?[seco=+].
//11> ?[sc_pbefore] = ?[seco=+].
//11> ?[sc_pbehind] = ?[seco=+].
//11> ?[sc_pbeneath] = ?[seco=+].
//11> ?[sc_pbetween] = ?[seco=+].
//11> ?[sc_pbeyond] = ?[seco=+].
//11> ?[sc_pby] = ?[seco=+].
//11> ?[sc_pduring] = ?[seco=+].
//11> ?[sc_pfor] = ?[seco=+].
//11> ?[sc_pfrom] = ?[seco=+].
//11> ?[sc_pin] = ?[seco=+].
//11> ?[sc_pinto] = ?[seco=+].
//11> ?[sc_plike] = ?[seco=+].
//11> ?[sc_pof] = ?[seco=+].
//11> ?[sc_poff] = ?[seco=+].
//11> ?[sc_pon] = ?[seco=+].
//11> ?[sc_ponto] = ?[seco=+].
//11> ?[sc_pout] = ?[seco=+].
//11> ?[sc_pover] = ?[seco=+].
//11> ?[sc_pthrough] = ?[seco=+].
//11> ?[sc_pto] = ?[seco=+].
//11> ?[sc_ptowards] = ?[seco=+].
//11> ?[sc_punder] = ?[seco=+].
//11> ?[sc_pupon] = ?[seco=+].
//11> ?[sc_pwith] = ?[seco=+].
//11> ?[sc_pwithin] = ?[seco=+].
//11> ?[sc_pwithout] = ?[seco=+].
//11> ?[sc_s] = ?[seco=+].
//11> ?[sc_sentsuj] = ?[seco=+].
//11> ?[sc_toinf] = ?[seco=+].
//11> ?[sc_whs] = ?[seco=+].


//// make sure : make[nst=+]
11> ?<lemme:make> = ?[st=~,trans=~] | ?<lemme:sure> | .

/// I am able to go

11> adj = adj[!sc_toinf=+] | (adv), ?[form:finfto], (adv), verb | .
11> nadj = nadj[!sc_toinf=+] | (adv), ?[form:finfto], (adv), verb | .

// he is hopeful that

11> adj = | ?[det:~] | ?[sc_s=+] | ?%[form:fthat,complthat=+] |.
11> nadj = | ?[det:~] | ?[sc_s=+] | ?%[form:fthat,complthat=+] |.

// likely is also an adj

11> adv<lemme:likely> %= | verb | adj | ?[proper:~] | .

11> ?<lemme:likely> = | ?[verb] | ?[sc_s=+] | ?%[form:fthat,complthat=+] | .

11>  adj<lemme:unlikely> %= adv | ?[proper] | .

11>  adj<lemme:likely> %= adv | ?[proper] | .

11> noun[vprog] = noun[!xrx=+,!evnt=+].


// company Ureco

11> ?<maj> = | ?<lemme:company> | ?[bus=+].

11> ?<proper> = | ?<lemme:company> | ?[bus=+].

11> ?<maj> = | ?<lemme:company>, ?[bus] | ?[bus=+].

11> ?<proper> = | ?<lemme:company>, ?[bus]  | ?[bus=+].



Sequence:

12> noun[bus=+] = ?[bus], ?[bus].


