# ============================================================================
# TYPE:		fst script
# CONTENT:	mapping of dervivational categories (for usage with XIP)
#
# LANGUAGE:	DUTCH
#
# AUTHOR:	Anne Schiller
#
# CREATED:	06-Mar-2007	(by A. Schiller)
# ============================================================================
# USAGE:	xfst -s LEX.fst -l ThisFile
# ============================================================================

define DBD	"^|" ;	 # derivation boundary
define CBD	"^#" ;	 # compound boundary
define GBD	%^%\ ;	 # "glue" boundary
define SPC	"^_" ;	 # white space

print size
define LEX

#echo >>> identify tags and symbols

#read regex LEX ;
#single char sigma net
#define SIG

#read regex [ %+ ?+ ] & SIG ;
#multi char sigma net
#define TAG

#read regex [ %^ ?+ ] & SIG ;
#multi char sigma net
#define DIAC


define TAG2	[ %+AC|%+VC|%+NC|%+CmpdPart| DBD ];

# mappings

define MAP [
#	SPC -> " "

# compounds
# e.g. 	partijgenoot	:: partij+NC^#genoot+Noun+M+Sg 	=> partij#genoot+Noun+M+S

#.o.	GBD -> %\
#.o.	[TAG|DIAC]* CBD @-> "#"
#.o.	
	[TAG2]+	@-> 0 || _ CBD 

# derivations
# e.g.	grievend	:: grieven+Verb^|+Adj+Basic 	=> grieven +DVerb+Adj+Basic
#	onzindelijk	:: zindelijk+Adj+Neg^|+Adjv	=> zindelijk+DAdj+Neg+Adjv

#.o.	"+Verb" TAG* DBD @-> "+DVerb"	
#.o.	"+Adj" TAG* DBD @-> "+DAdj"	
#.o.	"+Num" TAG* DBD @-> "+DNum"	

].i ;


read regex MAP .o. LEX ;
print size
