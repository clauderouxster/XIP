define LEX

read regex LEX ;
single char sigma net
define SIG
define CHAR0	SIG & ? ;

# -----------------------------------------------------------------------

define WS	" " | "\n" | "\t" | "\r" ;

define SEP	[ %; | %, | %. | %: | %? | %! | %' | %` 
		| %( | %) | %[ | %] | %" 
		];

define SEPUTF [
  "\u2018"		# [‘]	LEFT SINGLE QUOTATION MARK
| "\u2019"		# [’]	RIGHT SINGLE QUOTATION MARK
| "\u201A"		# [‚]	SINGLE LOW-9 QUOTATION MARK
| "\u201B"		# [‛]	SINGLE HIGH-REVERSED-9 QUOTATION MARK
| "\u201C"		# [“]	LEFT DOUBLE QUOTATION MARK
| "\u201D"		# [”]	RIGHT DOUBLE QUOTATION MARK
| "\u201E"		# [„]	DOUBLE LOW-9 QUOTATION MARK
| "\u201F"		# [‟]	DOUBLE HIGH-REVERSED-9 QUOTATION MARK
];

define BOUND	SEP | SEPUTF | EOT | BOT | WS ;
define CHAR	CHAR0 - [BOUND] ;
define ANY	BOUND | CHAR ;


define LEXSEP	LEX .o. [SEP|SEPUTF] ;
define LEX1	LEX - LEXSEP ;


read regex 	[ LEX1   [LC BOUND.r RC BOUND]
		| LEXSEP [LC ANY.r RC ANY ]
		];


