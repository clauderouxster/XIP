//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Copyright (c) 2006 Xerox Corporation.  All Rights Reserved.
//!
//! File:	translations.xip
//! Encoding:	UTF-8
//! Content:	mapping morphology tags -> XIP features
//!
//! Language:	DUTCH
//!
//! Author:	Anne Schiller
//!
//! Date: 	07-Mar-2007	:: initial version
//!
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Translation:


//-- MORPHOLOGICAL CATEGORIES ----------------------------------------------------------
					// DESCRIPTION		EXAMPLE

Abbr		= [abbr=+].		// abbreviations  	km::km+Abbr+M+Sg
Acc		= [acc=+].		// accusative  	 	me::me+Pron+Acc+MF+1P+Sg
Adj		= adj.			// adjective  		lang::lang+Adj+Basic
Adjv		= adj[adv=+].		// adverbial adjective	lang::lang+DAdj+Adjv
Adv		= adv.			// adverb		binnenkort::binnenkort+Adv
Amod		= [amod=+,adv=+].		// adj/adv modifier	te::te+Ptcl+AMod
Art		= det[art=+].		// article  		de::de+Art+Def+MF+Sg
Basic		= [basic=+].		// basic  		lang::lang+Adj+Basic
Card		= [card=+].		// cardinal number  	twee::twee+Num+Card+Def
Circp		= prep[circp=+].	// Right part of prep.	af ::af+Circp
City		= [city=+].		// City, town name  	Amsterdam::Amsterdam+Prop+City
CmpdPart	= cpd.			// truncated cmpd  	lang-::lang#-+CmpdPart
Comma		= [comma=+].		// comma  		,::,+Punct+Comma
Comp		= [comp=+].		// comparative  	langere::lang+Adj+Comp+Decl
Con		= [conjv=+,fin=+].	// conjunctive  	renne::rennen+Verb+Con+Pres+3P+Sg
Conj		= conj[coord=+].	// conjunction  	en::en+Conj
Continent	= [continent=+].	// continent  		Europa::Europa+Prop+Continent+N+Sg
Country		= [country=+].		// country  		Holland::Holland+Prop+Country+N+Sg
DAdj		= [deriv_adj=+].	// derived from Adj	goeden::goed+DAdj+Noun+MFCon+Pl
DNum		= [deriv_num=+].	// derived from Num	velen::veel+DNum+Noun+MFCon+Pl
DVerb		= [deriv_verb=+].	// derived from Verb	gespannener::spannen+DVerb+Adj+Comp+Basic	
Dat		= [dat=+].		// dative case		der::de+Art+Def+Dat+F+Sg
Date		= [date=+].		// date	expression	27.07.2001::27.07.2001+Dig+Date	
Decl		= [decl=+].		// declined form  	lange::lang+Adj+Decl
Def		= [def=+].		// definite  		de::de+Art+Def+MFN+Pl
Deg		= [deg=+].		// degrees  		123°::123°+Dig+Deg
Dem		= [dem=+].		// demonstrative  	dat::dat+Pron+Dem+N+Sg
Det		= det.			// determiner		deze::deze+Det+Dem+Sg
Dig		= num[dig=+].		// digital number	12,34::12,34+Dig
Dim		= [dim=+].		// diminutive  		koninkje::koning+Noun+M+Dim+Sg
Emph		= [emph=+].		// emphatic  		wél::wel+Adv+Emph
Fam		= [lastname=+].		// last name		Bakker::Bakker+Prop+Fam+Sg
Gen		= [gen=+].		// genitive case	des::de+Art+Def+Gen+MN+Sg
Giv		= [firstname=+].	// firstname		Anna::Anna+Prop+Giv+F+Sg
Impv		= [impv=+].		// imperative		ren::rennen+Verb+Impv+Sg
Ind		= [indic=+,fin=+].	// indicative		ren::rennen+Verb+Ind+Pres+1P+Sg
Indef		= [indef=+].		// indefinite		elk::elk+Pron+Indef
Inf		= [inf=+].		// infinitive		rennen::rennen+Verb+Inf
InfConj		= conj[infconj=+].		// inf. conjunction	om::om+InfConj
Init		= noun[initial=+].	// initials		A.B.::A.B.+Init
Interj		= interj.		// interjection		ah::ah+Interj
Interrog	= [interrog=+].		// interrogative	wie::wie+Pron+Interrog
Let		= noun[letter=+].	// single letter	a::a+Let+F(m)+Sg
NP		= noun[expr=+].		// noun phrase		de Verenigde Staten::de Verenigde Staten+Prop+Country+NP+Pl
Neg		= [neg=+].		// negative		oneffen::effen+Adj+Neg
NForm		= [nform=+].
Nom		= [nom=+].		// nominative		ik::ik+Pron+Pers+Nom+MF+1P+Sg
Noun		= noun.			// noun			auto::auto+Noun+M+Sg
Num		= num.			// numeral		vier::vier+Num+Card+Def
Onom		= interj[onom=+].	// onomatopoeia  	tsjilp::tsjilp+Onom
Ord		= [ord=+].		// ordinal number	vierde::vierde+Num+Ord+Def
Org		= [org=+].		// organization  	Xerox::Xerox+Prop+Org+Sg
Partial		= [pronpart=+].	// a part of a pronomial adverb example: 'erachter' --> achter, 'ervan' --> van
Past		= [past=+].		// past tense  		rende::rennen+Verb+Ind+Past+Sg
PastPart	= [pastpart=+].		// past participle	gerend::rennen+Verb+PastPart+Basic
Pers		= [pers=+].		// personal (pronoun)	ik::ik+Pron+Pers+Nom+MF+1P+Sg
Pl		= [pl=+].		// plural		dagen::dag+Noun+M+Pl
Place		= [place=+].		// place name		Emmastraat::Emmastraat+Prop+Place+Sg
Poss		= [poss=+].		// possessive		mijne::mijne+Det+Poss
PostMod		= [postmod=+].		// post-modifier	[wat] aardigs::aardig+Adj+PostMod
Postp		= prep[postp=+].	// postposition		[hij liep zijn huis] in::in+Postp
Prep		= prep.			// preposition		tot::tot+Prep
Pres		= [pres=+].		// present tense  	ren::rennen+Verb+Ind+Pres+1P+Sg
PresPart	= [prespart=+].		// present participle	rennend::rennen+Verb+PresPart+Basic
Pron		= pron.			// pronoun		we::we+Pron+Nom+MF+1P+Pl
PronAdv		= adv[pronom=+].	// pronominal adverb  	hierover::hier=over+PronAdv
Prop		= noun[proper=+].	// proper noun		Anna::Anna+Prop+Giv+F+Sg
Ptcl		= ptcl.			// particle		het::het+Ptcl+Sup
Punct		= punct.		// punctuation.		.::.+Punct+Sent
Quant		= quant.		// quantifier
Rec		= [rec=+].		// reciprocal  		elkaar::elkaar+Pron+Rec+Pl
Refl		= [refl=+].		// reflexive		zich::zich+Pron+Refl+MFN+3P+Sg
Region		= [region=+].		// region	 	Brabant::Brabant+Prop+Region
Rel		= [rel=+].		// relative		wier::wier+Pron+Rel+MFN+Pl
Rom		= [rom=+].		// roman (numeral)	IV::IV+Dig+Rom
Sent		= [sent=+].		// sentence final	!::!+Punct+Sent
Sep		= [sep=+].		// separeted particle	[daar niet] mee [hij loopt] mee::mee+Ptcl+Sep
Sg		= [sg=+].		// singular		dag::dag+Noun+M+Sg
SubConj		= conj[subord=+].	// subord. conjunction  omdat::omdat+SubConj
Sup		= [sup=+].		// superlative  	langst::lang+Adj+Sup+Basic
Symbol		= symbol.		// special symbol	@::@+Symbol
Time		= [time=+].		// clock time  		12:00::12:00+Dig+Time
Title		= noun[title=+].	// title		prof.::	prof.+Title
Usastate	= [state=+].		// state of the USA 	Utah::Utah+Prop+Usastate
Verb		= verb.			// verb			renden::rennen+Verb+Ind+Past+Pl
WAdv		= adv[interrog=+].	// interrogative adverb	waarom::waar=om+WAdv
Year		= [year=+].		// year (digit)		2001::2001+Dig+Year
1P		= [p1=+].		// 1st Person		ik::ik+Pron+Nom+MF+1P+Sg
2P		= [p2=+].		// 2nd Person		rent::rennen+Verb+Ind+Pres+2P+Pl
3P		= [p3=+].		// 3rd Person		het::het+Pron+Indef+3P+Sg

// ----------------------------------------------------------------------------------------------
// GENDER:
F	= [fem=+].			// feminine  		buitje::bui+Noun+F+Dim+Sg
M	= [masc=+].			// masculin		emmer::emmer+Noun+M+Sg
N	= [neut=+].			// neuter  		bureaus::bureau+Noun+N+Pl
// ambigous gender (no preference)
FN	= [fem=+, neut=+].		// fem. or neut.	alliage::alliage+Noun+FN+Sg
MF	= [masc=+, fem=+].		// masc or fem.		men::men+Pron+Nom+MF+3P+Sg
MN	= [masc=+, neut=+].		// masc or neut.	gom::gom+Noun+MN+Sg
MFN	= [masc=+, fem=+, neut=+].	// masc, fem or neut  	de::de+Art+Def+MFN+Pl
// ambigous (depending on context)
MFCon	= [fem=+, masc=+].		// masc or fem		lange::lang+DAdj+Noun+MFCon+Sg
// ambigous gender : Upper case letter is preferred reading; (m) is preference in North Holland 
Fn	= [fem=+, neut=+].		// 			voltage::voltage+Noun+Fn+Sg
F\(m\)	= [fem=+, masc=+].		//  			harp::harp+Noun+F(m)+Sg
F\(m\)n	= [fem=+, masc=+, neut=+]. 	//			molecuul::molecuul+Noun+F(m)n+Sg
Mf	= [fem=+, masc=+].		//			valk::valk+Noun+Mf+Sg
Mn	= [masc=+, neut=+].		//			carrousel::carrousel+Noun+Mn+Sg
Nf	= [neut=+, fem=+].		//			idees::idee+Noun+Nf+Pl
Nf\(m\)	= [neut=+, fem=+, masc=+].	//			gilde::gilde+Noun+Nf(m)+Sg
Nm	= [neut=+, masc=+].		//			gel::gel+Noun+Nm+Sg



\#guess	= [guessed=+].
\#open	= [guessed=+].

// punctuations:
Quote	= [quote=+].
Colon	= [colon=+].
Apst	= [quote=+].
