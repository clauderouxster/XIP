//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Copyright (c) 2006 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! File:	chunker.xip
//! Content:	Chunk definitions
//!
//! Language:	ITALIAN
//! ENCODING:	UTF-8	[€àâáäã]
//!
//! Author:	Anne Schiller
//!
//! Date: 	17-Jan-2006	:: initial version
//! Update:	08-Apr-2008	:: changed to UTF-8
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


//----------------------------------------------------------------------------------------------------

Sequence:

//// sample VP (imperative + clitics)

//100> vp = verb[tokenstart], ?*, pron[tokenend].

//// --------------------------------------------------------------------------------------
//// simple NP
//100> np = art#1[prep:~], noun#2, adj#3,
//	where ( 
//		  #1[number]:#2[number] 
//		& #1[gender]:#2[gender] 
//		& #3[number]:#2[number] 
//		& #3[gender]:#2[gender] 
//	).
//100> np = art#1[prep:~], adj#2, noun#3,
//	where ( 
//		  #1[number]:#2[number] 
//		& #1[gender]:#2[gender] 
//		& #3[number]:#2[number] 
//		& #3[gender]:#2[gender] 
//	).
//100> np = art#1[prep:~], noun#2,
//	where ( 
//		  #1[number]:#2[number] 
//		& #1[gender]:#2[gender] 
//	).
//100> np = noun#1, adj#2,
//	where ( 
//		  #1[number]:#2[number] 
//		& #1[gender]:#2[gender] 
//	).
//100> np = adj#1, noun#2,
//	where ( 
//		  #1[number]:#2[number] 
//		& #1[gender]:#2[gender] 
//	).
//100> np = noun.
//100> np = adj#1, noun#2,
//	where (
//		#1[gender]:#2[gender]
//		& #1[number]: #2[number]
//	). 


////----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

// essay sur NE
//1> noun[lastname] = noun[firstname:+]




//=================================== AP========================================================================


2> ap = adj.

//ex: "questa casa Ã¨ (semplicemente) splendida"; "questa casa Ã¨ (davvero) (molto) bella". ~"Oggi, dom, ieri, etc."
2> ap = adv*[tempadv:~], (quant[fem:~,pl:~]), adj.		//GD


// ex: "un ragazzo non bello ma simpatico"
2> ap @= neg, (adv*), (quant*), adj.	//GD


//"La piÃ¹ forte / la meno forte"
//2> ap = det[art], adv[fpiÃ¹], adj.
//2> ap = det[art], adv[fmeno], adj.


//---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

//==============================================//REFLEXIVE FINITE VERBS: ========================================


//ex: La politica perseguita dal regime SI INTEGRA in una politica di repressione delle minoranze.
3> rfv = (neg), pron[refl:+], verb[pastpart:~,prespart:~,inf:~,gerund:~].
3> rfv = |pron#1[nom:+]|  pron#3[preclit:+], (pron[refl:+]), verb#5[fin:+,pastpart:~,prespart:~,inf:~,gerund:~],
	where (  
		#1[number]:#5[number]
		&#1[person]:#5[person]
		&#1[person]:#3[person]
		&#1[number]:#3[number]
		&#3[person]:#5[person]
		&#3[number]:#5[number]
	).

//		#4[number]:#2[number]
//		&#4[person]:#2[person]
//		&#4[person]:#1[person]
//		&#4[number]:#1[number]
//		&#1[person]:#2[person]
//		&#1[number]:#2[number]


//		 #1[number]:#2[number] 
//		& #1[person]:#2[person] 
//	).


//========================================================FV=====================================================


//ex "Michele ti chiama"; "Michele me le presta"; "l'ho detto io"; To avoid VPs like "io parlo"
//ex: "L'orologio non funziona"; "non possono essere moneta di scambio"; "questo non te lo dico!";
//"Ho troppo lavorato", "Acqua Marcia per ora scongiura il fallimento".

//3> fv @= (neg), (pron[preclit:+]), pron*[nom:~,poss:~,indef:~,rel:~,dem:~], verb[pastpart:~,prespart:~,inf:~,gerund:~].
3> fv @= (neg), pron*[aton:+,acc:+,nom:~,poss:~,indef:~,rel:~,dem,refl:~], verb[pastpart:~,prespart:~,inf:~,gerund:~,maj:~].
3> fv @= (neg), pron*[dat:+,nom:~,poss:~,indef:~,rel:~,dem:~,refl:~], verb[pastpart:~,prespart:~,inf:~,gerund:~,maj:~].
3> fv @= (neg), (pron[preclit:+, aton:+, acc:+]),pron*[aton:+,acc:+,dem:+,nom:~,poss:~,indef:~,rel:~,refl:~], verb[pastpart:~,prespart:~,inf:~,gerund:~,maj:~] | verb[pastpart:+,pl:+]|.
3> fv @= (neg), adv[lemma:ci], verb[form:fessere,pastpart:~,prespart:~,inf:~,gerund:~,maj:~]  | verb[pastpart:+,sg:+]|.
3> fv @= (neg), adv[lemma:ci], verb[form:favere,pastpart:~,prespart:~,inf:~,gerund:~,maj:~]  | verb[pastpart:+,sg:+]|.
3> fv @= (neg), verb[pastpart:~,prespart:~,inf:~,gerund:~].
3> fv @= (neg), pron*[dat:~,nom:~,poss:~,indef:~,rel:+,dem:~,refl:~], verb[pastpart:~,prespart:~,inf:~,gerund:~,maj:~].


//================================================NFV==========================================================


//ex: "Ho troppo lavorato", "Acqua Marcia per ora ha scongiurato il fallimento".
//ex: "Una folla di contestatori appartenenti ai movimenti no global"

3> nfv = (neg), adv*, verb[pastpart:+].
3> nfv = (neg), adv*, verb [prespart:+].


//===================================================GV========================================================


//ex: "sto mangiando"; "sto ancora mangiando"; "non sto mangiando"; "non sto piÃ¹ mangiando"

3> gv = verb[gerund:+].
3> gv @= (neg), (adv), verb[gerund:+].


// ====================================================IV======================================================


//ex: "Ho scordato di chiamarti per chiederti di non andare a comprare le arance"; "Partire Ã¨ un po' morire"

//3> IV = verb[inf:+,hmm_vinf_clit:+], pron[refl:+].
3> IV = verb[inf:+], pron[refl:+].

3> iv = (prep), (neg), (adv[subord:~]),verb[inf:+], pron*[aton].


//3> iv @= (prep), (neg), (adv[subord:~]), verb[hmm_vinf:+,Adv:+,hmm_vinf_clit:+]. / (di; per) (non) andarci\
//3> iv @= (prep), (neg), (adv[subord:~]), verb[hmm_vinf_clit:+,inf:+]. /di non saperlo; voglio assolutamente saperlo\



//Regrouper Verbs + clitic pron.




//==========================================PASSIVE FORMS======================================================


3> fv[passive:+] @= |verb[aux:+,form:fessere]| (adv), verb[pastpart:+] |prep[lemma:da]| .


//20> FV[passif=+, verbal=+] @= ?[aux:+, nonper:~], verb[pastpart:+, cop:+], (adv), ?[pastpart:+].
//3> iv 20> VINF[passif=+, verbal=+] @= |prep| ?[cop:+, nonper:+], (adv), ?[pastpart:+].


//20> VINF[passif=+, verbal=+] @= |prep| ?[aux:+, nonper:+], verb[pastpart:+, cop:+], (adv), ?[pastpart:+].


// =====================================================NP====================================================




// (NB: feature in ap[adj:last+] to avoid something like "NP{il funzionario}} NP{AP{sovietico} Eugene} NP{Ivanov}").
5> np = ~|[noun]|   adj,  noun[last:+, prop:~].


//5> np = noun[prop:+], conj<coord>, noun[prop:+].



//"(Il, questo) cane"; due cani
5> np = ~num, (det), noun.		//GD
5> np = num[time:~], noun.	//GD
//"(Il, questo) cane"
5> np = det+, noun.		//GD



// "Giovanni Depau"
5> np = noun#1[prop:+], noun#2[prop:+],
where ( 
	#1[featprop]:#2[featprop]
).



//[La sua forma] geografica
5> np = (det, prep), adj[poss:+], noun.

// "(Il, questo) cane" "i nostri amici" "Questi nostri amici" "Questi vostri tre< amici" "Questi pochi bei momenti""tutti i (nostri) (piÃ¹ bei) momenti", "I prossimi tre mesi", "la presente legge".
//"Le classi medie vedono un Nuovo Favorevole assetto sociale" 
5> np @= | prep| det*, (det[art:+]), (adj), (quant), (num), ~noun, ap*, ~verb, num,  noun[prod:~].
5> np @= | prep| det*, (det[art:+]), (adj), (quant), (num), ~noun, ap*, ~verb, (num),  noun[prod:~].


// in alcuni anni
5> np = quant, noun[prop:~].

//"Io, tu, noi etc."
5> np = pron[nom:+].

//5> np[rel=+] = pron[rel:+].
//5> np = det[art]*, adj, noun[prop:~,soc:~, prod:~].



//"(non) molti"; NP[alcune centinaia] PP[di metri]
5> np = det[art], (adj), quant, ~noun .
5> np = (neg), quant, ~noun .		//GD

//"I dieci", "questi dieci"
5> np = det[art], (adj), num |~noun |.		//"Le altre diciasette" (17).
5> np = (det), num[dig:+].		//GD  "I 10", "questi 10"

5> np = num[dig:+], noun.
5> np = num, noun[meas:+].	//25 mm (millimetri)




5> np @= det* (quant), (num), adj+[demonym:~], noun[soc:~,prod:~, prop:~].


//"{Sono} {io}", "{sono} {{i} miei}}"," ~{{ti}{sono}} {grato}".
5> np = (adj[indef:~]), (det[art]), pron[acc:~,dat:~,aton:~,elided:~,conjche:~].

// "non io"
5> np = neg, pron[nom:+,conjche:~].		//GD

//"non il lunedï¿½; non questa cosa, Non Francesco."
5> np = neg, (det[art]), (det[dem,poss]) , noun.

//"non il tuo"
5> np = (neg), (det), pron[nom:~,acc:~,preclit:~,conjche:~].	//GD 

// "Centrodestra e centrosinistra al voto." "Le elezioni che si terranno il 9 e 10 aprile."
//this rule cannot work...//
//5> np @= np, punct~, conj[coord:+,subord:~], punct~, np. 

5> np = noun.

5> np = adv[form:fpiù], noun.

//The presence of an article (or a det) before an adjective makes a np;
//ex "il bello deve ancora venire"; "Tutto il bello della diretta"; "l'importante ï¿½ partecipare", "La mia bella".
5> np = det, (adj), (det[art]), (adj[poss:+]), ap, noun.
5> np = det[art], (num), ap.

//The presence of an article (or a det or a prep) before an adverb makes a np;
//ex "il meglio", "l'oggi e il domani"
5> np = det, (pron[poss:+]), adv.


//The presence of an article (or a det) before a (pronominal and reflexive) INFINITIVE verb makes a np;
//ex: "L'avvicinarsi della riduzione dei tassi tedeschi e il rafforzarsi della ripresa americana favoriscono il rialzo 
//della valuta Usa."; "il mangiare e il bere", Il suo incedere
5> np = det[art], pron*[poss:+], iv.


//The presence of article (or a det) before a NFV makes a np; "i due duellanti", "Gli stessi duellanti".
5> np = det+, (num), nfv[pastpart:~].
5> np = (det[art]), det, (num), nfv[pastpart:~].

5> np = det[art], AP, num, noun.

// Da qualche anno
5> np = det[art], AP, noun.


5> np = num.


//(Il Principe) Alberto di Monaco; (Il Re) Alberto I di Belgio
//5> np @= det*,(noun+[premod,title:+]),(adj[poss:~]), noun+[firstname:+,first:+,maj:+], (num[rom]),
//(prep[lemma:di]),noun[featgeo,maj:+].



//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// =====================================================PP=========================================================

//ex: Michele vive nella (bella) casa (gialla); in una (bella) casa (gialla); di fronte a me. Di fronte al mare.

6> pp = prep, (prep), np[rel:~].	//GD

6> pp = prep, ap.	//GD

6> pp = prep, num.		 // GD 27-02

6> pp = prep, det[art:+,indef:+] | prep |.  // "il nostro giornale auspica un esito favorevole ad una delle due parti in competizione."

//verso le 20.15
6> pp = prep, det[art:+],num[dig:+,time:+] . 

6> pp[rel=+] = prep, np[rel:+].

6> pp = prep, pron.


6> pp = prep, adv.	//"siamo convinti che la coalizione costruita da Romano Prodi abbia i titoli atti a governare [al meglio] per i prossimi cinque anni","Di sempre, d'oggi".
//per i prossimi cinque anni
6> pp = prep, NP.


//--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
// ===================================================ADVP====================================================

7> advp = (adv[aconj:~,tempadv:~]), adv<lemma:ci~>.	//GD	"sempre", but not "dove, quando, come".
7> advp = neg, adv.	//GD	"non sempre"


//20> advp = (quant;det[art];num), noun[period:+], verb[lemma:fare]. 
//20> advp = noun[period:+], adv[lemma:fa].

//-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
//=================================================BG=============================================================

//Tokens that typically introduce a subordinate clause are chunked as BGs
//BGs are then used as the first element in certain sentence chunks

8> bg = ?[subord]. 

8> bg = conjche.

8> bg = pp[rel:+].

8> bg = pron[rel:+,interrog:+,indef:+].

8> bg = ?[coord:+]  |np[pron:+,nom:+,dem:~,ton:~],?[conjche:~]|. 

8> bg = punct[form:f2pts] |punct|.		// citation :".

//==================================================SC============================================================

10> sc = fv.
10> sc = bg, ?*, fv.
10> sc = np, ?*[bg:~,punct:~], fv.
10> sc = punct[quote], np,?*[bg:~,punct:~], fv | ?*,punct[quote]|.
10> sc = punct[comma], ?*[bg:~,punct:~], fv .
10> sc = (punct[quote:~]), np,?*[bg:~,punct:~], fv .
//10> sc = bg, ?*[bg:~], fv.



10> sc = rfv.
10> sc = bg, ?*, rfv.
10> sc = (punct), np,?*[bg:~,punct:~], rfv.
//10> sc = bg, ?*[bg:~], rfv.



/* From the beginning of the sentence to the main FV *\
//10> sc = ?[start:+],?*[fin:~],fv.




//==============*****************=================*******************===================*******************=================
