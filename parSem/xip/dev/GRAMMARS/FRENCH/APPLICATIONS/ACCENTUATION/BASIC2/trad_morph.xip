//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2000 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! ENCODING : UTF-8	[€àâáäã]
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

// morphological features

Translation:
//Traductions:

// Main categories
Adj 	= adj.			// adjective
Adv	= adv.			// adverb
Conj	= [conj=+].			// conjunction
Det 	= det[closed].			// determiner
Interj  	= interj.		// interjection
Neg	= neg.		// negation "ne"
Noun 	= noun[p3=+].	// noun
Num	= [num=+].			// numeral
Prep	= prep.			// preosoition
Prep\=le		= prep.		// du, aux
Prep\=ledit	= prep.		// dudit, auxdites
Prep\=lequel	= prep[rel=+].		// duquel, auxquelles
Pron	= pron[closed=+].	// pronoun
Prop	= noun[proper=+,p3=+].	// proper name
Prefix	= prefix.		// prefix (re-, anti-, pseudo)
Punct	= [punct=+].		// punctuation
Sgml	= sgml.
Symbol	= noun[symbol=+].	// symbol (units, currencies)
Verb	= [verb=+].			// verb

// sub-types (nouns, adjectives, proper names)
Common 		= [common=+].		// common noun
Curr 		= [curr=+].		// currency
Qual 		= [qual=+].		// qualitative (adjective)
Card		= [card=+,closed=+].		// cardinal (number)
Ord		= [ord=+].			// ordinal (number)
Unit 		= [measure=+].		// measure unit	(mm, sec, °C)
Meas		= [measure=+].

// person names
Celeb 		= [celeb=+].		// famous person
Firstname 	= [person=+, pren=+].	//
Lastname 		= [person=+, lastname=+].	//

// temporal sub-types
Year		= [year=+].		// year (numeral)
Date		= [date=+].
Time		= [time=+].
Month		= [mois=+,time=+].
Weekday		= [jour=+,time=+].


// geographic sub-types
City 		= [d_ville=+].		// 
Continent 	= [d_continent=+].		//
Country		= [d_pays=+].	//
Geo 		= [d_geo=+].			//
Mountain 		= [d_geo=+, d_montagne=+]. 		//
Region 		= [d_region=+].		//
River		= [d_geo=+, d_fleuve=+].		//

// named entities
Bus		= [firme=+].
Org		= [org=+].

// number	
Sg	= [sg=+].		// singular
Pl	= [pl=+].		// plural
SgPl	= [sg=+, pl=+].		// singular or plural

// pronoun, determiner types
Prtf 	= [prtf=+].		// partitive		de 
Indef 	= [indef=+].		// indefinite		
Int	= [int=+].			// interrogative	quel
Pers 	= [personal=+].		// personal		il; me
Poss  	= [poss=+].		// possessive		mon; tien
Refl	= [refl=+].		// reflexive		se  
Rel 	= [!rel=+].		// relative		qui; dont
Def 	= [def=+].			// definite		le
Dem 	= [dem=+].			// demonstrative	ce; celui
Quant	= [quant=+].		// quantifier	toute
Tonic	= [ton=+,nom=+,acc=+,dat=+].	// tonic pronoun	moi
Clitic	= [clit=+].		// clitical pronoun	me
Suffix	= [suffix=+,hyph=+].

// conjuctions
Coord 	= [coord=+].		// coordination		et; ou; car
Subord	= [sub=+].		// subordination	puisque; comme
Que	= [conjque=+].
Comme	= [form=fcomme].
Compar	= [compar=+].

// case
Nom	= [nom=+].		// nominative (pronoun)	je [pars]
Acc	= [acc=+].		// accusative (pronoun)	[il] le [voit]
Dat 	= [dat=+].		// dative (pronoun)	[il] lui [manque]
Gen	= [gen=+].		// genitive clitic	[il] en [parle]
Loc	= [loc=+].		// locative clitic	[il] y [va]

// gender
Fem	= [fem=+].		// feminine
Masc	= [masc=+ ].		// masculine
MF	= [fem=+, masc=+].	// feminine or masculine (or unknown)

// person
P1	= [p1=+].		// first		je vais; nous allons
P2	= [p2=+].		// second		tu va; vous allez
P3	= [p3=+].		// third		il va; elles vont


// verb mood, tense, etc.
Cond 	= [cond=+].		// conditional		[il] irait
Fut	= [fut=+].		// future		[il] ira
Imp	= [imp=+].		// imperative		va !
Impar	= [pas=+].		// past "imparfait"	[il] allait
Indic	= [ind=+].		// indicative		[je] vais
Inf 	= [inf=+].		// infinitive		aller
Part 	= [part=+].		// participle		allé, allant
PasS	= [pas=+].		// past "passé simple"	[il] alla
Past	= [pas=+].		// past (participle)	[il est] allé	
Pres	= [pre=+].		// present		[il] va; [en] allant
Subj	= [subj=+].		// subjunctive		[qu'il] aille

// Punctuations
Apst		= [apostrophe=+].	// '
Colon 		= [colon=+].		// : 
Comma 		= [comma=+, form=fcm].		// ,
Dash 		= [dash=+].		// -
Hyphen		= [hyph=+].		// -
Paren		= [paren=+].		// ( ) [ ] 
Quote		= [quote=+].		// " '
Semicolon 	= [semicolon=+].	// ;
Sent		= [sent=+].		// . ! ?
Slash		= [slash=+].		// /
RightSpace	= [rightspace=+].
LeftSpace		= [leftspace=+].
// Other
Initial		= [initial=+].
Apo  		= [apo=+].		// elided form		l'
Art 		= [req_art=+].		// requires article	[le] Havre
PsNeg		= [psneg=+].


guessed		= [guessed=+].
openclass		= [guessed=+].
Typo		= [typo=+].

Categorydefinition:
[conj:+,coord:+]	= coord[conj=+].
[conj:+,conjque:+] 	= conjque.
[conj:+,coord:~,conjque:~]	= conj.

[num:+,ord:+]	= adj[ord=+].
[num:+,ord:~]	= num.
 
[verb:+,pas:+,part:+] = verb[partpas=+].
[verb:+,pre:+,part:+] = verb[partpre=+].
[verb:+,part:~] = verb.

[punct:+,sent:+]	= sent.
[punct:+,sent:~]	= punct.