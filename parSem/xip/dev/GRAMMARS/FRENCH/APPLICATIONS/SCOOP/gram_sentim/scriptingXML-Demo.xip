Variables:

int _compteur=1 ;

int left1;
int right1 ;
int left2;
int right2 ;
int _idcount=0 ;

Script: 

//basic named entities


//relation of opinions


// main concepts 

if  ( SENTIMENT[positive](#2,#1[main-concept],?) ) {
    offset(#1,left1,right1);
    offset(#2,left2,right2);
    @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","mainconcept",leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
}

if  ( SENTIMENT[negative](#2,#1[main-concept],?) ) {
    offset(#1,left1,right1);
    offset(#2,left2,right2);
    @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","mainconcept",leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
}

// sans features related

if  ( SENTIMENT[negative](#2,#1[main-concept:~,fictivenode:~],?) & ~RELATED-FEATURE(#2,?) &  ~RELATED-FEATURE(#1,?) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature","unknown",leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2,leftoffset,left1,rightoffset,right1);
       _idcount=_idcount+1;
 }

if  ( SENTIMENT[positive](#2,#1[main-concept:~,fictivenode:~],?) & ~RELATED-FEATURE(#2,?) &  ~RELATED-FEATURE(#1,?) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature","unknown",leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2,leftoffset,left1,rightoffset,right1);
       _idcount=_idcount+1;
 }


// avec features related


if ( SENTIMENT[positive](#2,#1[main-concept:~],?)  & RELATED-FEATURE(#2,#3)){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( SENTIMENT[negative](#2,#1[main-concept:~],?)  & RELATED-FEATURE(#2,#3)){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( SENTIMENT[positive](#2,#1[main-concept:~],?)  & RELATED-FEATURE(#1,#3)){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( SENTIMENT[negative](#2,#1[main-concept:~],?)  & RELATED-FEATURE(#1,#3)){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

// for single relations


if ( SENTIMENT[positive](#2,?[fictivenode],?)  & ~RELATED-FEATURE(#2,?) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive","scope","mainconcept",leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }

if ( SENTIMENT[negative](#2,?[fictivenode],?)  & ~RELATED-FEATURE(#2,?) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative","scope","mainconcept",leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }




if ( SENTIMENT[positive](#2)  & ~RELATED-FEATURE(#2,?) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive","scope","mainconcept",leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }

if ( SENTIMENT[negative](#2)  & ~RELATED-FEATURE(#2,?) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative","scope","mainconcept",leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }

if ( SENTIMENT[positive](#2)  & RELATED-FEATURE(#2,#3) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature",#3[lemme],leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }

if ( SENTIMENT[negative](#2)  & RELATED-FEATURE(#2,#3) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature",#3[lemme],leftoffset,left2,rightoffset,right2);
 _idcount=_idcount+1;  }


Final:
print("\n</review>\n<review>\n");
@_current()->save("resXIP.xml","UTF-8"); 
@_current()->clean();
