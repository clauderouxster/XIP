DependencyRules:

| TOP#1{ ?+ } |
    SENT(#1).

//////////////// ACT, THEME, PLACE \\\\\\\\\\\\\\\\

//Insert another network SIM card into the phone, then turn it on.
//SC{FV{Insert}} NP{another network SIM card}
//MOD_POST(Insert,phone)

| sc{fv{#1}}, np{?+,#2[last]} |
if ( ~ACT(#1) )
    ACT(#1).

//Use the Three Finger Salute (CTRL-ALT-DELETE) to get past the security window.
//OBJ-N(Use,Salute)

if ( OBJ-N(#1,#2) & ~ACT(#1) )
   ACT(#1).

if ( OBJ(#1,#2) & ~ACT(#1) )
   ACT(#1).


| sc{fv{#1}}, np{?+,#2[last]} |
if ( ACT(#1) )
    THEME(#2).


if ( OBJ-N(#1,#2) & ACT(#1) )
   THEME(#2).

if ( OBJ(#1,#2) & ACT(#1) )
   THEME(#2).

if ( ACT(#1) & MOD[post](#1,#2) & PREPD(#2,?) )
    PLACE(#2).

if ( ACT(#1) & THEME(#2) & PLACE(#3) & ~INSTRUCTION(#1,#2,#3) )
    INSTRUCTION(#1,#2,#3)

if ( ACT(#1) & THEME(#2) & ~INSTRUCTION(#1,#2,#3) )
    INSTRUCTION(#1,#2)


//Insert another network SIM card into the phone, then turn it on.
//THEME(card)
//SUBJ-N(turn,SOMEONE)
//OBJ_POST(turn,it)

if ( THEME(#1) & SUBJ-N(#2,#3[lemme:SOMEONE]) & OBJ(#2,#4[pron]) )
    ACT(#2), INSTRUCTION(#2,#1).

//Insert a SIM card from another network, then press the Power key.
//SUBJ-N_PRE(press,card)
//OBJ_POST(press,key)
//THEME(card)

if ( THEME(#1) & ^SUBJ-N(#2,#1) )
    ~.


//////////////////////////// CONDITIONS \\\\\\\\\\\\\\\\\\\\\\\\\\

//If the display shows Network lock, enter the NCK code.
//CONNECTOR_SUBORD(#1shows,#2If)
//SUBJ_PRE(#1shows,#3display)
//SC{BG{#2If} NP{the #3display} FV{#1shows}} NP{Network #4lock}
//OBJ_POST_SENTENCE(shows,enter) - incorrect

| SC{bg{#2}, NP{?*,#3[last]}, FV{#1}}, NP{?*, #4[last]} |
if ( CONNECTOR(#1,#2[lemme:if]) & SUBJ(#1,#3) )
    CONDITION(#3,#1,#4).

| SC{bg{#2}, NP{?*,#3[last]}, FV{#1}}, NP{?*, #4[last]} |
if ( CONNECTOR(#1,#2[lemme:if]) & SUBJ(#1,#3) & CONDITION(#3,#1,#4) & ^OBJ[post,sentence](#1,?) )
    ~.

//CONDITION(display,shows,lock)
//OBJ_POST(enter,code)

if ( CONDITION(#1,#2,#3) & OBJ(#4,#5) & ~ACT(#4) & ~THEME(#5))
    ACT(#4), THEME(#5), INSTRUCTION(#4,#5) .

//If the display does not read Network lock and/or SP lock, please refer to Alternate Unlocking Process below.
//CONNECTOR_SUBORD(#1read,#2If)
//MOD_NEG(#1read,#3not)
//SUBJ_PRE(#4does,#5display)
//NUCL_VLINK_INSIST(#4does,#1read)
//OBJ_POST(#1read,#6lock)

if ( CONNECTOR(#1,#2[lemme:if]) & MOD[neg](#1,#3) & SUBJ(#4,#5) & NUCL(#4,#1) & OBJ(#1,#6) & ~CONDITION(#5,#4,#3,#1,#6) )
    CONDITION[neg=+](#5,#1,#6).

//If only one code has been supplied.
//CONNECTOR_SUBORD(supplied,If)
//OBJ-N(supplied,code)
//QUANTD(code,one)

if ( CONNECTOR(#1,#2[lemme:if]) & OBJ-N(#1,#3) & QUANTD(#3,#4) )
    CONDITION[quantitative=+](#1,#3).

//For Samsung Touch Screen Phones.
//PREPD(Phones,For)
//ORGANISATION(Samsung)

if ( PREPD(#1[endword],#2[start]) & ORGANISATION(#3) )
    CONDITION[mark=+](#1).

/////////////////// INSTRUCTIONS \\\\\\\\\\\\\\\\ 

if ( ^$1(#1) & DETD(#1,#2[def]) )
    $1[def=+](#1).

if ( ^$1(#1[symbol]) )
    $1[def=+](#1).




/////////////////// RESULT \\\\\\\\\\\\\\\

//The phone will now be unlocked.
//VDOMAIN_MODAL_PASSIVE(unlocked,will)
//SUBJ_PRE(will,phone)

if ( VDOMAIN(#1,#2[lemme:will]) & SUBJ(#2,#3) )
    OUTCOME(#3,#1).

if ( ^OUTCOME(#2,#1) & OBJ(#1,#3) )
    OUTCOME(#2,#1,#3).

   
| #1[vprog] |
if ( ~PROCESS(#1) )
    PROCESS(#1).


////////////// NOTE \\\\\\\\\\\\\\

| #1[lemme:note] |
if ( ^SENT(#2) )
    SENT[note=+](#2).

