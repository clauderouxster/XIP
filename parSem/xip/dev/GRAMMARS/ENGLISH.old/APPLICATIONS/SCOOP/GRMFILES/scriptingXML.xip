Variables:

int _compteur=1 ;
//dictionary dpolar;

int left1;
int right1 ;
int left2;
int right2 ;
int _idcount=0 ;


//dpolar["OPINION-NEGATIVE"]="negative";
//dpolar["OPINION-POSITIVE"]="positive";


Script: 



// named entities for opinions
if (TOPICREVIEW(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,topicreview,leftoffset,left1,rightoffset,right1);}

if (DATEREVIEW(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,datereview,leftoffset,left1,rightoffset,right1);}

if (OPINION-HOLDER(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,opinionholder,leftoffset,left1,rightoffset,right1);}

if (COMPANYREVIEW(#1)){
      offset(#1,left1,right1);
      @_current()->markup(!#1!,companyreview,leftoffset,left1,rightoffset,right1);}

if (PRODUCT(#1) & ~TOPICREVIEW(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,product,leftoffset,left1,rightoffset,right1);}

if (DATE(#1) & ~DATEREVIEW(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,date,leftoffset,left1,rightoffset,right1);}      

if (PERSON(#1) & ~OPINION-HOLDER(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,person,leftoffset,left1,rightoffset,right1);}      

if (ORGANISATION(#1) & ~COMPANYREVIEW(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,organisation,leftoffset,left1,rightoffset,right1);}   


if ( (LOCORG(#1) | LOCATION(#1))){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,location,leftoffset,left1,rightoffset,right1);} 

if ( EVENT(#1)){
   offset(#1,left1,right1);
   @_current()->markup(!#1!,event,leftoffset,left1,rightoffset,right1);} 

// basic name entitites


// relations of opinions 

//if (OPINION(#1,#2,#3,#4,#5,#6)){ 
//   offset(#6,left1,right1);
//   offset(#7,left2,right2);
 //  @_current()->markup(#6,"opinion","left",left1,"right",right1,"polarity",dpolar[#2],"topic",#1[lemme],"associated-//concept",#3[lemme],"left-associated",left2,"right-associated",right2);
//}


// Main concepts commented without related feature

if ( ( SENTIMENT[positive](#1[main-concept],#2) |  SENTIMENT[positive](#2,#1[main-concept]))  & ~RELATED-FEATURE(#2,?) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","mainconcept",leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( ( SENTIMENT[negative](#1[main-concept],#2) |  SENTIMENT[negative](#2,#1[main-concept]))  & ~RELATED-FEATURE(#2,?) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","mainconcept",leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }


// main concept commented with related feature: the printer is fast

if ( ( SENTIMENT[positive](#1[main-concept],#2[sentiments]) |  SENTIMENT[positive](#2[sentiments],#1[main-concept]))  & RELATED-FEATURE(#2,#3) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( ( SENTIMENT[negative](#1[main-concept],#2[sentiments]) |  SENTIMENT[negative](#2[sentiments],#1[main-concept]))  & RELATED-FEATURE(#2,#3) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative"leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

// for associated concepts, i.e. which are not main concepts

//a. without equivalences

if ( ( SENTIMENT[positive](#1[main-concept:~],#2[sentiments]) |  SENTIMENT[positive](#2[sentiments],#1[main-concept:~]))  & ~RELATED-FEATURE(#2,?) & ~RELATED-FEATURE(#1,?) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature","unknown",leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2,leftoffset,left1,rightoffset,right1);
       _idcount=_idcount+1;
 }

if ( ( SENTIMENT[negative](#1[main-concept:~],#2[sentiments]) |  SENTIMENT[negative](#2[sentiments],#1[main-concept:~]))  & ~RELATED-FEATURE(#2,?)& ~RELATED-FEATURE(#1,?)  ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature","unknown"leftoffset,left1,rightoffset,right1);
	  @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }


//b. with equivalences

if ( ( SENTIMENT[positive](#1[main-concept:~],#2[sentiments]) |  SENTIMENT[positive](#2[sentiments],#1[main-concept:~]))  & RELATED-FEATURE(#2,#3) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( ( SENTIMENT[negative](#1[main-concept:~],#2[sentiments]) |  SENTIMENT[negative](#2[sentiments],#1[main-concept:~]))  & RELATED-FEATURE(#2,#3) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( ( SENTIMENT[positive](#1[main-concept:~],#2[sentiments]) |  SENTIMENT[positive](#2[sentiments],#1[main-concept:~]))  & RELATED-FEATURE(#1,#3) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

if ( ( SENTIMENT[negative](#1[main-concept:~],#2[sentiments]) |  SENTIMENT[negative](#2[sentiments],#1[main-concept:~]))  & RELATED-FEATURE(#1,#3) ){
      offset(#1,left1,right1);
      offset(#2,left2,right2);
      @_current()->markup(#1,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature",#3[lemme],leftoffset,left1,rightoffset,right1);
      @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative",leftoffset,left2,rightoffset,right2);
       _idcount=_idcount+1;
 }

// for single relations

if ( SENTIMENT[positive](#2)  & ~RELATED-FEATURE(#2,?) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive","scope","mainconcept",leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }

if ( SENTIMENT[negative](#2)  & ~RELATED-FEATURE(#2,?) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative","scope","mainconcept",leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }

if ( SENTIMENT[positive](#2)  & RELATED-FEATURE(#2,#3) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","positive","scope","feature","relatedfeature",#3[lemme],leftoffset,left2,rightoffset,right2);
  _idcount=_idcount+1; }

if ( SENTIMENT[negative](#2)  & RELATED-FEATURE(#2,#3) ){
   offset(#2,left2,right2);
   @_current()->markup(#2,"opinion","id",_idcount,"polarity","negative","scope","feature","relatedfeature",#3[lemme],leftoffset,left2,rightoffset,right2);
 _idcount=_idcount+1;  }


Final:
print("\n</review>\n<review>\n");
@_current()->save("resXIP.xml","ISO-8859-1"); 
@_current()->clean();

