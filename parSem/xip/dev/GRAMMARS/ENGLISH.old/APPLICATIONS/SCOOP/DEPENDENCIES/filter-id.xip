

DependencyRules:

|#1[main-concept=+]|
        if (PRODUCT(#1))
        ~


// experience
|#2[tempexpr]|
if ( TEMP(#1[possession],#2) & (OBJ(#1,#3[main-concept]) | OBJ-N(#1,#3)))
   HAVESINCE(#1,#3,#2)


// skills

if ( ATTRIB[neg:~](#1[lemme:"I"],#2[master]) & MOD(#2,#3) & SUBJ-N(#4,#1) )
   EXPERT(#1,#2,#3).

if ( ATTRIB(#1[lemme:"I"],#2[master]) & MOD(#2,#3) & SUBJ-N(#4,#1) & NEGAT(#4) )
   NOVICE(#1,#2,#3).

if ( ATTRIB(#1[lemme:"I"],#2[begin])   & MOD(#2,#3) & SUBJ-N(#4,#1) & ~NEGAT(#4) )
      NOVICE(#1,#2,#3).


if (  ATTRIB(#1[lemme:"I"],#2[master]) & SUBJ-N(#4,#1) & MOD(#4,#3) & ~NEGAT(#4) )
      EXPERT(#1,#2,#3).

if (  ATTRIB(#1[lemme:"I"],#2[begin]) & SUBJ-N(#4,#1) & MOD(#4,#3) & ~NEGAT(#4) )
   NOVICE(#1,#2,#3).

if (  ATTRIB(#1[lemme:"I"],#2[master]) & SUBJ-N(#4,#1) & MOD(#4,#3[form:~fnot]) & NEGAT(#4) )
   NOVICE(#1,#2,#3).

if (  ATTRIB(#1[lemme:"I"],#2[begin]) & SUBJ-N(#4,#1) & MOD(#4,#3[form:~fnot]) & NEGAT(#4)  )
      EXPERT(#1,#2,#3).

// NEEDS

|NP#4|
if ( ( EXPERIENCER(#1[need],#2[lemme:"I"]) | SUBJ-N(#1[need],#2[lemme:"I"]) )
 & ( OBJ-N(#1,#3) | OBJ(#1,#3) ) & HEAD(#3,#4) )
   NEED(#2,#1,#4).


//PREFERENCE

if (SENTIMENT[!features:!](#1,#2[main-concept]) | SENTIMENT[!features:!](#1,#2[manufacturer]))
   PREFERENCE(#1,#2)

if (( EXPERIENCER(#1[preference],#2[lemme:"I"]) | SUBJ-N(#1[preference],#2[lemme:"I"]) )
   & ( OBJ-N(#1,#3[main-concept]) | OBJ(#1,#3[main-concept]) |
       OBJ-N(#1,#3[manufacturer]) | OBJ(#1,#3[manufacturer]) )
     & ~NEGAT(#1)  )
        PREFERENCE(#1,#3)
if (( EXPERIENCER(#1[preference],#2[lemme:"I"]) | SUBJ-N(#1[preference],#2[lemme:"I"]) )
   & ( OBJ-N(#1,#3[main-concept]) | OBJ(#1,#3[main-concept]) |
       OBJ-N(#1,#3[manufacturer]) | OBJ(#1,#3[manufacturer]) )
     & NEGAT(#1)  )
        PREFERENCE[neg=+](#1,#3)
   