//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! 
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2001 - 2009 Xerox Corporation.  All Rights Reserved.
//!Author: C. Brun.
//!
//!  Date: Nov. 2009
//!
//! 
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

//Script:

//if (ORGANISATION(#1[propag:~])){
//   print(#1[surface],"\n");
//    _numorg =  _numorg + 1;
//}

DependencyRules:



// ************ DB entities

//if ( ORGANISATION(#1[propag:~]) &  _numorg:1)
//   PARTIES(#1)
//
//if ( ORGANISATION(#1[propag:~]) &  _numorg:2)
//   PARTIES(#1)
//
//|NOUN#1[contract-type]|
//        CONTRACT-TYPE(#1)
//
//|#1|
//    if(SUBJ-N(#2,#1)   & MANNER(#2[lemme:"renew"],#3))
//    AUTO-RENEWAL(#1,#3,#2)
//
//|NOUN#1[toutmaj,lemme:"indemnification"]|
//        HAS-INDEMNIFICATION(#1)
//
//|NP{?*,AP{adj[lemme:"effective"]},noun[lemme:"date"]}, NP{NOUN#1}|
//               if ( DATE(#1) )
//               EFFECTIVE-DATE(#1)
//
//|NP{?*,AP{adj#2[lemme:"effective"]},noun#3[lemme:"date"],NOUN#1}|
//               if ( DATE(#1) )
//               EFFECTIVE-DATE(#2,#3,#1)
//
//|SC{NP#2{noun[lemme:"commencement"],noun[lemme:"date"]},(INS),FV{verb[lemme:"mean"]}},NP{noun#1}}|
//        if (DATE(#1))
//        START-DATE(#2,#1)
//
//|SC{NP#2{noun[lemme:"commencement"],noun[lemme:"date"]},(INS),FV{verb[lemme:"mean"]}},PUNCT(#1[spec])}|
//        START-DATE(#2,#1)
//
//|NP#2{noun[lemme:"commencement"],noun[lemme:"date"],noun[lemme:"means"]},PUNCT(#1[spec])}|
//        START-DATE(#2,#1)
//


//// test tweets
 |NOUN#1[movie-title]|
     MOVIE(#1)

|NP#1{NOUN#2[pron:~,maj,date:~,last,time:~,tempexpr:~,let:~,first,last,event:~]}|
        if (~ORGANISATION(#2) & ~MOVIE(#2) & ~PERSON(#2) & ~LOCORG(#2)  & ~LOCATION(#2) & ~EVENT(#2))
         ENTITYPOT(#1)

|NP#1{?+[pron:~,maj,date:~,time:~,tempexpr:~],NOUN#2[pron:~,maj,date:~,last,time:~,tempexpr:~,event:~]}|
         if (~ORGANISATION(#2) & ~MOVIE(#2) & ~PERSON(#2) & ~LOCORG(#2)  & ~LOCATION(#2) & ~EVENT(#2))
        ENTITYPOT(#1)

|NP#1{?{?*[pron:~,maj,date:~,time:~,tempexpr:~]},NOUN#2[pron:~,maj,date:~,last,time:~,tempexpr:~,event:~]}|
         if (~ORGANISATION(#2) & ~MOVIE(#2) & ~PERSON(#2) & ~LOCORG(#2)  & ~LOCATION(#2) & ~EVENT(#2))
        ENTITYPOT(#1)
        
|NP#1{?*[pron:~,date:~,time:~,tempexpr:~],NOUN#2[pron:~,maj,date:~,last,time:~,tempexpr:~,event:~]}|
        if (~ENTITYPOT(#1) & ~ORGANISATION(#2) & ~MOVIE(#2) & ~PERSON(#2) & ~LOCORG(#2)  & ~LOCATION(#2) & ~EVENT(#2) )
        ENTITYPOT(#2) 

// ***************** SOME CORRECTIONS and ADDITIONS
//


////**********************************************///

// DATE MARKING 
	
Script:

if (DATE(#1) ){
	_firstdateindoc=_firstdateindoc+1 ;
        if (_firstdateindoc:1){
        _datecurrent=#1[lemme] ;
        }
}


DependencyRules:

//if (DATE(#1) & (_firstdateindoc:1))
//	DATEREVIEW(#1)



// ****************** Rules for Sentiments *********************** 

//*********************************************************************
// when a modifier is in focus
//*********************************************************************

if ( MOD[post](#1[sentiments,!sentiments:!,topic-to],#2) & PREPD(#2,#3[lemme:"to"])  )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-in],#2) & PREPD(#2,#3[lemme:"in"])  )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-about],#2) & PREPD(#2,#3[lemme:"about"])  )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-at],#2)& PREPD(#2,#3[lemme:"at"])  )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-with],#2) & PREPD(#2,#3[lemme:"with"])  )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-from],#2)& PREPD(#2,#3[lemme:"from"])  )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-for],#2)& PREPD(#2,#3[lemme:"for"])   )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-of],#2) & PREPD(#2,#3[lemme:"of"])  )
	      SENTIMENT(#2,#1)

if ( MOD[post](#1[sentiments,!sentiments:!,topic-on],#2) & PREPD(#2,#3[lemme:"on"])  )
	      SENTIMENT(#2,#1)

//** Case of a  nationality adjective "Iranian failures"

if ( FRM(#1[sentiments,!sentiments:!],#2))
	SENTIMENT(#2,#1)

// ** CASE ADV: is designed well

if ( MOD[post](#1,#2[sentiments,!sentiments:!,adv]))
   	SENTIMENT(#2,#1)

   

//**********************************************************
// Particular cases of embedment
//**********************************************************

// I dont recomment anyone to buy this printer


if (EMBED(#2,#1[lemme:"recommend",!sentiments:!]) & ~NEGAT(#1) )
                            SENTIMENT(#1,#2)                               

//**********************************************************
// for objects, e.g. "I like the cat", the sentiment beeing 
// expressed on the verb
//**********************************************************

if ( OBJ-N(#1[sentiments,!sentiments:!,topic-obj],#2) & ~SENTIMENT(#1,?) )
	SENTIMENT(#2,#1)

if ( CONTENT(#1[sentiments,!sentiments:!,topic-obj],#2) & ~SENTIMENT(#1,?) )
	SENTIMENT(#2,#1)

if ( OBJ(#1[sentiments,!sentiments:!,topic-obj],#2) & ~SENTIMENT(#1,?) )
	SENTIMENT(#2,#1)
//
// for objects, e.g. "The cat has a problem", the sentiment beeing 
// expressed by the OBJ itself
// except for verbs inverting polarity like "decline"

if ( ( OBJ-N(#1[lexneg:~,sentiments:~],#2[sentiments,!sentiments:!]) | CONTENT (#1[lexneg:~,sentiments:~],#2[sentiments,!sentiments:!]) ) & ~SENTIMENT(#2,?)  & SUBJ-N(#1,#3) )
	SENTIMENT(#3,#2)

//if ( ( OBJ-N(#1[lexneg:~,sentiments:~],#2[positive]) | CONTENT (#1[lexneg:~,sentiments:~],#2[sentiments,!sentiments:!]) )  & NEGAT(#1) & ~SENTIMENT(#2,?)  & SUBJ-N(#1,#3) )
//	SENTIMENT[negative=+,modified=+](#3,#2)

//if ( OBJ-N(#1[lexneg:~,sentiments:~],#2[negative]) & NEGAT(#1) & ~SENTIMENT(#2,?)  & SUBJ-N(#1,#3) )
//	SENTIMENT[positive=+,modified=+](#2,#3)


// cases where subject has not been found

if ( ( OBJ-N(#1[lexneg:~,sentiments:~],#2[sentiments,!sentiments:!])| CONTENT (#1[lexneg:~,sentiments:~],#2[sentiments,!sentiments:!]) )  & ~SENTIMENT(?,#2) & ~SENTIMENT(#2,?) )
	SENTIMENT(#1,#2)


//*******
// when the subject is the focus :

if (SUBJ-N(#1[sentiments,!sentiments:!,topic-subj],#2) & ~QUANTD[neg](#2,?))
	SENTIMENT(#2,#1)

if (SUBJ-N(#1[positive,topic-subj],#2) & QUANTD[neg](#2,?))
	SENTIMENT[negative=+](#2,#1)

if (SUBJ-N(#1[negative,topic-subj],#2) & QUANTD[neg](#2,?))
	SENTIMENT[positive=+](#2,#1)

if (EXPERIENCER(#1[sentiments,!sentiments:!,topic-subj],#2) & ~QUANTD[neg](#2,?)  )
	SENTIMENT(#2,#1)

if (EXPERIENCER(#1[positive,topic-subj],#2) & QUANTD[neg](#2,?))
	SENTIMENT[negative=+](#2,#1)

if (EXPERIENCER(#1[negative,topic-subj],#2) & QUANTD[neg](#2,?))
	SENTIMENT[positive=+](#2,#1)


//*********************************************************************
// For Attribs: The cat is nice
// but for I am happy with the cat, the sentiment links  happy &  cat
//*********************************************************************

// treat first: it could be better

if (ATTRIB[neg:~](#1,#2) &  HEAD(#4[positive,compar],#2) & ( SUBJ-N(#3,#1) | EXPERIENCER(#3,#1)) & NUCL[modal](#5[lemme:"could"],#3))
	SENTIMENT[negative=+](#1,#4)

if (ATTRIB[neg:~](#1,#2[positive,compar]) & ~SENTIMENT(#2,?) & (SUBJ-N(#3,#1) | EXPERIENCER(#3,#1)) & NUCL[modal](#5[lemme:"could"],#3))
	SENTIMENT[negative=+](#1,#2)

// it is nicer

if (ATTRIB[neg:~](#1,#2[!sentiments:!,sentiments,compar]) & ~SENTIMENT(#1,#2))
   	SENTIMENT(#1,#2).

if (ATTRIB[neg](#1,#2[positive,compar]))
   	SENTIMENT[negative=+,modified=+](#1,#2).

if (ATTRIB[neg](#1,#2[negative,compar]))
   	SENTIMENT[positive=+,modified=+](#1,#2).

// ATTRIB(speed,better) SUBJ-N_PRE(be,speed) NUCL_VLINK_MODAL(could,be)
//

//for embed AP: they are more successful.
if (ATTRIB[neg:~,appos:~](#1,#2) & HEAD(#4[sentiments,!sentiments:!],#2) & ( SUBJ-N(#3,#1) | EXPERIENCER(#3,#1)))
	SENTIMENT(#1,#4)

if (ATTRIB[appos:~,neg:~](#1,#2[sentiments,!sentiments:!])  & ~SENTIMENT(#1,#2)  & ( SUBJ-N(#3,#1) | EXPERIENCER(#3,#1)) )
	SENTIMENT(#1,#2) 


//& ~SENTIMENT(?,#2)
// our favorite is this movie

if ( ATTRIB[neg:~,appos:~](#1[!sentiments:!,sentiments],#2) & ~SENTIMENT(#2,?) & ~SENTIMENT(?,#2) )
   	SENTIMENT(#2,#1) 

// the speed and print quality --> need to handle coordination

if (ATTRIB[neg:~,appos:~](#1,#2[sentiments,!sentiments:!]) & COORD(#4,#1) & COORD(#4,#5) & (SUBJ-N(#3,#1) | EXPERIENCER(#3,#1)))
	SENTIMENT(#1,#2)



//he considers the meeting as positive
if (ATTRIB[neg:~,appos:~](#1,#2[sentiments,!sentiments:!]) & ~SENTIMENT(?,#2) & ~SENTIMENT(#2,?))
	SENTIMENT(#1,#2)

if (ATTRIB[neg](#1,#2[positive,compar:~]) & ~SENTIMENT(#2,?)& & ~SENTIMENT(?,#2) (SUBJ-N(#3,#1) | EXPERIENCER(#3,#1))   )
	SENTIMENT[negative=+,modified=+](#1,#2)


if (ATTRIB[neg](#1,#2[positive]) & ^SENTIMENT(#2,#3) & (SUBJ-N(#3,#1) | EXPERIENCER(#3,#1))   )
	SENTIMENT[negative=+,positive=~](#3,#2)


if (ATTRIB[neg](#1,#2[negative]) & ^SENTIMENT(#2,#3) & (SUBJ-N(#3,#1) | EXPERIENCER(#3,#1))    )
	SENTIMENT[negative=~,positive=+](#3,#2)

// FOR Relative embedment 
// the food, which was above average 

if (  SUBJ-N(#1,#2) & NUCL[subjcompl](#1,#3[sentiments,!sentiments:!]) & ~SENTIMENT(#2,#3))
           SENTIMENT(#2,#3)

// MOD
// the quality is there.

if ( LOC[post](#1[cop],#2)  & SUBJ-N(#1,#3[!sentiments:!,sentiments]) ) 
	SENTIMENT(#1,#3)

//the printer is as bad as it could be 

| PP{PREP[lemme:"as"],AP{ADJ#2}}| 
 if ( (SUBJ-N(#1,#3) | EXPERIENCER(#3,#1)) & MOD[post](#1[cop],#2[sentiments,!sentiments:!]) & ~NEGAT(#2) )
  	SENTIMENT(#3,#2)
	

// For modifiers : this is an ugly person
// at the moment no restriction (?)

if(MOD[pre](#1[money:~,no-sents:~,verb:~],#2[adv:~,sentiments,!sentiments:!]) )
// & ~SENTIMENT(#1,?) & ~SENTIMENT(?,#1) )
	SENTIMENT(#1,#2)

|AP#3{#2,#1}|
if(MOD[pre](#1[money:~,no-sents:~,verb:~,tempexpr:~],#2[adv,sentiments,!sentiments:!])  & MOD[pre](#4,#1) & HEAD(#4,#5) )
                SENTIMENT(#4,#3)                                                                         

// case of coordination This is a nice and cool printer

if(MOD[pre](#1[money:~,no-sents:~,verb:~,tempexpr:~],#2[sentiments,!sentiments:!])  & COORD(#3,#2) & COORD(#3,#4) & SENTIMENT(#1,#4) )
	SENTIMENT(#1,#2)


// a driver problem

if(MOD[pre](#2[sentiments,!sentiments:!,noun],#1[money:~,no-sents:~,verb:~,tempexpr:~,adv:~,noun])  & ~SENTIMENT(#1,?) & ~SENTIMENT(?,#1))
             SENTIMENT(#1,#2)

//it is book accurate 

//if (MOD[post](#1[noun,money:~],#2[sentiments,!sentiments:!]) & ~SENTIMENT(#2,?) & ~SENTIMENT(?,#2)) 
//	SENTIMENT(#1,#2)

if (MOD[post](#1[noun,money:~],#2[sentiments,!sentiments:!]) & ~SENTIMENT(#2,?) ) 
	SENTIMENT(#1,#2)

// for adverbs (?)

if (MANNER(#1[verb,trans],#2[sentiments,!sentiments:!]) )
	SENTIMENT(#1,#2)



//embed : I recommend that ...

if ( EMBED[complthat](#2,#1[!sentiments:!,sentiments]) &  ~CONTENT(#1,?) & ~OBJ-N(#1,?))
	SENTIMENT(#2,#1)


//********************************************************************************************
// Some fixed expressions

|SC{?*,FV{?*,VERB#4[lemme:"leave"]}},ADV*,IV{PREP,VERB#2[lemme:"be"],VERB#3[lemme:"desire"]}|
	if (VDOMAIN[passive](#3,#2))
	SENTIMENT[negative=+](#3,#2)


|SC{?*,FV{?*,VERB#4[lemme:"leave"]}},QUANT,IV{PREP,VERB#2[lemme:"be"],VERB#3[lemme:"desire"]}|
	if (VDOMAIN[passive](#3,#2))
	SENTIMENT[negative=+](#3,#2)

// matches the competition

if (SUBJ-N(#1,#3) & OBJ-N(#1[lemme:"match"],#2[lemme:"competition"]))
		SENTIMENT[positive=+](#2,#3)


// specific pattern: recommended: no/yes


|SC{?*,FV{VERB#1[lemme:"recommend",positive=~]}},punct,QUANT#2[lemme:"no",negative=+]|
	SENTIMENT[negative=+](#1,#2)

|SC{?*,FV{VERB#1[lemme:"recommend",positive=~]}},punct,ADV#2[lemme:"yes",positive=+]|
	SENTIMENT[positive=+](#1,#2)

//X of the year
if (TEMP[post](#1,#2[lemme:"of the year"]))
   	SENTIMENT[positive=+](#1,#2)

if (TEMP[post](#1,#2[lemme:"of the month"]))
   	SENTIMENT[positive=+](#1,#2)
                    
// It is not going to be my favorite of comedies 

if(MOD[post](#2[sentiments,!sentiments:!],#1[money:~,no-sents:~,verb:~,tempexpr:~,form:~fnot,prep:~,adv:~]) & ~SENTIMENT(#2,?) & ~SENTIMENT(?,#2) )
	SENTIMENT(#1,#2)

                                                 
// high low prices
if (GLOBALMOD(#1[lemme:"price"],#2[highquantity]))
	SENTIMENT[negative=+](#1,#2)

if (GLOBALMOD(#1[lemme:"price"],#2[lowquantity]))
	SENTIMENT[positive=+](#1,#2)

// it is below average

if (PREPD(#1[lemme:"average"],#2[lemme:"below"]) & MOD[post](#3[verb,cop],#1) & SUBJ(#3,#4))
	SENTIMENT[negative=+](#4,#1)

if (PREPD(#1[lemme:"average"],#2[lemme:"below"]) & ~SENTIMENT(?,#1))
	SENTIMENT[negative=+](#1,#2)

if (OBJ-N(#3[neg-money],#1) & GLOBALMOD(#1[lemme:"money"],#2[highquantity]))
	SENTIMENT[negative=+](#3,#1)

if (OBJ-N(#3[neg-money],#1) & ( GLOBALMOD(#1[lemme:"money"],#2[lowquantity]) | QUANTD[neg](#1,#4) ) )
	SENTIMENT[positive=+](#3,#1)

if (OBJ-N(#3[pos-money],#1) & GLOBALMOD(#1[lemme:"money"],#2[highquantity]))
	SENTIMENT[positive=+](#3,#1)

if (OBJ-N(#3[pos-money],#1) & ( GLOBALMOD(#1[lemme:"money"],#2[lowquantity]) | QUANTD[neg](#1,#4) ))
	SENTIMENT[negative=+](#3,#1)



//save money

if (OBJ-N(#1[pos-money],#2[lemme:"money"]) & ~SENTIMENT(#1,#2))
		SENTIMENT[positive=+](#1,#2)

if (OBJ-N(#1[neg-money],#2[lemme:"money"]) & ~SENTIMENT(#1,#2))
		SENTIMENT[negative=+](#1,#2)


// high quality 

if (MOD(#1[lemme:"quality"],#2[lemme:"high"]))
		SENTIMENT[positive=+](#1,#2)


if (MOD(#1[lemme:"value"],#2[lemme:"high"]))
		SENTIMENT[positive=+](#1,#2)

// it looks like X

if (PREPD(#1,#2[lemme:"like"]) & MOD[post](#3[lemme:"look"],#1[sentiments,!sentiments:!]) & SUBJ-N(#3,#4) )
   SENTIMENT(#1,#4)

// worth the wait

| NP{NOUN#1[lemme:"worth"]},NP#2 |
    if ( HEAD(#3,#2) & ~NEGAT(#1)  )
		SENTIMENT[positive=+](#1,#3)

// you can do better

if ( GLOBALMOD(#1[lemme:"do"],#2[lemme:"well",compar])  & NUCL(#3[lemme:"can"],#1))
	SENTIMENT[positive=+](#1,#2)

// a hard time

if ( GLOBALMOD(#1[lemme:"time"],#2[lemme:"hard"]) & GLOBALMOD(#1,#3))
	SENTIMENT[negative=+](#1,#3)
	

// it does the work better 

if(MOD[post](#1[verb,lemme:"do"],#2[lemme:"well",compar]))
                SENTIMENT[positive=+](#1,#2)

// the better 

// it has never performed below perfection

// xxx from hell

if (MOD[post](#1,#2[lemme:"hell"]) & PREPD(#2,#3[lemme:"from"]))
		SENTIMENT[negative=+](#1,#2)


// it could have been better ==> change polarity


if (NUCL[vlink,modal](#1,#2) & NUCL[vlink,perfect](#2,#3) & NUCL[subjcompl](#3,#4[compar,positive]) & ^SENTIMENT[positive,modified:~](#5,#4))
	SENTIMENT[negative=+,positive=~,modified=+](#5,#4)


if (MOD[post](#1[noun],#2[noun]) & sentiment[!sentiments:!](#2,#3) & ~sentiment(#2,#1) )
	 sentiment(#1,#2)


//test

//|noun#1[noun,adj:~]|
// if ( ~DATE(#1) & ~ORGANISATION(#1) &  ~PRODUCT(#1) &  ~MONEY(#1) &  ~LOCATION(#1))
//	NOMINAL(#1)

//if (ATTRIB(#1,?) & ^SENTIMENT(#1,#3))
//                 SENTIMENT[keep=+](#1,#3)


// EMPATH

// I leave ORG : negat

if ( OBJ-N(#1[lemme:"leave"],#2) & ORGANISATION(#2) )
   SENTIMENT[negative=+](#1,#2)

//|NP#1[pron:~]|
 //       NPSELECT(#1)
//
//|NOUN#1[pron:~]|
//        NPSELECT(#1)

//If (GLOBALMOD(#1[noun],#2[sentiments]))
 //  MODIFIEDBYPOLAR(#1)


// SAME NP 

|NP{det*,AP{?*,#1[adj]},noun#2}|
        INNP(#1,#2) 
