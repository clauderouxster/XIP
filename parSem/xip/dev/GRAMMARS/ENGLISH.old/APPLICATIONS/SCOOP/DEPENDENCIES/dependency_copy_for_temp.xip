//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2003 - 2007 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar
//!   filename   : dependency_copy_for_temp.xip
//!	A copy of dependency.xip but with specific modifications for temporal expressions.
//!   Date       : 10/02/2003
//!   Author     : Caroline Hagege
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


DependencyRules:



//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
// 
// LEVEL 0: 
//	COMPOUND link: tool relation that links together single tokens that belong to a 
//			complex linguistic expression  (e.g. have-form + got, take-form + place)
//			The order of the COMPOUND LINK is from left to right
//	COMPLEX PROPER NOUNS (under a NOUN node)
// 	Marking of certain nodes in order to prepare the dependency establishment 
//		* comment clauses
//		* conj + ing-form
//	
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////



// Rule 0
// COMPOUND link between a form of HAVE and got
// e.g I've got, I have really got when got is followed by a NP
| SC{?*,FV{verb#1[form:fhave]}}, NFV{?*,verb#2[last,form:fget]}, NP |
	COMPOUND(#1,#2)



// Rule 1
// COMPOUND link between a form of TAKE and any singular noun that just follows this form
// take care, take place, etc. 
// in order to avoid a OBJ dependency between TAKE and PLACE
// CHECK 
| SC{?*,FV{verb#1[form:ftake]}};NFV{?*,verb#1[form:ftake]};IV{?*,verb#1[form:ftake]}, adv*, NP{noun#2[sg:+,last]} |
	COMPOUND(#1,#2)


// VMOTION + home

| SC{?*,FV{verb#1[vmotion]}};?[verb]{?*,verb#1[vmotion]}, adv*, NP{noun#2[sg:+,last,lemme:home]} |
	COMPOUND(#1,#2)




// Rule 2
// ASL link that links the AS with a following finite verb
// e.g. as follows, as decided yesterday.
// This will prevent to have bad SUBJ dependencies computed for these verbs.
| #1[lemme:as], FV{?*,verb#2[pers]} |
	ASL(#1,#2)

// Rule 3
// ASL also links "as" with a following NP
// e.g. He listed his age as 71
| #1[lemme:as], NP{?*,#2[last]} |
	ASL(#1,#2)




// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Complex proper nouns
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 4
// John Smith
| NOUN#4[person=+]{noun#1[first,proper], noun#2[last,proper,fam]} |
	NMOD[proper=+](#2,#1),
	HEAD(#2,#4).

// Rule 5
// James W. Dorsey (Jr.)
| NOUN#4[person=+]{?*, noun#3[proper], noun#1[proper,initial], noun#2[proper,fam]} |
	NMOD[proper=+](#2,#1),
	NMOD[proper=+](#2,#3),
	HEAD(#2,#4).

// Rule 6
// John Smith when it preceedes Jr. or Sr.
| NOUN#3[person=+]{ noun#1[proper,first], noun#2[proper,last:~], noun#[abr,proper,last] } |
	NMOD[proper=+](#2,#1),
	HEAD(#2,#3). 

// Rule 7
// John Smith when it follows a title
| NOUN[person=+]{?*,noun[title], NOUN#4{noun#1[proper],?*,noun#2[proper,last,abr:~]}} |
	NMOD[proper=+](#2,#1),
	HEAD(#2,#4).

// Rule 8
// Professor John W. Smith
| NOUN#4[person=+]{?*,noun#5[title],NOUN#2} |
	if ( ^HEAD(#3,#2) ) 
	NMOD[proper=+](#3,#5),
	HEAD(#3,#4).




// Rule 9
// Treating abbreviations like Jr. after proper names
| NOUN#1[person]{?*,noun#3[abr,proper,last]} |
	if ( HEAD(#2,#1) )
	NMOD[proper=+](#2,#3)


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// TEMPORAL EXPRESSIONS - HEAD AND INTERNAL MODIFICATION
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// CORRECTING BAD FEATURE INHERITANCE

// an AP denoting age is not a temporal expression
//| AP[tempexpr=~,c_relat=~]{ADJ[tempexpr=~,c_relat=~]{dig;num, noun[period], nadj[lemme:old]}} |
//~

// A PP is not tempexpr if the head is not temporal
| PP#2[tempexpr=~]{ prep, NP{noun[tempexpr], part, noun[tempexpr:~]} } | 
  ~
| NP[tempexpr=~,c_relat=~]{AP[tempexpr=~],?*, noun[tempexpr:~]}  | 
  ~

| NP[tempexpr=~]{noun[tempexpr], part, noun[tempexpr:~]}  | 
  ~



// When a modifier is temporal within a NP, then the NP is not necessarily temporal if the head is not
// The April 4 ballot
| NP[tempexpr=~]{?*,?[tempexpr],(?[adj]), ?[last,tempexpr:~,time_span:~,noun,lemme:~duration]} |
  ~

// Same with PPs
// if the head of PP is not temporal but modified by a temporal expression
| PP[tempexpr=~]{prep, NP[tempexpr:~]} |
~

// Erasing undesirable temporal features
// Rule XXXXX
// 37 years old
| NP[tempexpr=~]{?*,AP[tempexpr=~]{adj[tempexpr=~]{dig, noun[period], ?[lemme:old]}}} |
~

// if NP has word "duration" as head which is modified by a period
// then consider the whole PP as a duration
// e.g a three-years duration
| NP#1[tempexpr=+]{?*, AP[tempexpr], noun[lemme:duration]} |
~ 




// The head of a temporal expressions 

// restriction if the head is a genitive followed by a particle
| ?[tempexpr:~]{?*,NP#1[tempexpr:+]{?*,?[last,part:~,tempexpr]}} |
	HEAD(#1,#1),
	TIMEX3(#1).

// a year earlier
| ?[tempexpr:~]{?*,NP#1[tempexpr:+]{?*,?[tempexpr], ?[last,adv]}} |
	HEAD(#1,#1),
	TIMEX3(#1).

| PP#1[tempexpr:+] |
	HEAD(#1,#1),
	TIMEX3(#1).


// Timexes which are nominal premodifiers
| NP#2{?*,noun#1[mwe,tempexpr,last:~], noun[tempexpr:~]} |
if ( ~TIMEX3(#2) & ~TIMEX3(#1) )
   TIMEX3(#1)


// deleting TIMEXEs within TIMEX
| NP#1[tempexpr]{NP#2[first];PP#2[first]} |
	if ( ^TIMEX3(#2) )
	~

| NP#1[tempexpr]{?*,NP#2} |
	if ( ^TIMEX3(#2) )
	~

| NP#1[tempexpr]{?*,PP#2} |
	if ( ^TIMEX3(#2) )
	~


| PP#1[tempexpr]{NP#2[first];PP#2[first]} |
	if ( ^TIMEX3(#2) )
	~
| PP#1[tempexpr]{?*,NP#2;PP#2} |
	if ( ^TIMEX3(#2) )
	~


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// INTERROGATIVE SENTENCES -- Marking with inter:+ feature
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 10
// The verbal nodes of a sentence in the interrogative forms will bear the feature inter:+
// Will be then used as a feature added to the main dependency
| ?{?{?[startbis]}, ?[verb,inter=+]};?{?[startbis]};?[startbis], ?*[verb:~], ?+[verb,inter=+], ?*[verb:~], punct[form:fquest] | 
	~


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// COMMENT CLAUSES -- Marking with incise:+ feature
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 11
// The nodes of a comment clause (incise) introduced by a WH are marked with the feature incise:+
// Note : This rule only works when the comment clause is between a subject and its verb.
| SC{?*, SC[incise=+]{ #1[wh,incise=+],?*[incise=+],FV[last,incise=+]}, ?*[verb:~, incise=+], FV} |
	~

// Rule XXXX
// relative without relative pronouns starting with a nominative personal pronoun.
| NP, SC{NP[incise=+]{pron[first,last,pronpers,nom,obl:~]}, FV[incise=+], ?*[verb:+,incise=+]}, (NP), FV |
  ~

// Rule 12
// Marking of the nodes of a comment clause that is contained between commas or hyphens
// This rule works when the comment clause is between the subject and its verb
| SC{?*, punct[comma:+,incise=+];punct[form:fhyph,incise=+], ?*[incise=+], punct[comma:+,incise=+];punct[form:fhyph,incise=+], FV} |
	~



// Rule 13
// Nodes of a comment clause contained between commas, when the comment clause is introduced by a verb in past-participle form.
// In this case, the chunking is not well-done and this past-participle is taken as a finite verb
| SC{?*[comma:~], punct[comma:+,incise=+], FV[incise=+]}, ?*[verb:~,incise=+,comma:~], punct[comma:+,incise=+], FV | 
	~

// Rule 14
// Marking of the nodes of a comment clause between commas or hyphens.
// The comment clause can be everywhere in the sentence but is only made by a subject and an indspeech verb
| punct[comma,incise=+];punct[form:fhyph,incise=+], SC[incise=+]{NP[incise=+],FV[incise=+]{verb[indspeech,incise=+]}}, punct[comma,incise=+];punct[form:fhyph,incise=+] |
	~

// Rule 15
// Comment clause when there is a mistagging between finite verb and past participle (adjectival) at the beginiing of a sentence.
// The comment clause is between the subject and the verb
// eg. TOM1, an Arabidopsis gene required for efficient multiplication, encodes a protein.
//| TOP{SC{NP, punct[comma:+];punct[form:fhyph], NP[incise=+], ?*[verb:~, incise=+], FV[incise=+]{verb[last,partpas]}}, ?*[incise=+], punct[form:fhyph];punct[comma:+], FV} |
| SC[startbis]{NP, (PP), punct[comma,incise=+];punct[form:fhyph,incise=+], ?*[verb:~,incise=+], FV[incise=+]{verb[last,partpas]}}, ?*[incise=+], punct[comma:+,incise=+];punct[form:fhyph,incise=+], FV |
	~



// Considered also with feature incise.
// When a BG preceedes a NP (being the noun a deverbal)
// e.g. After Farooq's assassination
// AB 2012.01.03 added start:+ to constrain only to sentence-initial subordinate clause
| BG{?[first,last,start]}, NP[incise=+]{?*[incise=+], ?[last,incise=+]}, punct[comma] |
		    ~


// Rule XXXXX
// Marking a digit alone between two punctuation marks that can be a date
| punct, NP[tempexpr=+]{?[dig,first,last,year]}, punct | 
	~

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Before|After|while ING-form
// Marking these nodes with sub_ing:+ feature
//	e.g. After doing this; While eating; Before leaving etc.
// At the same time, creating a CONNECTOR_SUBORD dependency between the conjunction and the gerund verb
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 16
// Facultative elements at the end of the TRE does not work (see with Claude)
// So we have to repeat several time the same rule
// .e.g While eating a bread in the morning
| BG[sub_ing=+]{conj#1[form:fafter]};BG[sub_ing=+]{conj#1[form:fbefore]};BG{conj#1[form:fwhile]}, 
  GV[sub_ing=+]{?*,verb#2[last]}, NP[sub_ing=+], PP[sub_ing=+] |
	CONNECTOR[subord=+](#1,#2)

// Rule 17
// The same as above without the last PP
// While eating a bread
| BG[sub_ing=+]{conj#1[form:fafter]};BG[sub_ing=+]{conj#1[form:fbefore]};BG{conj#1[form:fwhile]}, 
  GV[sub_ing=+]{?*,verb#2[last]}, NP[sub_ing=+] |
	if ( ~CONNECTOR[subord](#1,#2) )
	CONNECTOR[subord=+](#1,#2)



// Rule 18
// Same without any NP
// While talking
| BG[sub_ing=+]{conj#1[form:fafter]};BG[sub_ing=+]{conj#1[form:fbefore]};BG{conj#1[form:fwhile]}, 
  GV[sub_ing=+]{?*,verb#2[last]} |
	if ( ~CONNECTOR[subord](#1,#2) )
	CONNECTOR[subord=+](#1,#2)




// Rule 19
//When after|before are tagged (badly) as prepositions
// After having done the job, he left
// Note, only at the beginning of a sentence
| prep#1[startbis,form:fafter];prep#1[startbis,form:fbefore];prep#1[startbis,form:fin];BG{conj#1[form:fwhile]},
  GV[sub_ing=+]{?*,verb#3[last]}, (NP[sub_ing=+];PP[sub_ing=+])  |
	CONNECTOR[subord=+,badtag=+](#1,#3)
 

// Rule 20
// He left, after having done the job
// Note, only after a comma when not at the beginning of the sentence (see above)
// e.g. He left, after having done the job.
| punct[comma];adv[startbis], prep#1[form:fafter];prep#1[form:fbefore], GV[sub_ing=+]{?*,verb#3[last]}, (NP[sub_ing=+];PP[sub_ing=+])  |
	CONNECTOR[subord=+,badtag=+](#1,#3)





//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
// 
// LEVEL 1: Simple coordination
// 
//	VCOORD : verbal coordination
// 
//	AJCOORD: coordination of adjectival heads.
//	COORD: binary predicate which links the coordination conjunction 
//		and one of the coordinated heads
//	QUANTCOORD: links both and the coord. conjunction in a coordinated expression 
//			introduced by BOTH
// 
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////




// Rule 21
// Coordination of finite verbs with a facultative object complement and with no subject with the coordinated verbs (except the first one)
// e.g. Merrymakers tossed confetti, squawked horns and popped champagne corks
// The condition is here in order to avoid the construction of VCOORD within the longest VCOORD
//| SC{?*,FV{#1}}, (NP), (punct[comma]; ?[verb]; NP)*, SC{conj#2[coord], FV{#3[last]}} |
| SC[startbis]{?*,FV{#1}}; FV{#1}, (NP), (adv), (punct[comma]; ?[verb,inf:~]; adv; NP)*, (punct[comma]), SC{conj#2[coord], FV{#3[last]}} |
	if ( ~VCOORD(?,#3) )
	VCOORD(#1,#3)




// Rule 22
// Coordination of verbs with facultative object compl when they separated by but
| SC{?*,FV{#1}}; FV{#1}, (NP), (punct[comma]), SC{BG{conj#2[form:fbut]}, FV{#3[last]}} |
	if ( ~VCOORD(?,#3) )
	VCOORD(#1,#3)


// Rule 23
// COORD relation at the end of VCOORD (with complements)
| SC{conj#2[coord];BG{conj#2[form:fbut]}, ?*, FV{verb#3}} |
	if ( VCOORD(?,#3) )
	COORD(#2,#3)

// Rule 24
// COORD relation in the middle of VCOORD (with complements)
| FV{#2}, ?*, SC{?*,FV{?*,#3[last]}} |
	if ( VCOORD(?,#3) & COORD(#4,#3) )
	COORD(#4,#2)	

// Rule 25
// COORD relation in the middle of VCOORD (with complements) when the verb FV is not directly under top but under SC
| SC{FV{#2}}, ?*, SC{?*,FV{?*,#3[last]}} |
	if ( VCOORD(?,#3) & COORD(#4,#3) )
	COORD(#4,#2)	

// Rule 26
// COORD relation at the beginning of VCOORD
// This rule works for coordination of verbs alone or for verbs with compelments
| verb#1 |
	if ( VCOORD(#1,#2) & COORD(#3,#2) )
	COORD(#3,#1)

// Rule 27
// Coordination of predependent adjectives
// They belong to the same AP.
| AP { #1[adj:+,first], (?[adj];punct[comma];adv)*, conj#2[coord], (adv), #3[adj:+,last] } |
		AJCOORD(#1,#3)


// Rule 28
// Duplication of the previous rule when the first adjective is preceeded by an adverb within the AP.
| AP { adv[first], #1[adj:+], (?[adj];punct[comma];adv)*, conj#2[coord], (adv), #3[adj:+,last] } |
		AJCOORD(#1,#3)


// Rule 29
// A la fin du AP
|  #1[adj:+], (punct[comma]), conj#2[coord], (adv), #3[adj:+] |
	if ( AJCOORD(?,#3) )
	COORD(#2,#3)

// Rule 30
// Au milieu du AP
| #1[adj], ?*, #2[adj:+], ?*, #3[adj] |
	if ( AJCOORD(#1,#3) & COORD(#4,#3) )
	COORD(#4,#2)

// Rule 31
// Au debut du AP
| #1[adj] |
	if ( AJCOORD(#1,#2) & COORD(#3,#2) )
	COORD(#3,#1)







// Rule 32
// Coordination of verbs in the progressive form. (No complements between them)
| TOP{?*, ?[comma:~], GV[prog]{?*,#1[last]};NFV[vprog]{?*,#1[last]}, (NP), ( punct[comma], GV[prog],NP )*, conj[coord:+], GV[prog]{?*,#2[last]} } |
	VCOORD[prog=+](#1,#2)	


// Rule 33
// Coordination of verbs in the progressive form when the verb starts the sentence
| GV[prog,first]{?*,#1[last]}, (punct[comma], GV[prog])*, conj[coord], GV[prog]{?*,#2[last]} |
	VCOORD[prog=+](#1,#2)

// For coordinated adverbs within an ADVP
// Rule 34
| ADVP{adv#1, conj#3, adv#2} | 
	COORD(#3,#1),
	COORD(#3,#2).


//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
// 
// LEVEL 2: Auxiliary tools-relations and intra-chunk dependencies
// 
// These relations are:
//	HEAD/2 : between a nucleus and the chunk in which this nucleus appears (Tool relation)
//	DETD/2	: between a nominal nucleus and its determiner (Intra chunk)
//	ADJMOD/2	: between an adjectival head and an adverb within the AP (Intra chunk)
//	QUANTD/2	: between a nominal nucleus and a quantifier that quantifies it (Intra chunk)
//	NUCL (with feature vlink:+) : between two verbal forms within a complex verbal construction (Tool relation)
//			Note that these relations carry specific features
//	VDOMAIN/2 : relation deductible from a list of NUCL_VLINK relations. It links
//			the flexionned verbal segment to the semantic head of a complex
//			verbal form (Tool relation)
//	MAIN/1	: The verbal nucleus of the main clause 
//			(deductible from VDOMAIN and the sentence structure) (Tool relation)
//	VERBPREP/2 : Relation between a verb and a preposition 
//			The preposition can either introduce an argument or a modifier (Tool relation)
//	NUCL (with feature particle:+) Link between a verbal form and a particle (according to comlex information) 
//	PREPD/2	: between the nucleus and the preposition of the PP (Intra chunk only in this level)
// 
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// HEAD/2 Relations. 
// The following rules detect the Head of a chunk.

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



// Rule 35
// Complex interrogative adverbial form e.g. How nice ?
// In this case, the head is the adjective
| ADV#2{adv[form:fhow], #1[adj,last]} |
	HEAD(#1,#2)



// Rule 36
/Detection of the AP head\
/ Constraint on coord:~ in order to avoid to capture coordinated adjectives which are chunked in the same AP \
// Constraint on form:fthan in order to avoid to capture the last adjective in a comparative form
|AP#2{?*[coord:~,form:~fthan],#1[adj,last]}|
	HEAD(#1,#2)

// Rule 37
// In APs like "garlic-like" odor....
| AP#2{?[first],punct[form:fhyph],?[form:flike]} | 
	HEAD(#2,#2)

| AP#2[compar]{?[form:fmore,first],AP#3} |
if ( HEAD(#4,#3) & ^HEAD(#3,#2) )
HEAD(#4,#2)


// Rule 38
// For AP[compar] with coordination after the "more" (more comfortable and vigorous)
// Deleting the just constructed AP head
| AP#2[compar]{?[form:fmore], AP{?*,#1[last]} } |
	if ( COORD(#3,#1)  & ^HEAD(?,#2))
	~

// Rule 39
// Complex AP[compar] 
// more comfortable than suitable (the first adjective is the head)
| AP#2[compar]{?[form:fmore], AP{?*,#1[last]} } |
  if ( ~HEAD(?,#2) )
	HEAD(#1,#2)




// Rule 41
/Detection of the NP head\
/ The last noun when there is no ING within the NP \
// EN COURS - Probleme version 2.0 sur cette regle (interpretation de ?+
|NP#2{?+[vprog:~],#1[noun,last]}|
	if (~HEAD(?,#2) )
	HEAD(#1,#2)



// Rule 42
// The last element that is neither a noun nor an adj nor a particle (The first New Year's) (can be a numeral)
// Restriction on hour:~ in order to avoid to take as head "3" in expression "half past 3" (marked with hour:+)
|NP#2[hour:~]{?+,#1[noun:~,adj:~,part:~,adv:~,last]}|
	if (~HEAD(?,#2) )
	HEAD(#1,#2)



// Rule XXXXXX
| NP#2{#1[first,last,mwe]} |
	if ( ~HEAD(?,#2) )
	HEAD(#1,#2)


// Rule 43
///Detection of the NP head when there is only one element within the NP (a pronoun, quantifier, plural noun)
// It is necessary to test about a possible HEAD for the element within the NP in order to avoid NP made of a complex (multi word) proper noun or complex AP forms alone within the NP
| NP#2{#1[last,adv:~,tempexpr:~]} |
	if ( ~HEAD(?,#1) )
	HEAD(#1,#2)

// Rule 44
// NP head when the NP is made of a complex NOUN (node noun dominating lexical nodes)
| NP#2{?*,#3[last,proper]} |
	if ( ^HEAD(#1,#3)  )
	HEAD(#1,#2)

// Rule 45
// When the NP is made by a complex NOUN node (proper), general rule application has to be destroyed
| NP#2{?*,#3[last,proper,noun]} |
	if ( ^HEAD(#3,#2) & HEAD(#1,#2)  )
	~


// Rule 46
/Detection of the NP head in an embedded AP\
/We have to make sure that no noun follows the AP within the NP\
|NP#2[tempexpr:~]{?*,AP#3[last]}| 
	if ( ^HEAD(#1,#3) )
	HEAD(#1,#2)




// Rule 48
// NP head when the NP ends with a particle
// e.g. The first New Year's
| NP#2[tempexpr:~]{?*,#1,?[part,last]} |
	HEAD(#1,#2)



// Rule 50
// NP head when the NP contains a complex noun which has already an HEAD (e.g James W. Dorsey)
| NP#2[tempexpr:~]{?*,#3[noun,last]} |
	if ( HEAD(#1,#3) & ^HEAD(#4,#2) )
	HEAD(#1,#2)


// NPs containing an ING adjective

// Rule 51
// Detection of the NP head when the NP contains a ING adjective
// e.g. Recessive host mutation affecting virus multiplication is chunked as an unique NP.
// Revision of chunking in this case ? AD-HOC
// PROBLEME ICI eg. The worlds leading supplier
| NP#2[tempexpr:~]{?*, noun#1[vprog:~], AP[vprog], noun[vprog:~];adj[vprog:~]} |
	HEAD(#1,#2)

// Rule 52
// Detection of the NP head when the NP contains a ING which shall not be an adjective
| NP#2[tempexpr:~]{ (?*[noun:~];?*,noun,part[poss]), AP[vprog], noun*;ap*;adj*, #1[last]} | 
	HEAD(#1,#2)


// Rule 53
// Detection of the NP head when the NP contains a ING which has an adjectival function
// that is : no nouns before the ING form
| NP#2[tempexpr:~]{ ?*[noun:~], AP[vprog];noun[vprog], ?*, #1[noun,last] } |
	HEAD(#1,#2)


// Rule 54
// Special case of NP which head has the feature numerable:+
// e.g. Chaper two, Line 3 ....
| NP#2{?*, noun#1[numerable], #3[card:+,last]} |
	if ( ^HEAD(#3,#2) )
	HEAD(#1,#2)


// for reshuffled NP who misses head relatins
| NP#2[tempexpr:~]{?+,#1[noun,last]} |
if ( ~HEAD(#1,#2)   )
   HEAD(#1,#2)

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// DETD dependencies (between a nominal head and a determiner)
// e.g. The boy, This boy, My boy, whose car, whatever reason etc.
// 

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 55
// determiners
| NP#3 {?*, det#2[wh:~]} | 
	if ( HEAD(#1,#3) )
	DETD(#1,#2)

// Rule 56
// possessives and whose
| NP#3 {?*, pron#2[gen:+]} |
	if ( HEAD(#1,#3) )
	DETD(#1,#2)


// Rule 57
// Wh determiners (tagged as determiners)
// which and what are in a DETD dependency
| NP#3{?*, det#2[form:fwhat]; det#2[form:fwhich]} |
	if (HEAD(#1,#3) )
	DETD(#1,#2)

// Rule 58
// WH determiner of quantity (how much, how many)
// In this case the dependency is one of quantification
| NP#3{?*, det#2[form:fmany];det#2[form:fmuch] } |
	if (HEAD(#1,#3) )
	QUANTD(#1,#2)


// Rule 59
// Wh determiners
// We force the NP not to be a subject pronoun in order to avoid DETD(you,what) in What you see
| SC{BG{#1[wh]}, NP{#2[last,proper:~,pron:~]}} |
	DETD[badchunk=+](#2,#1)



// Rule XXXX
// Correction of DETD error when the NP contains a genitive
// e.g. The man's friend *DETD(friend,the) but DETD(man,the)
| NP{?*,#2[noun:+],part, ?*, #1[last]} | 
	if ( ^DETD(#1,#3) )
	DETD(#2,#3)


// TEST
//| NP#1, (punct[comma], NP)*, conj[coord], NP |
//	LIXO(#1)




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ADJMOD dependency (between an adjectival head and an adverb or superlative)
// e.g. very nice, most important
// 

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 60
// Works for AP like "very nice" but also with complex wh-adverbs like "how nice"
//| AP{?*, adv#2,adj#1}; ADV[howadj]{adv#2,#1[adj]} |
| AP{?*, adv#2[degree],#1[adj:+]} |
	ADJMOD[pre=+](#1,#2)

// Rule XXXXX
// If a AP is just made with ADV ADJ we have an ADJMOD[pre] between the ADV and ADJ (even if ADV has not feature degree:+.
// e.g. It was {AP previously unknown}
| AP{adv#2[first,degree:~], #1[adj:+,last]} |
	ADJMOD[pre=+](#1,#2)

// Rule 61
// e.g. The most important fact ADJMOD(important, most)
| NP{?+, quant#1[sup], AP#2} |
	if ( HEAD(#4,#2) )
	ADJMOD[pre=+](#4,#1)


// Rule 62
// For cardinal points that are tagged as nouns
// e.g. North Korean
| AP{noun#1[cardpoint], nadj#2[last]} |
	ADJMOD[pre=+](#2,#1)


// Rule 63
// AP with comparative form
// e.g. {more {comfortable}AP }AP
| AP{#1[form:fmore], AP#3[last]} |
	if ( HEAD(#2,#3) )
	ADJMOD[pre=+](#2,#1)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ADVMOD dependency (When an adverb modifies another adverb...)
// e.g. He talks really slowly ADVMOD(slowly,really)
// Also for interrogative complex adverbs e.g. "how long"

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



// Note : In order to avoid to have ADVMOD_PRE(far,so) for "so far (away,as)" the rule is duplicated and constrained on the adverb forms.

// Rule 64
// He talks very slowly ADVMOD(slowly,very)
| adv#1[degree,form:~fso], adv#2 | 
	ADVMOD[pre=+](#2,#1)

// Rule 65
| adv#1[degree], adv#2[form:~ffar] | 
	if ( ~ADVMOD[pre](#2,#1) )
	ADVMOD[pre=+](#2,#1)


// Rule 66
| ADVP[wh:+]{#1[form:fhow], adv#2} | 
	ADVMOD[pre=+](#2,#1)	


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// QUANTD dependencies (between a nominal head and a determiner)
// e.g. Three boys, ALL the BOYS, Both of the boys, All of the boys
// 
// We consider QUANTD dependencies between adverbs like "more than", "at least" etc.
// and a following numeral or digit
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 67
// quantification between a quantadv and a numeral/or digit within an NP
// e.g. at least 3 people, more than 200 rooms, etc....
| NP{adv#3[quantadv], num#2;dig#2;det#2[indef]} |
	QUANTMOD[pre=+](#2,#3)


// Rule XXXX
// quantification "very little" in this case we consider very to modify "little"
| adv#1[lemme:very], quant#2 |
	QUANTMOD[pre=+](#2,#1)


// Rule XXXXX
// Over <number> noun, e.g. over 100 years
| NP{ NUMP{#1[lemme:over], num#2;dig#2} } |
	QUANTMOD[pre=+](#2,#1)

// Rule 68
// Quantification between "twice" and the period noun that is following e.g. Twice a week
| NP#1[tempexpr]{adv#3[form:ftwice]} |
	if ( HEAD(#2,#1) )
	QUANTD(#2,#3)



// Rule 69
// quantification of a nominal head by a numeral or a digit
// The numeral cannot be the last in order to avoid a QUANT dependency from one element to itself
//| NP#3[hour:~]{?*, num#2[last:~];dig#2[last:~]} |
| NP#3[hour:~]{?*, num#2[last:~];dig#2[last:~]} |
	if ( HEAD(#1,#3) )
	QUANTD(#1,#2)

// Rule XXXX
// When the numeral is within a NUMP
// e.g. over 100 years
| NP#3{?*,NUMP[last:~]{?*,num#2;dig#2}} |
	if ( HEAD(#1,#3) )
	QUANTD(#1,#2)


// Rule 70
// quantification of a nominal head by a quantifier which is not negative
| NP#3[hour:~]{?*,quant#2[last:~,form:~fno]} |
	if ( HEAD(#1,#3) & ~ADJMOD(?,#2) )
	QUANTD(#1,#2)


// Rule 71
// Same as above when the quantifier is negative
// negat is a inter feature. We decided that the feature neg is used on mod. dependencies.
| NP#3[hour:~]{?*,quant#2[last:~,form:fno]} |
	if ( HEAD(#1,#3) & ~ADJMOD(?,#2) )
	QUANTD[negat=+](#1,#2)



// Rule 72
// quantifitication of a predet quantifier on the nominal following head
// e.g. both of them, all of the boys, many of the people, much of them 75% of them etc.
| NP{?*,quant#2[last]};PP{?*,NP{quant#2[last]}}, PP{prep[form:fof], NP#3} |
	if ( HEAD(#1,#3) )
	QUANTD(#1,#2)





// Rule 73
// When a NP which nucleus has the feature [numer:+] (e.g. dozen, thousand, ...) is followed by a PP{of}, then the nucleus of this NP quantifies the nucleus of the PP
// Note : feature numer has been added on some pronouns (none, one(as pronoun))
// category "num" is given to all numerals (three thousand). 
| NP{?*,#2[numer, last]};PP{prep,NP{?*,#2[numer,last]}} ; 
  NP{?*,#2[last,card]}; PP{prep,NP{?*,#2[last,card]}} ;
  NP{?*,#2[last,num]}; PP{prep,NP{?*,#2[last,num]}}, 
  PP{prep[form:fof], NP#3} |
	if ( HEAD(#1,#3) )
	QUANTD(#1,#2)




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// HEAD OF THE PP. It is not together with the other HEAD relations because of the deletion of the 
// HEAD relation of the embedded NP.
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 74
/Detection of the PP head. We consider the PP head to be the head of the NP embedded in this PP \
|PP#2{prep,NP#3}| 
	if ( ~HEAD(?,#2) & HEAD(#1,#3) )
	HEAD(#1,#2)

// Rule 75
// Detection of the PP head when the head is a wh-pronoun.
// eg. with whom
| PP#2{prep,pron#1[last]} |
	HEAD(#1,#2)


// Rule 76
// Detection of the PP head when the head is an adjective within an AP
// e.g. of evil
| PP#2{prep,AP#3[last]} |
	if ( ~HEAD(?,#2) & HEAD(#1,#3) )
	HEAD(#1,#2)

// Rule 77
// Detection of PP head when no HEAD relation have been previously detected (does not contain any NP, fixed expressions, eg. From time to time
| PP#2{prep,?*,noun#1} |
	if ( ~HEAD(?,#2) )
	HEAD(#1,#2)





//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//	COORDINATION cont.
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// COORDINATION. Establishment of COORD and NCOORD relation. Presupposes to know the HEAD relation (that's why it is not at the beginning of the file.




// We accept that presence of a comma before the coordinator if there is no verbs on the right of the last coordinated NP


// Both NP and NP
| conj[form:fboth], NP#1, conj[coord,lemme:and], NP#2 |
  if ( HEAD(#3,#1) & HEAD(#4,#2) )
  NCOORD(#3,#4)


// Coordination of NPs.
// If an NP is preceeded by a coordination conjunction which is in turn preceeded by a NP or (NP,comma)*. 
// And if this NP is not followed by any verb until the end of the sentence, or if there is one verb, it is an indspeech verb.
// THEN the heads of these NP are coordinated
// e.g ''There's not enough services and resources for the homeless veterans,'' Siegel said."


// Rule 78



| ?{?*, ?[comma:~,coord:~,form:~fas], NP#1, (punct[comma], NP)*, (punct[comma]), conj[coord,form:~fboth], NP#2, ?*[verb:~], (?[verb,indspeech]), ?*[verb:~]} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NCOORD(#3,#4)


// Rule 79
| ?{?*, ?[noun:~,prep:~], punct[comma], NP#1, (punct[comma], NP)*, conj[coord,form:~fboth], NP#2, ?*[verb:~]} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NCOORD(#3,#4)

// Rule XXXX
// Starting sentence with coordinated NPs
| NP#1[startbis], (punct[comma],NP)*, conj[coord], NP#2 |
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NCOORD(#3,#4)



// Rule 80
// If we have the sequence NP[proper] PP followed by (NP[proper] PP comma)* followed by conj[coord] NP[proper], (PP)
// Then we coordinate the NP heads of this sequence
// Feature ncoord is added on the PP in order to avoid in a further step to consider these PP heads coordinated with the NP heads
| NP#1[proper,first], PP[nocoord=+], (punct[comma], NP[proper], PP[nocoord=+])*, conj[coord], NP#2[proper], (PP[nocoord=+])|
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NCOORD(#3,#4)

// Rule 81
| ?[noun:~,prep:~], NP#1[proper], PP[nocoord=+], (punct[comma], NP[proper], PP[nocoord=+])*, conj[coord], NP#2[proper], (PP[nocoord=+]) |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ~NCOORD(?,#4) )
	NCOORD(#3,#4)


// Rule 82
// We have a determined NP followed by a PP followed by (NP comma)* conj[coord] NP 
// If the first NP is determined and the other are not, then we decide that the heads of the following NP's are coordinated with the HEAD of the PP that follows the first NP.
// CHECK on corpus if this is true...
// e.g. He filled the spectator seats with heroes and widows
| NP#5{#1[first]};PP#5{?*,NP{#1[first]}}, PP{prep,NP#2}, (NP; punct[comma])*, conj[coord], NP#3{#4[first]} |
	if ( HEAD(#6,#5) & DETD(#6,#1) & HEAD(#7,#3) & ~DETD(#7,#4) & HEAD(#8,#2) )
	NCOORD(#8,#7)



// Rule 83
// We have a determined NP followed by a PP followed by (NP comma)* conj[coord] NP
// IF all the following NP's are determined the same way than the first NP,
// THEN we decide that the heads of these following NP's are coordinated with the Head of the first NP (and not the HEAD of the following PP).
// CHECK on corpus....
| NP#5{#1[first]};PP#5{?*,NP{#1[first]}}, PP{prep,NP#2}, (NP; punct[comma])*, conj[coord], NP#3{#4[first]} |
	if ( HEAD(#6,#5) & DETD(#6,#1) & HEAD(#7,#3) & DETD(#7,#4) & HEAD(#8,#2) )
	NCOORD(#6,#7)



// Rule 84
// e.g. he referred to the wealth of her parents and her relatives
// IF we have a PP or NP which nominal head is preceeded by a possessive followed by (comma, NP)* conj[coord] NP, 
// IF all these NP are preceeded by a possessive
// THEN these NP are coordinated
| NP#1{pron[gen,det]};PP#1{prep,NP{pron[det,gen]}}, (punct[comma]; NP{pron[gen,det]})*, conj[coord], NP#2{pron[gen,det]} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ~NCOORD(#3,?) )
	NCOORD(#3,#4)


// Rule 85
// If we have a NP, PP, (NP;comma)* conj[coord] NP and 
// if the the first NP is made by a quantifier only and
// if the following NP's are not determined
// then we coordinate the NP contained in the first PP with the following NP's.
// e.g. Many of registration and election are outmoded. -> coordination between "resgistration" and "election"
| NP{quant[last]}, PP#1{prep,NP}, (punct[comma]; NP{?[first,det:~]})*, conj[coord], NP#2{?[first,det:~]} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NCOORD(#3,#4) 



// Rule 86
// We have a PP in which there is an adjective followed by a noun, followed by (NP;comma)*, and NP
// If the NP's contain just one noun, and the NP in the PP has no article
// then the NP's are coordinated
// e.g. They took notes for grammatical rules and explanations.
| PP#1{prep,NP}, (NP{?[first,last]};punct[comma])*, conj[coord], NP{#3[first,last]} |
	if ( HEAD(#2,#1) & ~DETD(#2,?) & ~QUANTD(#2,?) )
	NCOORD(#2,#3)


// Rule 87
// Default rule, check if problems
// IF We have a NP preceeded by a coordinator which in its turn is preceeded by a sequence of NP and two or more PP's
// IF no NCOORD relation had been previously calculated
// Then we attach the coordination to the last PP
| NP, PP*, PP, PP#1, conj[coord], NP#2 |
	if ( HEAD(#4,#2) & ~NCOORD(?,#4) & HEAD(#3,#1) )
	NCOORD(#3,#4)



// COORDINATION WITHOUT CONJUNCTION OF COORDINATION
// To be very careful...

// Rule 88
// Coordination of proper nouns separated only by commas
// In order to avoid to coordinate wrongly some proper nouns in apposition, at least 3 NP must be present
// E.g. ...in the five counties of Dallas, Harris, Bexar, Tarrantand El Paso would be ....
|  ?[comma:~], NP#1[proper];PP#1{?*,NP[proper]}, punct[comma], NP[proper], (NP[proper]; punct[comma])*, punct[comma], NP#2[proper], ?[comma:~] |
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NCOORD(#3,#4)



// Rule 89
// If we have a PP introduced by a certain preposition which is preceeded by a coordinator which is in turn preceeded by a sequence of (PP;comma) introduced with the same preposition
// Then we coordinate the heads of all these PP's
// If the last PP is not followed by any verbal predicate.
| PP#1{prep#2}, (PP;punct[comma])*, conj[coord], PP#4{prep#5}, punct;bg |
	if ( HEAD(#7,#1) & HEAD(#8,#4) & ( #2[form]::#5[form] ) )
	NCOORD(#7,#8)
	

// Rule 90
// Cleaning Redundant NCOORD
if ( NCOORD(#1,#2) & ^NCOORD(#3,#2) & #1 < #3 )
	~



// Rule 91
// COORD relation at the end of the NCOORD domain
| conj#2[coord];punct#2[comma], NP#3;PP#3 |
	if ( HEAD(#1,#3) & NCOORD(?,#1) )
	COORD(#2,#1)


// Rule 92
// COORD relation in the middle of the NCOORD domain
// PROBLEME SI LE PP du milieu est un modifieur d un NP. Solution with the feature nocoord added in the detection of NCOORD relations
| PP#1[nocoord:~];NP#1, ?*, NP#2;PP#2[nocoord:~], ?*, NP#3;PP#3[nocoord:~] |
	if ( HEAD(#4,#1) & HEAD(#5,#3) & HEAD(#7,#2) & NCOORD(#4,#5) & COORD(#6,#5) )
	COORD(#6,#7)

// Rule 93
// COORD relation at the beginning of the NCOORD domain when the first coorded head is within a PP or a NP
// Note : the restriction ~COORD(#4,#2) is here in order to avoid the construction of 2 COORD(#4,#2) relations when a PP (in which there is a NP) is involved.
| PP#1; NP#1 |
	if ( HEAD(#2,#1) & NCOORD(#2,#3) & COORD(#4,#3) & ~COORD(#4,#2) )
	COORD(#4,#2)


// We have an AND followed by a NP followed by no verbs
// The NP is not involved in a NCOORD relation and the AND is not involved in a COORD relation
// Then we attached this NP with the first NP on its left that is not involved in another coordination
// e.g. It has been for the practice in the appointment of appraisers, guardians and administrators AND THE AWARDING of fees or compensation.
//| PP#1;NP#1, ?*, conj[coord], NP#2, ?*[verb:~], ?[end] |
//	if ( HEAD(#4,#2) & ~COORD(?,#4) & HEAD(#3,#1) & ~COORD(?,#3) )
//	NCOORD(#3,#4)


// Rule 94
// COORD relations for coordinated verbs in the progressive form (end of VCOORD)
| conj#1[coord], GV[prog]{?*,#2[last]} |
	if ( VCOORD[prog](?,#2) )
	COORD(#1,#2)


// Rule 95
// COORD relation for coordinated verb[prog] in the middle of the VCOORD
| GV[prog]{?*,#1}, ?*, GV[prog]{?*,#2}, ?*, GV[prog]{?*,#3} | 
	if ( VCOORD[prog](#1,#3) & COORD(#4,#3) )
	COORD(#4,#2)
	
// Rule 96
// COORD relation for coordinated verb[prog] in the beginning of VCOORD
| GV[prog]{?*,#1};NFV[vprog]{?*,#1} |
	if ( VCOORD(#1,#2) & COORD(#3,#2) )
	COORD(#3,#1)


// Rule 97
// Coordination of infinitive verbs
// If we find a coordination followed by an infinitive verb and if this verb is followed by no other verbs
// And if on the left of the coordination, we find another infinitive verb that is not preceeded by comma,
// Then these two infinitive verbs are coordinated
|  IV[startbis]{prep,?*,verb#1[last]}, (IV;punct[comma];NP;adv)*, conj#3[coord], IV{?*,verb#2[last]} |
	VCOORD[infinit=+](#1,#2)

// Rule 98
| ?[comma:~], IV{prep,?*,verb#1[last]}, (IV;punct[comma];NP;adv)*, conj#3[coord], IV{?*,verb#2[last]} |
	VCOORD[infinit=+](#1,#2)
// Rule 99
| ?[inf:~], ?[comma:+], IV{prep,?*,verb#1[last]}, ?*[verb:~], conj#3[coord], IV{?*,verb#2[last]} |
	VCOORD[infinit=+](#1,#2)



// Rule 100
// Coorded relation between the coordinator and the infinitive coordinated
| conj#1[coord], IV{?*,verb#2[last]} |
	if ( VCOORD[infinit](?,#2) )
	COORD(#1,#2)

// Rule 101
// Coorded of infinitives in the middle of the VCOORD domain
| IV{?*,#1[last]}, ?*, IV{?*,#2[last]}, ?*, IV{?*,#3[last]} |
	if ( VCOORD[infinit](#1,#3) & COORD(#4,#3) )
	COORD(#4,#2)


// Rule 102
// Coorded of infinitives at the beginning of the VCOORD domain
| IV{?*,#1[last]} |
	if ( VCOORD[infinit](#1,#2) & COORD(#3,#2) )
	COORD(#3,#1)





// Rule 103
// Quantification by BOTH with coordinated nouns.
// e.g. Both Gomez and Pye. QUANTD(and,both)
// note:  the axis of coordination is quantified.
| quant#3[form:fboth], NP#1 | 
	if ( HEAD(#2,#1) & NCOORD(#2,?) & COORD(#4,#2) )
	QUANTD(#4,#3)


// Rule 104
// Quantification by NEITHER with negative coord. nouns
// e.g. Neither Gomez nor Pye QUANTD(nor,neither)
// note: the axis of coordination is quantified
| quant#3[form:fneither], NP#1 | 
	if ( HEAD(#2,#1) & NCOORD(#2,?) & COORD(#4,#2) )
	QUANTD[negat=+](#4,#3)


// Rule 105
// Adding the feature negat:+ on QUANTD dependencies that involves a feature negat.
// The case of neither nor is excluded from this rule
| #1[negat] |
	if ( ^QUANTD(#2,#1) )
	QUANTD[negat=+](#2,#1)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// NUCL_VLINK Relations.
// These relations are established between the different components of complex verbal forms (auxiliary, modals, progressive form etc.)

// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 106
// VLINK relations when FV is not under an SC node
// case of embedded clauses that are not introduced by a BG.
// eg. The work you did should have been nice
// Some VLINK relations that involves the FV has to be duplicate.
| FV{#1[aux:+,form:~fdo]},(adv),IV[inf:+]{?*,#2[last]}| 
	NUCL[modal=+,vlink=+](#1,#2)


// VLINK modal between dare and a following verb. dare is taken as a "normal" verb
| SC{?*,FV{?*,#1[lemme:dare,aux=+]}};FV{?*,#1[lemme:dare,aux=+]}, (adv), IV{#2[first,last]}| 
	NUCL[modal=+,vlink=+](#1,#2)


// Rule 107
// VLINK [perfect:+] relation when FV is not under SC.
| FV{#1[form:fhave,last]},?*[adv], GV{verb#2[partpas]};NFV{verb#2[partpas]} |
	NUCL[perfect=+,vlink=+](#1,#2)


// Rule 108
// NUCL_VLINK_PERFECT when the verbs are under a GV node
// e.g. after HAVING DONE the job, he left
| GV{#1[form:fhave], #2[partpas]} |
	NUCL[perfect=+,vlink=+](#1,#2)

// Rule 109
/Relation between non-finite passive forms within a GV and within an IV \
/eg. {SC He would} {IV have} {GV been being visited}\
| GV{verb,verb#2[form:fbe],verb#3[partpas]}; IV{(adv), prep[form:finfto], ?*, verb#2[form:fbe], verb#3[partpas]} |
	NUCL[passive=+,vlink=+](#2,#3)

// Passive progressive form that is modifier of a noun
// e.g. The chances of John being visited (by Mary) are slim.
//| GV{?*,verb#2[form:fbe,prog],verb#3[partpas]} |
//  NUCL[passive=+,vlink=+](#2,#3)

// Rule 110
/VLINK relation between an have auxilary and a participle in a IV GV structure (see {SC He would} {IV have} {GV been being visited} \
// Also works for a perfect VLINK between an IV and NFV structure
// e.g How could you have seen that -> VLINK(have,seen)
| IV{?*, VERB#1[form:fhave]} , adv*, GV{VERB#2[partpas:+,last:~]};NFV{?*,verb#2[partpas:+,last:+]} |
	NUCL[perfect=+,vlink=+](#1,#2)


// Rule 111
/VLINK relation between an have auxilary and a participle in a IV GV structure (see {SC He would} {IV have} {GV been being visited} \
| IV{?*, VERB#1[form:fhave]} , adv*, NFV{?*, VERB#2[partpas:+,last:~]} |
	NUCL[perfect=+,vlink=+](#1,#2)



// Rule 112
/Relation between a modal and the main verb eg. She can walk \
/ Take also the relation between a modal and an infinitive in the interrogative form. e.g. Which boy would you say has arrived ? \ 
|SC{?*,FV{?*,#1[aux:+,form:~fdo]}}, ?*[verb:~],IV[inf:+]{?*,#2[last]}| 
	NUCL[modal=+,vlink=+](#1,#2)


// Rule 113
// Relation between a form of be and the word "able" when preceeded by to+infinitive. Able is also linked to the infinitive
| SC{?*,FV{?*,#1[form:fbe]}};IV{?*,#1[form:fbe]}, NP{AP{#2[form:fable]}};AP{#2[form:fable]}, IV{prep[form:finfto],?*,#3[last,verb]} |
	NUCL[vlink=+,modal=+](#2,#3),
	NUCL[vlink=+](#1,#2).


// Rule 114
/Relation between a modal and the NFV chunk eg. He would have been -> VLINK_MODAL(would,have) or he should be visiting VLINK_MODAL(should,be)\
|SC{?*,FV{?*,#1[aux:+]}};FV{?*,#1[aux:+]};conj[lemme:"than"], NFV{ ?*[adv], VERB#2, ?*[adv], VERB}| 
	NUCL[vlink=+,modal=+](#1,#2)


// Rule 115
// This rule is able to deal with a modal VLINK even if there is a tagging error
// e.g. How much could you RENT(*FV) a car for in 1996 ?
// In this very constrained context (WH and NP between the aux and bad tagged FV, we will construct a VLINK[modal:+]
|SC{?[wh];BG{?[wh]},FV{#1[aux:+]}}, NP, FV{ ?*[adv], verb#2[last]}| 
	NUCL[vlink=+,modal=+](#1,#2)

// Rule 116
// modal VLINK relation when both of the verbal forms are chunked under FV (or the second under IV)
// e.g. I hope {SC NP{I} FV{will}} FV{AUX{have to}} IV{travel}....
| SC{?*, NP, FV{#1[aux:+,form:~fdo]}}, FV{?*[adv], aux#2[last];verb#2[last]}; IV{?*,aux#2[last];verb#2[last]} |
	NUCL[vlink=+,modal=+](#1,#2)


// Rule 117
// MODAL VLINK when both of the verbal forms are under IV nodes at the same level
// e.g. They would have to face the situation
| IV{?*,aux#1[last]}, IV{?*, aux#2[last];verb#2[last]} |
	NUCL[vlink=+,modal=+](#1,#2)

// Rule 118
/Relation between a modal a non finite be-form and a progressive form within a GV\
/e.g. He should have {GV BEEN BEING visited}\
| GV{verb#1[form:fbe,partpas], verb#2[prog, last:~]} |
	NUCL[vlink=+,progress=+](#1,#2)


// Rule 119
/Relation between a non finite be-form and a progressive form\
/eg. He should {NFV be visiting}\
| NFV{?*, verb#1[form:fbe], (adv), verb#2[vprog] } | 
	NUCL[vlink=+,progress=+](#1,#2)


// Rule 120
//Relation between a finite be-form and a progressive form. "is playing" when the verbal finite form is under an SC 
// NOTE: The rule is duplicated with the restriction ?[prep:~] in order to avoid bad VLINK dep. in cases like:
// It is one of the most serious bottlenecks in elucidating the replication mechanisms  -> *VLINK(is,elucidating)
|SC{?*,FV{?*,#1[form:fbe,last]}},?*[verb:~,prep:~,comma:~], NFV[vprog:+]{?*,#2[last]}; GV{?*,#2[last,vprog]}|
	NUCL[vlink=+,progress=+](#1,#2)




//|SC[wh]{?*,FV{?*,#1[form:fbe,last]}},?*[verb:~],  ?[prep:~,comma:~], NFV[vprog:+]{?*,#2[last]}; GV{?*,#2[last,vprog]}|
//	NUCL[vlink=+,progress=+](#1,#2)
// A VOIR


// Rule 121
//Relation between a finite be-form and a progressive form. "is playing" when the verbal finite form is not under an SC 
// In this case the FV is directly under the TOP node (indspeech case)
// Duplication of the rule for the same reasons explained above
|TOP{?*,FV{?*,#1[form:fbe,last]},?*[verb:~,prep:~], NFV[vprog:+]{?*,#2[last]}; GV{?*,#2[last,vprog]} };
 ST{?*,FV{?*,#1[form:fbe,last]},?*[verb:~,prep:~], NFV[vprog:+]{?*,#2[last]}; GV{?*,#2[last,vprog]} } |
	NUCL[vlink=+,progress=+](#1,#2)

//|TOP{?*,FV{?*,#1[form:fbe,last]},?*[verb:~],  ?[prep:~], NFV[vprog:+]{?*,#2[last]}; GV{?*,#2[last,vprog]} }|
//	VLINK[progress=+](#1,#2)
// A VOIR
// 


// Rule 122
/Relation between a finite be-form and a past participle. were burned\
|SC{?*,FV{?*,#1[form:fbe,last]};FV{?*,#1[verb,surface:"%'s"]}}, ?*[verb:~], NFV{?*,#2[partpas,last]} |
// TOP{?*,FV{?*,#1[form:fbe,last]}}, ?*[verb:~], NFV{?*,#2[partpas,last]};
// ?{?[startbis], ?*,FV{?*,#1[form:fbe,last]}}, ?*[verb:~], NFV{?*,#2[partpas,last]} |
	NUCL[vlink=+,passive=+](#1,#2)

// Rule XXXX
// Same as above when be-form not under an SC and the past participle is contiguous.
//| FV{?*,#1[form:fbe,last]}, NFV{?*,#2[partpas,last]} |
//	NUCL[vlink=+,passive=+](#1,#2)


// Rule 123
// When there are some tagging errors and an past participle is taken as a finite verb
// e.g when was the bridge constructed(*FV)
| SC{?*,?[wh], FV{?*, #1[form:fbe,last]}}, NP, PP*, FV{#2[verb,partpas] } |
	NUCL[vlink=+,passive=+](#1,#2)



// Rule 124
/Relation between a non-finite passive form eg. be burned\
| NFV{?*, #1[form:fbe], (adv), #2[partpas,last]} |
	NUCL[vlink=+,passive=+](#1,#2)



// Rule 125
/Relation between a form of have and a past participle eg. has -> been visited;visiting \
|SC{?*,FV{?*,#1[form:fhave,last]}}, (NP), NFV{?*,verb#2[partpas,last:~]} |
	NUCL[vlink=+,perfect=+](#1,#2)



// Rule 126
/Relation between a form of have and a past participle alone in the NFV\
// This rule cannot be grouped with the previous one in order to avoid the construction of a double dependency VLINK(has,been) and VLINK(has visited) in He has been visited
// Also works for interrogative forms e.g. {SC {BG Who} {FV HAS} {NP he} {NFV MET}
|SC{?*,FV{?*,#1[form:fhave,last]}}, (NP), NFV{?*,verb#2[partpas,last]}|
	if ( ~NUCL[vlink](#1,?) )
	NUCL[vlink=+,perfect=+](#1,#2)


// Rule XXXX
// be going to inf
| NFV{?*,#1[lemme:go,vprog]}, IV{?[lemme:to],#2[verb]}; IV{?[lemme:to],#2[aux]{?[lemme:have]} } |
  if ( NUCL[vlink:+,progress:+](#10,#1) )
  NUCL[vlink=+,prospective=+](#1,#2)


// Rule XXXX
// be about to inf
| SC{?*,FV{?*,#1[lemme:be]}};?[verb]{?*,#1[lemme:be,fin:~]} , adv[lemme:about], IV{?[lemme:to],#2[verb]} |
  NUCL[vlink=+,prospective=+](#1,#2)


// Rule 127
/Relation between a non finite have form and past participle eg. They might HAVE STOLEN it\
| SC;FV, NFV{adv*, #1[form:fhave], adv*, #2[partpas]} | 
	NUCL[vlink=+,perfect=+](#1,#2)


// Rule 128
// VLINK perfect relation when the FV containing the HAVE form is at the same level than the NFV (past participle) i.e. under the TOP node
// e.g. Which boy did you say HAS ARRIVED ? -> VLINK_PERFECT(has,arrived)
| FV{#1[last,form:fhave]}, NFV{?*[verb:~],#2[last]} |
	NUCL[vlink=+,perfect=+](#1,#2)


// Rule 129
/Relation between a DO form and the following verb. feature insist:+ on the VLINK dependency\
// Works for affirmative and interrogative sentences with no embedded sentences
// e.g. Whom DO they MAKE the chairman every year, What does he like etc.  
// Avoiding She did a tour to raise funds NUCL[vlink,insist](did,raise)
|SC{?*,FV{?*,#1[form:fdo,last]}};FV{?*,#1[form:fdo,last]},(?[noun];?[comma];?[coord];?[prep];adv)*, IV{?*[prep:~], VERB#2}|
	NUCL[vlink=+,insist=+](#1,#2)


// Rule 130
// Relation between a DO form and the following verb when the following verb is badly chunked as a Finite Verb
// e.g. Whom did the Chicago Bull beat ?"
| SC{BG[wh]{pron[form:fwho,obl]}, FV{?*,#1[form:fdo,last]}}, NP, FV{verb#2[last]} |
	NUCL[vlink=+,insist=+,badtag=+](#1,#2)

// Rule 131
// Special rule for the the form "was ...born".
// Born is just analyzed as an adjective. A feature form:fborn has been added.
// We want a VLINK between the BE-form and "born"
| SC{?*, FV{?*,#1[form:fbe]}}, ?*[verb:~], NP{?*,AP{#2[form:fborn]}}; AP{?*,#2[form:fborn]} |
	NUCL[vlink=+](#1,#2)


// Rule 132
// In complex verbal chains having GET+pppart
// e.g. We have to get dressed -> NUCL[vlink](get,dressed)
| ?[verb]{?*, #1[form:fget,last]}; SC{?*,FV{?*,#1[form:fget,last]}}, NFV{#2[first,last,partpas]} |
	if ( ~NUCL(?,#2) )
	NUCL[vlink=+](#1,#2)


// Rule 133
// Missing VLINK in interrogative forms
// When there is an interrogative clause starting with a wh, in which the verb is separated by the inverted subject
| SC[wh]{advp[wh], FV{?,#1[form:fbe]}}, NP, ?[verb]{?*,#2[last,vprog]} |
	if ( ~NUCL(#1,#2) & ~NUCL(#2,#1) )
	NUCL[vlink=+,progress=+](#1,#2)

// Rule 134
| SC{advp[first,wh], FV{?,#1[form:fdo]}}; SC{FV{advp[wh,first],#1[form:fdo]}}
  ; SC{BG[wh,first], FV{?*,#1[form:fdo]}}
  , NP, ?[verb]{?*,#2[last]} |
	if ( ~NUCL(#1,#2) & ~NUCL(#2,#1) )
	NUCL[vlink=+,insist=+](#1,#2)

// Rule 135
| SC[wh]{advp[wh], FV{?,aux#1};FV{?*,#1[form:fcan]};FV{?*,#1[form:fwill]} }, NP, ?[verb]{?*,#2[last]} |
	if ( ~NUCL(#1,#2) & ~NUCL(#2,#1) )
	NUCL[vlink=+,modal=+](#1,#2)





//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//	VDOMAIN relation (Verbal domain) links the first token of a complex verb
//	If the verbal token consists only of one token, both arguments of VDOMAIN
//	are the same
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 136
/Features coming from the VLINK relations (groupped together in verbmark) are added on this VDOMAIN relation\
if ( NUCL[vlink,!verbmark:!](#1,#2) & NUCL[vlink,!verbmark:!](#2,#3) & NUCL[vlink,!verbmark:!](#3,#4) & NUCL[vlink,!verbmark:!](#4,#5) )
	VDOMAIN(#5,#1)

// Rule 137
if ( NUCL[vlink,!verbmark:!](#1,#2) & NUCL[vlink,!verbmark:!](#2,#3) & NUCL[vlink,!verbmark:!](#3,#4) & ~NUCL[vlink](?,#1) & ~NUCL[vlink](#4,?) )  
	VDOMAIN(#4,#1)

// Rule 138
if ( NUCL[vlink,!verbmark:!](#1,#2) & NUCL[vlink,!verbmark:!](#2,#3) & ~NUCL[vlink](?,#1) & ~NUCL[vlink](#3,?) )  
	VDOMAIN(#3,#1)

// Rule 139
if ( NUCL[vlink,!verbmark:!](#1,#2) & ~NUCL[vlink](?,#1) & ~NUCL[vlink](#2,?) )  
	VDOMAIN(#2,#1)



// Rule 140
// Interrogative form when the main verb is BE
// eg. What was the monetary value of the prize in 1998?
| SC{BG[wh];adv[wh];NP[wh], FV{?*,#1[form:fbe,last]}} |
	if ( ~NUCL[vlink](#1,?) )
	VDOMAIN(#1,#1)

// Rule 141
// VDOMAIN built from a unique finite verbal form when this verbal form is under the node TOP or SC
// e.g. Who did you say ARRIVED yesterday ?
| ?{?*[wh:~],FV{?*,#1[last]} } |
	if ( ~NUCL[vlink](#1,?) )
	VDOMAIN(#1,#1)

// Rule 142
// Special case of WH followed by NP followed by a be-form
| SC{?*,?[wh], NP, (PP), FV{?*, #1[last,form:fbe]} } |
	if ( ~NUCL[vlink](#1,?) )
	VDOMAIN(#1,#1)

// Rule 143
// VDOMAIN for an interrogative form or embedded sentence starting by a wh, with a simple verb 
// What chemist won the Nobel Prize in 1992 ?
// The man who has a daughter -> VDOMAIN(has,has)
// What you see is nice
// Which city in China has the largest number of companies ?
| SC{?*,?[wh], (NP), (PP), adv*,  FV{?*,#1[last,form:~fbe]} } |
	if ( ~NUCL[vlink](#1,?)  )
	VDOMAIN(#1,#1)


// Rule 144
// VDOMAIN when it is a stand alone interrogative clause whose  verb is a be-form
// e.g. What precious stone is a form of pure carbon ? Who is here ?
| ST{ SC[wh]{?*, FV{?*,#1[form:fbe]}}, ?*[verb:~], punct[form:fquest]} ; TOP{ SC[wh]{?*, FV{?*,#1[form:fbe]}}, ?*[verb:~], punct[form:fquest]} |
	if ( ~NUCL[vlink](#1,?) )
	VDOMAIN(#1,#1)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//	MAIN/1 relation marks the verbal head of the main clause 

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// The head of the whole sentence is either the left-most higher leveld verb of the sentence, or it is the nucleus of an SC which is under the node TOP and which has the feature indspeech:+ (eg. I'm your friend, said John -> MAIN(said) )

// ST is introduced here in order to ensure compatibility with the XIP extensions that use the general sentence-by-sentence grammar but that deal with a list of sentences (in this case ST corresponds to the sentential node, which is just under TOP)


// Rule 145
// SC which is under the node TOP and which has the feature indspeech and is not introduced by a WH.
| ST{?*[scbegin:~],SC{?*[scbegin:~], FV{?*,#1[last,indspeech]}}} ; TOP{?*[scbegin:~],SC{?*[scbegin:~], FV{?*,#1[last,indspeech]}}} |
	if ( VDOMAIN[!verbmark:!](#2,#1) )
	MAIN(#2)

// AB 2012.01.05 as above, but indspeech verb is directly under TOP node and must be preceded by at least one punctuation mark
| TOP{?*[scbegin:~], punct*, FV{?*,#1[last,indspeech]}} |
	if ( VDOMAIN[!verbmark:!](#2,#1) )
	MAIN(#2)

// AB 2011.12.19 the leftmost verb introduced by a subordinating conjunction at the beginning of a sentence is the main verb (unless there is already a MAIN calculated, i.e. an indspeech verb)
// NB subordinating conjuctions allowed here are: but, however, moreover
// e.g. But John thought Mary liked apples. MAIN(thought)
//      However, slowly and carefully, John came. MAIN(came)
| TOP{?*[verb:~], SC{BG[lemme:but];BG[lemme:however];BG[lemme:moreover];BG[lemme:furthermore];BG[lemme:nonetheless];BG[lemme:nevertheless], ?*[verb:~,scbegin:~], (NP), FV{?*,#1[last]}}} |
  if ( VDOMAIN[!verbmark:!](#2,#1) & ~MAIN(?) )
  MAIN(#1)

// AB 2012.01.03 the verb cannot be a past particple preceded by a genitive clitic "'s"
// e.g. Chancellor of the Exchequer Nigel Lawson's restated commitment has helped... MAIN(helped), *MAIN(restated)
| TOP{?*[verb:~], SC{?*[wh:~,scbegin:~], NP{?*,?[last,gen:~]};PP{?*,NP{?*,?[last,gen:~]}}, FV{?*,#1[last,partpas]}}} |
	if ( VDOMAIN[!verbmark:!](#2,#1)  &  ~MAIN(?)  )
	MAIN(#2)
//, LIXO(#2)

// Rule 146
// The head of the whole sentence is the leftmost highest level verb of the sentence.
// The verb cannot be introduced by a wh. e.g. When he arrived, it was too late *MAIN(arrived)
// We have to check that no previous MAIN/1 relation has been calculated
// AB 2012.01.04 added constraints noun:~, prep:~ and optional NP/PP with gen:~ to complement above rule
| ST{?*[verb:~], SC{?*[wh:~,scbegin:~,noun:~,prep:~], (NP{?*,?[last,gen:~]};PP{?*,NP{?*,?[last,gen:~]}}), FV{?*,#1[last]}}} ; TOP{?*[verb:~], SC{?*[wh:~,scbegin:~,gen:~,noun:~,prep:~], (NP{?*,?[last,gen:~]};PP{?*,NP{?*,?[last,gen:~]}}), FV{?*,#1[last]}}} |
	if ( VDOMAIN[!verbmark:!](#2,#1)  &  ~MAIN(?)  )
	MAIN(#2)
//, LIXO(#2,#2)

// Rule 147
// Head of the whole sentence in interrogative form.
// We have to check that it is not an indirect interrogative introduced by an indspeech SC
| ST{ SC{BG[wh];adv[wh], FV{?*,#1[last]}} } ; TOP{ SC{BG[wh];adv[wh], FV{?*,#1[last]}} } |
	if ( VDOMAIN[!verbmark:!](#2,#1) & ~MAIN(#2) )
	MAIN(#2)

// AB 2011.12.21 For sentence-initial subordinate clause (not introduced by subconjs used in rule 145 above - i.e. but, however, nonetheless, furthermore, moreover, nevertheless, etc). This needs to be restricted with punctuation as the subordinate clause has not been "detected" yet. Should probably deal with these cases later in a correction phase...
// e.g. Although people reckon he loves food, John went on a hunger strike. MAIN(went)
| TOP{ SC{BG,?*,FV}, ?*[punct:~], punct[comma], ?*[verb:~,incise:~], FV{?*,#1[last,incise:~]} } |
     if ( VDOMAIN(#2,#1) & ~MAIN(#2) )
     MAIN(#2)

// Rule 148
// Default rule, if no MAIN/1 relation has been previously calculated
| ST{?*,SC{?*[wh:~,scbegin:~],FV{#1[last]}}} ; TOP{?*,SC{?*[wh:~,scbegin:~,noun:~,prep:~],?[noun,gen:~]{?*,?[last,gen:~]};?[prep]{?*,NP{?*,?[last,gen:~]}},FV{#1[last]}}} |
	if ( VDOMAIN(#2,#1) & ~MAIN(?) ) 
//& ~MAIN(#5) & #5 < #2 )
	MAIN(#2)

// Rule 149
// When no SC has been constructed and the FV is directly under the TOP
// AB 2011.12.21 was & ~MAIN(#2) but using a more general constraint now ~MAIN(?), avoids recalculating a MAIN
| ST{?*[fin:~], FV[fin]{?*,#1[last]} } ; TOP{?*[fin:~], FV[fin]{?*,#1[last]} } |
	if ( VDOMAIN(#2,#1) & ~MAIN(?) )
	MAIN(#2)

// Rule 150
// Cleaning MAIN dependencies
// In the case of a sentence-by-sentence analysis
// If two MAIN dependencies and one is with an INDSPEECH verb
| punct#3[sent:+] |
	if ( ^MAIN(#1[indspeech:~]) & MAIN(#2[indspeech:+]) & #1 < #2 & #2 < #3 )
	MAIN2[features=~](#2)

// Rule 151
if ( ^MAIN(#1[indspeech]) & #2[verb] < #1 & VDOMAIN(?,#2) & ~VDOMAIN(?,#3) & #3 < #2 )
	MAIN2(#2)

// Two MAIN dep. and the first one is the first element of the sentence in past participle
if ( ^MAIN(#1[partpas,startbis:+]) & MAIN(#2) & #1 < #2 )
~


if ( MAIN2(#1) & ^MAIN(#1) )
   ~

// Rule XXXXX
// Transforming MAIN2 in MAIN
if ( ^MAIN2(#1) )
	MAIN(#1)

// AB 2012.01.11 if there are two indspeech main verbs detected, take the one furthest to the right.
// The man laughed, John said. MAIN(said) and *MAIN(laughed)
if ( ^MAIN(#1[indspeech]) & MAIN(#2[indspeech]) & #1 < #2 )
~

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// PREPD/2 Link between the head of the PP and the preposition.
//		PART 1
// We just treat here the link between TO and an infinitive
// See PREPD (PART 2) for the other PREPD links
//		
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 152
// Link between TO and the verb (infinitive form)
// eg. It should be combined TO ACHIEVE greater efficiency  PREPD(TO,ACHIEVE)
| IV{?*,prep#1[form:finfto], ?*, verb#2[last]} | 
	PREPD[post=+](#1,#2)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// NUCL[particle]/2 Link between a verb and its particle
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 153
// Link between a simple verbal form and its particle when the particle is categorized as a preposition and when this preposition is at the same level than the SC (i.e. not followed by an NP)
| SC{?*,FV{?*,#1[last]}}, adv*[partic:~],prep#2[partic] |
	if (#1[partic]:#2[partic] )
	NUCL[particle=+](#1,#2)

// Rule 154
// Same rule as above for complex verbal forms
| SC{?*,FV{?*,#1[last]}}, adv*[partic:~], (IV), NFV{?*,#2[last]};IV{?*,#2[last]}, adv*[partic:~], prep#3[partic] |
	if ( VDOMAIN(#2,#1) & (#2[partic]:#3[partic]) )
	NUCL[particle=+](#2,#3)


// Rule 155
// Link between a verbal form and its particle when the particle is categorized as an adverb 
// e.g. he gave up
| SC{?*,FV{?*,#1[last]}}; FV{?*,#1[last]}; IV{?*,#1[last]}; NFV{?*,#1[last]}; GV{?*,#1[last]}, adv*[partic:~],(NP{pron[lemme:it,first,last]}), adv#2[partic] |
	if (#1[partic]:#2[partic] )
	NUCL[particle=+](#1,#2)

// Rule 1285
// When a preposition is not followed by a NP (empty category) in case of an embedded relative
// The man he talked me about is nice talk-about
| SC{?*,FV[incise:+]{?*,#1[last]}};?[incise:+,verb:+]{?*,#1[last]},( NP ), FV[incise:~]{adv#2[hmm_prep]} |
  if ( #1[souscat]:#2[souscat] )
  VERBPREP(#1,#2)


// In above configuration creating the OBJ link (if any) in the embedded infinitieve
| SC{?*,FV[incise:+]{?*,#1[last]}};?[incise:+,verb:+]{?*,#1[last]}, NP#3, FV[incise:~]{adv#2[hmm_prep]} |
  if ( VERBPREP(#1,#2) & HEAD(#30[pronpers,obl],#3) & ~$1(#1,#30) )
  IOBJ[post=+](#1,#30)


// Rule 156
// If a simple verbal form can have "up" or "down" as a particle, and this verb is not a motion verb (which can be followed by "up" and "down" as a preposition) is followed by "up" or "down" that are follwed by an NP , "up" or "down" are particles.
| SC{?*,FV{?*,#1[last,vmotion:~]}}, adv*[partic:~],PP{prep#2[p_up]};PP{prep#2[p_down]} |
	if (#1[partic]:#2[partic] )
	NUCL[particle=+,badtag=+](#1,#2)


// Rule 157
// The following rules are the same as above but for complex verbal forms
| SC{?*,FV{?*,#1[last]}}, adv*[partic:~],(IV), NFV{?*,#2[last,vmotion:~]};IV{?*,#2[last,vmotion:~]}, adv*[partic:~], PP{prep#3[p_up]}; PP{prep#3[p_down]} |
	if ( VDOMAIN(#2,#1) & #2[partic]:#3[partic] )
	NUCL[particle=+,badtag=+](#2,#3)



// Rule 158
// When a verb under TOP admits a certain particle and is immediately followed by a PP in which the preposition is in fact a particle
// e.g. A lesson reinforced by the trappings of wealth LEFT BEHIND last week by despots. 
// e.g. Put on the light !
// In this example we have a PP { Behind last week} and that is not correct
// Also works for verbs in infinite forms e.g. "to ward off evil spirits"
// Adding a constraint when the PP is introduced by "in" and followed by a digit (date) we do not apply this rule in order to avoid "to ring in 1990 and a new decade" *NUCL(ring, in)
| verb#1[partic,trans];FV{?*,#1[last,partic,trans]};IV{?[form:finfto],(adv), #1[last,partic,trans]}, adv*[partic:~], PP[date:~]{prep#2[form:~fin,form:~fof]} |
	if ( #1[partic]:#2[partic] )
	NUCL[particle=+,badtag=+](#1,#2)


// Rule 159
// Same rule as above but the FV is under an SC and not under TOP
| SC{?*, FV{?*,#1[last,partic,trans]}}, adv*[partic:~], PP[date:~]{prep#2[form:~fin,form:~fof]} | 
	if ( #1[partic]:#2[partic] & ~NUCL[particle](#1,#2) )
	NUCL[particle=+,badtag=+](#1,#2)


// Rule 160
// Rule that links a particle to a pastparticiple that has an ADJ tag when this participle is a post modifier of a nominal head
| NP;PP, AP{adj#1[vpap]}, adv#2[partic] |
	if ( ~NUCL[particle](?,#2) )
	NUCL[particle=+,badtag=+](#1,#2)



// Rule 161
// Rule that links "about" to a form of a copula in the idiomatic expressions like "He WAS ABOUT to leave"
| SC{?*,FV{?*,verb#1[cop]}}; FV{?*,verb#1[cop]}; NFV{?*,verb#1[cop]}; GV{?*,verb#1[cop]}; IV{?*,verb#1[cop]}, (adv)*, adv#2[p_about], IV |
	NUCL[particle=+](#1,#2)




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// VERBPREP dependency i.e. Relation between a verb and a preposition that corresponds
// to a PP subcategorized or modifier of this verb
// e.g. The girl I play with -> VERBPREP(play,with)
// e.g. How much do you pay for -> VERBPREP(pay,for)
// e.g. What was it used for -> VERBPREP(used,for)
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 162
// VERBPREP in a embedded relative clause without BG and with a simple verb
| SC{?*,SC{NP, ?*[adv], FV{#1}, ?*[adv], prep#2} } |
	VERBPREP(#1,#2)


// Rule 163
// VERBPREP in an embedded relative clause and a complex verbal form
| SC{?*, SC{NP, ?*[adv], FV{#1}, ?[verb]}, prep#2 } |
	if ( VDOMAIN(#3,#1) )
	VERBPREP(#3,#2)


// Rule 164
// VERBPREP in an embedded clause with simple verb introduced by a BG
// e.g. The girl {SC whom he spoke} to is nice
| SC{BG, NP, FV{#1}}, prep#2 | 
	VERBPREP(#1,#2)


// Rule 165
// VERBPREP in an embedded clause with complex verb introduced by a BG or a WH adverb
// Works also for interrogative subclauses (in this case there is no NP under the SC) 
// e.g. Who did he come with ?
// e.g. How much could you rent a car for in 1996 ?
// BE CAREFUL Who does he accept a picture of ? --> construction of *VERBPREP(accept,of)
// REVOIR
| SC{BG;ADV[wh], (NP), FV{#1}}, (NP), ?[verb], (NP),?*[verb], prep#2 | 
	if ( VDOMAIN(#3,#1) )
	VERBPREP(#3,#2)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// PREPD/2 Link between the head of the PP and the preposition.
//		PART 2 
//		
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 166
// Link between the head of a PP (we consider that the head is the included NP) and the preposition
// Note that if a preposition is envolved in a NUCL[particle] link, no PREPD link will be constructed and the HEAD/2 relation that was computed for the PP is erased
| PP#3[tempexpr:~]{prep#2} |
	if ( HEAD(#1,#3) & ~NUCL[particle](?,#2) )
	PREPD[post=+](#2,#1)

// Rule 167
// Link between the preposition and a WH 
// e.g. For how much can you rent a car
// Note: In this case there is no PP constructed, the preposition is alone under the node TOP
| TOP{prep#2, SC{BG{#1};?[wh]}} |
	PREPD[post=+](#2,#1)






//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////
// 
// LEVEL 3: Syntactic dependencies within simple sentences
// 
// 
// These dependencies are:
//	NMOD : noun modifier
//	SUBJ : Syntactic subject, i.e. relation between the subject and the main verb
//		or auxiliary of a complex verbal form that agrees in number and person
//		with this subj.
//	NUCL: Subject complement, i.e. the complement of a copulative verb. (ex-SUBJCOMPL)
//	PADJUNCT : Predicative Adjunct i.e. dependency between an adjunct and 
//			a copulative verb
//			eg. The children were at the zoo.
//	SUBJATTR : Subject attribute, that is the relation between the subject 
//			and the subjcompl
//			Note that this dependency is deduced from the SUBJ and 
//			SUBJCOMPL dependencies
//	VMOD : A very general dependency that links a verb and the head of a nominal chunk
//			which is either a complement or a modifier of this verb. 
//			(In a later stage these dependencies will be refined)
// 	OBJ : Direct object dependency
//	PREPD/2 : dependency in the case of extraction between the preposition and the extractee.
// 
// 
//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// NMOD (Noun modifiers) dependencies. 
// NMOD is a binary dependency even for the link between a nominal and a prepositional chunk
// e.g. The girl from France NMOD(girl,France)
// In these cases there is also a PREPD relation between the head of the PP and the preposition  (PREPD(from,France)
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Predependent noun modifiers
// Rule 168
// NMOD dependency between a digit and a nominal head when this digit is somewhere between a determiner and the head
| NP#3[tempexpr:~]{det, ?*, dig#2[last:~]} | 
	if  ( HEAD(#1,#3) )
	NMOD[pre=+](#1,#2)


// Rule 169
// When the head of the NP is not the last element....
// e.g. Recessive host mutation affecting virus multiplication -> NMOD_POST(mutation,affecting)
|NP#3[tempexpr:~]{?*,AP#1[last:~]}|
	if ( HEAD(#4,#1) & HEAD(#2,#3) & #2 < #4 )
	NMOD[post=+,agentif=+](#2,#4)

// Rule 170
// NMOD dependency an adjectival head and the NP head. When the NP head is after the AP.
|NP#3{?*,AP#1[last:~]}| 
	if ( HEAD(#4,#1) & HEAD(#2,#3) & #4 < #2 )
	NMOD[pre=+](#2,#4)

// AB 2012.01.04
// NMOD dependency as above, but NP has genitive clitic and modifier is a past participial adjective that is tagged as a finite verb.
// e.g. John's repeated commitment to helping children. NMOD(commitment,repeated)
| SC{?*,NP{?*,?[last,gen,poss]};PP{?*,NP{?*,?[last,gen,poss]}}, FV{?*,#1[last,partpas]}}, NP{?*[det:~,num:~],#2[last,noun]};SC{NP{?*[det:~,num:~],#2[last,noun]}} |
if ( #1 < #2 )
   NMOD[pre=+](#2,#1)

// Rule 171
// NMOD dependency between coordinated adjectives and the first nominal element on its right.
| NP[tempexpr:~]{?*,AP[last:~]{?*,#5[adj]},?*, #2[noun,last]} |
	if ( COORD(#4,#5) )
	NMOD[pre=+,deduced=+](#2,#5)


// Rule 172
// If the head of a NP is an AP and coordinated elements
| NP[tempexpr:~]{?*,AP[last:~]{?*,#5[adj]}, AP#7[last]{?*,#6[last]} } |
	if ( COORD(#4,#5)  ) 
	NMOD[pre=+,deduced=+](#6,#5)

// Rule 173
// NMOD dependency betwen a noun and another noun within the NP 
// eg. civil RIGHTS LEADER or IRAN's GOVERNMENT . The restriction on HEAD avoid to create NMOD(New Year,New Yera) in "the first New Year's"
| NP#3[tempexpr:~]{?*,noun#2[last:~]} |
	if ( HEAD(#1,#3)  & #2 < #1 )
	NMOD[pre=+](#1,#2)

// Rule 174
// Same rule as above but the last element of the nominal chunk is not the head.
// e.g. Recessive host mutation affecting virus multiplication -> NMOD_PRE(multiplication,virus)
| NP#3[tempexpr:~]{?*, noun#2[last:~],?*,noun#1[last]} |
	if ( HEAD(#5,#3) & #2 > #5 )
	NMOD[pre=+](#1,#2)


// Rule 175
// NMOD dependency between a nominal head and a NADJ when this NADJ is not the last 
| NP#2{?*, NADJ#1[last:~]}|
	if ( HEAD(#3,#2) )
	NMOD[pre=+](#3,#1)



// Rule 176
// Special case of NP's involving temporal expression
// When the temporal expression is a pre-modifier of some noun or nadj, 2 NP's are constructed.
// eg (NP the September 13) (NP primary election)
// In this case the head of the first NP modifies the head of the second one
| NP{?*,noun#1[tempexpr,last];noun#1[month,last]};NP[tempexpr]{?*,dig#1};PP{?*,NP{?*[def:~],noun#1[tempexpr,last];noun#1[month,last]};NP[tempexpr]{?*,dig#1}}, NP#3 | 
	if ( HEAD(#2[pron:~],#3) & DETD(#1,?) ) 
	NMOD[pre=+,badchunk=+,temp=+](#1,#2)
///// CHECK TEMPORAL

// POSSESSIVE PARTICLE

// Rule 177
| NP{?*, noun#1[last:~], part#2[last:~]} |
	PARTICLE(#1,#2)


// Postdependent Noun modifiers

// Rule 178
/Relation between the head of an NP or head of a PP and a following PP\
/Called postmodifier in an NP in the English Grammar p. 657\
/Excluding prepositional chunks introduced by "by" \
// Test on coordinated PP's in order to avoid a bad attachment
// The test on feature "incise" avoid to take as noun post modifier something that is part of a following comment clause.
// See comment next rule 
| NP#3{?[last,quant:~,num:~]};PP#3{?*,NP{?[last,quant:~,num:~]}}, ?*[verb:~,coord:~,comma:~], PP#4{prep[form:~fby,p_by:~]}| 
	if ( HEAD(#1,#3) & HEAD(#2,#4) & #3[incise]:#4[incise] & ~QUANTD(?,#1) & ~COORD(?,#2))
	NMOD[post=+](#1,#2)





// Rule 179
// The preceding rule is duplicated in order to have into account the following problems:
// In the above rule, the first NP has only one constituent and it cannot be a quantifier "some of them" or a numeral "two of them"
// In this rule, the head of the NP can be a quant or a numeral but in this case the NP has at least two constituents "an estimated 8 million"
| NP#3{?*,?[last]};PP#3{?*,NP{+,?*,?[last]}}, ?*[verb:~,coord:~,comma:~], PP#4{prep[form:~fby,p_by:~]}| 
	if ( HEAD(#1,#3) & HEAD(#2,#4) & #3[incise]:#4[incise] & ~QUANTD(?,#1) & ~NMOD(#1,#2))
	NMOD[post=+](#1,#2)

// AB 2011.12.14 ...handling complaints in order to resolve problems *NMOD(complaints,order)
| ?[verb], NP#3, PP{prep[lemme:in],NP{#2[lemme:order]}}, IV{?[form:finfto],?*} |
if ( HEAD(#1,#3) & ^NMOD[post](#1,#2) )
~



// Rule 180
/ Relation between the head of an NP and a following PP\
/ In the case of the NP within an SC and not at the same level than the PP \
// inspeech verbs
// eg. Your presence should soften the blow and {SC show {NP the Army's concern} } {PP for its personnel}
| SC{?*, NP#3[last]{?*,?[last,quant:~,num:~]}}, PP#4{prep[form:~fby]} |
	if ( HEAD(#1,#3) & HEAD(#2,#4) )
	NMOD[post=+](#1,#2)


// Rule 181
// If something is at the same time a Post Modifier of a noun and is involved in a coordination as member of the coordination, then we destroy this coordination
// e.g. The boys of the house and the ladies 
if ( NMOD(#1,#2) & COORD(?,#1) & ^COORD(?,#2) )
	~


// Rule 182
// Relation between the head of an NP and a following NP when "as" separates these 2 NP's
// e.g. The relationship AS(adv) a sister-city of Los Angeles -> NMOD(relationship,sister-city)
| NP#1, adv[lemme:as], NP#2 | 
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NMOD[post=+,appos=+](#3,#4)

// Rule 183
// When "as" is tagged as a preposition
| NP#1, PP#2{prep[lemme:as],NP} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ^NMOD[post](#3,#4) )
	NMOD[post=+,appos=+](#3,#4)


// Rule 184
// Relation between the head of an NP and a following NP in apposition with the first one.
// eg. My friend, John Smith....
// this relation is established only at the beginning of the sentence and the second NP can only contain a token if immediately followed by a verb (in order to avoid coordination taken as NMOD
| NP#1[startbis:+], PUNCT[comma:+], NP#2{?[last]}, FV | 
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NMOD[post=+,appos=+](#3,#4)



// XXXX
// Beginning of the sentence
// NP which head has feature c_person, followed by PP[of] which head has not the feature person,
// followed by a proper noun which has feature c_person then the proper noun is in apposition with the first NP
| NP#1[startbis], PP{prep, NP{?*,?[last,c_person:~]}}, punct[comma:+], NP#2, (punct[comma]), FV |
	if ( HEAD(#3[c_person:+,proper:~],#1) & HEAD(#4[c_person:+,proper:+],#2) )
	MOD[post=+,appos=+](#3,#4)

// anywhere in the sentence with more restrictions on puctuation and types.
// {SC{NP{it} FV{aim}} at GV{boost} FV{export} IV{to reach} NP{NOUN{European Community} level} , NP{NOUN{director - general}} PP{of NP{the INFE export institute}} , NP{NOUN{Apolonio Ruiz Ligero}} , FV{say} .}
| NP#1, PP{prep, NP{?*,?[last,c_person:~]}}, punct[comma], NP#2, punct[comma] |
if ( HEAD(#3[c_person:+,proper:~],#1) & HEAD(#4[c_person:+,proper:+],#2) )
	MOD[post=+,appos=+](#3,#4)


// anywhere in the sentence when the first noun is a NE
//eg. Tanzanian troops take Kampala, the capital of Uganda .....
| NP{#1[first,last,noun]}, punct[comma], NP#2{det[def]} |
if ( ( LOCORG(#1) | PERSON(#1) ) & ~COORD(?,#1) & HEAD(#3,#2) & ~COORD(?,#3) )
   NMOD[post=+,appos=+](#1,#3)




// EN COURS - Before the revolution, Iran had 35 million people.


// Rule 185
// NMOD between  2 NP in apposition at the end of a sentence or before the end it these NPs are only followed by non-verbal nodes.
// The second NP contains at least 2 tokens
| NP#1[startbis:+], punct[comma:+], NP#2[endbis]{?[form:~fwho],?,?*} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & #1[incise]:#2[incise] & ~MOD[appos](#3,#4) )
	NMOD[post=+,appos=+](#3,#4)

// Rule 186
| NP#1[startbis:+], punct[comma:+], NP#2{?[form:~fwho],?}, ?*[verb:~], ?[endbis,verb:~] |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ~MOD[appos](#3,#4) )
	NMOD[post=+,appos=+](#3,#4)


// Rule 187
// In the middle of a sentence, 2 NP are in apposition if both NP contains only an element and they are not coordinated
// Constraint on sub_ing in order to be sure that the NP/PP is not a complement of a gerundive verb that is on the left (see marking rules above). Constraint in order to be sure that the NP contains something nominal (is not an AP that is dependent on its left for instance)
| NP#1[sub_ing:~]{?[noun,pl:~,first,last]}, PUNCT[comma:+], NP#2{?[first,last]} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & NMOD(#4,?) & ~COORD(?,#4) & ~NMOD(#3,#4) )
	NMOD[post=+,appos=+](#3,#4)



// Rule 188
// In the middle of the sentence if the second one is a proper noun and no previous NMOD relation between them have been calculated and there is no coordination
| NP#1[sub_ing:~];PP#1[sub_ing:~], PUNCT[comma:+], NP#2[proper], punct[comma:+] |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ~NMOD(#3,#4) & ~COORD(?,#4) & ~MOD[appos](?,#4))
	NMOD[post=+,appos=+](#3,#4)


// Rule XXX
// if the first one is a proper noun and the head of apposition contains a c_person feature
| NP[proper]{noun#3[first,last,proper]}, PUNCT[comma:+], NP#2{det}, (PP), punct[comma:+] | 
	if ( HEAD(#4[c_person],#2) & ~NMOD(#3,#4) & ~COORD(?,#4) )
	NMOD[post=+,appos=+](#3,#4)


// Rule 189
// NP apposition when the NP are not at the same level.
// e.g. {NP The statistician} , {SC {NP Majid Shamshidi} {FV said} } the population had reached 55 million.
// Restriction on the element which follows the SC in order to avoid to take as a NMOD_POST, some subject of a comment clause.
| TOP{?*[verb:~, coord:~], NP#1, punct[comma:+], SC{NP#2}, ?[comma:~] } |
	if ( HEAD(#3,#1) & HEAD(#4[pron:~],#2) )
	NMOD[post=+,appos=+](#3,#4) 


// Rule 190
// NP apposition at the end of a sentence (no verbal nodes follows this apposition
// The second NP is made by a proper noun. The first NP is determined. (definite article)
| NP#1{det[def]}, NP{noun#2[proper,last]}, ?*[verb:~], ?[last,verb:~] |
	if ( HEAD(#3,#1) )
	NMOD[post=+,appos=+](#3,#2)



// Rule 191
// NMOD dependency between an infinitival clause and a noun the will to win
// Note that most of these dependencies are not correct and have to be then removed
| NP#1;PP#1, ?*[verb:~,adj:~,coord:~], IV{?[form:finfto],?*,#2[last]} |
	if ( HEAD(#3[pronpers:~],#1) & #3[hour:~,time:~,period:~] )
	NMOD[post=+,infinit=+](#3,#2)

// AB 2011.12.14 remove some of the NMOD deps created by the previous rule
// e.g. handling complaints in order to resolve problems *NMOD(complaints,order)
| NP#1, (PP{prep[lemme:in],NP{?[lemme:order]}}), IV{?[form:finfto],?*,#2[last]} |
if ( HEAD(#3,#1) & ^NMOD[post,infinit](#3,#2) )
~


// Rule 192
// NMOD dependency between a post-nominal past-participle e.g. The product derived from the yew tree
// Note that in these case, we establish the dependency only with the nearest nominal head. (check)
| NP#1;PP#1, AP{?*,adj#2[partpas:+]} |
	if ( HEAD(#3,#1) )
	NMOD[post=+,pastpart=+](#3,#2)

// AB 2012.01.03 similar to above rule, but with punctuation and a finite verb, and head is not in a parenthetical (incise)
// e.g. John likes fish, fried in batter. NMOD(fish,fried)
//      John, addicted to fish, fried a snapper. *NMOD(fish,fried) and NMOD(John,addicted)
| NP#1[incise:~];PP#1[incise:~,tempexpr:~], ?*[verb:~], punct[comma], AP{?*,#2[partpas,last]};FV{?*,#2[partpas,last]};verb#2[partpas] |
if ( HEAD(#3,#1) )
   NMOD[post=+,pastpart=+](#3,#2)

// AB 2012.01.03 similar to above rule, but with NADJ
// e.g. John likes his car, due for a wash. NMOD(car,due)
| NP#1[incise:~];PP#1[incise:~, tempexpr:~], ?*[verb:~], punct[comma], NP{?*,nadj#2[last]} |
if ( HEAD(#3,#1) )
   NMOD[post=+](#3,#2)

// Rule 193
// NMOD dependency in the context NP NP when the second NP is made by an AP containing a past-participle followed by a noun
// e.g. (The man)NP (named Peter)NP
// In this case the head of the second NP is Nmodifier of the head of the first NP
| NP#1, NP#2{AP[verb:+]} | 
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	NMOD[post=+](#3,#4)


// Rule 194
// Deleting NMOD_POST dependencies between two nominal heads when there is a QUANTD dependency between these heads.
// E.g. Thousands of people -> QUANTD(people,thousands) and *NMOD(Thousands,people)
if ( QUANTD(#1,#2) & ^NMOD(#2,#1) )
	~





//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// NUCL (ex-SUBJCOMPL) Dependency. 
// eg. 
//	Jonh is a man -> NUCL_SUBJCOMPL(is,man)
//	John is nice -> NUCL_SUBJCOMPL(is,nice)
//	Its purpose is to confirm the facts -> NUCL_INFINIT(is,confirm)
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 196
// infinitive subject complement of a simple verbal expression
// eg. Its purpose is TO CONFIRM the facts
| SC{?*, FV{?*,#1[cop]}}, IV{adv*, prep[form:finfto],?*,#2[last]} |
//	NUCL[infinit=+](#1,#2)
	VMOD[post=+,infinit=+](#1,#2)

// AB 2011.12.19 above rule, but without SC due to parenthetical
// e.g. Most important, experts say, is to ensure things remain at a high level.
| ?[incise], FV{?*,#1[cop]}, IV{?*,prep[form:finfto],?*,#2[last]} |
	VMOD[post=+,infinit=+](#1,#2)

// Rule 197
// Infinitive subject complement of a complex verbal expression
| SC {?*, FV{?*,#1[last]}},?*[verb:+], ?{?*,#2[verb:+,cop:+,last]}, IV{(adv), prep[form:finfto],#4[last]} | 
	if ( VDOMAIN(#2,#1) )
//	NUCL[infinit=+](#2,#4)
	VMOD[post=+,infinit=+](#2,#4)


// Rule 198
// When an adjective is badly disambiguated as a Finite verb.
// With a copula in a simple form or complex form
// The erroneous VDOMAIN relation is suppressed
| SC{?*, FV{?*,#1[cop];#1[cop2]}};?*{?*,#1[verb,cop,last];#1[verb,cop2,last]}, FV{?*,#2[last,partpas]} |
	if (  ^VDOMAIN(#2,#2) )
	NUCL[badtag=+,badchunk=+,subjcompl=+](#1,#2)


// Rule 199
// When there is a NFV containing a verb in the past participle following a copula
// E.g. The rule seems constrained
// In this case we create a NUCL[subjcompl] dependency
| SC{?*, FV{?*,#1[cop];#1[cop2]}}, NFV{adv*, #2[last,partpas]} |
	NUCL[badtag=+,badchunk=+,subjcompl=+](#1,#2)

// same as above but not under SC
| punct, NP, FV{?*,#1[cop];#1[cop2]}}, NFV{adv*, #2[last,partpas]} |
  	 NUCL[badtag=+,badchunk=+,subjcompl=+](#1,#2)





// Rule 200
// Comparative and coordination (HEAD does not exist in these cases)
// Is is more comfortable and vigorous.
// 
| SC{?*, FV{?*,#1[cop]};FV{?*,#1[form:fget]};FV{?*,#1[cop2]}}, NP{ AP{#6[form:fmore],AP{?*,conj#3[coord]} }} |
	if ( COORD(#3,#4) )
	ADJMOD[pre=+](#4,#6),
	NUCL[subjcompl=+](#1,#4)


// Rule 201
// Coordinated adjectives Subject Complement (the HEAD relation does not exist for those APs
// It is nice and comfortable
| SC{?*, FV{?*,#1[cop]};FV{?*,#1[form:fget]};FV{?*,#1[cop2]}};?{?*,#1[last,cop]}, (adv;quant), NP{AP{?*,conj#3, (adv), ?[last]}}; AP{?*,conj#3,(adv),?[last]} |
	if ( COORD(#3,#4) )
	NUCL[subjcompl=+](#1,#4)


// Rule 209
// Subject Complement is an NP for a simple verbal expression or an AP
// So this rule works for This is nice

| SC{?*[wh:~], FV{?*,#1[last,cop];#1[last,cop2]}};?{?*,#1[last,cop];#1[last,cop2]}, adv*;(quant), NP#2; AP#2 |
	if ( HEAD(#4[pronpers:~],#2) & ~NUCL[subjcompl](#1,?) )
	NUCL[subjcompl=+](#1,#4)

//| SC{?*[wh:~], FV{?*,#1[last,cop]}};?{?*,#1[last,cop]}, adv*;(quant), NP#2; AP#2 |
//	if ( HEAD(#4[pronpers:~],#2) & ~NUCL[subjcompl](#1,?) )
//	NUCL[subjcompl=+](#1,#4)


// should apply also to "While this is nice" ...
//| SC{?[lemme:"while"],?*[wh:~], FV{?*,#1[last,cop]}};?{?*,#1[last,cop]}, adv*;(quant), NP#2; AP#2 |
//	if ( HEAD(#4[pronpers:~],#2) & ~NUCL[subjcompl](#1,?) )
//	NUCL[subjcompl=+](#1,#4)

// Rule XXXXX
// Subject complement and inverted subject in interrogative form
// e.g. They asked to themselves 'Am I capable do land here ?'
| ?{?*, #1[last,cop]}, (adv);(quant), NP#2, NP#3 |
	if ( HEAD(#4[pronpers:+],#2) & HEAD(#6,#3) & ~SUBJ(#1,?) & ~NUCL(#1,?) )
	SUBJ[pre=+](#1,#4),
	NUCL[subjcompl=+](#1,#6)


// Rule 203
// coordinated Adjectival subject complement of a non finite subclause
// eg. You are expected to be corteous and nice
| IV{prep[form:finfto], ?*[adv], #1[verb:+,cop:+,last];#1[verb:+,cop2:+,last];#1[verb:+,form:fget,last]}, ?*[adv], AP{?*,conj#2[last:~]} |
	if ( ~VDOMAIN(#1,?) & COORD(#2,#3) )
	NUCL[subjcompl=+](#1,#3)


// Rule 204
// Nominal subject complement of a non finite subclause
// eg You are expected to be a woman 
| IV{prep[form:finfto], ?*[adv], #1[verb:+,cop:+,last]}, ?*[adv], NP#3 |
	if ( ~VDOMAIN(#1,?) & HEAD(#2,#3) )
	NUCL[subjcompl=+](#1,#2)



// Rule 205
// Creating a VDOMAIN relation between a copula and a past participle (in order to correctly calculate possible VMOD dependencies in the future)
// e.g. He got elected on his advocacy....
| SC{?*,FV{?*,#1[cop2]}}; ?{?*,#1[cop2]}, NFV{?*,#2[last,partpas]}  |
if ( NUCL[subjcompl](#1,#2) & ^VDOMAIN(#1,#1) )
	VDOMAIN(#2,#1)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// NUCL  (ex-PADJUNCT Dependency. (predicative adjunct)
// eg. Jonh was at the zoo -> NUCL(was,zoo)
// or John was outside -> NUCL(was,outside)
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 206
// PADJUNCT with a finite form of be
| SC{?*, FV{verb#1[form:fbe]}}, PP#2 |
	if ( HEAD(#3,#2) )
	NUCL[padjunct=+](#1,#3)


// Rule 207
// PADJUNCT with a non finite form of be
| SC {?*, FV{?*,#1[last]}},?*[verb:+], ?{?*,#2[form:fbe]}, PP#3 | 
	if ( VDOMAIN(#2,#1) & HEAD(#4,#3) )
	NUCL[padjunct=+](#2,#4)






//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// SUBJ Dependency. (Syntactic subject)
// eg. Jonh loves Mary -> SUBJ(loves,John)
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// FIRST STAGE:
// First stage, creating subject dependencies, that maybe are not correct
// Example: The following rules are going to construct a SUBJ dependency between
// year and has in "The boy I met last year is nice"
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 208
// Verb-Subject dependency in an interrogative sentence starting with an auxiliary
// e.g. Shall we go now ?
| SC{FV[startbis]{aux#2[first,last]}}, NP#1 | 
	if ( HEAD(#3,#1) )
	SUBJ[post=+](#2,#3)
	

// Rule 209
// Verb-Subject dependency in an interrogative (direct or indirect) or relative introduced by who
// e.g Who has said.... who said that ....
| SC{ BG{ #1[nom:+,form:fwho]},adv*, FV{?*, #2[last]}}, ?[noun:~] |
	SUBJ[pre=+](#2,#1)


// Rule 210
/ Verb-Subject dependency in an interrogative (direct or indirect) or relative introduced by whom \
| SC{ BG[wh]{pron[form:fwho,obl]}, IV{#4[form:fdo,last]}, NP#3 } |
	if ( HEAD(#1,#3) )
	SUBJ[post=+](#4,#1)


// Rule 211
/Verb-Subject dependency in an interrogative form starting with a wh interrogative categorized as adverbs (i.e. where, when, why \
// In this case the WH is just under the SC
// e.g How much did he spend in 1998. What did he answer
|SC[wh]{ ADV;ADVP,?*[coord:~,pron:~], FV{?*,#2[last]}}, (adv), NP#3 |
	if ( HEAD(#1,#3) )
	SUBJ[post=+](#2,#1)



// Rule 212
// Verb-Subject dependency in an interrogative sentence introduced by what or by whom with subject inversion
| SC{BG{?[form:fwhat];pron[form:fwho,obl,nom:~]}, FV{?*,#1[last,cop:~]}}, (adv), NP#2 |
	if ( HEAD(#3,#2) )
	SUBJ[post=+](#1,#3)



// Rule 213
// Verb-Subject dependency in an interrogative sentence that stars with an adverbial PP with feature wh
// e.g. In what year did Joe compile his streak
| SC{PP[wh], FV{?*,#1[last]}}, (adv), NP#2 |
	if ( HEAD(#3,#2) )
	SUBJ[post=+](#1,#3)



// Rule 216
/Verb-Subject dependency\
/Dependency established between heads\
// Restriction on COORD in order to avoid to take as a subject the direct object of a coordinated verb on the left of the #2 (COORD(?,#2) )
// Another restriction on COORD in order to avoid to take as a subject a NP that is following the real NP subject and is coordinated to another NP complement of the NP Subject (e.g. The genotype for markers g3883 and T18ISX (Fig. 1A) was examined for each F2 plant)
// This rule does not allow to capture the SUBJ(is,man) dependency in "The man (that) I know is nice (because of the constraint verb:~.
// We also verify that the verb is not preceeded by AS (see ASL relation)
|NP#3[incise:~,tempexpr:~,sub_ing:~,period:~]{?*,?[last,form:~fthat, obl:~]}, ?*[verb:~,strongbreak:~], FV[incise:~]{?*,#2[last]}| 
	if ( HEAD(#1,#3) & VDOMAIN(#4,#2) & ~COORD(?,#2) & ~ASL(?,#2) & ~COORD(?,#1) & ~COMPOUND(?,#1)  )
	SUBJ[pre=+](#2,#1)

// same as before but subject is "It" (obl:+, so previous rule do not apply): just before FV

|NP#3[incise:~,tempexpr:~,sub_ing:~,period:~]{?*,?[last,form:~fthat, nom:+, lemme:"it"]}, FV[incise:~]{?*,#2[last]}| 
	if ( HEAD(#1,#3) & VDOMAIN(#4,#2) & ~COORD(?,#2) & ~ASL(?,#2) & ~COORD(?,#1) & ~COMPOUND(?,#1)  )
	SUBJ[pre=+](#2,#1)


// Same as above when the subject is "who" (lemme:who, nom:+)
|BG[incise:~,tempexpr:~,sub_ing:~,period:~]{pron#1[lemme:who,nom:+,first,last]}, ?*[verb:~], FV[incise:~]{?*,#2[last]}| 
	if ( VDOMAIN(#4,#2) & ~COORD(?,#2) & ~ASL(?,#2) & ~COORD(?,#1) & ~COMPOUND(?,#1)  )
	SUBJ[pre=+](#2,#1)



// Rule 217
// If the first verb on the right of an NP[incise:~] has feature [incise:+], then the SUBJ dependency is constructed with the first FV that is under TOP and that do not have [incise:+]
// An erroneous subject-verb dependency is erased if the second argument of the dep. is already subject 
// We also verify that the verb is not preceeded by AS (see ASL relation)
| SC{?*, NP#3[incise:~,sub_ing:~,tempexpr:~,period:~]}, ?*[verb:~],?+[incise],(?[verb:~];?[incise])*, FV[incise:~]{?*,#2[last]} |
	if ( HEAD(#1,#3) & (^SUBJ(?,#1) | MAIN(?)) & ~ASL(?,#2) & ~COMPOUND(?,#1) )
	SUBJ[pre=+](#2,#1)



// Rule 218
// Verb subject dep, if the Subject is followed by an embedded clause (relative or completive of noun)
// The fact that you arrived yesterday surprised me -> SUBJ(surprised,fact)
| SC{?*, NP#3[incise:~,sub_ing:~,tempexpr:~,period:~], SC, ?*, FV[incise:~]{?*,#2[last]}} |
	if ( HEAD(#1,#3) & (^SUBJ(?,#1) | MAIN(?) ) & ~ASL(?,#2) & ~COMPOUND(?,#1) )
	SUBJ[pre=+](#2,#1)




// Rule 219
// Verb-Subject dependency when there is a comment clause between commas between the subject and the verb
// Bad subject dependencies are also cleaned if they exist 
// Restriction in order to avoid to apply this rule on coordinated verbs
| NP#3{?*,?[last,form:~fthat]},?*[verb:~,comma:~],punct[comma], ?*[comma:~], punct[comma], ?*[verb:~], FV{?*,#2[last]}| 
	if ( HEAD(#1,#3) &  ~SUBJ(?,#1) & ( ^SUBJ(#2,?) | ~SUBJ(#2,?) )  // second part in order to be sure that the disjunction is true
	& ~COORD(?,#2) & ~COMPOUND(?,#1) & ~COORD(?,#1) )
	SUBJ[pre=+](#2,#1)

// Same as above when the comment clause is included between hyphens
| NP#3{?*,?[last,form:~fthat]},?*[verb:~,comma:~],punct[form:fhyph], ?*[form:~fhyph], punct[form:fhyph], ?*[verb:~], FV{?*,#2[last]}| 
	if ( HEAD(#1,#3) &  ~SUBJ(?,#1) & ( ^SUBJ(#2,?) | ~SUBJ(#2,?) )  // second part in order to be sure that the disjunction is true
	& ~COORD(?,#2) & ~COMPOUND(?,#1) & ~COORD(?,#1) )
	SUBJ[pre=+](#2,#1)



// Rule 220
// Within a comment clause
| SC[incise]{?*,NP#1;BG{NP#1}, ?*[verb:~], FV{?*,#2[last]}} | 
	if ( HEAD(#3,#1) )
	SUBJ[pre=+](#2,#3)


// Rule XXXX
| punct[comma], NP#1,FV{?*,#2[last]} | 
  if ( HEAD(#3,#1) & ~SUBJ(#2,#3) )
  SUBJ[pre=+](#2,#3)

// Rule 221
// Verb-subject dependency within an SC introducing indirect speech with subject-verb inversion
// eg. She is sick, {SC said John}
// We check that there is no verbs before the indspeech verb by verifying if a SUBJ dependency with another verb already exists 
| (?[form:~fand]), SC[indspeech]{ FV{#1[verb]}, NP#2{?*,?[last,obl:~,tempexpr:~]} } | 
	if ( HEAD(#3,#2)  )
	SUBJ[post=+](#1,#3)


// Rule 222
// Same cas as above, but the verb is not marked with indspeech (highly ambiguous verb). E.g She is sick, continued John.
// In this case we force that the last NP is a person name 
//| ?[comma], FV{#1[verb]}, NP#2{?*,?[last,obl:~,tempexpr:~,proper:+]} | 
//	if ( ~SUBJ(#1,?) )
//	SUBJ[post=+](#1,#2),
//	LIXO(#1)



// Rule 222
// Capturing the SUBJ dependency when an embedded clause is present between the Subject and the verb
// e.g. The man that I know is nice -> SUBJ(is,man)
// 2012.01.03 added ~NMOD[post,pastpart](#1,#2) to stop subject for passive construction in parenthetical
// e.g. John will work if Jane, prepared for anything, leaves her job.
| SC{?*,NP#3[tempexpr:~,period:~], ?*, FV{?*,#2[last]} } |
	if ( HEAD(#1,#3) & VDOMAIN(#4,#2) & ~SUBJ(#2,?) & ~NMOD[post,pastpart](#1,#2) )
	SUBJ[pre=+](#2,#1)

	

// Rule 221
// Special case of subjects of infinitive in an enumeration
// e.g. (1) Four additional deputies be employed at the Fulton County Jail.
// In these cases no SC are constructed
| TOP{?*,NP#1, (PP), verb#2} ; ST{?*,NP#1, (PP), verb#2} |
	if ( HEAD(#3,#1) & ~?(#2,?) )
	SUBJ[pre=+](#2,#3)



// Rule 222
// DISAMB prep
// Tagging ERROR when a preposition is taken as a verb (ing-form)
// e.g Including scented flowers in the display adds a special touch.
| PP#2{prep#3[vprog,startbis]}, PP*, FV{?*,#1[last]} |
	if ( ~SUBJ(#1,?) & HEAD(#4,#2) & ^PREPD(#3,?) )
	SUBJ[pre=+,gerund=+,badtag=+,post=~](#1,#3),
	OBJ[post=+](#3,#4).


// Rule 223
// Inversion VERB-SUBJECT when the sentence starts with a PP
| PP{?[startbis]}, FV{?*,#1[last]}, NP#2 | 
	if ( ~SUBJ(#1,?) & HEAD(#3,#2) )
	SUBJ[post=+](#1,#3)




// Rule 224
// When the subject is a gerund
// e.g. Entering a candidate for governor would force to take petitions out
// e.g. Playing is nice
// We have to delete a possible bad subject dependency (the object of the gerund) if the gerund is not preceeded by a NP
//| SC{?*[noun:~], GV{?*,verb#2[prog]}, (NP), PP*, FV{?*,#1[last]} } |
//	if ( ( ~SUBJ(#1,?) | ^SUBJ(#1,#3) ) & #2 < #3 )
//	SUBJ[gerund=+,pre=+](#1,#2)

// AB 2011.03.01 Testing additional restriction on previous rule which incorrectly establishes
// *SUBJ(left, reporting) in Paul tried to leave while reporting John left before him.
// Added constraint on element preceding gerund in SC to not be a subordinating conjunction (e.g. while)
// WHY DOESN'T THIS WORK???
// Rule 224
// When the subject is a gerund
// e.g. Entering a candidate for governor would force to take petitions out
// e.g. Playing is nice
// We have to delete a possible bad subject dependency (the object of the gerund) if the gerund is not preceeded by a NP
| SC{?*[noun:~,conj:~,sub:~], GV{?*,verb#2[prog]}, (NP), PP*, FV{?*,#1[last]} } |
	if ( ( ~SUBJ(#1,?) | ^SUBJ(#1,#3) ) & #2 < #3 )
	SUBJ[gerund=+,pre=+](#1,#2)


// Rule 225
// Same as above when the subject is an infinitive sentence
| SC{?*[noun:~], IV{prep[form:finfto],verb#2}, (NP),PP*, FV{?*,#1[last]} } |
	if ( ~SUBJ(#1,?) | ^SUBJ(#1,#3) & #2 < #3 )
	SUBJ[infinit=+,pre=+](#1,#2)

// Rule 226
// Similar rule as above, when the GV starts the sentence (no SC is constructed in this case)
// e.g. Having a drink is nice
| GV[first]{?*, verb#2[prog]}, (NP), PP*, FV{?*,#1[last]} |
	if (  ( ~SUBJ(#1,?) | ^SUBJ(#1,#3) ) & #2 < #3 )
	SUBJ[gerund=+,pre=+](#1,#2)

// Rule 227
// Same as above when there is an infinitive at the beginning of the sentence
// e.g. To hear him say that surprised me *SUBJ(say,him)
| IV[first]{prep[form:finfto],verb#2}, (NP), PP*, FV{?*,#1[last]} |
	if (  ( ~SUBJ(#1,?) | ^SUBJ(#1,#3) ) & #2 < #3 )
	SUBJ[infinit=+,pre=+](#1,#2)


// Rule XXXX
// Special rule when the subjects are temporal elements
// The subject has not been calculated before (NP[tempexpr] are not considered as subject in general)
// In a very restricted context (NP[tempexpr] is the fist NP of the sentence and near of the verb)
// we accept tempexpr as subject e.g. The days changed, September 11 was an important date etc.
// changing at the same time HEAD dependency
| ?*[noun:~], NP#1[tempexpr]{?*,#2[last,noun]}, (PP;adv)*, FV{?*,#3[last]} |
	if ( ~SUBJ(#3,#2) & ^HEAD(#1,#1) )
	SUBJ[pre=+](#3,#2),
	HEAD(#2,#1)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Apposition to nouns that presupposes a previous calculation of the subject
// NMOD_POST_APPOS dependency
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 228
// If we have a verb[indspeech] with inverted subject that looks like a proper name
// When this inverted subject is followed by a NP and no verbs until the end
// Then this NP is a NMOD_POST_APPOS of the subject
// e.g. "The base is broadening, and I expect that broadening to go on, says Amarendra Bhattacharya, a senior Bank official
| SC{?*,NP#1[last]}; NP#1, (punct[comma]), NP#2|
if ( HEAD(#3,#1) & SUBJ[post](#4[indspeech],#3) & HEAD(#5,#2) & ~SUBJ(?,#5) )
	NMOD[post=+,appos=+](#3,#5)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// SECOND STAGE: ELIMINATION and CORRECTION of VILINK, SUBJ and NMOD dependencies
// 
// 
// 1) Erroneous VDOMAIN dependency 
// 2) Erroneous NMOD dependencies are eliminated
// 3) Eliminating SUBJCOMPL dependencies
//    Adding SUBJCOMPL in case of interrogatives whose main verb is BE
// 4) Eliminatig erroneous SUBJ dependencies, that have been previously constructed
// 5) Possibly adding NMOD relations that were missing
//  
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Elimination some wrong subject
// In "Get the Onion, they are nice" 
// Both Onion and they are subject of "are"
// it prevents to calculate the object of "get" properly

|  SC{FV{#1[first,last,cop2]}};?[verb]{#1[first,last,cop2]}, (adv), NP#2,punct,NP#4 | 
  if (  HEAD(#3,#2) & HEAD(#5,#4)  & ^SUBJ(#6,#3) & SUBJ(#6,#5) & (#4 < #6))
     ~


// Rule 229
// In an interrogative sentence (with SUBJ-VERB inversion)
// If this main verb is an auxiliary
// If we found somewhere after this main verb a FV which contains a verb alone which has the feature pres:+ (homographic to the infinitive form) and to which nothing is linked.
// Then it is certainly a disambiguation error and the verb within this FV is a past participle that has to be linked to the auxiliary.
// e.g. When did Lucy, the girl I knew last week, arrive ? when arrive is analyzed as a finite verb in present
| SC[wh]{?*,FV{?*,verb#1[form:fdo];aux#1}}, ?*, FV{?*,verb#2[last,pres]} |
	if ( ~?(#2,?) & ^VDOMAIN(#1,#1) )
	VDOMAIN[badtag=+](#2,#1)



// Rule 230
// NMOD dependencies' elimination when these NMODS were established between a quantifier or numeral and the HEAD of a following PP introduced by of
| NP{#1[last]}, PP#2{prep[form:fof]} |
	if ( HEAD(#4,#2) & QUANTD(#4,#1) & ^NMOD(#1,?,#4) )
	~


// Rule 231
// Eliminating a bad NMOD dependency between a tempexpr NP (last month) followed by another NP that is within an SC or not
// e.g Last month/year, John said the population ....
| NP#1[tempexpr:+];NP#1[period], punct[comma:+], SC{NP#2}; NP#2 |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ^NMOD(#3,#4) )
	~




// Rule 232
// Ad-hoc rule for the case of was...born (born is analyzed as an adj within an AP
// The SUBJCOMPL relation between was and born has to be destroyed 
// e.g. He was born in the 50's *SUBJCOMPL(was,born)
if ( NUCL[vlink](#1,#2) & ^NUCL[subjcompl](#1,#2) )
	~


// Rule 233
// Ad-hoc rule for the case of was...born (born is an adjective within an AP)
// eg Where was Ulysse G. Grant born ?
| SC{?*,FV{?*,#1[form:fbe]}}, NP{NP#2, AP{adj#3[form:fborn]} } |
	if ( NUCL[vlink](#1,#3) & ^SUBJ(#1,#3) & HEAD(#4,#2) )
	SUBJ(#1,#4)
	

// Rule 234
// Adding a NUCL[subjcompl] dependency in the context of interrogatives
// e.g. Why is the moon orange ?
| NP#4, NP#5;AP#5 |
if ( HEAD(#2,#4) & HEAD (#6,#5) & SUBJ[post](#1[cop],#2) &  VDOMAIN(#1,#1) )
	NUCL[subjcompl=+](#1,#6)




// Rule 235
// If two SUBJ relation exist in the context of a WH, then we prefer the subject that is on the left of the verb than the subject that is on the right on the verb
// e.g. When we eat some bread  we have SUBJ(eat,we) AND *SUBJ(eat,bread)
if ( SUBJ(#1,#2) & ^SUBJ(#1,#3) & #2 < #1 & #1 < #3 )
	~

// Rule 236
// Dans la configuration SC{ NP SC NP FV}, si 2 relations sujet sur le noyau du FV alors on elimine celle qui lie ce noyau avec le NP qui est le plus proche sur sa gauche
// e.g. The boy I met last year is nice or London which is a beautiful city was crowded
| SC {?*, NP#1, ?*[adv], SC, NP#2, FV{#3[last]}} |
	if ( HEAD(#4,#1) & HEAD(#5,#2) & SUBJ(#3,#4) & ^SUBJ(#3,#5) )
	~


// Rule 237
// When the subject is an embedded sentence, avoid to take nominal complement of this embedded sentence as the subject of the main sentence
// The main verb of the sentence is not the first one but the following.
// context is TOP {SC NP FV, ?*[verb:~]} - EN COURS
// e.g. That you arrived yesterday surprised me
// also work for clefted sentence "What she did was to learn Spanish"
// ATTENTION - Interrogative sentences must not be treated by this rule e.g."What do I have to do to clean teapots ?"
| TOP{ SC[startbis]{BG, ?*, FV{?*,#1[last]}}, (IV);(NFV);(GV), (NP;PP)*, FV[inter:~]{?*,#2[last]}, ?*[verb:~] } |
	if ( VDOMAIN(#3,#1) & (^SUBJ[sentence:~](#2,#4) | ~SUBJ(#2,?) ) )
	SUBJ[sentence=+,pre=+](#2,#3)



// Rule 238
// This rule is linked to the previous one. The erroneous HEAD/1 relation is destroy and the good one is established
// e.g. That you arrived yesterday surprised me *MAIN(arrived) and MAIN(surprised)
| FV{?*,#2[verb,last]} |
	if ( SUBJ[sentence,pre](#2,#1) & ( ^MAIN(#1) | VDOMAIN(#1,?) ) )
	MAIN[features=~](#2)


// Rule 239
// Bad subject dependency in the case of NP punct[comma] NP PP* punct[comma] verb[indspeech] NP
// In this case we have a NMOD[appos] between the first and second NP and a bad SUBJ between the verb and the last NP ( said John), the first NP is not dependent of anything
//e.g. Scott Johnson, the father of the suspect, told NBC News .....
// *SUBJ(told,NBC News)
| NP#3[tempexpr:~], punct[comma], NP, ?*[verb:~,comma:~], punct[comma], SC[indspeech]{?*,FV{?*,#1[verb,indspeech]} } |
	if ( ^SUBJ[post](#1,?) & HEAD(#4,#3) & NMOD[appos](#4,?) &  
		~SUBJ(?,#4) & ~OBJ[post](?,#4) & ~NMOD[post](?,#4) )
	SUBJ[post=~,pre=+](#1,#4)


// Rule 240
// Eliminating an erroneous SUBJ dependency in the case of an embedded relative clause introduced by WHOSE 
// eg. The lady {SC WHOSE CAR YOU HIT} is nice -> SUBJ(hit,you) and *SUBJ(hit,car)
// Creating an OBJ dependency between the verb of the relative and the 2nd NP
// Note feature pre:+ on the deleted subject is passed to the object which is correct
| SC {BG[wh], NP#1, NP#2, ?[verb]} | 
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ^SUBJ(#6,#3) & SUBJ(#6,#4) )
	OBJ(#6,#3)



// Rule 241
// In case of an NMOD dependency between two NP's, The subject dependency between the verb and the second NP has to be deleted
if ( SUBJ(#1,#2) &  NMOD(#2,#3) & ^SUBJ(#1,#3) ) 
	~ 



// Rule 242
// Eliminating a SUBJ dependency between a proper noun and a simple verb when the proper noun is in fact a modifier of another NP on its left.
// Creating at the same time an NMOD relation between the two NP's
// eg. {NP The dissident} {NP Andrei Sakharov} arrived SUBJ(arrived,dissident) and *SUBJ(arrived,Andrei Sakharov)
// Note that the second NP has to be a proper noun
| SC[startbis]{?*, NP#4[tempexpr:~,time:~], NP#5[proper], ?*[adv], FV}, ?[fin:~] |
	if ( HEAD(#2,#4) & HEAD(#3,#5) & SUBJ(#1,#2) & ^SUBJ(#1,#3) ) 
	NMOD[features=~,post=+](#2,#3)

// Rule 243
// Same rule as above when the two NP's are at diferent levels
// eg. {NP The statistician} {PUNCT ,} {SC {NP John} {FV said}}  the population had reached 55 million
| TOP{?*,NP#1,?*,SC{NP#2} } |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & NMOD(#3,#4) & ^SUBJ(#5,#4) )
	SUBJ(#5,#3)


// Rule 244
// Eliminating a SUBJ dependency between an NP and a verb in the cases of embedded relative clauses that are not introduced by a relative pronoun.
// eg The dissident Andrei Sakharov admires arrived yesterday.
// note that in this case the second NP is not necessary a proper noun.
| SC{?*, NP#4, NP#5, ?*[adv], FV}, FV{#6} |
	if ( HEAD(#2,#4) & HEAD(#3,#5) & ^SUBJ(#1,#2) & SUBJ(#1,#3) ) 
	SUBJ(#6,#2)


// Rule 245
// Eliminating a SUBJ dependency established between the direct object of an embedded clause on the left of the main verb and the main verb
// eg. If he's doing his job, he'll know them. *subj('ll, job)
| SC{?*, SC, ?*[noun:~], NP#2, ?*[verb:~], FV#4{?*,#3[last]} } |
	if ( HEAD(#1,#2) & ^SUBJ(#3,#1) & SUBJ(#3,#5) )
	~


// Rule 246
// Eliminating a SUBJ dependency established between the direct object of a gerund clause on the left of the main verb and the main verb
// e.g. The man painting the wall is my cousin *SUBJ(is,wall)
// e.g. The clones encoding homologs of bacterial FPG are isolated *SUBJ(are,homologs)
// e.g. Admits a comment clause between before the verb
// e.g. The difficulty in using the systems was .... *SUBJ(was,systems)
// e.g. (Attention QUANTD) One of the difficulty in using the systems was...
| NP#6, PP*, (prep), GV{?*, #2[last,vprog,indspeech:~]}, NP#3, (PP), ?*[incise], (punct[comma]), FV{?*,#1[last]} | 
	if ( HEAD(#4,#3) &  ~OBJ(#2,#4) & ^SUBJ(#1,#4[pronpers:~]) & HEAD(#5,#6) & (~?(?,#5) | QUANTD(?,#5)) )
	OBJ[post=+,pre=~](#2,#4),
	SUBJ[pre=+](#1,#5).




// Rule 247
// Eliminating a SUBJ dependency established between the direct object of a gerund clause on the left of the main verb and the main verb
// In this case there are two subj dep. established and there is a NP between the object of the gerund and the main verb
// Furthermore the NP preceeding the GV (with have auxiliary) is a subj[nfinit] of the GV
// e.g. Her aunt having left the room, he tripped over the mat. *SUBJ(tripped,room)
| NP#8, GV{#10[prog,form:fhave], #2[partpas,trans]}, NP#1, punct[comma], NP#3, PP*, FV{?*,#4[last]} |
	if ( HEAD(#6,#3) & HEAD(#7,#1) & SUBJ(#4,#6) & ^SUBJ(#4,#7) & ~OBJ(#2,#7) & HEAD(#9,#8) & VDOMAIN(#11,#4) )
	OBJ[post=+,pre=~](#2,#7),
	SUBJ[pre=+,nfinit=+](#10,#9),
	VMOD[pre=+,gerund=+](#11,#2).
	

// Rule 1376
// At the beginning of the sentence a non finite clause with a gerund verb when this clause is introduced by a PREP
// The gerund clause is separated by a comma.
// e.g. With the tree growing tall, we get more shade.
| PP#8[first],  GV{#2[prog,form:fhave], ?[partpas,trans]}; GV{#2[prog,first,last]}, NP, punct[comma], SC{?{?[conj:~,wh:~]},?*,FV{?*,#3}}  |
	if ( HEAD(#9,#8) & VDOMAIN(#4,#3) )
	SUBJ[pre=+,nfinit=+](#2,#9),
	VMOD[pre=+,gerund=+](#4,#2).	





// Rule 249
// In case of comparative forms like "{NP The weaker} {NP the point}, the more one VERB
// In order to eliminate a SUBJ dependency between VERB and the first and second NPs.
| SC{?*[verb:~,noun:~], NP[compar], NP, punct[comma], NP[compar], NP#2, FV{?*,#1}} |
	if ( ^SUBJ(#1,?) & HEAD(#3,#2) )
	SUBJ(#1,#3)
	


// Rule XXXXX
// Taking age expression as apposition of a preceding noun
| PP#1{?*, NP}; NP#1, punct[comma], NP{AP#2{adj{dig,noun[period],?[lemme:old]}}} |
	if ( HEAD(#10,#1) )
	NMOD[appos=+,post=+](#10,#2) 

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 250
// Eliminating a bad SUBJ dependency when the NP involved has the feature tempexpr:+ and when the verb has already another subject.
// Creating at the same time a VMOD/2 dependency.
// eg. Yesterday he came (has come)
// Same rule as above in case of a complex verbal form
| NP#1[tempexpr] |
	if ( HEAD(#2,#1) & ^SUBJ(#3,#2) & SUBJ(#3,#4) & VDOMAIN(#5,#3) )
	VMOD[pre=+,temp=+](#5,#2)



// Rule 251
// Eliminating an erroneous SUBJ dependency between a wh and the auxiliary verb on its right in an interrogative form and creating the correct SUBJ dependency with the NP that follows the auxiliary.
// eg. Who does he accept a picture of ? *SUBJ(does,who)
// eg. Who has he met, who does he meet etc. 
| SC{BG{pron#3[form:~fwhat]}, FV{?*,#1[last,form:~fbe]}}, NP#2[tempexpr:~], ?*[adv], (prep), IV;NFV |
	if ( ^SUBJ(#1,#3) & HEAD(#4,#2) )
	SUBJ(#1,#4)


// Rule 252
// Similar as previous in order to eliminate the erroneous SUBJ dependency between the NP head introduced by which and the auxiliary verb
// eg Which boy did you say has arrived ? *SUBJ(did,boy)
| SC{NP#3{det[wh]}, (PP), FV{?*,#1[last]}}, NP#2[tempexpr:~], (prep), IV;NFV |
	if ( HEAD(#5,#3) & ^SUBJ(#1,#5) & HEAD(#4,#2) )
	SUBJ(#1,#4)




// Rule 253
// Eliminating a bad subject dependency between the OBJ complement of a progressive verb and a verb under the TOP note.
// e.g. For playing football I would do anything *SUBJ(would,football)
| GV[prog], NP#1, NP#2, FV{?*,#3} |
	if ( HEAD(#4,#1) & HEAD(#5,#2) & ^SUBJ(#3,#4) & SUBJ(#3,#5) )
	~ 


// Rule 254
// Erroneous SUBJ dependency that is in fact the object of an infinitive clause that preceedes the verb
// e.g. Failure to do this will continue to place a burden on a taxpayers *SUBJ(will,this)
| SC{ NP#2, IV{?*,#4[last,trans]}, NP#5, FV{?*,#1[last]}} |
	if ( HEAD(#3,#2) & NMOD(#3,#4) & HEAD(#6,#5) & ^SUBJ(#1,#6) )
	SUBJ[deduced=+](#3,#1)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// SUBJATTR Dependency. (Subject attribute)
// eg. John is a man -> SUBJATTR(John,man)
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



// Rule 255
// "Normal SUBJATTR dependency for complex verbal and simple forms
// Without negation
if ( SUBJ(#1,#2) & NUCL[subjcompl](#4,#3) & VDOMAIN(#4,#1) )
	SUBJATTR(#2,#3)



// Rule 256
// SUBJATTR dependency in case of comparative forms
// eg. The weaker the man is, ..... -> SUBJATTR(man,weaker)
// the verb to be is in a simple form.
| SC{NP#1[compar], SC{NP#2,FV{#5[form:fbe]}} } |
	if ( HEAD(#4,#2) & HEAD(#3,#1) & VDOMAIN(#5,#5) )
	SUBJATTR(#4,#3)


// Rule 257
// SUBJATTR dependency in case of comparative forms
// eg. The weaker the man is, ..... -> SUBJATTR(man,weaker)
// the copula is in a complex verbal form
| SC {NP#3[compar], SC{NP#4,FV{#1[last]},?*[verb:+], ?{?*,#2[verb:+,cop:+,last]}} } | 
	if ( VDOMAIN(#2,#1) & HEAD(#5,#3) & HEAD(#6,#4) )
	SUBJATTR(#6,#5)



// Rule 258
// SUBJATTR dependency in case of comparative forms when the be form is omitted
// eg. The weaker the point, the more one has to .....
| SC{?*[verb:~], NP#1, NP#2, punct[comma]} |
	if ( HEAD(#3,#1) & HEAD(#4,#2) )
	SUBJATTR(#4,#3)






//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// OBJ (direct object)
//  eg. John eats a cake OBJ(eats,cake)
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 259
// OBJ dependency within an SC eg. "{SC Tell} him I'm sick"
|SC {?*, FV{?*,#1[verb]}}, NP{#2[first,last,obl]} |
	if ( ~NUCL[subjcompl](?,#2) &  ~NUCL[vlink,modal](#1,#3)   )
	OBJ[post=+](#1,#2)

// Rule 1428
// OBJ dependency of a finite simple verbal form
// Works for affirmative and some interrogative sentences e.g. What chemist won the Nobel Prize in 1992 ?
// Test on NUCL in order not to take as an object a subject complement (used with a copula)
| SC{?*,FV{?*,#1[last,cop:~,cop2:~]}}, ?*[verb:~,prep:~,coord:~,strongbreak:~,scbegin:~], NP#2 |
	if ( HEAD(#3,#2) & ~SUBJ(?,#3) & ~NUCL(?,#3) & ~NMOD(?,#3) & VDOMAIN(#1,#1) & ~NUCL(#1,#3) & ~OBJ(#1,#3) )
	OBJ[post=+](#1,#3)

// same rule as before + subject deletion
// UNSURE: CB addition for : "I hate the cat, the dog sucks." : because at the moment both cat and dog
// are subject of #5 sucks, and the object hate-->windows cannot be calculated at that time
// ==> integration in the rule of the SUBJECT  deletion rule in cosmetics that applies too late
| SC{?*,FV{?*,#1[last,cop:~,cop2:~]}}, ?*[verb:~,prep:~,coord:~,strongbreak:~], NP#2 |
	if ( HEAD(#3,#2) & SUBJ[pre](#5,#4) & ^SUBJ[pre](#5,#3) & #3 < #4 &  ~COORD(?,#4)  & ~NUCL(?,#3) & ~NMOD(?,#3) & VDOMAIN(#1,#1) & ~NUCL(#1,#3) & ~OBJ(#1,#3) )
	OBJ[post=+](#1,#3)

// Complete the preceding rule in case of a direct object which is also subject of a following non finite verb
// AB 2011.12.21 added ~SUBJ(#4,#3) constraint to avoid creating false dependency when subject of main clause is also subject of subordinate
// and not object of verb in subordinate clause e.g. As he ate John sang. *OBJ(ate,John)
| SC{?*, FV{?*,#1[last,cop:~,cop2:~]}}, NP#2 |
  if ( HEAD(#3,#2) & ~OBJ(#1,#3) & SUBJ(?[partpas],#3) & ~NUCL(?,#3) & ~NMOD(?,#3) & VDOMAIN(#1,#1) & ~SUBJ(#4,#3) )
     OBJ[post=+](#1,#3)

// Complete the obj rules in case of verbs that can be either transhttp://wordnet/itive or copula. e.g. turn
| SC{?*,FV{?*,#1[last,lemme:~be]}}, ?*[verb:~,prep:~,coord:~], NP#2{?[first],?*,#3[last]};NP#2{#3[pron,first,last]} |

	if (  ~SUBJ(?,#3) & ^NUCL[subjcompl](?,#3) & ~NMOD(?,#3) & VDOMAIN(#1,#1) )
	OBJ[post=+,subjcompl=~](#1,#3)


// Rule 1430
// OBJ dependency of a finite complex verbal form
// The dependency is established with the nearest verb on the left of the NP
// Note : Is also taken as object a dative pronoun e.g. It will give HIM a new leverage....
// Test on NUCL in order not to take as an object a subject complement (used with a copula)
| SC{?*,FV{?*,#1[last]}}, ?*[verb:~], NFV;IV;FV, ?*[verb:~,prep:~,coord:~,conj:~,punct:~], NP#2{?*,?[last]} 
|	if ( HEAD(#3,#2) & ~SUBJ(?,#3) & ~NUCL(?,#3) & ~NMOD(?,#3) & NUCL[vlink](#1,?) & VDOMAIN(#6,#1) & ~NUCL[subjcompl](#6,#3) )
	OBJ[post=+](#6,#3) 

// Rule XXXXX
// Previous rule can be too strict in the constraint on ~SUBJ(?,#3) see condition above
// e.g. He can compare the previous rule with the rule explained in chapter 1
// in this case explained was considered as FV with rule (on the left) as possible suject in a first stage.
// In this case, the object compare - rule is not calculatedt
| SC{?*,FV{?*,#1[last]}}, ?*[verb:~], NFV;IV;FV, ?*[verb:~,prep:~,coord:~,conj:~], NP#2{?*,?[last]}, PP, FV{?[first,last,partpas]} |
	if ( HEAD(#3,#2) & SUBJ(?,#3) & ~NUCL(?,#3) & ~NMOD(?,#3) & NUCL[vlink](#1,?) & VDOMAIN(#6,#1) & ~NUCL[subjcompl](#6,#3) & ~OBJ(#6,#3) )
	OBJ[post=+](#6,#3).



// Rule 262
// OBJ dependency of a simple verbal form or of an infinitive form that is badly considered as a simple present form when the main verb is not under the SC
// e.g. He said the population reached 55 million (reached, is not within an SC and we want OBJ(reached, 55 million)
#bug262
| FV{?*,#1[last]}, adv*, NP#2 |
	if ( HEAD(#3,#2) & ~SUBJ(?,#3) & ~NUCL(?,#3) & ~NMOD[post](?,#3) & VDOMAIN(#1,#4) )
	OBJ[post=+](#1,#3).

// 27/08/2015 : addition to properly calculate "try" OBJ, in "Try the crab, I love it" 
| FV{?*,#1[last]}, adv*, NP#2 |
	if ( HEAD(#3,#2) & SUBJ(#5,#3) & SUBJ(#5,#6) & #3<#6  & ~NUCL(?,#3) & ~NMOD[post](?,#3) & VDOMAIN(#1,#4) )
	OBJ[post=+](#1,#3).

// Rule 263
// Same as above (FV of the verb is under TOP) in case of a complex verbal form
#bug263
| FV{?*,#1[last]}, ?*[verb:~], NFV;IV;FV, adv*, NP#2 |
	if ( HEAD(#3,#2) & ~SUBJ(?,#3) & ~NUCL(?,#3) & ~NMOD[post](?,#3) & NUCL[vlink](#1,?) & VDOMAIN(#6,#1) )
	OBJ[post=+](#6,#3)


// Rule 264
// OBJ dependency of an infinitive VERB - part1 (only one NP following the infinitive
| IV{(prep[form:finfto]), ?*, verb#1[last,cop:~]}, ?*[verb:~,prep:~,coord:~,conj:~,noun:~], NP#2 ,?[noun:~] |
	if ( HEAD(#4,#2) & ~SUBJ(?,#4) & ~OBJ(#1,#4) )
	OBJ[post=+](#1,#4) 

// OBJ dependency of an infinitive VERB - part2 (2 NPs following the infinitive, condition on SUBJECT is anulated
// as an erroneous subject may have been calculate (will be deleted after)
| IV{(prep[form:finfto]), ?*, verb#1[last,cop:~]}, ?*[verb:~,prep:~,coord:~,conj:~,noun:~], NP#2 , PP*, NP |
	if ( HEAD(#4,#2)  & ~OBJ(#1,#4) )
	OBJ[post=+](#1,#4)


// Rule 265
// OBJ dependency of a progressive form
// eg. The telephone rang, interrupting his briefing -> OBJ(interrupting,briefing)
| GV[prog]{?*,#1[prog,last,cop:~]};GV[prog]{verb[prog,cop:~],verb#1[last]}, NP#2 |
	if ( HEAD(#3[nom:~],#2)  )
	OBJ[post=+](#1,#3)
// Ai efface contrainte sur VLINK de #1 He left, after having done the job. Voir si est necessaire



// Rule 266
// OBJ dependency between a finite verb and a ING-form
// eg. He went fishing -> obj(went,fishing)
// Note: In order to create this dependency, the first verb has to have the feature sc_ing.
| SC{?*,FV{?*,#1[verb,form:~fbe,sc_ing]}},adv*, GV{#2[vprog]} |
	OBJ[post=+,gerund=+](#1,#2)



// Rule 267
// OBJ dependency between a verb with particle and its object, when the chunker constructed a PP build with the particle followed by a NP
// eg. He gives {PP up the fight} 
// Note that we use here an erroneous HEAD/2 relation in order to have the NP object. This erronoeous HEAD dependency is erased.
| PP#1[date:~]{prep#2, NP#5} |
	if ( NUCL[particle](#3,#2) & ^HEAD(#4,#1) )
	OBJ[badchunk=+,badtag=+,post=+](#3,#4)



// Rule 268
// OBJ dependency when the direct object is a relative pronoun
// e.g. Things that I like.
// The verb of the embedded clause is in a simple form and we check that this verb is a transitive verb and has no 
// previously calculated object
| ?[noun,tempexpr:~], (punct[comma]), SC{ BG{#1[first,last,form:fthat]}, NP#2, ?*, FV{?*,#4[trans,last]} } |
	if ( HEAD(#3,#2) & SUBJ(#4,#3) & VDOMAIN(#4,#4) & ~OBJ(#4,?) )
	OBJ[pre=+,relativ=+](#4,#1)


// Rule 269
// Same Rule as above for complex verbal form. The rule is duplicated because of the verification of the trans:+ feature on the
// main verb
| ?[noun,tempexpr:~], (punct[comma]), SC{ BG{#1[first,last,form:fthat]}, NP#2, ?*, FV{?*,#4[last]} }, ?*, ?{?*,verb#5[trans]} |
	if ( HEAD(#3,#2) & SUBJ(#4,#3) & VDOMAIN(#5,#4) & ~OBJ(#5,?) )
	OBJ[pre=+,relativ=+](#5,#1)

// Rule 270
// Duplication of the previous rule (direct object is a relative pronoun) for the form WH.
// We cannot have one single rule for both cases because of tagging errors (that is tagged as a conjunction while who is a pronoun with wh feature.
// e.g. People who I love are nice
| SC{ BG{pron#1[first,last,wh]}, NP#2 } |
	if ( HEAD(#3,#2) & SUBJ(#4,#3) & VDOMAIN(#5,#4) & ~OBJ(#5,?) )
	OBJ[pre=+,relativ=+](#5,#1)


// Rule 271
// OBJ dependency of a indspeech verb that is within the SC
// eg. Your presence should soften the blow and SHOW THE ARMY'S CONCERN
| SC {FV{#1[last]}, NP#2} |
	if ( HEAD(#3,#2) & ~OBJ(#1,#3) & ~SUBJ(#1,#3))
	OBJ[post=+](#1,#3)


// Rule 272
// OBJ dependency between the HEAD of an interrogative and the interrogative pronoun
// eg. What does your brother like ?
// NOTE: The last constituent cannot be a verb in order to be able to treat correctly 
// What does your brother say he likes -> OBJ(likes, what) and not *OBJ(say,what)
| SC{?*, BG{#1[form:fwhat]},?*,FV{?*,#2[last]}}, ?*, ?[verb]{?*,#3[last]}, ?[verb:~] |
	if ( VDOMAIN(#3,#2) & (^OBJ[post:+,infinit:~](#3,?) | MAIN(?) ))
	OBJ[features=~,pre=+](#3,#1)


// Rule 273
// Similar rule as above when the verb in interrogative form is a simple form of be
// What was the value of the prize ?
| SC{?*, BG{#1[form:fwhat]}, ?*, FV{?*,#2[last,form:fbe]} } |
	if ( VDOMAIN(#2,#2) )
	NUCL[subjcompl=+](#2,#1)


// Rule 274
// OBJ dependency when the object is introduced by a wh-determiner
// e.g. What products did Quintex group manufacture ?
// NOTE : some constraints added in order to verify that the verb is not in passive form or that the main verb is not BE so we avoid to have *OBJ(manufactered, products) in "what products are  by Quintex group manufactured? And another constraint in order to avoid a bad OBJ dependency in interrogatives which finite verb is neither a be, neither an auxiliary (What chemist won the Nobel Prize *OBJ(won,chemist)"
| SC{?*, NP#3{?[form:fwhat];det[wh,form:fmany];det[wh,form:fmuch];det[form:fwhich]},?*,FV{?*,#2[last]}}  |
	if ( HEAD(#1,#3) & VDOMAIN[passive:~](#4,#2) & #4[form:~fbe] & NUCL[vlink](#2,?) )
	OBJ[pre=+](#4,#1)


// Rule 275
// The object is the WH-pronoun whom 
// e.g. Whom did beat the Chicago Bull ?
| SC{BG{#3[form:fwho,obl,nom:~]}, ?*[verb:~], ?[verb]{?*,#1[last]} } |
	if ( VDOMAIN(#2,#1) & ~?(?,#3) & ~PREPD(?,#3) & (^OBJ[post](#2,#4) | MAIN(?) ) )
	OBJ[features=~,pre=+](#2,#3)


// Rule 276
// If we have something whith form:fwho that is a OBJ[PRE] of some verb and if this verb has no subject, then the first NP on the right of the verb that is not linked is the subject
| SC{BG{#3[form:fwho,obl]}}, ?*[noun:~], NP#4 |
	if (OBJ[pre](#1,#3) & VDOMAIN(#1,#2) & ~SUBJ(#2,?) & HEAD(#5,#4) & ~?(?,#5) )
	SUBJ[post=+](#2,#5)

// OBJ dependency with verbs marked as cop2
// get your umbrella
| SC{?*, FV{?*,#1[last,cop2]}}; ?[verb]{?*,#1[last,cop2]}, (adv), NP#2 |
  if ( ~OBJ(#1,?) & HEAD(#3,#2) & DETD(#3,?) & ~SUBJ(?,#3)  )
 OBJ[post=+](#1,#3)


// Rule 277
// Erasing an erroneous OBJ dependency when there exist a COMPOUND dependency
// e.g. It took place -> *OBJ(took,place) and COMPOUND(took,place) has been previously calculated
// A VOIR, ON POURRA PEUT-ETRE GENERALISER A TOUTES LES RELATIONS CALCULEES EN PARALLELE AVEC COMPOUND
// VOIR COMMENT EVOLUE COMPOUND *****
if ( ^OBJ(#1,#2) & COMPOUND(#1,#2) )
	~


// Rule 278
// Erasing an erroneous SUBJ dependency that is in fact an OBJ dependency
// The NP that is object of one verb on its right is taken as a subject of a verb that is in fact a past-participle and not a finite verb
// e.g. The grand jury took A SWIPE at the Department's handling of federal funds GRANTED for welfare services 
// In this sentence SWIPE is taken as subject of GRANTED (which builds a FV)
// We will destroy this dependency as there are two main verbs within this sentence.
// AB 2011.12.21 added scbegin:~ to avoid incorrect dependencies when sentence begins with a subordinating conjunction
// e.g. As he left John laughed. (NB without a comma separating the clauses!)
| SC{?*[scbegin:~],FV{?*,verb#3[trans,last]}}, NP#1, (PP;NP;punct;adv)*, FV{#2[last,hmm_vpap]} |
	if ( HEAD(#4,#1) & ~OBJ(#3,#4) & ^SUBJ(#2,#4) )
	OBJ[post=+,pre=~](#3,#4)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//  VMOD (Modifier or argument of a verb)
//  
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++





// Rule 279
// VMOD dependency between the main verb of an embedded clause and the WH- introducing this embedded clause
| SC{BG{#3[wh, form:~fthat, nom:~, form:~fwhere, form:~fwho]}, ?*[verb:~], ?[verb]{?*,#1[last]} } | 
	if ( VDOMAIN(#2,#1) )
	VMOD[pre=+](#2,#3)



// Rule 280
// VMOD dependency between the main verb and the WH- which is a who/whom with a preposition
// With whom did they leave ?
| SC{BG{#3[form:fwho]}, ?*[verb:~], ?[verb]{?*,#1[last]} } |
	if ( VDOMAIN(#2,#1) & PREPD(?,#3) )
	VMOD[pre=+](#2,#3)


// Rule 1472
// VMOD dependency with the feature temp:+ eg. in 1998 on the right of the verb and the verb is in a simple form.
| SC{?*,FV{#1[last]}}, ?*[fin:~,verb:~,coord:~], PP#2[date];PP#2[tempexpr] |
	if ( VDOMAIN(#1,#1) & HEAD(#4[tempexpr],#2) )
	VMOD[temp=+,post=+](#1,#4)


// Rule 282
// VMOD dependency with the feature temp:+ eg. in 1998 on the right of the verb and the verb is in a complex form.
// eg. What has been the value of the prize in 1998
| TOP{SC{?*,FV{#1[last]}}, ?*[verb:~], PP#2[date];PP#2[tempexpr]} |
	if ( NUCL[vlink](#1,?) & VDOMAIN(#3,#1) & HEAD(#4,#2) )
	VMOD[temp=+,post=+](#3,#4)
	


// Rule 283
// VMOD dependency with feature temp:+ on the right of a verb in an infinitive form
// e.g. Orchestras dusted off the music to ring in 1990 and a new decade -> VMOD(ring,1990)
| IV{prep[form:finfto], ?*, verb#1[last]}, ?*[verb:~,coord:~], PP#2[date];PP#2[tempexpr] |
	if ( HEAD(#4,#2) )
	VMOD[temp=+,post=+](#1,#4)




// Rule 284
// VMOD dependency with feature temp:+ on the left of the verb in a a simple form or complex form
// We check that the PP[date] is not envolved in another VMOD dep. 
// We check also that the tempexpr is not modified by something else (e.g. after 10 years of boom)
| PP#2[date];PP#2[tempexpr], ?*[verb:~], SC{?*[coord:~], FV{#1[last]}} |
	if ( VDOMAIN(#3,#1) & HEAD(#4,#2) & ~VMOD(?,#4) & ~NMOD(?,#4) & ~NMOD(#2,#7[time_span_n])  )
	VMOD[temp=+,pre=+](#3,#4)


// Rule 285
| PP#2[date];PP#2[tempexpr], ?*[verb:~], FV{?*,#1[last]} | 
	if ( VDOMAIN(#3,#1) & HEAD(#4,#2) & ~VMOD(?,#4) & ~NMOD(?,#4) & ~NMOD(#2,#7[time_span_n])  )
	VMOD[temp=+,pre=+](#3,#4)


// A tempexpr modified by a time_span_n
// eg, ten years of boom
//if (^NMOD[post,temp:~](#1[tempexpr],#2[time_span_n]) & PREPD(?[form:fof], #2))
//	NMOD[temp=+,post=~](#2,#1)
if (^NMOD[post,temp:~](#1[tempexpr],#2[noun]) & PREPD(?[form:fof], #2))
	NMOD[temp=+,post=~](#2,#1)


// Rule 286
// VMOD dependency with feature manner:+ between a verb and a WH complex adverb of the form HOW+ADJ (e.g. how nice)
// How rich is Bill Gates VMOD_PRE_MANNER(is,rich), ADJMOD_PRE(rich,how)
| SC{?*,ADVP[howadj]{adv#4[form:fhow], #1[adj]}, (NP), FV{?*,#2[last]} } |
	if ( VDOMAIN(#3,#2) )
	VMOD[manner=+,pre=+](#3,#1),
	ADJMOD[pre=+](#1,#4)



// Rule 287
// VMOD dependency with feature temp:+ between a verb and a WH adverb when it is just under the node SC.
// e.g. When does he arrive ?
// Note that in sentences like,  When he arrived, it was too late, a VMOD[temp] is also calculated between the verb of the embedded sentence and the WHEN.
// Has to be correct later.
//| SC{#1[form:fwhen];BG{#1[form:fwhen]},(NP), (PP), FV{?*,#2[last]}} | 
| SC{BG{#1[form:fwhen]},(NP;PP;INS)*, FV{?*,#2[last]}} | 
	if ( VDOMAIN(#3,#2) & ( ~VMOD(#3,#1) | ^VMOD[temp:~](#3,#1) ) )
	VMOD[temp=+,pre=+,wh=+](#3,#1)



// Rule 288
// VMOD dependency with feature loc:+ between a verb and a WH in an interrogative sentence.
| SC{#1[form:fwhere];BG{#1[form:fwhere]}, (NP), (PP), FV{?*,#2[last]}} | 
	if ( VDOMAIN(#3,#2) )
	VMOD[loc=+,pre=+,wh=+](#3,#1)

// Rule 289
| SC{#1[form:fhow];BG{#1[form:fhow]}, (NP), (PP), FV{?*,#2[last]} } |
	if ( VDOMAIN(#3,#2) )
	VMOD[manner=+, pre=+,wh=+](#3,#1)

// Rule 290
// Rajouter ulterieurement le trait adequat pour WHY
| SC{#1[form:fwhy], ?*[verb:~], FV{?*, #2[last] } } |
	if ( VDOMAIN(#3,#2) )
	VMOD[pre=+, wh=+](#3,#1)




// Rule 291
// VMOD dependency with feature temp+ between verb and WH when this WH is not included in the SC node (see above).
// e.g. This is the same in Bucarest, WHERE Elena Ceasescu boasted a wardrobe
| TOP {?*, ?{#1[form:fwhere]}, ?*[adv], SC{?*, FV{?*, #2[last]} } } |
	if ( VDOMAIN(#3,#2) )
	VMOD[loc=+,pre=+,wh=+](#3,#1)


// Rule 292
// VMOD dependency between a verb in an embedded clause and a PP[wh]
// e.g. The name of the condition in which(PP) a baby is born without a brain. -> VMOD_PRE(born,which)
| SC{BG{PP{prep,#1[wh]}}, (NP), (PP), FV{?*,#2[last]}} |
	if ( VDOMAIN(#3,#2) )
	VMOD[pre=+,wh=+](#3,#1)



// Rule 293
// Same rule as above when the PP[wh] is not under a BG node
// e.g. In what city is the declaration of indenpendence of the US located ?
| SC{PP{prep,NP#1[wh]}, (NP), (PP), FV{?*,#2[last]}} |
	if ( HEAD(#4,#1) & VDOMAIN(#3,#2) )
	VMOD[pre=+,wh=+](#3,#4)


// Rule 294
// Adding a feature relativ:+ to the dependency VMOD[pre,wh] when this is in fact a relative pronoun (i,e preceeded by a NP)
| NP#1; ?{#1};SC{BG{?{?*,#1}}} | 
	if ( ^VMOD[pre,wh,relativ:~](#2,#1) )
	VMOD[relativ=+,pre=+,wh=+](#2,#1)


// Rule 295
// VMOD dependency with feature quantity:+ between a verb and a WH in an interrogative sentence
| SC{#1[form:fmuch],FV{?*,#2[last]}} ; SC{FV{#1[form:fmuch], ?*, #2[last]}}
  , ?*, ?[verb]{?*,#3[last]}, ?[verb:~] | 
	if ( VDOMAIN(#3,#2) )
	VMOD[quantity=+](#3,#1)


// Rule 296
// VMOD dependency with feature dur:+ between a verb and a WH in an interrogative sentence
// e.g. How long did it last ?
| SC{#1[form:flong],FV{?*,#2[last]}}, ?*, ?[verb]{?*,#3[last]}, ?[verb:~] | 
	if ( VDOMAIN(#3,#2) )
	VMOD[dur=+,pre=+](#3,#1)



// Rule 297
// VMOD dependency between a PP and a verb when the PP preceedes the verb under the SC or not under SC
// e.g. before the revolution, Iran had 35 million people -> VMOD(had,revolution)
// Restriction on SUBJ badtag in order to avoid to take bad VMOD[pre] in        
// Including the planting of a green manure into a garden plan can seem difficult. *VMOD[pre](seem,planting)
| SC{(BG), PP#1{prep#4}, ?*, FV{?*,#2[last]}}; TOP{PP#1,?*,FV{?*,#2[last]}} |
	if ( HEAD(#3,#1) & VDOMAIN(#5,#2) & ~SUBJ[badtag](#2,#3) )
	VMOD[pre=+](#5,#3)



// Rule 298
// AB 2011.12.20 added infinit=+ to dependency (helps identify correct clause EMBED relation)
// VMOD dependency between an infinitive clause and another infinitive clause.
| IV{?[form:finfto],?*,#1[last]}, ?*[verb:~,coord:~], IV{?[form:finfto], ?*, #2[last]} |
	VMOD[post=+,infinit=+](#1,#2)
	


// Rule 308
// VMOD dependency between a verb and a PP when the finite verb or auxiliary is under an SC node
// Note, here erroneous VMOD dependency are constructed in case of complex quantification expressions
// e.g.  "I like all of the children"  construction of *VMOD(like,children)
// They will be later cleaned. (see rules dedicated on the rearangement of these quantification expressions
// in order to avoid I play with both of the children *VMOD(play,both) 
| SC{?*, FV{?*,#1[last]} }, ?*[verb:~,coord:~], (NFV);(IV{?[prep:~]});(IV{?[prep:~]},NFV), ?*[verb:~,coord:~], PP#2{?[form:~fby,p_by:~,form:~fof]} |
	if ( HEAD(#3,#2) & VDOMAIN(#4,#1) & ~VMOD(#4,#3) )
	VMOD[post=+](#4,#3)

// AB 2011.12.14 as above, but GV or IV between initial FV and PP
// e.g. Instruct them in handling errors in order to resolve problems. VMOD(Instruct,order)
| SC{?*, FV{?*,#1[last]} }, ?*[verb:~,coord:~], GV;IV{?[prep:~]};(IV{?[prep:~]},NFV), ?*[verb:~,coord:~], PP#2{?[form:~fby,p_by:~,form:~fof]} |
	if ( HEAD(#3,#2) & VDOMAIN(#4,#1) & ~VMOD(#4,#3) )
	VMOD[post=+](#4,#3)

// AB 2011.12.15 as opposed to above rule, no "in order" before infinitive
// e.g. Instruct them in handling errors to resolve problems. VMOD_SENTENCE_POST(Instruct,resolve)
| SC{?*, FV{?*,#1[last]}}, ?*[verb:~], GV, ?*[verb:~,scbegin:~,lemme:~"in order"], IV{prep[form:finfto],#3[last]} |
	if ( ~?(#1,#3) )
	VMOD[post=+,sentence=+](#1,#3)

// Special case of PP introduced by "of".
// They are only attached to the verb if there is no nouns inbetween and if they subcategorize a PP-of
| SC{?*, FV{?*,#1[last]} }, ?*[verb:~], (NFV);(IV{?[prep:~]});(GV), ?*[verb:~,noun:~], PP#2{?[form:~fby]} |
	if ( HEAD(#3,#2) & VDOMAIN(#4[sc_pof],#1) & ~VMOD(#4,#3) ) 
	VMOD[post=+](#4,#3)


// Rule 309
// general VMOD dependency between a verb and a PP
| ?{?*, FV{?*,#1[last]}, ?*[verb:~], (NFV);(IV{?[prep:~]});(GV);(IV{?[prep:~]},NFV), ?*[verb:~], PP#2{?[form:~fby,p_by:~]} } |
	if ( HEAD(#3,#2) & VDOMAIN(#4,#1) )
	VMOD[post=+](#4,#3)





// Rule 301
// VMOD dependency between a non finite verbal form  (infinitive TO or gerundive form) and a PP
// e.g. They appealed to bring instruments to the gate -> VMOD(bring,gate)
// AB 2011.12.14 added ~NMOD[infinit](#3,?) to avoid VMOD with "in order to IV"
// e.g. They like handling complaints in order to solve problems. *VMOD(handling,order)
| IV{?[prep],?*,#1[last,verb]}; GV{?*,verb#1[vprog]}, ?*[verb:~], PP#2{prep[form:~fby,p_by:~]} |
	if ( HEAD(#3,#2) & ~VMOD(?,#3) & ~NMOD[infinit](#3,?) )
	VMOD[post=+](#1,#3)



// Rule 302
// Cleaning some ATTACHMENT
// Cleaning of some NMOD[post] dependencies when the PP starts with the preposition "OF"
// e.g The city of Atlanta, the mountains of Grenoble
// In this case we just keep the NMOD dependency with the nearest Nominal Head on its left (checked on Suzanne Corpus, it always works)
// NOTE: PP[of] are attached to nouns and not to verbs unless the verb is especifically mark to subcategorize a PP[of]
// NOTE2 : Avoid to destroy dependencies when a coordination is involved
| PP#5{prep[form:fof]} | 
	if ( HEAD(#1,#5) & NMOD[post](#2,#1) & ( ^NMOD[post](#3,#1) | ^VMOD[post](#3[sc_pof:~],#1) ) & #3 < #2 & ~NCOORD(?,#2) )
	~



// Rule 303
// VMOD dependency between a PP and a past participle used as an adjective or a past participle alone under the top node
// e.g. Covered with confusion, I left the room
| AP{?*,#1[last,partpas]};verb#1[partpas] , ?*[verb:~], PP#2{?[form:~fby,p_by:~]} |
	if ( HEAD(#3,#2) )
	VMOD[post=+](#1,#3)




// Rule 304
// VMOD dependency between an embedded clause introduced by "so that" and the main clause.
// The verbs are linked by a VMOD[sentencial,post] dependency
// e.g. They provide funds so that an orderly implementation of the law may be effected. 
|  SC{?*,FV{?*,#2[last]}}; IV{?*,#2[last]}; NFV{?*,#2[last]};GV{?*,#2[last]},?*[verb:~], SC{ BG{adv[form:fso], conj[form:fthat]}, ?*[verb:~], FV{?*,#1[last]} } |
	if ( VDOMAIN(#3,#1) )
	VMOD[sentence=+,post=+](#3,#2)



/// ADVERBIALS VMOD

// Rule 305
// Negation adv is in a VMOD relation with the main verb. The feature neg:+ is added on this dependency.
| SC{?*,FV{?*,#5[last]}};FV{?*,#5[last]}, ?*, IV{adv#1[form:fnot],?*,#2[last]}; NFV{adv#1[form:fnot],?*,#2[last]}; GV{adv#1[form:fnot],?*,#2[last]} |
	if ( VDOMAIN(#2,#5) )
	VMOD[neg=+](#2,#1)


// Rule 306
// When the verb is a copula in a simple form
// adverb is just under top
| SC{?*,FV{?*,#1[last,cop]}},adv, #2[adv,form:fnot] |
	if ( ( ~?(#2,?[adv:~]) & VDOMAIN(#1,#1) )  |  VDOMAIN(#1,#1) )
	VMOD[neg=+,post=+](#1,#2)


// Rule 307
// simple verbal form and not before the verb
| FV{?*,#1[form:fnot, adv],adv*, verb#2[last] } |
	if ( ~?(#2,#1) )
	VMOD[pre=+,neg=+](#2,#1)



// Rule 308
// Adverbs that modify a verb (pre-modifier)
// e.g. He really talks slowly VMOD[pre](talks,really)
| FV{?*,adv#1[form:~fnot];advp[wh:~]{?*,#1[adv,last]}, #2[verb]} |
	if ( VDOMAIN(#3,#2) )
	VMOD[pre=+](#3,#1)

// Rule 309
// Adverbs that are between two verbal forms
// In this case we attached it to the main verbal element
// He should really have been VMOD(been,really)
|  ?[verb:+]{adv#2;advp[wh:~]{?*,#2[adv,last]}, ?*, verb#1[last]} |
	if ( VDOMAIN(#1,#3) )
	VMOD[pre=+](#1,#2)

// Adverbs between 2 verbal forms that are under a same verbal chunk
// e.g. It has been twice delayed.
| ?[verb]{verb, adv#2, verb#1} |
	if ( VDOMAIN(#1,?) & ~VMOD(#1,#2) )
	VMOD[pre=+](#1,#2)


// Rule XXXX
// Adverbs under top just between two verbal forms. Attached to the second verbal form
| SC{?*,FV{?*,#1[last,partpas]}}, #2[adv], FV |
	VMOD[post=+](#1,#2)



// Rule 319
// Adverbs at the beginning of the sentence have to be linked to the first verb on their right
// e.g. Now he says something VMOD_PRE(says,Now)
// It doesn't catch the VMOD dependency in "Now with new construction under way, three of his buyers have backed out."
| ?*[verb:~], adv#2;advp[wh:~]{?*,#2[adv,last]}, ?*[verb:~,comma:~,conj:~], FV{?*,#1[last]} |
	if ( VDOMAIN(#3,#1) & ( ~?(?,#2) | COORD(?,#2) ) )
	VMOD[pre=+](#3,#2)

// Same as above for temporal adverbs
| ?*[verb:~], adv#2[tempexpr], ?*[verb:~,conj:~,comma:~], FV{?*,#1[last]} |
	if ( VDOMAIN(#3,#1) & ( ~?(?,#2) | COORD(?,#2) ) )
	VMOD[pre=+](#3,#2)

// Rule XXXX
// Adverbs at the beginning of a clause that are temporal and complex and followed by a comma are attached to the first verb on their right
// e.g. 40 years later, they came back
| ?*[verb:~], adv#2[tempexpr], ?[comma], ?*[verb:~,conj:~,comma:~], FV{?*,#1[last]} |
	if ( VDOMAIN(#3,#1) & ( ~?(?,#2) | COORD(?,#2) ) )
	VMOD[pre=+](#3,#2)

// Rule 311
// Adverbs that modify a verb (post-modifier)
// e.g. He really talks slowly VMOD[post](talks,slowly)
// Note that the ADJMOD (or ADVMOD) link alreay exist between an adverb and an adjective (or adverb) modified by this adverb
// We check that the adverb does not modify something else.
| SC{?*,FV{?*,#2[verb,cop:~]}};FV{?*,#2[verb,cop:~]}; 
  NFV{?*,#2[last,cop:~]};GV{?*,#2[last,cop:~]};IV{?*,#2[last,cop:~]}, ?*[verb:~,conj:~,comma:~],adv#3;advp[wh:~]{?*,#3[adv,last]} |
	if ( ~?(?,#3) | COORD(?,#3) ) 
	VMOD[post=+](#2,#3)

// Rule 312
// Same as above when there is a verbal particle between the verbal form and the adv	
| SC{?*,FV{?*,#1[verb,cop:~]}};FV{?*,#1[verb,cop:~]}; 
  NFV{?*,#1[last,cop:~]};GV{?*,#1[last,cop:~]};IV{?*,#1[last,cop:~]}, #3, adv#2;advp[wh:~]{?*,#2[adv,last]} |
	if ( ( ~?(?,#2) | COORD(?,#2) ) & NUCL[particle](#1,#3) )
	VMOD[post=+](#1,#2)

// Rule 313
// When the adverb modifies a copula, and if this adverb has the feauture hmm_adj:+, then it is a tagging error and a NUCL dep. is created between the adverb/adj and the copula
| SC{?*,FV{?*,#2[verb,cop]}};FV{?*,#2[verb,cop]};
  NFV{?*,#2[last,cop]};GV{?*,#2[last,cop]};IV{?*,#2[last,cop]}, adv#3[hmm_adj];advp[wh:~]{?*,#3[adv,last]} |
	if ( ~?(?,#3) | COORD(?,#3) )
	NUCL[badtag=+,subjcompl=+](#2,#3)



// Rule 314
// Else if the verb has the feature cop and is not linked with a NUCL[subjcompl] to anything, then we link the adverbs.
| SC{?*,FV{?*,#2[verb,cop]}};FV{?*,#2[verb,cop]};
  NFV{?*,#2[last,cop]};GV{?*,#2[last,cop]};IV{?*,#2[last,cop]}, ?*[verb:~,conj:~,comma:~], adv#3;advp[wh:~]{?*,adv#3[last]} |
	if ( ~NUCL[subjcompl](#2,#3) & ~NUCL[particle](#2,#3) & ~VMOD(?,#3) )
	VMOD[post=+](#2,#3)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// Refinement and continuation of PREPD dependencies in case of extraction
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 315
// Very general rule that establish a PREPD relation between a preposition and an extractee in interrogatives or embedded subclauses.
// We have to check if a VERBPREP relation exists and if the preposition is not already linked in a PREPD relation. The WH (or BG) can be in a VMOD dependency (How much) or in an OBJ dependency (who) or can be unlinked. If the WH has been previously  linked as an object, this relation is deleted (it cannot be an object because there is a preposition).
// Examples:
// The girl whom he has spoken with -> PREPD(whith,whom)
// What are you looking for -> PREPD(for,what)
// Who did he come with -> PREPD(with,who)
// NOTE that the MAIN(?) and HEAD(?,?) conditions used in the disjonction are only here for optionality. Note also that it is not possible to use twice the MAIN(?) condition.
| BG{#4},(NP),FV{#2[last]} |
	if ( VDOMAIN(#1,#2) & VERBPREP(#1,#3) & ( VMOD(#1,#4) | OBJ(#1,#4) | MAIN(?) ) & 
	~PREPD(#3,?) &
	(^OBJ(#1,#4) | HEAD(?,?) ) )
	PREPD[pre=+](#3,#4)


// Rule 316
// Same as above for wh adv
// e.g. How much  did you rent a car for -> PREPD(for,how much)
| adv#4[wh],(NP),FV{#2[last]} |
	if ( VDOMAIN(#1,#2) & VERBPREP(#1,#3) & ( VMOD(#1,#4) | OBJ(#1,#4) | MAIN(?) ) & 
	~PREPD(#3,?) &
	(^OBJ(#1,#4) | HEAD(?,?) ) )
	PREPD[pre=+](#3,#4)


// Rule 317
// Similar dependency between the HEAD of an NP introduced by a WH-determiner (which) and the verb
// eg Which toy did you say he will play with
| TOP{?*,SC{NP#1{?*,det[wh,last:~]}}, ?*, prep#2} |
	if ( HEAD(#3,#1) & ~SUBJ(?,#3) & ~OBJ(?,#3) )
	PREPD[pre=+](#2,#3)



// Rule 318
// PREPD relation between a preposition and a relative prounoun that just follows it. 
// Note that the preposition is not part of the SC chunk started by the relative pronoun
// e.g. The man to whom I talk is nice
| prep#2, SC{BG{#1} } |
	if ( ~SUBJ(?,#1) & ?[relativ](?,#1) & ~PREPD(#2,?) )
	PREPD[post=+](#2,#1)
	



// Rule 319
// Adding a feature negat on prepd dependencies when the preposition is "without"
| PP{prep#1[form:fwithout]} |
	if ( ^PREPD[negat:~](#1,#2) )
	PREPD[negat=+](#1,#2)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// High level coordination
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 320
// Verb in a simple form (only 2 verbs)
| SC[startbis]{?*,FV{?*,#2}}, ?*[verb:~], SC{conj#3[coord], ?*, FV{?*,#1[last]}}, ?*[verb:~], punct[endbis] |
	if ( ~COORD(?,#1) )
	COORD(#3,#1),
	COORD(#3,#2).

// Rule 321
// Same as above when the second coordinated verb is followed by an embedded sentence
// e.g. It dissolves very easily and changes to a vapor when heated
| SC[startbis]{?*,FV{?*,#2}}, ?*[verb:~], SC{conj#3[coord], ?*, FV{?*,#1[last]}}, ?*[verb:~], SC{BG{?[wh]}} |
	if ( ~COORD(?,#1) )
	COORD(#3,#1),
	COORD(#3,#2).


// Rule 322
// When the first verb is a complex verb with passive or perfect and the second has feature partpas
// It is made by humans and found in the city COORD(made,found)
| SC[startbis]{?*,FV{?*,#2}}, NFV{?*,#9[last,partpas]}, ?*[verb:~], SC{conj#3[coord],?*,FV{#1[last,partpas]}}, ?*[verb:~], punct[endbis] |
	if ( ( VDOMAIN[passive](#9,#2) | VDOMAIN[perfect](#9,#2) ) & ~COORD(?,#1) )
	COORD(#3,#9),
	COORD(#3,#1).




// Rule 323
// Same as the first rule of this section when the first verb is in a complex form
| SC[startbis]{?*,FV{?*,#2}}, NFV{?*,#9[last]};IV{?*,#9[last]}; GV{?*,#9[last]}, ?*[verb:~], SC{conj#3[coord], ?*, FV{?*,#1[last]}}, ?*[verb:~], punct[endbis] |
	if ( VDOMAIN(#9,#2) & ~COORD(?,#1) )
	COORD(#3,#1),
	COORD(#3,#2).



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// THIRD STAGE: ELIMINATION and/or CORRECTION of OBJ dependencies
//   
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 324
// If we have at the same time a PREPD dependency between a preposition and some constituent
// And if this constituent is in a OBJ_PRE dependency with some verb
// Then this OBJ dependency is transformed to a VMOD dependency (Note that the features that were present on the OBJ dep. are also kept in the VMOD dependency
// e.g. The man whom you talk to is nice VMOD_PREP_RELATIV(talk,whom)
if ( ^OBJ[pre,relativ](#1,#2) & PREPD(?,#2) )
	VMOD(#1,#2)


// Elimination of bad calculated OBJ when the verb is "say" and the bad object has feature c_person:+
// eg. He said the man who came... *OBJ(said,man)
if ( ^OBJ(#1[lemme:say],#2[c_person]) ) 
~


// Rule 325
// Elimination of Erroneous OBJ dependency when 2 objects are computed for the same verb (one BG and a following NP)
// eg. I know THAT he's a good MAN
// We ensure here that this is at the end of the sentence
| SC{BG{#1[form:fthat]}, NP, FV}, NP#2[endbis] |
	if ( HEAD(#3,#2) & OBJ(#4,#3) & ^OBJ(#4,#1) )
	~

// Rule 326
| SC{BG{#1[form:fthat]}, NP, FV}, NP#2, PUNCT[sent] |
	if ( HEAD(#3,#2) & OBJ(#4,#3) & ^OBJ(#4,#1) )
	~

// Rule 327
// When there is a chunking problem and a day of the week is taken wrongly in a NP.
// e.g. Pelham will offer a resolution Monday in the House ....
// Here Monday is part of the NP chunk NP{a resolution Monday}
// The rule says that :
// If we have an Object which head has feature period:+, time:+ 
// And if before this head there is another noun
// Then the noun[period,time] is a VMOD_TEMP_POST and the Object is the preceeding noun
| NP{?*,noun#1[last:~],noun#2[time,period,last]} |
	if ( ^OBJ(#3,#2) )
	OBJ[badchunk=+](#3,#1),
	VMOD[post=+,temp=+,badchunk=+](#3,#2).
	

// Rule 328
// Eliminating Objects that have the feature tempexpr.
| NP#1[tempexpr] |
	if ( HEAD(#2,#1) & ^OBJ(#3[lemme:~waste],#2) )
	VMOD[post=+,temp=+](#3,#2)




// Rule 329
// If a NP with feature tempexpre is followed by a NP whose head is posttime:+
// Then deletion of every dependency between the verb and this second NP
// The second NP is linked as NMOD to the first one
| NP#1[tempexpr], NP{#2[noun,posttime]} |
	if ( HEAD(#3,#1) & VMOD[temp](#4,#3) & ^OBJ(#4,#2) )
	NMOD[post=+,temp=+](#3,#2)

// Rule 330
// If we find a verb that
// 1) has no subject
// 2) is preceeded by a NP that is the object of a inspeech verb
// THEN we destroy the OBJ dependency between this NP and the indspeech verb
// AND we take as subject this NP
// e.g. The jury said IT found the court has incorporated the recomandations. *OBJ(said,it) and "found" has no subject
| SC{?*, FV[indspeech]{?*,#3[last]}}, NP#1, FV{?*,#4[last]} |
	if ( ~SUBJ(#4,?) & HEAD(#5,#1) & ^OBJ(#3,#5) )
	SUBJ[post=~,pre=+](#4,#5)





//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// FOURTH STAGE: 
// Refinement of SUBJATTR when there is a negation
// Refinements SUBJ OBJ VMOD dependencies and EXTRACTIONS
// SUBJ and OBJ with embedded clauses in general
// AGENT COMPLEMENTS of passives  (AGENT dependency)
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 331
// Adding a feature neg on the SUBJATTR dependencies when there is a negation on the copula
if ( ^SUBJATTR[neg:~](#1,#2) & NUCL[subjcompl](#3,#2) & VMOD[neg](#3,?) )
	SUBJATTR[neg=+](#1,#2)


// Rule 332
// VMOD dependency between a verb in an interrogative or embedded clause when the WH is in a PREPD relation 
// with a preposition that is at the end of the clause
// e.g. What was Agent Orange used for ? -> VMOD(used,What)
| SC{BG[wh]{pron#4}, FV{?*,#1[last]}}, ?*, prep#2 | 
	if ( VDOMAIN(#3,#1) & VERBPREP(#3,#2) & PREPD(#2,#4) )
	VMOD[pre=+](#3,#4)


// Rule 333
// VMOD dependency between a verb and a NP or a PP that is a temporal expression
// This NP is linked to the first verb on its left (check if no side effect)
// The NP has tempexpr feature and is not linked to anything
| SC{?*,FV{?*,#5[verb,lemme:~waste]}};?[verb]{?*,#5[verb,last,lemme:~waste]},?*[verb:~,coord:~],NP#1[tempexpr];PP#1[tempexpr] |
	if ( HEAD(#2[tempexpr],#1) & ( ~?[temp](?,#2) |  ^VMOD[temp:~](?,#2) | COORD(?,#2) ) )
	VMOD[post=+,temp=+](#5,#2)



// Rule 334
// Relation between a WH- pronoun and a verb in a long distance dependency.
// IF wh pronoun is found that is not linked with anything (neither SUBJ or OBJ or PREPD)
// Establish a link between the last verb and this pronoun ( OBJ dependency )
// e.g. What did Mary say she hoped we would buy? -> OBJ(buy,what)
| TOP{SC{BG{#1pron[wh]}, ?*, FV}, ?*, SC{?*,FV{#2}}, IV;NFV, ?*[verb:~], punct} |
	if ( ~SUBJ(?,#1) & ~OBJ(?,#1) & ~PREPD(?,#1) & VDOMAIN(#3,#2) )
	OBJ(#3,#1)



// Essayer de generaliser (ca doit etre faisable). Une succession de formes verbales qui construisent cependant des VDOMAIN differents. Entre la cassure des 2 VDOMAINS il manque quelque chose qui est le WH
// A VOIR aussi sur CORPUS
// Rule 335
// SUBJ dependency between a verb and a WH pronoun in a long distance dependency for a simple verbal form
// e.g. Who didn't Fred think had enough money ? -> SUBJ(had,who)
| TOP{ SC{BG{pron#1[wh,obl:~]}}, ?*, FV{?*,#2[last]}, ?*[verb:~], punct} |
	if ( ~SUBJ(?,#1) & ~OBJ(?,#1) & ~PREPD(?,#1) )
	SUBJ[pre=+](#2,#1)


// Rule 336
// SUBJ dependency between a verb and a WH pronoun in a long distance dependency for a complex verbal form
// e.g. Who did you say has arrived yesterday ? -> SUBJ(has,who)
| TOP{ SC{BG{pron#1[wh,obl:~]}}, ?*, FV{?*,#2[last]}, NFV;IV, ?*[verb:~], punct} |
	if ( ~SUBJ(?,#1) & ~OBJ(?,#1) & ~PREPD(?,#1) )
	SUBJ[pre=+](#2,#1)



// Rule 337
// Similar rule as the preceding one. Creating a SUBJ dependency between the NP head introduced by a wh-determiner and a long distance verb
// e.g. Which boy did you say has arrived
| TOP{ SC{NP#1{?*,det[wh,last:~]}}, ?*, FV{?*,#2[last]}, NFV;IV, ?*[verb:~], punct} |
	if ( HEAD(#3,#1) & ~SUBJ(?,#3) & ~OBJ(?,#3) )
	SUBJ[pre=+](#2,#3)

// Rule 338
// When an embedded clause is subject of another clause
// In this case, the main verb of the embedded clause is the subject of the main clause.
// e.g. What you say is unclear :  SUBJ(is,What) 
// e.g. Whether you come or not remains uncertain.  SUBJ(remains,come), 
// e.g. What you see is what you get." 
| SC[wh]{?[wh],?*,FV{?*,#1[last]}}, ?*[verb:~], FV{?*,#2[verb,last]} |
	if ( ~SUBJ(#2,?) & ~VDOMAIN(#2,#1) & VDOMAIN(#3,#1) )
	SUBJ[sentence=+](#2,#3)


// Rule 339
// When the word "WHICH" is not linked with any verb in the clause, and if the verb just follow the WHICH, then it is a subject of this verb
// e.g. The door which is closed.... -> SUBJ(is,which)
| SC[first:~]{ BG{pron#1[form:fwhich]}, FV{?*,verb#2[last]}} |
	if ( ~?(?,#1) )
	SUBJ[relativ=+](#2,#1)



// Rule 340
// When a free embedded clause is NUCL of a main verb
| FV{?*,#1[last,form:fbe]}, ?*[verb:~,noun:~], SC{BG[wh]{?[wh]}, ?*, FV{?*,#2[last]}} |
	if ( VDOMAIN(#3,#2) )
	NUCL[sentence=+](#1,#3)

// Rule 341
// When the subject is a predet quantifier, no NP is constructed.
// e.g. Both arrived late. Little was known
// If the verb has no other subject and there is a quant on its left, this quant is the subject of the verb
| SC{?*, quant#1, FV{?*,#2[last]}} |
	if ( ~SUBJ(#2,?) )
	SUBJ[pre=+](#2,#1)


// Rule XXXX
// Same as above when the verb is not under an SC node
| quant#1, FV{?*,#2[last]} | 
	if ( ~SUBJ(#2,?) & ~?(?,#1) )
	SUBJ[pre=+](#2,#1)



// Rule 342
// Case of THERE
// If a verb has no subject and is preceeded by THERE tagged as an adverb, then we decide that THERE is the subject (badly tagged)
// At the same time, if the "there" had been linked to a preceeding verb through a VMOD dependency, then, this bad dependency is deleted
// e.g. They think there would be people to attend
| ?{?*, adv#2[form:fthere], FV{?*,#1[last]}} | 
	if ( ~SUBJ(#1,?) & ( ^VMOD[post](?,#2) | ~VMOD(?,#2)  ) )
	SUBJ[badchunk=+,pre=+,post=~](#1,#2)





// Rule 343
// Agent complement in passive forms
// If a PP[by] is not linked by any relation. 
// If the first verb in its left is in the passive form
// Then the head of the PP[by] is in an AGENT dependency with this verb
| NFV{?*,#1}, (PP{prep[form:~fby]};adv;quant[lemme:both])*, PP#2{prep[form:fby]} |
	if ( VDOMAIN[passive](#1,?) & HEAD(#3,#2)  )
	AGENT(#1,#3)


// Rule 344
// Agent complement in passive forms
// When the passive verb is in infinitive form.
// The mouse wants to be caught by the cat.
| IV{prep#1[form:finfto]}, adv*, PP#2{prep[form:fby]} |
	if ( PREPD(#1,#3) & NUCL[passive,vlink](?,#3) & HEAD(#4,#2) )
	AGENT(#3,#4)


// Rule 345
// Bad SUBJ dependency in case of a mistagged past-participle (taken as a finite verb) within an NP.
// e.g. However, information regarding the host factors involved in this process is limited. where involved is taken as a finite verb and thus information is the subject of two verbs.
// NOTE: We transform the bad subject dependency to a NMOD dependency. But if there is some PP between the NP#1 and the #2, this NMOD dependency may be erroneous (should be within #2 and the head of the PP)
| SC{?*,NP#1,?*[verb:~],FV{verb#2[partpas]} }, ?*[verb:~], FV{?*,#3[last]} |
	if ( HEAD(#4,#1) & ^SUBJ(#2,#4) & SUBJ(#3,#4) )
	NMOD[features=~,post=+,badtag=+](#4,#2)



// Rule 346
// TEST: Verb without subject under an SC composed by BG{ pron }, FV.
// In this case the subject is the pron.
| SC{ BG{pron#1[obl:~]}, FV{?*,#2[last] } } |
	if ( ~SUBJ(#2,?) & ~?(?,#1) )
	SUBJ[pre=+](#2,#1)


// Rule 347
// When We have 2 SUBJ dependencies on the same verb in the context NP NP FV (the head of each of the NP's is SUBJ of the head of the FV. 
// And if this verb has not object
// Then the first NP is the object
// e.g The boy she likes -> SUBJ(likes,she) and OBJ(likes,boy)
// We don't want that the second NP start with an adjective (past-participle) in order to avoid to consider for this rule 
// sequences like "The man named Peter arrived." Where NP(The man) and NP(named Peter)
| NP#1, NP#2{?[verb:~]}, FV{?*,#3[last]}, ?*, ?[verb] |
	if ( HEAD(#4,#1) & HEAD(#5,#2) & ^SUBJ(#3,#4) & SUBJ(#3,#5) & VDOMAIN(#6,#3) & ~OBJ(#6,?) & ~NUCL[subjcompl](#6,?) )
	OBJ(#6,#4)


// Rule 348
// When we have 2 SUBJ dep. on the same verb in the context NP NP FV
// If the first NP is a proper noun and if the second NP is of the form det adj* noun
// Then , the second NP is an apposition of the first
| NP{noun#1[proper]}, NP{det, adj*, #2[noun,last]}, FV{?*,#3[last]} |
	if ( SUBJ(#3,#1) & ^SUBJ(#3,#2) )
	NMOD[features=~,post=+,appos=+](#1,#2)


// We have 2 obj dep. involving a same dependent on different verb.
// we keep this one in the canonical position
if ( ^OBJ[pre](#1,#2) & OBJ[post](#3,#2) )
   ~



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// When quantified NPs are involved as dependents in a dependency. The quantifier contained in the NP is not
// considered as the head but as the quantifier of the head of the following PP.


// Rule 349
// Elimination of all modification dependencies involving the nucleus of a complex quantified expression e.g. 
// All of the children, both of them etc.
| NP{?*,quant#1};PP{prep,NP{?*,quant#1}};NP{?*,#1[last,num]};PP{prep,NP{?*,#1[last,num]}};
  NP{?*,#1[last,numer]};PP{prep,NP{?*,#1[last,numer]}};
  NP{?*,#1[last,percent]};PP{prep,NP{?*,#1[last,percent]}}, PP#2{prep[form:fof]} |
	if ( HEAD(#3,#2) &  ^VMOD(?,#3) )
	~


// Rule 350
| NP{?*,quant#1[last]};PP{prep,NP{?*,quant#1[last]}};NP{?*,#1[last,num]};PP{prep,NP{?*,#1[last,num]}};
  NP{?*,#1[last,numer]};PP{prep,NP{?*,#1[last,numer]}};
  NP{?*,#1[last,percent]};PP{prep,NP{?*,#1[last,percent]}}, PP#2{prep[form:fof]} |
	if ( HEAD(#3,#2) &  ^NMOD(?,#3) )
	~




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// FIFTH STAGE: 
// Verb arguments or modifiers (sentencial complements, sentential subj, other arguments and modifiers
// - CLOBJ : Clausal object complement of a verb. Can be introduced by a complementizer or not.
//   
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



// With INSPEECH VERBS


// Rule 351
// When a embedded clause is argument of a verb, there is a CLOBJ (clausal object complement dependency) between the verb of the main clause and the verb of the embedded clause.
// e.g. He said (that ) Mary came yesterday -> CLOBJ(said,came).
// the compl is not introduced by that
// Restriction on the main FV which must not have the feature [incise] in order to avoid to link a clause to the verb of a preceeding comment clause e.g. "This is the program, the jury said, but the Department has seen .... *CLOBJ(seen, said
| SC{?*,FV[indspeech]{?*,#4[last]}}; FV[indspeech]{?*,#4[last]}; NFV[indspeech]{?*,#4[last]}; IV[indspeech]{?*,#4[last]}; GV[indspeech]{?*,#4[last]}, ?*[verb:~,coord:~], NP#1, ?*[verb:~,coord:~], FV{#2[last]} | 
	if (  HEAD(#3,#1) & SUBJ(#2,#3) & ~OBJ(#4,?) & VDOMAIN(#5,#2) & #4[incise]:#2[incise])
	CLOBJ[sentence=+,post=+](#4,#5)


// Rule 352
// Same rule as above when the subject is a badly tagged and chunked "there" non-referential subject
// e.g. They think it would be people to attend.
| SC{?*,FV[indspeech]{?*,#4[last]}}; FV[indspeech]{?*,#4[last]}; NFV[indspeech]{?*,#4[last]}; IV[indspeech]{?*,#4[last]}; GV[indspeech]{?*,#4[last]}, ?*[verb:~,coord:~], adv#3[form:fthere], ?*[verb:~,coord:~], FV{#2[last]} | 
	if ( SUBJ(#2,#3) & ~OBJ(#4,?) & VDOMAIN(#5,#2) & #4[incise]:#2[incise])
	CLOBJ[sentence=+,post=+](#4,#5)

// AB 2012.01.04 TESTING BELOW RULE :
//| SC[sc_s]{?*,FV{?*,#4[last]}};SC{?*,FV[indspeech]{?*,#4[last]}}, (NP;PP), PP*, adv*, SC{?*[coord:~,scbegin:~],NP, (PP), (adv;punct[comma])*, FV{#2[last]}} | 

//	if ( VDOMAIN(#5,#2) & #4[incise]:#2[incise] )
//	CLOBJ[sentence=+,post=+](#4,#5)

// Rule 353
// When the verb of the embedded clause is also under an SC chunk, the above rules do not work.
// The verb of the main clause is in a simple form.
// We check that the second SC is not started by a coordination conjunction.
// e.g. He told the judge he came yesterday
// e.g. He told the Constitution, however, that Vandiver has not been yet consulted.
// AB 2012.01.04 added ~NMOD for e.g. John's repeated efforts to help were in vain. *CLOBJ(repeated,help)
//| SC[sc_s]{?*,FV{?*,#4[last]}};SC{?*,FV[indspeech]{?*,#4[last]}}, (PP;NP[tempexpr])*, (punct[comma];adv)*, SC{?*[coord:~,scbegin:~],NP, (PP), (adv;punct[comma])*, FV{#2[last]}} | 
| SC[sc_s]{?*,FV{?*,#4[last]}};SC{?*,FV[indspeech]{?*,#4[last]}}, (NP;PP), PP*, adv*, SC{?*[coord:~,scbegin:~],NP, (PP), (adv;punct[comma])*, FV{#2[last]}} | 

	if ( VDOMAIN(#5,#2) & #4[incise]:#2[incise] & ~NMOD(?,#4) )
	CLOBJ[sentence=+,post=+](#4,#5)



// Rule 354
// Same rule as above when the verb of the main clause is in a complex form
// Or when the verb is a stand alone verb in the progressive form
// Constraint in order to verificate that the indspeech verb is in a verbal chain
// Avoids problems for : while emphasizing that details were not correct, .... *CLOBJ(emphasizing,were)
| NFV[sc_s]{?*,#4[last]};NFV[indspeech]{?*,#4[last]};
  IV[sc_s]{?*,#4[last]};IV[indspeech]{?*,#4[last]};
  GV[sc_s]{?*,#4[last]};GV[indspeech]{?*,#4[last]};
  FV[sc_s]{?*,#4[last]};FV[indspeech]{?*,#4[last]},?*[verb:~], 
  SC{?*[coord:~],NP, (PP), (adv;punct[comma])*, FV{#2[last]}}; 
  (NP,FV{?*,#2[last]}) | 
	if ( VDOMAIN(#5,#2) & #4[incise]:#2[incise] & VDOMAIN(#4,?) )
	CLOBJ[sentence=+](#4,#5)



// With verbs that are not INDSPEECH

// Rule 355
// If we found a THAT that is not linked to anything (it is not a relative pronoun but a complementizer)
// We have to find the main verb of this subclause, check if this verb is not coordinated and link this verb to
// the first main verb we find on its left
// e.g. Petitions request that the Republicans leave (the subcat feature on "request" are lost because of disambiguation)
| SC{?*,FV{?*,verb#1[last,indspeech:~,cop:~]}};NFV{?*,#1[last,indspeech:~,cop:~]};IV{?*,#1[last,indspeech:~,cop:~]};GV{?*,#1[last,indspeech:~,cop:~]}, ?*[verb:~,noun:~], SC{BG{conj#2[form:fthat]}, ?*, NP#3, ?*, FV{?*,#4[last]} } |
	if ( 
		~?(?,#2) &  
		( ( HEAD(#5,#3) & SUBJ(#4,#5) ) | ( HEAD(#7,#3) & QUANTD(#5,#7) & SUBJ(#4,#5) ) )
		& VDOMAIN(#6,#4) & ~COORD(?,#6) 
	)
	CLOBJ[post=+,sentence=+,unsafe=+](#1,#6)

// AB 2011.12.19 the rule above requires a "that"-complementizer, whereas it is not always obligatory, so the following rule deals with cases without "that". sc_s feature for verbs that can take a sentential complement
// e.g. The aim is to ensure (that) things stay on track.
| ?[verb]{?*, #1[verb,sc_s,indspeech:~,cop:~]}, NP#3, ?*[verb:~], FV{?*,#2[last]} |
  if ( ?(?,#2) & ( ( HEAD(#5,#3) & SUBJ(#2,#5) ) | ( HEAD(#7,#3) & QUANTD(#5,#7) & SUBJ(#4,#5) ) ) )
	CLOBJ[post=+,sentence=+,unsafe=+](#1,#2)

// Rule 356
// Same conditions as previous rule when there is a NP just before the SC containing the completive
// In this case the completive is a Noun modifier
| SC{?*,FV{?*,verb#1[last,indspeech:~]}};NFV{?*,#1[last,indspeech:~]};IV{?*,#1[last,indspeech:~]};GV{?*,#1[last,indspeech:~]}, ?*[verb:~],NP#8, SC{BG{conj#2[form:fthat]}, ?*, NP#3, ?*, FV{?*,#4[last]} } |
	if (
		~?(?,#2) &  
		( ( HEAD(#5,#3) & SUBJ(#4,#5) ) | ( HEAD(#7,#3) & QUANTD(#5,#7) & SUBJ(#4,#5) ) )
		& VDOMAIN(#6,#4) & ~COORD(?,#6) & HEAD(#9,#8)
	)	
	NMOD[post=+,sentence=+](#9,#6)

// The second line of condition is here in order to take into account the quantified subjects of the embedded clause
// e.g. ... that many of the elections are outmoded







//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// FTITH STAGE: 
// Final ADJUSTMENTS
//	- erasing the HEAD/2 dependency within an NP when this NP is contained by a PP
//	- refining VMOD/NMOD dependencies
//	- erasing bad OBJ or NUCL dependencies (embedded clauses that are not 
//	  introduced by any grammatical words in which the subject is taken as the object of 
//	  the clause on the left -- see examples in the rules).
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 357
// Erasing the HEAD/2 relation within an NP that is contained in a PP
// Verification that the prep is not a bad tagged particle
| PP{prep#4,NP#2} |
	if ( NUCL[particle](?,#4) & ^HEAD(#1,#2) )
	~

// Rule 358
// Deleting a bad NMOD dependency (apposition) when we find together SUBJ(V,N1) VMOD_PRE(V,N2) and NMOD_POST(N1,N2)
// In this case we delete the NMOD_POST dep.
// e.g. Before the night, John will come *NMOD[post](night,John)
if ( ^NMOD[post](#2,#1) & SUBJ(#3,#1) & VMOD[pre](#3,#2) )
	~

// Rule 359
// All NMOD dependency which source is a date (PP {in + DIG} ) are erased
| PP {prep[form:fin], NP[last]{dig#2[last]} } |
	if ( ^NMOD[post](#2,?)  )
	~


// Rule 360
// PP attachment when the PP is introduced by OF.
// Very few verbs subcategorize PP introduced by OF.
// If there is an NP between the verb and the PP[of], this PP will be a NMOD of the NP.
// Simple verbal forms
| SC{?*,FV{#1[verb,sc_pof:~]}}, ?*[verb:~], NP#2;PP#2, ?*[verb:~], PP#3{?*,prep[sc_pof]} |
	if ( HEAD(#4,#2) & HEAD(#5,#3) & NMOD(#4,#5) & ^VMOD(#1,#5) )
	~

// Rule 361
// Same rule as above with complex verbal forms
| SC{?*,FV{?*,#1[verb]}}, ?*,?{?*,#6[last,verb,sc_pof:~]}, ?*[verb:~], NP#2;PP#2, ?*[verb:~], PP#3{?*,prep[sc_pof]} |
	if ( VDOMAIN(#6,#1) & HEAD(#4,#2) & HEAD(#5,#3) & NMOD(#4,#5) & ^VMOD(#6,#5) )
	~

// Rule 362
// PP attachment when the PP is introduced by ABOARD
// We consider it is attached to a verb and not to a noun
// PLUTOT MODIFIEUR QUE ARGUMENT (apparait tres peu dans les cadres de sous-cat de comlex)
| SC{?*,FV{#1[verb]}}, ?*[verb:~], NP#2;PP#2, ?*[verb:~], PP#3{?*,prep[sc_paboard]} |
	if ( HEAD(#4,#2) & HEAD(#5,#3) & VMOD(#1,#5) &  ^NMOD(#4,#5)  )
	~

// Rule 363
// Same rule as above with complex verbal forms
| SC{?*,FV{?*,#1[verb]}}, ?*,?{?*,#6[last,verb]}, ?*[verb:~], NP#2;PP#2, ?*[verb:~], PP#3{?*,prep[sc_paboard]} |
	if ( VDOMAIN(#6,#1) & HEAD(#4,#2) & HEAD(#5,#3) & VMOD(#6,#5) & ^NMOD(#4,#5)  )
	~


// Rule 364
// In case of a bad chunking (preposition instead of particle) that has build a PP, the NUCL[particle] dependency may have been correct but the NP iniside of the (bad chunked) PP is not linked with anything.
// If this NP is a tempexpr, it is a VMOD/
// E.g. A lesson reinforced by the trappings of wealth left BEHIND LAST WEEK by despots
| PP#3{#2[prep]}, NP[tempexpr] |
	if ( NUCL[particle](#1,#2) & HEAD(#4,#3) )
	VMOD[temp=+,post=+](#1,#4)

// Rule 365
// If an NP is at the same time envolved in a SUBJ and in a OBJ or NUCL dependency and if there is no comma between the NP and the verb , the OBJ or NUCL dependencies are supressed
// e.g. He felt the skills of the Wild West could help protect kids from urban horrors. 
// -> SUBJ(could,skills) but *NUCL(felt, skills)
| FV{?*,#3[form:~fbe]}, ?*, NP#20, ?*[comma:~], FV |
	if ( HEAD(#20,#2) & SUBJ(#1,#2) & ^NUCL(#3,#2) )
	~


// Rule 366
// If a NP is at the same time involved in a NUCL dependency and a SUBJ dependency of a verb that is in a -ED form, then, we delete the SUBJ dependency and we create a NMOD[post,badchunk,badtag] between the NP and the -ED verb
// e.g. These are the sectors encompassed by the term Information technology
| NP#2, FV{verb#1[partpas,hmm_vpap,last]} |
	if ( HEAD(#3,#2) & NUCL(#4,#3) & #4 < #3 & ^SUBJ(#1,#3) )
	VMOD[post=+,badtag=+,badchunk=+](#3,#1)

// Rule 367
// If a NP is at the same time the SUBJ and the OBJ of a indspeech verb, and this NP is on the right of the verb, then we delete the SUBJ dependency and only keep the OBJ
if ( ^SUBJ(#1,#2) & OBJ(#1,#2) & #1 < #2)
	~

// Rule 368
// A dative pronoun has been taken as an OBJ. The following NP is not linked to any verb. 
// This following NP is also an object (direct object in this case)
// e.g. Cuba's election will give him new LEVERAGE for influencing council debates... -> OBJ(give,leverage)

| SC{?*,FV{?*,#1[last]}}; IV{?*,#1[last]} ; NFV{?*,#1[last]}, NP{pron#2[obl:+]}, NP#3 |
	if ( OBJ(#1,#2) & HEAD(#4,#3) & ~?(?,#4) )
	OBJ[post=+](#1,#4)


// Rule 369
// When we found two OBJ relations attached to the same verb and if one of them has the feature period:+, then it is deleted and
// transformed to a VMOD[temp] dependency
| SC{?*, FV{?*,#1[last]}}, ?*, NP{?*,noun#2[last,period]}, ?*, NP#3 |
	if ( HEAD(#4,#3) & VDOMAIN(#5,#1) & OBJ(#5,#4) & ^OBJ(#5,#2) )
	VMOD[temp=+](#5,#2)


// Rule 370
// If we have a PP introduced by FOR and that no dependency with this PP has been calculated
// (We considered that PP[for] are attached to a nominal head in the absence of subcategorization information)
// The we attached this PP to the nearest verb on its left
// e.g. What did Shostakovich write for Rostropovich ?
| SC{?*,FV{?*,#2[last]}}; IV{?*,#2[last]} ; NFV{?*,#2[last]}, ?*[verb:~],PP#1{prep[form:ffor], NP} |
	if ( HEAD(#3,#1) & ~?(?,#3) )
	VMOD[post=+](#2,#3)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Verbs that can have predicative modifiers
// e.g. It makes the boy happy.
// e.g. It makes the boy a man etc.
// 
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



// Rule 371
// If an AP is not connected to anything and if this AP follows a NP that follows a verb with
// feature sc_np_adjpred
// Then the adjectival head of this AP is connected to the verb as OBJCOMPL
// e.g. It makes the girl happy OBJ(makes,girl) OBJCOMPL(makes,happy)
| SC{?*,FV{?*,#2[last,sc_np_adjpred]}};FV{?*,#2[last,sc_np_adjpred]};IV{?*,#2[last,sc_np_adjpred]};NFV{?*,#2[last,sc_np_adjpred]};GV{?*,#2[last,sc_np_adjpred]}, ?*, NP#1, (PP;SC;adv)*, AP#4 |
	if ( HEAD(#3,#1) & OBJ(#2,#3) & HEAD(#5,#4) & ~NMOD(?,#5) & ~ATTRIB(?,#5) )
	OBJCOMPL[post=+](#2,#5)



// Rule 372
// Same as above when the NP is a dative pronoun
// e.g. It makes her happy
// In this case there is a tagging and chunking error as there is an unique NP containing "her happy"
| SC{?*,FV{?*,#2[last,sc_np_adjpred]}};FV{?*,#2[last,sc_np_adjpred]};IV{?*,#2[last,sc_np_adjpred]};NFV{?*,#2[last,sc_np_adjpred]};GV{?*,#2[last,sc_np_adjpred]}, ?*, NP{pron#9[p3,gen,sg],AP{?*,adj#5[last]}} |
	if ( ^OBJ(#2,#5) )
	OBJCOMPL[post=+,badchunk=+](#2,#5),
	OBJ[post=+,badchunk=+](#2,#9).



// Rule 382
// Same as above but when the verb has feature sc_np_nppred (2 NPs)
// When the verb has feature sc_np_nppred is followed by 2 NP's
// e.g. He considered him (as) a fool
| SC{?*,FV{?*,#2[last,sc_np_nppred]}}
		;FV{?*,#2[last,sc_np_nppred]}
		;IV{?*,#2[last,sc_np_nppred]}
		;NFV{?*,#2[last,sc_np_nppred]}
		;GV{?*,#2[last,sc_np_nppred]}
 , ?*, NP#1, (PP;SC;adv)*, NP#4;PP#4{prep[lemme:as]} |
	if ( HEAD(#3,#1) & OBJ(#2,#3) & HEAD(#5,#4) & (^OBJ[post](#2,#5) | ^NMOD[appos](#3,#5) | ~?(?,#5) ) & 
		// second NP head is a noun denoting a person or an adjective 
		// see "He found her a job vs. He found her a nice person
		(#5[noun:+,c_person:+] | #5[adj:+]) )
	OBJCOMPL[post=+,appos=~](#2,#5)




// Rule 374
// If we have at the same time a VMOD and and OBJCOMPL between the same arguments,
// Then we delete the VMOD
// e.g. He considered him as a fool
if ( OBJCOMPL[post](#1,#2) & ^VMOD[post](#1,#2) )
	~



// Rule 375
// If we have a verb in passive form, that has also an OBJ[post] complement and if this verb bears the feature sc_np_nppred
// Then this OBJ is not an OBJ but an OBJCOMPL
// e.g. He was considered a fool
if ( VDOMAIN[passive](#1[sc_np_nppred],#2) & ^OBJ[post](#1,#3) )
	OBJCOMPL[post](#1,#3)



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// THAT : Giving functions to this word 
//	1) CONNECTOR_COMPLTHAT dependency between the verb of a completive and the "THAT" that introduces it
//	2) SUBJ dependency when the verb of the embedded clause has no subject
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 376
// If we have a that that is not linked to anything and if the clause introduced by this "THAT" is in a CLOBJ relationship with
// a preceeding verb, then, "THAT" is a complementizer
// 5th February. I think that this rule is obsolete . Check
| SC{BG{#1[form:fthat]}, ?*[verb:~], FV{?*,#2[last]}} |
if ( VDOMAIN(#3,#2) & CLOBJ(#4,#3) & ~?(#1,?) )
	CONNECTOR[complthat=+](#1,#3)

// Rule 377
// If we have a "that" or a "who" that is not linked to anything and if the following verb has no subject, then, "that" or "who" is the subject of this verb (relative pronoun in this case)
| SC{BG{#1[form:fthat]};BG{#1[form:fwho,nom]}, ?*[verb:~], FV{?*,#2[last]}} |
	if ( ~SUBJ(#2,?) & ~?(#1,?) )
	SUBJ[relativ=+,pre=+](#2,#1)


// Rule 378
// If we have a who which is linked as subject (without relativ feature) to a verb just on its right
// if this verb is followed by a pronoun/conj that introduces another sentence 
// Then we add the feature relativ:+
| SC{BG{#1[form:fwho,nom]}, ?*[verb:~], FV{?*,#2[last]}} |
	if ( ^SUBJ[relativ:~](#2,#1) )
	SUBJ[relativ=+,pre=+](#2,#1)


// Rule 379
// Case of a noun completive
// They gave no evidences that the investigation succeeded."
// In this case that is not linked to anything and is preceeded by a NP which has a NMOD[sentence,post] modifier
| SC{BG{#1[form:fthat]}, ?*, FV{?*,#2[last]} } |
	if (
		~?(#1,?) &
		VDOMAIN(#3,#2) & NMOD[sentence,post](#4,#3) &
		SUBJ(#2,#5) )
	CONNECTOR[complthat=+](#1,#3)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//  
// OBJ NMOD and  VMOD with feature infinitive:+ 
// 
// REVOIR ICI pour la nomenclature des dependances
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// ATTENTION, infinitive avec passive et sans passive
// I like to wash the car v.s. I like to be washed
// X-comp subjects



// Rule 383
// Case of an Object infinitive subcategorized by a verb (feature sc_np_toinf is present in the verb).
// In this case there is a NP before the infinitive
// e.g. He forces the man to play
// Note that the inbetween NP is both an object of the main verb and a subject of the infinitive.
// e.g. He forces the man to play -> OBJ(forces,man) AND SUBJ(play,man)
// This rule does not take an infinitive in the passive form, so we avoid this rule to be applied in "I like the car to be washed."
// The constraint on VMOD[wh,pre] avoids us to take infinitives in embedded subclauses following the first clause.
// NOTE: 17th may, these verbs are object control verbs.
// Destruction of an erroneous NMOD dependency between the NP object / control subject and the infinitive
// negation on sc_toinf:~ avoids to take as a subject "Peter" in He promised Peter to go *SUBJ(go,Peter) but SUBJ(go,he).
| SC{?*, FV{?*,#1[last, sc_np_toinf, cop:~,form:~flike]}};IV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]};GV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]}; NFV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]},NP#4, (PP;SC)*, IV{(adv), (prep[form:finfto]), (adv), verb#2[last]} |
	if (  HEAD(#5,#4) & ~VMOD[wh,pre](#2,?) & ^NMOD[infinit,post](#5,#2) ) 
	SUBJ[nfinit=+,pre=+,infinit=~,post=~](#2,#5),
	OBJ[post=+,infinit=+](#1,#2).

// same rule when the NP inbetween is a personal pronoun
// allow him to leave. 
// in this case the NP "him" is not linked to the infinitive by NMOD[infinit,post], so the previous rule did not apply
| SC{?*, FV{?*,#1[last, sc_np_toinf, cop:~,form:~flike]}};IV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]};GV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]}; NFV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]},NP#4[tempexpr:~], (PP;SC)*, IV{(adv), (prep[form:finfto]), (adv), verb#2[last]} |
	 if ( HEAD(#5,#4) & ~VMOD[wh,pre](#2,?) & ~OBJ[post,infinit](#1,#2) )
	 SUBJ[nfinit=+,pre=+](#2,#5),
	 OBJ[post=+,infinit=+](#1,#2).



// Rule 380
// Case of an object infinitive subcategorized by a verb (feature sc_toinf is present in the verb)
// Deletes erroneous NMOD or VMOD dependencies if they exist 
// e.g. He likes to wash cars
// Add a SUBJ_NFINIT dependency between the verb of the infinitive and the subject of the upper clause, when the verb of the infinitive is not in the passive form
| SC{?*, FV{?*,#1[last, sc_toinf,cop:~]}};?[verb]{?*,#1[last,sc_toinf,cop:~]}, 
  IV{(adv), (prep[form:finfto]), (adv), verb#2[last]} |
	if (  
	     ( SUBJ[!features:!](#1,#7) | VDOMAIN(#1,#3) & SUBJ(#3,#7) ) 
	      & 
	      (^VMOD(#1,#2) | ( ^NMOD(#3,#2) & #1 < #3) | VDOMAIN(?,?) | MAIN(?) )  
	   )
	OBJ[post=+,infinit=+](#1,#2),
	SUBJ[nfinit=+](#2,#7).


// e.g. He likes to be washing cars
| SC{?*, FV{?*,#1[last, sc_toinf,cop:~]}};?[verb]{?*,#1[last,sc_toinf,cop:~]}, 
  IV{(adv), (prep[form:finfto]), verb[form:fbe], verb#2[vprog,last]} |
	if (  
	     ( SUBJ[!features:!](#1,#7) | VDOMAIN(#1,#3) & SUBJ(#3,#7) ) 
	      & 
	      (^VMOD(#1,#2) | ( ^NMOD(#3,#2) & #1 < #3) | VDOMAIN(?,?) | MAIN(?) )  
	   )
	OBJ[post=+,infinit=+](#1,#2),
	SUBJ[nfinit=+](#2,#7).

// Rule 381
// Same rule as above when the verb that subcategorizes the infinitive is in a complex form
// Deletes erroneous NMOD or VMOD dependencies if they exist
// Add a SUBJ_CONTRL dependency between the verb of the infinitive and the subject of the upper clause, when the verb of the infinitive is not in the passive form
| SC{?*, FV{?*,#1[last,cop:~]}}, ?*, ?{?*,#5[verb,last,sc_toinf,cop:~]}, IV{(adv), (prep[form:finfto]), (adv), verb#2[last]} |
	if ( VDOMAIN(#5,#1) & SUBJ(#1,#7) & (^VMOD(#5,#2) | ( ^NMOD(#6,#2) & #5 < #6 ) | MAIN(?)) & ~OBJ(#5,#2) & (~OBJ(#5,?) | COORD(?,#2) ) )
	OBJ[post=+,infinit=+](#5,#2),
	SUBJ[nfinit=+](#2,#7).



// Rule 382
// Case of an object infinitive subcategorized by a verb (feature sc_toinf is present in the verb)
// The verb of the infinitive is in the passive form
// In this case an implicit subject with feature passive is created between the verb of the infinitive and the subject of the main clause
| SC{?*, FV{?*,#1[last, sc_toinf,cop:~]}}, IV{(adv), prep#4[form:finfto]} |
	if (  SUBJ(#1,#7) & PREPD(#4,#2) & NUCL[passive,vlink](?,#2) & (^VMOD(#1,#2) | ( ^NMOD(#3,#2) & #1 < #3) | MAIN(?))  )
	OBJ[post=+,infinit=+](#1,#2),
	SUBJ[passive=+,nfinit=+](#2,#7).


// Rule XXX
// case of an isolated ing-form,which subcategorizes an infinitive and followed by this infinitive
| GV{?*,#1[last,vprog,sc_toinf]}, (NP;adv), IV{?*,prep[form:finfto], #2[last]} |
  if ( ~OBJ[infinit](#1,#2) )
  OBJ[post=+,infinit=+](#1,#2)




// Rule 384
| SC{?*, FV{?*,#1[last, form:fwant]}};IV{?*,#1[last,lemme:want]};GV{?*,#1[last,form:fwant]}; NFV{?*,#1[last,form:fwant]},NP#4, (PP;SC)*, IV{(adv), (prep[form:finfto]), (adv), verb#2[last]} |
	if (  HEAD(#5,#4) & ~VMOD[wh,pre](#2,?) & ^NMOD[infinit,post](#5,#2) ) 
	SUBJ[nfinit=+,pre=+,infinit=~,post=~](#2,#5)

// Rule 385
// Correction of errors when we have a control subject followed by an infinitive which has a subject
// e.g. He wants Peter to go home. 
// *OBJ(wants,Peter)
// SUBJ(go,Peter) and Peter is not a controlled subject but a "normal subject"
// Destruction of an erroneous NMOD dependency between the NP object / control subject and the infinitive
if ( OBJ[post](#1[obj_cont:~,subj_cont:+],#2) & ^SUBJ[contrl](#3,#2) )
	SUBJ[contrl=~,pre=+,nfinit=+](#3,#2)



// Rule 386
// Case of an Object infinitive subcategorized by a verb used in the passive form.
// e.g. The bill is designed to provide special schooling for children.
// If the verb is in the passive form AND if it has feature sc_np_toinf AND if it is followed by an infinitive with to, then this infinitive is attached to the verb in the passive form and the subject of the passive verb is a control subject of the infinitive
| NFV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]}, IV{(adv), ((adv), prep[form:finfto]), (adv), verb#2[last]} |
	if (  VDOMAIN[passive](#1,#6) & ~VMOD[wh,pre](#2,?) & SUBJ(#6,#7) )
	SUBJ[contrl=+](#2,#7),
	OBJ[post=+,infinit=+](#1,#2).

// AB 2012.01.05 e.g. The risk of John being forced to come.
| GV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]}, IV{?*, verb#2[last]} |
  OBJ[post=+,infinit=+](#1,#2).
//	if (  VDOMAIN[passive](#1,#6) & ~VMOD[wh,pre](#2,?) & SUBJ(#6,#7) )
//	SUBJ[contrl=+](#2,#7),
//	OBJ[post=+,infinit=+](#1,#2).




// Rule 387
// If we have a verb just followed by an infinitive introduced by to, and that this infinitive is not linked to anything, then we create
// A VMOD[infinitive:+] between the first verb on the left and this infinitive
// ATTENTION ICI. Le verbe auquel se rattache l infinitive peut ne pas etre le premier a sa gauche si il s agit par exemple d une relative accrochee a un NP de la proposition precedante e.g. He told the girl that you admire to go home *VMOD(admire,go)
// Mais probleme si on a : I like the car that needs to be washed. *VMOD(like,washed) et pas VMOD(needs,washed)
| SC{?*,FV{?*,verb#8[last,sc_toinf,cop:~]}};NFV{?*,verb#8[last,sc_toinf,cop:~]};IV{?*,verb#8[last,sc_toinf,cop:~]};GV{?*,verb#8[last,sc_toinf,cop:~]},?*[verb:~],SC{?*,FV{?*,verb#1[last]}}; NFV{?*,verb#1[last]}; IV{?*,verb#1[last]}; GV{?*,verb#1[last]}, adv*, IV{(adv), prep[form:finfto], ?*, verb#2[last]} |
	if ( ~VMOD(#1,#2) & ~OBJ(#1,#2) & VDOMAIN(#9,#8) )
	VMOD[post=+,infinit=+](#9,#2)

// AB 2012.06.04 a verb followed by an infinitive, with no other intervening verb, and no verb to the left, 
// governs the infinitive. contrary to the above rule, the governor does not have the sc_toinf feature
// e.g. people gather to discuss the events VMOD(gather,discuss)
| ?*[verb:~], SC{?*,FV{?*,verb#8[last]}};NFV{?*,verb#8[last]};IV{?*,verb#8[last,cop:~]};GV{?*,verb#8[last]},?*[verb:~], adv*, IV{(adv), prep[form:finfto], ?*, verb#2[last]} |
	if ( ~VMOD(#1,#2) & ~OBJ(#1,#2) & VDOMAIN(#9,#8) )
	VMOD[post=+,infinit=+](#9,#2)

// AB 2012.06.04 same as above, but with possible parenthetical
// e.g. people gather, so they say, to discuss the events
| ?*[verb:~], SC{?*,FV{?*,verb#8[last]}};NFV{?*,verb#8[last]};IV{?*,verb#8[last,cop:~]};GV{?*,verb#8[last]},?*[verb:~], ?*[incise], ?*[verb:~], IV{(adv), prep[form:finfto], ?*, verb#2[last]} |
	if ( ~VMOD(#1,#2) & ~OBJ(#1,#2) & VDOMAIN(#9,#8) )
	VMOD[post=+,infinit=+](#9,#2)

// Rule 388
// In V NP VINFTO when V has both feature sc_toinf and sc_np_toinf (e.g. promise), then we take the subject of the infinitive is the subject of V
// e.g. He promised Peter to go -> SUBJ(go,he).
| SC{?*, FV{?*,#1[last, sc_np_toinf, sc_toinf, cop:~,form:~flike, form:~fwant]}};IV{?*,#1[last,sc_np_toinf,cop:~,form:~flike,form:~fwant]};GV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]}; NFV{?*,#1[last,sc_np_toinf,cop:~,form:~flike]},NP#4, (PP;SC)*, IV{(adv), (prep[form:finfto]), (adv), verb#2[last]} |
	if (  HEAD(#5,#4) & ~VMOD[wh,pre](#2,?) & ^NMOD[infinit,post](#5,#2) & VDOMAIN(#10,#1) & SUBJ(#10,#11) ) 
	SUBJ[nfinit=+,pre=+,infinit=~,post=~](#2,#11)



//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Noun Modifiers and Relative clauses
// With or without relative pronouns
// 
// NMOD[relativ:+] when the Nmodifier is a relative clause 
// 
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 389
// Relative clause with or without without relative pronoun when this relative clause is between before the first verb of the main sentence
// e.g.The largest hurdle the Republicans would have to face is a state law.
// e.g. The judge that you admire came yesterday
// e.g. The man to whom I spoke is my cousin
| SC[startbis]{NP#1[tempexpr:~], (punct[comma]), (prep), SC{?*, FV{#3[last]}} } |
	if ( HEAD(#2,#1) & SUBJ(#6,#2) & SUBJ(#3,?) & #3 < #6 & VDOMAIN(#4,#3) )
	NMOD[post=+,relativ=+,sentence=+](#2,#4)
//	NMOD(#1,#1,#1,#1)


// Rule 390
// Relative clause introduced by some relative pronoun when the antecedant is in some syntactic  relation with some verb (subjcompl, obj a vmodifier) and when the relative and its antecedant are contiguous.
// e.g. The largest hurdle the Republicans would have to face is a law which says that alternatives must be taken 
// -> NMOD_POST_RELATIVE_SENTENCE (law, says)
| NP#1;PP#1, (punct[comma]), SC{BG{?*,pron#5[rel]}; BG{?*,pron#5[wh]}; BG{?*,conj#5[form:fthat]}; BG{PP[rel]{?*,#5[last]}} } |
	if (	HEAD(#2,#1) 
//		& 
//		( NUCL[subjcompl](#3,#2) | OBJ(#3,#2) | VMOD(#3,#2) ) 
		& 
		SUBJ[relativ](#6,#5)  & VDOMAIN(#7,#6) )
		NMOD[post=+,relativ=+,sentence=+](#2,#7)



// Rule 391
// Same as above when the relativ pronoun is either object or verb modifier of the verb of the relative clause
// e.g. It is the law that he likes (law, likes)
// e.g. This is the law for which he was waiting
| NP#1;PP#1, (punct[comma]), (prep), SC{BG{?*,pron#5[rel]};BG{?*,pron#5[wh]};BG{?*,conj#5[form:fthat]};BG{PP[rel]{?*,#5[last]}} } |
	if (	HEAD(#2,#1)  & ( VMOD[relativ](#7,#5) | OBJ[relativ](#7,#5) ) )
		NMOD[post=+,relativ=+,sentence=+](#2,#7)





// Rule 392
// Relative clauses introduced by WHOSE
// e.g. The process, whose John was the inventor...
// e.g. The process, whose inventor Mary loves ....
| NP#1, (punct[comma]), NP{pron#2[form:fwho,gen]}  |
	if ( DETD(#3,#2) & HEAD(#4,#1) & ( OBJ(#5,#3) | ( SUBJ(#6,#3) & VDOMAIN(#6,#5)) ) )
	NMOD[post=+,relativ=+,sentence=+](#4,#5)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Verbs in progessive form. Continuation (partially treated when they occur at the beginning or
// at the end of a sentence)
// DEFAULT for PP attachment
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 393
// VMOD dependency between a gerundive verb and a contiguous PP
// e.g. He was drafted into the army after dropping out of college -> VMOD(dropping,college)
| GV[prog]{?*,verb#1}, PP#2 |
	if ( PREPD(?,#1) & HEAD(#4,#2) )
	VMOD[post=+,gerund=+](#1,#4)







//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// VMOD and NMOD when the modifier is a verb in a progressive form introduced by 
// a preposition
// NOTE: PREPD relations with progressive have to be calculated before
// NMOD dependencies between past-participle and nouns when these past participle
// have been disambiguated as finite verbs 


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 394
// EN COURS
// VMOD dependency between a verb and a progressive form introduced by a preposition when the finite verb or auxiliary is under an SC node
// AB 2012.01.04 verb is not NMOD e.g. John's repeated commitment to helping children *VMOD(repeated,helping)
| SC{?*, FV{?*,#1[last]} }, (NFV);(IV{?[prep:~]});(GV), ?*[verb:~], prep#2, GV[prog]{?*,#3[last]} |
	if ( VDOMAIN(#4,#1) & (~?(?,#3) | COORD(?,#3) ) & ~NMOD(?,#4) )
	VMOD[post=+,gerund=+](#4,#3)

// Rule 395
// Same as above when the verb is not under SC (non finite form)
// e.g. Saving them from coming... 
// AB 2012.01.04 verb is not NMOD e.g. John's repeated commitment to helping children *VMOD(repeated,helping). Also added verb cat to #1[last] as the structure without this matched an SC
| ?[verb]{?*,verb#1[last]}, ?*[verb:~], prep#2, GV[prog]{?*,#3[last]} |
	if ( ~?(?,#3) | COORD(?,#3) & ~NMOD(?,#1) )
	VMOD[post=+,gerund=+](#1,#3)

// Rule 396
/ Relation between the head of an NP and a verb in the progressive form linked to a preposition. \
/Excluding prepositional chunks introduced by "by" \
// The test on feature "incise" avoid to take as noun post modifier something that is part of a following comment clause.
// See comment next rule 
// e.g. It will give him new leverage for influencing council debates
// AB 2011.12.13 added pron:~ to NP to stop NMOD on pronouns, added PP (e.g. the risk of the government being forced to wait) NMOD(risk,forced)
| NP#3{?[last,quant:~,num:~,numer:~,pron:~]};PP#3{?*,NP{?[last,quant:~,num:~,pron:~]}}, ?*[verb:~], prep;PP, GV[prog]{?*,#2[last]}| 
	if ( HEAD(#1,#3)  & ( ~?(?,#2) | COORD(?,#2) | VMOD[post](?,#2) )  & #3[incise]:#2[incise] )
	NMOD[post=+](#1,#2)



// Rule 397
// The preceding rule is duplicated in order to take into account the following problems:
// In the above rule, the first NP has only one constituent and it cannot be a quantifier "some of them" or a numeral "two of them"
// In this rule, the head of the NP can be a quant or a numeral but in this case the NP has at least two constituents "an estimated 8 million"
// AB 2012.01.04 added PP (e.g. the risk of the government being forced to wait) NMOD(risk,forced)
| NP#3{?,?*,?[last]};PP#3{?*,NP{?,?*,?[last]}}, ?*[verb:~], prep;PP, GV[prog]{?*,#2[last]}| 
	if ( HEAD(#1,#3)  & #3[incise]:#2[incise] & (~?(?,#2) | VDOMAIN(?,#2) | COORD(?,#2) | VMOD[post](?,#2) ) )
	NMOD[post=+](#1,#2)


// Rule 398
// Relation between the head of a NP and a past participle which is a post-modifier
// when this past-participle has received the tag finite verb (error of the HMM).
// WE ASSUME HERE THAT THIS RELATION IS ESTABLISHED WITH THE NEAREST (on the left) NOMINAL HEAD
// MAYBE NOT THE CASE
| NP#1;PP#1, FV{verb#2[partpas,last]} |
	if ( ~SUBJ(#2,?) & HEAD(#3[pronpers:~],#1) )
	NMOD[post=+,pastpart=+](#3,#2)


// AB 2012.01.04 chose between VMOD and NMOD post-modifiers in certain cases (restrict to gerund:+ for now)
// e.g. This shows the risk of being caught. *VMOD(shows,caught) and NMOD(risk,caught)
| NP#4, prep[form:fof] |
if ( HEAD(#1,#4) & NMOD[post](#1,#2) & ^VMOD[post,gerund](#3,#2) & OBJ(#3,#1) )
   ~

// Prep + Gerund.....

// Rule 399
// When we found a preposition followed by a gerundive verb
// If neither the preposition, nor the gerundive verb are attached to anything
// The preposition has to be linked to the gerundive verb
// Note at the beginning or at the end of the sentence these cases are already treated
| #1[lemme:after];#1[lemme:before], GV[prog]{?*,verb#2[last]} |
	if ( ~PREPD(#1,#2) & ~NUCL[particle](?,#1) & ( ~?(?,#2) | VMOD(?,#2) | NMOD(?,#2) | COORD(?,#2) | NUCL[vlink](?,#2)) )
	CONNECTOR[badtag=+,subord=+](#1,#2)



// Rule 400
// If we have the sequence PREP GV NP FV, The NP has been taken as object of the GV (rule of objects).
// If the FV does not have any post subject, then the NP is not an object but a subject of the FV
| prep#1, GV, NP#3, FV{?*,#5[last]} |
	if ( CONNECTOR[badtag,subord](#1,#2) & HEAD(#4,#3) & ^OBJ(#2,#4) & ~SUBJ(#5,?) )
	SUBJ[features=~,pre=+](#5,#4)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Subordinated embedded clauses introduced by a WH- that are not relative clauses


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 401
// When the sentence starts with a temporal embedded clause.
// In this case, the verb of the embedded clause is a vmod[sentence,pre,temp] of the verb of the main clause
// e.g. When the shouting ended , the bill passed.
|  SC[startbis]{#1[wh],NP}, ?*[verb:~], SC{?*,FV{?*,#2} } |
	if ( ^VMOD[pre,wh,!features:!](#4,#1) & VDOMAIN(#3,#2) )
	VMOD[sentence=+](#3,#4),
	CONNECTOR(#4,#1)




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//				LAST ADJUSTMENTS 
// Filtering of erroneous dependencies
// Infinitive control
// Adding features on VMOD or NMOD dependencies
// Chunks that have been left alone. Try to do something with them
// 
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



// Rule 402
// We have a PP followed by comma followed by an NP and the PP is at the same time a modifier of a following verb and the head of an NMOD[post] dependency with its following NP, which is the subject of a verb
// In this case, we delete the NMOD[post] dependency
| PP#1, punct[comma], NP#2 |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ^NMOD[appos,post](#3,#4) & SUBJ(?,#4) & VMOD[pre](?,#3) )
	~


// Rule 403
// When an mistagged adverb has been taken as a subject 
// e.g. They first suggested ... *SUBJ(suggested, first)
| NP#1, SC{NP{#5[first,last,form:fone]}, FV{?*, #3[last,verb]}} |
	if ( HEAD(#2,#1) & ~SUBJ(?,#2) & ~OBJ(?,#2) & ~VMOD(?,#2) & VDOMAIN(#4,#3) & ^SUBJ(#3,#5) )
	SUBJ(#3,#2),
	VMOD[pre=+](#4,#5).


// Rule 404
// If we have a SUBJCOMPL dep. between "go" and "home" we transform it into a VMOD dependency
if ( ^NUCL[subjcompl](#1[form:fgo], #2[form:fhome]) )
	VMOD[post=+,subjcompl=~](#1,#2)


// Rule 405
// Chunking error when a day of the week is wrongly included into an object NP chunk
| NP{?*,noun#1,noun#2[time,period]} |
	if ( OBJ[badchunk](?,#1) & VMOD[badchunk](?,#2) & ^$1(#2,#3) )
	$1(#1,#3)



// Rule 406
// When we have two incompatible dependencies CLOBJ[sentence] and OBJ[infinit,post] from the same verb
// Explanation
// e.g He told Mary to leave -> OBJ(told,Mary) and OBJ[infinit,post](told,leave)
// VS He told Mary he came yesterday -> OBJ(told,Mary) and CLOBJ[sentence](told,came)
// We cannot have both CLOBJ[sentence] AND OBJ[infinit,post] so in cases like
// He told Mary you admire to leave
// For which both OBJ[infinit,post](told,leave) AND CLOBJ[sentence](told,admire) have been constructed, we have
// to choose that the correct one is the OBJ[infinit](told,leave) and to destroy CLOBJ(told,admire)
// Note that the verb that was linked as CLOBJ has to be linked as modifier of a noun.
if ( OBJ[infinit,post](#1,#2) & SUBJ[contrl](#2,#3) & ^CLOBJ[sentence](#1,#4) )
	NMOD[post:+](#3,#4)





// Rule 407
// BAD CHUNKING, trying to correct
// If we find a verb that :
// 1) has no subject
// 2) Is preceeded by a PP which is a VMOD[pre] of this verb
// 3) The last lexical element has noun:+ and the one before has also noun:+
// THEN the last lexical element is very probably the subject of the verb (the PP was bad chunked)
// e.g. In the future Fulton County should receive some portion.... *(PP in the future Fulton County)
// but (PP In the future) (NP Fulton County) 
| PP#4{prep,NP{?*,#6[noun:+], #5[noun:+,last]}}, ?*, FV{?*,#1[last]} |
	if ( ~SUBJ(#1,?) & VDOMAIN(#2,#1) & VMOD[pre](#2,#5) )
	SUBJ[badchunk=+,deduced=+](#1,#5)



// Rule 408
// After application of the rule above, if we have a SUBJ[badchunk] dependency between a verb and a dependent, then all dependencies that are constructed with the same dependent are corrected.
// e.g. In the future Fulton County should receive some portion.... with SUBJ[badchunk](should,Fulton County)  and *VMOD(receive,Fulton County) and *PREPD(In,Fulton County).
// After application of this rule, we destroy the bad VMOD and PREPD dependency (above) and construct VMOD(receive,future) and PREPD(In,future).
| PP{prep, NP{?*,#6[noun:+], #5[noun:+,last]}} |
	if ( SUBJ[badchunk](?,#5) & ^?[badchunk:~](#1,#5) )
	?[deduced=+,badchunk=+](#1,#6)





// Rule 409
// If we have found a badchunk in NP with temporal expressions (that are chunked in 2 different NP's)
// 1) The relation NMOD[pre,badchunk,temp] have been constructed between the temporal expression and the "real NP head"
// SO, all the dependencies in which the temporal expression is a dependent (except for this NMOD[pre] dependency) have to be changed with the real nucleus of the NP
if ( NMOD[pre,badchunk,temp](#1,#2) & ^?[badchunk:~](#3,#1) )
	?[badchunk=+](#3,#2)



// Rule 410
// If we find a verb, that has no subject, that has a VMOD[pre] introduced by a word that could be either a preposition or a subordination conjunction (feature hmm_cosub), then, we consider that it is a chunking/tagging error
// e.g After Al Paschal gruonded out, Jay Cooke walked and Jim McDaniel singled home McAuliffe. *VMOD[pre](gruonded,Al Paschal)
| PP#1{prep[hmm_cosub], NP}, ?*[verb:~], FV{?*,#2[verb]} |
	if ( HEAD(#3,#1) & ~SUBJ(#2,?) & VDOMAIN(#4,#2) & ^VMOD[pre](#4,#3) )
	SUBJ[badchunk=+,badtag=+](#2,#3)




// Rule
// If we have an infinitive verb introduced by TO that is at the same time 
// a NMOD_POST_INFINIT (of a noun) and a VARG_POST_INFINIT of some finite verb
// AND If the noun follows the finite verb
// AND If the verb has feature indspeech:+ (order, say, agree etc.)
// Then we prefer to have the VMOD dependency 
//| verb#2[last,indspeech] |
//	if ( NMOD[post,infinit](#1,#3) & ^VARG[post,infinit](#2,#3) & (#2 < #1) )
//	~

// Rule 411
// If we have an infinitive verb introduced by TO that is at the same time 
// a NMOD_POST_INFINIT (of a noun) and a VARG_POST_INFINIT of some finite verb
// AND If the noun follows the finite verb
// Then we prefer the nearest dependency ( i.e. the NMOD dependency).
// Note: Before of previous rule, we know that the verb is not an indspeech verb
// e.g. I like the car to wash VS I like to wash the car.
// ATtention s il s agit d un NMOD[post,infinit] qui se rapporte au noyau d un complt agent introduit par BY, alors
// on va preferer le VARG (restriction on AGENT dependency)
if ( NMOD[post,infinit](#1,#3) & ^VARG[post,infinit](#2,#3) & ~AGENT(?,#1) & (#2 < #1) )
	~	

// Rule 412
// If we have an infinite verb introduced by TO that is at the same time an NMOD_POST_INFINIT
// and a VARG_POST_INFINIT of some finite verb (that subcategorizes possibly an infinitive)
// AND if the NMOD dependency is on the head of an agent complement
// Then we prefer the VARG dependency and the NMOD dependency is deleted
// e.g. He had been charged by John to investigate the case -> VARG(charged,investigate) only
if ( ^NMOD[post,infinit](#1,#3) & VARG[post,infinit](#2,#3) & AGENT(?,#1) & (#2 < #1) )
	~



// Rule 427
// If there is a VARG[infinit] dependency between a verb and an infinitive.
// If there is an OBJ dependency between the same verb (first) and an NP
// If the infinitive has no subject and the OBJECT of the first verb is on the left of the infinitive
// THEN, the NP involved in the OBJ dependency is in fact the subject of the infinitive
// REVOIR
| SC{?*, FV{?*,#1[last]} }, ?*[verb], NP#2, IV[inf]{prep[form:finfto],#3[verb] } |
	if ( VDOMAIN(#5,#1) & VARG[infinit](#5,#3) & HEAD(#4,#2) & ^OBJ(#5,#4) )
	SUBJ[features=~](#3,#4)


// Rule 428
// Destruction of a NMOD[infinitive] attachement to a noun that expresses time if there is another NMOD[infinit] relation
| NP#1;PP#1 |
	if ( HEAD(#2,#1) & ^NMOD[infinit,post](#2,#3) & VMOD[temp,post](#4,#2) & NMOD[infinit,post](#5,#3) & ( #5 < #2 | #2 < #5 )  )
	~

// Rule 429
// Same as above when there is a VMOD together with NMOD[infinit] involving a noun expressing time
// He resigned tuesday to go .....
| NP#1;PP#1 |
	if ( HEAD(#2,#1) & ^NMOD[infinit,post](#2,#3) & VMOD[temp,post](#4,#2)  )
	VMOD(#4,#3)



// Rule 430
// Deleting a bad OBJ[post,nfinit] when the second argument is also attached to another verb that is on the right of the first one
// e.g. I said she promised to leave OBJ[sentence](said,promised), OBJ[post](promised,leave) *MOD[post](said,leave)
if ( CLOBJ[post](#1,#2) & OBJ[post](#2,#3) & ^VMOD[post,infinit](#1,#3) )
	~

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
// Lexical units that have been left alone or that duplicate another syntactic 
// function
// Trying to do something with them
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 427
// Stand-alone AP after a copula within an embedded sentence introduced by a WH with subject function
// The general rule has not applied because of the WH-
// e.g. The men who are very nice ....  "nice" has to be linked with "are"
| SC{BG{#1[wh]}, FV}, ?*, AP#2;NP#2 |
	if ( SUBJ[relativ](#3,#1) & VDOMAIN(#4[form:fbe],#3) & HEAD(#5,#2) & ~?(?,#5) )
	NUCL[subjcompl=+](#4,#5)


// Unattached verb[partpas] (under a TOP node) or mistagged adj[partpas] that are modifiers of some noun



// Problems with past-participle forms

// Rule 433
// Past participle that have been reshuffled
| NP#1, ?*[verb:~,noun:~], verb#2[partpas] |
	if ( HEAD(#3,#1) & ~?(#2,#3) & ~?(#3,#2) )
	NMOD[post=+,pastpart=+](#3,#2)


// Rule 434
// PAST-PARTICIPLE (tagged as finite verb) that is left alone
// When a past participle modifies a noun on its left
// The noun is subject of a finite verb, the past-participle is not linked to anything
// then this past-participle is a NMOD of the noun on its left
// e.g. Measures taken so far, however, have not been sufficient to reverse the trend. -> NMOD(Measures,taken)
| NP#1, verb#2[partpas], ?*, FV{?*,#3[last]} |
	if ( HEAD(#4,#1) & SUBJ(#3,#4) & ~?(?,#2) )
	NMOD[badtag=+,post=+,pastpart=+](#4,#2)




// Rule 435
// Post Modifer past-participle (bad tagged)
// If under an SC (between the subject and the main verb) we have a standalone verb with feature partpas:+, past:+
// If this verb is preceeded by a comma and there is another comma after it and before the main verb,
// If before the first comma, there is a NP;PP
// Then this verb is a past-participle which is a post modifier of the nominal head just before the comma
// e.g. Ordinary Carey Williams, ARMED with a pistol, stood by at the polls to insure order.
| SC{?*, NP#1;PP#1, punct[comma], verb#2[partpas], ?*, punct[comma], FV} |
	if ( ~?(?,#2) & ~?(#2,?) & HEAD(#3,#1) )
	NMOD[post=+,pastpart=+,badtag=+](#3,#2)


// Rule 436
// Post modifier past-participle that is taken as a finite verb
// Case of comment clauses in which the last comma is missing
// e.g. Capital import, derived from a number of sources must be combined ... *SUBJ(derived,import)
// The rule says that if we have a verb (that can be a past part.) which have a subject on its left 
// AND If this subject and this verb are separated by a comma
// AND If there is somewhere on the right a finite verb that does not have subject
// THEN this verb-ppart is in fact a modifier of the first noun, and the verb without subject is linked to this first noun by a SUBJ dependency
| SC{NP#9, punct[comma], FV{?*,#1[last,partpas]}}, PP*, FV{?*,#2[last]} |
	if ( HEAD(#8,#9) & ^SUBJ(#1,#8) & ~SUBJ(#2,?) )
	SUBJ(#2,#8),
	NMOD[post=+](#8,#1)


// Rule 437
// Post-modifier past participle that have been left alone (is not linked to anything) when it is in fact a post modifier
| NP#9;PP#9, punct[comma], verb#2[partpas] |
	if ( HEAD(#8,#9) & SUBJ(#1,#8) & #2 < #1 & ~?(?,#2) )
	NMOD[post=+,pastpart=+](#8,#2)


// Rule 438
// PP attached to a past-participle wich is a post noun modifier
// e.g. Ordinary Carey Williams, ARMED with a pistol, stood by at the polls to insure order.
| NP{?*,AP{#1[adj,partpas,last]}}; AP{#1[adj,partpas,last]}; FV{#1[verb,partpas]}; #1[verb,partpas], PP#2{prep[form:~fby]} |
	if ( HEAD(#3,#2) & ~NMOD(?,#3) & ~VMOD(?,#3) & NMOD[post,partpas](?,#1) )
	ADJMOD[post=+](#1,#3)


// Rule 439
// If a NP is not linked to anything and if its head has the feature period:+ preceeded by a cardinal
// Then we attached this NP as a VMOD[dur,post] to the first verb on its left
| SC{?*,FV{?*,#1[last]}}; FV{?*,#1[last]}; IV{?*,#1[last]}; GV{?*,#1[last]}; NFV{?*,#1[last]}, ?*[verb:~], NP#3{?*,num[card],#2[noun,period]} |
	if ( ~?(?,#2) & ~?(#1,#3) )
	VMOD[post=+,dur=+](#1,#2)

// Rule 440
// Same as above when there is no verb on the left. We try to find a verb on the right
| NP#5{?*,num[card],#2[noun,period]}, ?*[verb:~], SC{?*,FV{?*,#1[last]}};FV{?*,#1[last]} |
	if ( ~?(?,#2) & ~?(?,#5) & VDOMAIN(#3,#1) )
	VMOD[pre=+,dur=+](#3,#2)



// Rule 441
// Missing object when there is a categorized PP between the verb and its object
// e.g. It has incorporated into its procedure the recommendations of his boss. OBJ(incorporated,recommendations)
| SC{?*,FV{?*,#1[verb,trans]}}; ?[verb]{?*,#1[verb,trans]}, PP{prep#2}, NP#3 |
	if ( #1[souscat]:#2[souscat] & HEAD(#4,#3) & ~?(?,#4) & ~OBJ(#1,?) )
	OBJ[post=+](#1,#4)


// Rule 442
// Missing subject ....
// If a NP head is not attached to anything
// If this NP head is in an embedded clause between an auxiliary and a bare infinitive, if the auxiliary has no subjct, 
// Then this NP head is the subject of the auxiliary
// e.g. In Poland, where do most people eat ?
// e.g. What day of the week can John arrive ?
| NP#1, IV{?*[prep:~],#2[last,verb]} |
	if ( HEAD(#3,#1) & ~?(?,#3) & ( NUCL[vlink,insist](#4,#2) | NUCL[vlink,modal](#4,#2) ) )
	SUBJ[post=+](#4,#3)



// Rule 443
// Missing subject when the subject is in an embedded sentence introduced by an indspeech verb and is followed by a relative clause or completive. In this case the subject is wrongly considered as the object of the indspeech verb
// e.g. They predict the financial crisis that Asia suffers could deepen
| NP#1, SC{BG{?[conj]};BG{?[wh]}}, FV{?*,#6[last]} |
	if ( ~SUBJ(#6,?) & HEAD(#3,#1) & (~?(?,#3) | ^OBJ[post](#5[indspeech],#3) ) )
	SUBJ[pre=+,post=~](#6,#3)



// Rule 446
// Missing subject in interrogative sentences
// If an NP head is not attached to anything
// And this NP is followed by anything[verb:~] and question mark
// Then the NP head is attached to the first verb on its left if this verb has no subject
| NFV{?*,#1[last]}; IV{?*,#1[last]}; GV{?*,#1[last]};SC{?*,FV{?*,#1[last]}}, ?*[verb:~,punct:~], NP#2, ?*[verb:~], punct[form:fquest] |
	if ( HEAD(#3,#2) &   ~?(?,#3) )
	SUBJ[post=+](#1,#3)




// Missing subject...
// If a NP head is not attached to anything, and if this NP is on the left of a FV that has no subject and was disambiguated through reshuffling,
// Then the NP head is the subject of this verb
//| NP#1, FV{#2[first,last]} |
//	if ( HEAD(#3,#2) & ~?(?,#3) & ~SUBJ(#2,?) )
//	SUBJ[pre=+](#2,#3)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Unattached Subordinate conjunction 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// AB 2012.01.03 as for following rule, but with an intervening parenthetical
// e.g. He will come if Jane, prepared for the worst, arrives.
| SC{BG{conj#2[sub,conj]};BG{conj#2[form:fwhether]},?*,punct[comma],FV{?*,verb[last,partpas]}}, ?*[verb:~], punct[comma], FV{?*,#1[last]} |
	if ( ~?(#2,?) & VDOMAIN(#3,#1) & ~?[relativ](?,#2) )
	CONNECTOR[subord=+](#2,#3)

// Rule 438
// If a subord. conjunction (under SC) has been left alone
// e.g. He shot himself 4 days after he resigned.
// Then we create a connector[subord] between the conjunction and the verb of the embedded sentence
| SC{BG{conj#2[sub,conj]};BG{conj#2[form:fwhether]}, ?*[fin:~], FV{?*,#1[last]} } |
	if ( ~?(#2,?) & VDOMAIN(#3,#1) & ~?[relativ](?,#2) )
	CONNECTOR[subord=+](#2,#3)

| BG{conj#2[sub,conj]};BG{conj#2[form:fwhether]}, ?*[fin:~], SC, ?*[fin:~], FV{?*,#1[last]} |
	if (  ~?(#2,?) & VDOMAIN(#3,#1) & ~?[relativ](?,#2) )
	CONNECTOR[subord=+](#2,#3)



// SUBJECT -ERROR
// Rule 439
// Erroneous SUBJ dependency. 
// In a embedded completive, when the nearest NP of the verb of the completive is in fact a complement of an infinitive attached to another NP (subject of the completive).
// In this case, there is an error and the neares NP is taken as the subject
// e.g. He vowed that their efforts to develop weapons would be stopped *SUBJ(would,weapons)
| SC{ BG{#1}, NP#7, ?*, NP#8, PP*, FV } |
	if ( CONNECTOR[subord](#1,#3) & VDOMAIN(#3,#2) & HEAD(#4,#8) & ^SUBJ(#2,#4)  & HEAD(#5,#7) & NMOD[post,infinit](#5,#9) &  ~?(?,#5) )
	SUBJ(#2,#5),
	OBJ(#9,#4).

// Same kind of problems object of embeded clause taken as subject of another clause that is embeded in the embeded clause
// e.g. He takes this while the UN that refused to endorse the war in Iraq may find that *SUBJ(may,war)
| BG{#1}, NP#7, SC{BG{?[rel:+]}, FV{?*,#20[last]}}, ?*[verb:+], NP#8, PP*, FV{?*,#10[last]} |
  if ( CONNECTOR[subord](#1,#3) & HEAD(#70,#7) &  HEAD(#80,#8) & ^SUBJ(#10,#80) & VDOMAIN(#30,#20) )
     SUBJ(#10,#70),
     OBJ(#30,#80).


// SUBJECT ERRORS
// Rule 440
// When some NP's are before a sentence,  that situate the following text (for instance press agencies' corpus)
// And when these NPs are separated from the rest by an punct[form:fhyph,right:~,left:~] (i.e hyphen is separated with a space)
// e.g. VENTIANE, December 25 - Bill left. *SUBJ(left,VENTIANE)
| punct[form:fhyph,right:~,left:~], NP#2, FV{?*,#1[last]} |
	if ( HEAD(#3,#2) & SUBJ(#1,#3) & ^SUBJ(#1,#4) & #4 < #3 & VDOMAIN(#5,#1) )
	VMOD[pre=+](#5,#4)


// Rule 441
// Subject error in interrogative sentences when the interrogative sentence is introduced by a manner advp "How long"
// How long can the talk last *OBJ(can,talk)
| SC[startbis]{advp[wh:+], FV{?*,#1[last]}}, NP#2 |
	if ( ~SUBJ(#1,?) & HEAD(#3,#2) & ^OBJ(?,#3) )
	SUBJ[post=+](#1,#3)



// Rule 442
// In a context TOP{ NP, SC, (NP;PP)* FV }
// If the first NP is not linked as subject to anything
// If the last FV has no subject then this first NP is the subject of the FV
// eg. Laotians who fled the country when the communists arrived are here.
| NP#3{?[startbis]}, SC, ?*, FV{?*,#1[last]} |
	if ( ~SUBJ(#1,?) & HEAD(#2,#3) & ~SUBJ(?,#2) & (^NMOD[pastpart](?,#1) | MAIN(?) ) )
	SUBJ[features=~,pre=+](#1,#2)




// Rule 450
// Similar as above but a direct OBJECT of a verb in the SC has been taken as subject of the last FV
// e.g. Laotians who fled the country when the communists seized power are here.
// *SUBJ(are,power)
| NP#3{?[startbis]}, SC, ?*, NP#5, PP*, FV{?*,#1[last]} |
	if ( HEAD(#2,#3) & ~SUBJ(?,#2) & ~OBJ(?,#2) & HEAD(#4,#5) & ~OBJ(#6,#4) & ^SUBJ(#1,#4) ) 
	SUBJ(#1,#2)

// Rule 450 : AB testing 2011.02.21 
// ?* in above rule is too strong, cannot have a verb here
// Similar as above but a direct OBJECT of a verb in the SC has been taken as subject of the last FV
// e.g. Laotians who fled the country when the communists seized power are here.
// *SUBJ(are,power)
//| NP#3{?[startbis]}, SC, ?*, NP#5, PP*, FV{?*,#1[last]} |
//	if ( HEAD(#2,#3) & ~SUBJ(?,#2) & ~OBJ(?,#2) & HEAD(#4,#5) & ~OBJ(?,#4) & ^SUBJ(#1,#4) ) 
//	SUBJ(#1,#2)

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Missing VDOMAIN dependencies when verbs directly under the TOP

// Rule 451
// Verb that is just under TOP and not linked to anything (result of a reshuffling)
// e.g. The amount of amonia produced by humans is large. OR acetone is a chemical used to make fibers
| NP#1, ?*[verb:~], #2[verb,partpas], ?*[verb:~], FV{?*,#3[last]} |
	if ( HEAD(#4,#1) & SUBJ(#3,#4) & ~?(#2,?) )
	VDOMAIN[passive=+](#2,#2),
	SUBJ[pre=+,nfinit=+](#2,#4).

// Rule 452
// Same as above when there is no other verbs until the end of the sentence
| NP#1, ?*[verb:~], #2[verb,partpas], ?*[verb:~], ?[endbis]  |
	if ( HEAD(#4,#1) & SUBJ(#2,#4) & ~VDOMAIN(#2,#2) )
	VDOMAIN[passive=+](#2,#2)

// Rule 453
// Same as above when the verb under top is just followed by an infinitive [to]
// e.g. Acetone is a chemical used to make fibers.
| NP#1, ?*[verb:~], #2[verb,partpas], IV{prep[form:finfto],?*,?[verb,last]} | 
	if ( HEAD(#4,#1) & SUBJ(#2,#4) & ~VDOMAIN(#2,#2) )
	VDOMAIN[passive=+](#2,#2)


// Rule 454
// Same as above but the lonely verb [partpas] is under an FV (bad tagging)
// 2012.01.03 added ~NMOD[post,pastpart](#1,#2) to stop subject for passive construction in parenthetical
// e.g. John will work if Jane, prepared for anything, leaves her job.
| NP#1, ?*[verb:~], FV{(?[adv]),#2[partpas,last]} |
	if ( HEAD(#4,#1) & ~SUBJ(#2,?) & ~OBJ(#2,?) & ~NMOD[post,pastpart](#4,#2) )
	VDOMAIN[passive=+](#2,#2),
	SUBJ[pre=+,nfinit=+](#2,#4).



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// INFINITIVES

// Rule 455
// An infinitive[to] that has been left alone and that is preceeded by an adjective is attached to this adjective
// e.g. Bob is slow to react
| AP{?*,#1[adj,last]}, IV{prep[form:finfto], ?*, #2[verb,last]} |
	ADJMOD[post=+,infinit=+](#1,#2)


// Rule 456
// Same rule as above when the adjective has been badly tagged as an adverb (after a copula)
// In this case, there exist a NUCL_SUBJCOMPL_BADTAG relation linking the *adverb and a copula
| adv#1, IV{prep[form:finfto], ?*, #2[verb,last]} |
	if ( NUCL[badtag,subjcompl](?,#1) )
	ADJMOD[post=+, infinit=+, badtag=+](#1,#2)


// Rule 457
// Unattached infinitive that follows a verb in the passive form
// e.g. It is used to eat
// In this case this is an infinitive depending on the passive verb.
| NFV{?*,#1[last]};#1[verb,partpas], (adv), IV{#3[lemme:to],?*,#2[verb]} |
	if ( PREPD(#3,#2) & ~VMOD(?,#2) & VDOMAIN[passive](#1,?) )
	VMOD[infinit=+,post=+](#1,#2)

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Post Modifiers adjectives

// Rule 458
// Stand alone NADJ, or ADJ in singular that do not modify anything do modify a previous nominal head.
// e.g. Representatives of the largest European companies ACTIVE in the IT field took the initiative -> SUBJ(took,Representatives)
| NP#1;PP#1{?*,NP[last,tempexpr:~]}, ?*[verb:~,adj:~], AP{#2[adj,first,last]} |
	if ( HEAD(#3,#1) )
	NMOD[post=+](#3,#2)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Verbs in progressive form


// Rule 459
// When a GV containing a verb in progressive form is not linked to anything
// And this verb[prog:+] is preceeded by a NP (or a personal pronoun)
// And this NP or pers. pronoun is preceeded by a verb with feature sc_np_ing
// Then there is a SUBJ_NFINIT link between the progressive and the preceeding NP
// e.g. I heard him crying
| SC{?*,FV{?*,#1[last,sc_np_ing]}};IV{?*,#1[last,sc_np_ing]};GV{?*,#1[last,sc_np_ing]};NFV{?*,#1[last,sc_np_ing]}, NP#3;pron#3[personal,gen], GV{#2[prog,last]} |
	if ( ~?(?,#2) & HEAD(#4,#3) )
	SUBJ[nfinit=+](#2,#3).


// Rule 460
// When there is no NP between the main verb and the unlinked verb[prog]
// There is an OBJ relation between the main verb and this verb[prog]
// e.g. ? I heard singing around
| SC{?*,FV{?*,#1[last,sc_np_ing]}};IV{?*,#1[last,sc_np_ing]};GV{?*,#1[last,sc_np_ing]};NFV{?*,#1[last,sc_np_ing]}, GV{#2[prog,last]} |
	if ( ~?(?,#2) & HEAD(#4,#3) )
	OBJ[post=+,gerund=+](#1,#2)



// Rule 461
// NMOD consisting of an embedded sentence that consists of an embedded clause introduces by after|before, just following a 
// NP whose head has feature period
// He shot himself four days after he resigned
| NP{?*,#4[last,period]},SC{BG{conj#1[conj,sub]},?*,FV} |
	if ( CONNECTOR[subord](#1,#5) )
	NMOD[post=+,sentence=+](#4,#5)

// EN COURS faire les gerondifs equivalents


// Rule 462
// VMOD consisting of an embedded sentence with a verb in the progressive form
/// e.g. He left, after having done the job
// If a GV is not linked to anything, and is in a CONNECTOR_SUBORD dependency
// If there is some verb under a SC on its left
// Then this GV modifies this verb
| SC{?*,FV{?*,#3[last]}};NFV{?*,#3[last]};GV{?*,#3[last]};IV{?*,#3[last]}; NFV{?*,#3[last]}, ?*[verb:~], GV{?*,#1[last]} |
	if (  ~VMOD(?,#1) & ~NMOD(?,#1) & CONNECTOR[subord](?,#1) )
	VMOD[gerund=+,post=+](#3,#1)


	 

// Rule 463
// Same rule as above when the Verb modifier in the progressive form is on the left of the verb it modifies.
// e.g. After having done the job, he left.
// Adding a restriction scbegin:~ in order to avoid this dependency in cases like
// "After having said the he came .... *VMOD(came,said)
| GV{?*,#1[last]}, ?*[verb:~], SC{?*[scbegin:~],FV{?*,#2[last]}};FV{?*,#2[last]} |
	if ( CONNECTOR[subord](?,#1) & VDOMAIN(#3,#2) & ~VMOD[gerund](?,#1) )
	VMOD[gerund=+,pre=+](#3,#1)



// Rule 464
// A verb in progressive form is not linked to anything (none of the above mentionned cases)
// If there is some NP on its left directly on its left
// then we linked it as a NMOD of this NP
// e.g. They must sign petitions requesting that the Republicans be allowed to place name of candidates
// CHECK IF IT'S RIGHT MOST OF THE TIME !!!!
| NP#3[proper:~]{?*,?[pron:~]}, GV{?*,#1[last]} |
	if ( ~$1(?,#1) & HEAD(#2,#3) )
	NMOD[post=+,gerund=+](#2,#1)

// AB 2011.09.15 SAME RULE WITH PP (TESTING)
| PP{?*,NP#3[proper:~]{?*,?[pron:~]}, GV{?*,#1[last]}} |
	if ( ~$1(?,#1) & HEAD(#2,#3) )
	NMOD[post=+,gerund=+](#2,#1)

// Rule XXXX
// Still verb in progressive form not linked to anything. There is a finite verb on its left
// Then it modifies the verb
| ?[verb,sc_feat:~]{?*,#2[last]}, (NP{pron};NP[proper]), (prep),GV{?*,#1[last]} |
  if ( ~$1(?,#1) )
  VMOD[post=+,gerund=+](#2,#1)


// Rule 465
// If we still have a verb in the progressive form that continues to be not linked to anything (dependent),
// Then we make it the subject of the first finite verb that has not subject and that has dependent as VMOD or OBJ
// (in order to avoid the linking to an FV that is bad disambiguated)
// e.g. Saving the whales from starving is her mission -> SUBJ(is,Saving)
| GV{?*,#1[last]}, ?*, FV{?*,#2[last]} |
	if ( ~SUBJ(#2,?) & VDOMAIN(#3,#2) & ( OBJ(#3,?) | VMOD(#3,?) | NUCL[subjcompl](#3,?) ) & ~$1(?,#1) )
	SUBJ[gerund=+,pre=+](#2,#1)



// Rule 466
// Gerunds preceeded by while categorized as conj that are not at the beginning of the sentence.

// Missing subject within sentences in gerundive
// Deducing subject from the subject of the main clause
// If a clause has its main verb in the gerundive form, if this verb has no subject, 
// If the gerundive clause is in a VMOD_SENTENCE_GERUND_PRE dependency from a verb within a clause on its left,
// Then the subject (deduced) of the verb of the GERUND CLAUSE is shared with the subject of the main clause
// e.g. After having done the job, John left. --> SUBJ(done,John)
if ( VMOD[sentence, gerund](#1,#2) & VDOMAIN(#2,#3) & ~SUBJ(#3,?) & VDOMAIN(#5,#1) & SUBJ(#5,#6) )
	SUBJ[nfinit=+](#3,#6)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Verbs in infinitive

// Rule 467
// When a IV (i.e. infinitive) is just on the left of a finite verb that does not have any subject,
// Then this infinitive is the subject of this verb
| IV{prep#1[form:finfto]}, SC{?*,FV{?*,#2[last]}}; FV{?*,#2[last]} |
	if ( ~SUBJ(#2,?) & PREPD(#1,#3) )
	SUBJ[nfinit=+](#3,#2)





// Rule 468
// PP introduced by "by" that have been left alone.
// If they are preceeded by a partpas (with tag adjective)
// Then we attach to this adjective an AGENT dependency
// e.g. This new process invented by John is nice
|  ?{#2[partpas]}, PP#1{prep[form:fby]} |
	if ( HEAD(#3,#1) & ( ~?(?,#3) | PREPD(?,#3) ) & ~AGENT(?,#3) )
	AGENT(#2,#3)

// Rule 469
// Same as above when the partpas is tagged as finite verb
// In this case we have a NMOD[badtag,partpas] between a nominal head and the partpas
// e.g. The process, invented by John, is nice
| verb#2[partpas], PP#1{prep[form:fby]} |
	if ( NMOD[badtag,post,partpas](?,#2) & HEAD(#3,#1) & ( ~?(?,#3) | PREPD(?,#3) ) )
	AGENT(#2,#3)

// Rule 470
// When a PP[by] is not linked to anything, and if this PP[by] is just preceeded by a noun, then we attach this PP[by] to the nouns that preceede it
// The destruction of the city by the barbarians
| NP#1;PP#1, ?*[verb:~], PP#2{prep[form:fby]} |
	if ( HEAD(#3,#2) & (~?(?,#3) | PREPD(?,#3) ) & HEAD(#4,#1) )
	NMOD[post=+](#4,#3)


// Rule 472
// Same as above with adverb with no specific feature
| NP#2, adv#1 |
	if ( ~VMOD(?,#1) & HEAD(#3,#2) & OBJ[post](#4,#3) )
	VMOD[post=+](#4,#1)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Stand alone prepositions


// Rule 473
// If we have a preposition that is not linked to anything and if the first verb on its left
// is a verb which admits as a particle this preposition 
// The we attach it to this verb with NUCL_PARTIC_BADTAG dependency
| SC{?*,FV{?*,#1[verb,last,partic]}};verb#1[partic];FV{?*,#1[verb,last,partic]};GV{?*,#1[last,partic]};NFV{?*,#1[last,partic]};IV{?*,#1[last,partic]}, ?*[verb:~], prep#2 |
	if ( ~PREPD(#2,?) & ~VERBPREP(?,#2) & ~NUCL[particle](?,#2) & #1[partic]:#2[partic] )
	NUCL[particle=+,badtag=+](#1,#2)





//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Stand alone "THAT" 

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 474
// Various levels of embedment. "THAT" is staying alone and followed by another conjunction
| BG{conj#1[form:fthat]}, SC{BG} |
	if ( ~CONNECTOR(#1,?) & VDOMAIN(#2,#3) & ~VMOD(?,#2) & ~MAIN(#2))
	CONNECTOR[subord=+,complthat=+](#1,#2)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Completives

// OBJ dependency

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 475
// First case, We have already CONNECTOR[subord] between a THAT and the main verb of the embedded sentence
//		Furthermore, we have somewhere on the right a VERB with indspeech feature
// THEN the Verb of the embedded sentence, is attached to the verb with indspeech feature with 	OBJ[sentence].
// And we add the complthat feature on the CONNECTOR[subord]
| SC{?*,FV{?*,#3[last,indspeech]}}; FV{?*,#3[last,indspeech]}; NFV{?*,#3[last,indspeech]}; GV{?*, #3[last,indspeech]}; IV{?*,#3[last,indspeech]},
  ?*[verb:~], SC{BG{#1[form:fthat]}} |
	if ( CONNECTOR[subord:+,complthat:~](#1,#2) )
	OBJ[post=+,sentence=+](#3,#2)



// Rule 476
// Second case. We have no CONNECTORS but there is a completive 
// e.g. He said she arrived yesterday.
// In this case, we transform the CLOBJ to a OBJ[post,sentence]
if ( ^CLOBJ(#1,#2) & ~VMOD(#1,#2) )
	OBJ[post=+,sentence=+](#1,#2)



// EN COURS
// Rule 477
// THAT is linked to a verb but there is another embedded sentence inbetween
// e.g. He said that before making a first race, alternatives must be taken.
| SC{?*,FV{?*,#9[last,indspeech]}}; FV{?*,#9[last,indspeech]}; NFV{?*,#9[last,indspeech]}; GV{?*, #9[last,indspeech]}; IV{?*,#9[last,indspeech]}, ?*[verb:~], BG{conj#1[form:fthat]}, SC{ BG{conj#4} }, ?[verb]{?*,#3[last]} |
	if ( VDOMAIN(#3,?) & CONNECTOR[subord,complthat](#1,#3) & CONNECTOR[subord](#4,#5) & #5 < #3 )
	OBJ[post=+,sentence=+](#9,#3)


// Rule 478
// subordinated clause introduced by "IF" or "WHETHER" that is not linked to anything and that follows a transitive verb in infinitive form
// e.g. The battle to determine whether the rivers are public
| IV{prep[form:finfto], verb#1[trans]}, SC{ BG{conj#2[form:fif]}; BG{conj#2[form:fwhether]} } |
	if ( CONNECTOR[subord](#2,#3) & ~VMOD(?,#3) & ~OBJ(?,#3) & ~OBJ(#1,?) )
	OBJ[post=+,sentence=+](#1,#3)



// Rule 479
// Missing attachment between an indspeech verb at the beginning of a sentence and an embedded clause, when there is a relative clause between them
// e.g. They predict the crisis that he knows could stop.
| SC{?{?[startbis]}, ?*[verb:~], FV{?*,#1[last,indspeech]}}, NP#2, ?*, FV{?*,#6[last]} |
	if ( HEAD(#4,#2) & SUBJ(#6,#4) & ~OBJ(#1,?) & VDOMAIN(#5,#6) )
	OBJ[post=+,sentence=+](#1,#5)




// Rule 485
// unlinked adverb "even" before "more"
// Even more complex
| AP{?*, adv#1[form:feven], #2[form:fmore]} |
	if ( ~$1(?,#1) )
	QUANTMOD[pre=+](#2,#1)


// Rule 486
// "more" preceeding and adjective and that is not modifying anything
// more complex
| AP{?*,#2[form:fmore], #3[adj]} |
	if ( ~$1(?,#2) )
	ADJMOD[pre=+](#3,#2)


// Rule 487
// unlinked adverbs before an adjective within a AP.
// They are linked to the adjective that is just on their right
| AP{?*, adv#1, adj#2} |
	if ( ~$1(?,#1) )
	ADJMOD[pre=+](#2,#1)


// Rule 488
// unlinked adverbs following a "not" 
// This adverb is linked to the same verb as the "not"
// CHECK ???
| adv#2[form:fnot], adv#3 |
	if ( VMOD[post,neg](#1,#2) & ~?(?,#3) )
	VMOD[post=+](#1,#3)


// Rule 489
// unlinked adverb preceeded by another adverb and followed by a verb
| adv, adv#1, FV{?*,#2[last]} |
	if ( ~?(?,#1) & VDOMAIN(#3,#2) )
	VMOD[pre=+](#3,#1)

// Rule 490
// unlinked digit within a NP
// e.g. The Georgia legislature will wind up its 1961 session Monday
// At this stage 1961 is not linked to anything. It has to be linked to the noun on the right
| NP{ ?*, dig#1, noun#2} |
	if ( ~$1(?,#1) )
	NMOD[pre=+](#2,#1)




//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// IOBJ dependency that have not been properly calculated
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 491
// An oblique pronoun that is linked as OBJ is in fact a IOBJ
| NP#10, NP#11 | 
if ( ^OBJ(#1,#2[obl,nom:~]) & HEAD(#2,#10) & ~OBJCOMPL(#1,#3) & HEAD(#3,#11) & #2 < #3 )
	IOBJ(#1,#2)


// Rule 492
// If we have a IOBJ followed by a NP that is linked as SUBJ_POST or not linked at all, then it is a OBJ
| NP#1, NP#2 |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & IOBJ(#5,#3) & (^SUBJ[post](?,#4) | ~?(?,#4) ) & ~OBJ(#5,#4) )
	OBJ(#5,#4)


// Rule 493
// Deleting erroneous SUBJ_POST when there is a coordination between the verb and the calculated subject
| ?[verb]{?*,#1[last]}, ?*, ?[coord], ?*, NP#2 |
	if ( HEAD(#3,#2) & ^SUBJ[post](#1,#3) )
	~ 


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//			nfinite subject that has not been found
// 
//			
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 494
// If a stand alone verb that can be an infinitive form (without to) has no subject and is 
// preceeded on the left by a verb that has an object
// then we add a non-finite subject to this verb which is the object of the first verb
// Verify that there is no clause introducers between the two verbs
// e.g I saw her come SUBJ[nfinit](come,her)
// Note that this infinitive verb is bad tagged as a finite verb in present form in sentences like I saw Mary come
| SC{?*, FV{?*,#1[last]}}; FV{?*,#1[last]} ; GV{?*, #1[last]}, NP, PP*, FV{#2[first,last,pres]}; IV{#2[first,last]} |
	if ( ~SUBJ(#2,?) & OBJ[post](#1,#3) )
	SUBJ[nfinit=+,pre=+](#2,#3)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Erroneous SUBJ that is in fact an object 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule XXXX
// Needs to have already calculated CONNECTOR relation
// Clause starting with an embedded sentence, followed by a main clause in the imperative form (i.e. no realized subject). The two clauses are separated by commas and the direct object of the starting embedded clause is taken as the subject of the main clause.
// e.g. "If you insist on serving fruits, don't cut it into cubes. *SUBJ(don't,fruits)

| SC{?*, FV{?*,#1[last]}}; GV{?*,#1[last]}; FV{?*,#1[last]}; NFV{?*,#1[last]},
	?*[verb:~], punct[comma], FV{?*,#2[last]} |
if ( ( CONNECTOR[subord](#3,#1) | (CONNECTOR[subord](#3,#5) & ?(#5,#1) ) ) 
	& ~OBJ(#1,?) & ^SUBJ[pre](#2,#4) )
	OBJ[post=+,pre=~](#1,#4)



// Rule XXXXX
// Error in subject dependency. A complement of an embedded sentence has been taken as subject, and this complement is an oblique pronoun.
// e.g. The jackets, which Miss Ada had bought him hun in the closet *SUBJ(hung,him)
| NP#3, ?*, ?[verb:+], NP#2, FV{?*,#1[last,verb]} | 
if ( HEAD(#20[obl:+,nom:~],#2) & ^SUBJ[pre](#1,#20) & HEAD(#30,#3) & ~?(?,#30) )
	SUBJ(#1,#30)
 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Erroneous SUBJ_POST
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Rule 495
// We have at the same time OBJCOMPL[post] and SUBJ[post] between the same arguments
// And the verb has the feature sc_np_nppred
if ( ^SUBJ[post](#1[sc_np_nppred],#2) & OBJCOMPL[post](#1,#2) ) 
	~


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//			unlinked OBJCOMPL AP's
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 496
// If an AP is between a verb with feature sc+np+adjpred and a NP (and
// if this AP is not linked to anything
// Then this AP is an OBJCOMPL
// e.g. Daniel termed extremely conservative his estimate that ..... OBJCOMPL(termed,conservative)
| AP{?*,#3[last]}, NP#5 | 
	if ( HEAD(#2,#5) & OBJ[post](#1[sc_np_adjpred],#2) &  #1 < #3 & ~?(#1,#3) )
	OBJCOMPL[post=+](#1,#3)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//	Missing main/1 dependency
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 497
// If there is no Main/1 in a sentence. The main verb is the verb whose subject is the first NP on the left
// e.g. Many overseas Laotians who fled the country when the communist Lao People's Revolutionary Party (LPRP) seized power from the government do not appear. MAIN(appear)
// AB 2012.01.04 the NP cannot have a genitive clitic
// e.g. Chancellor of the Exchequer Nigel Lawson's restated commitment helped... *MAIN(restated) and MAIN(helped)
| NP#4{?[startbis,gen:~]}, PP{?*,NP{?*,?[last,gen:~]}} |
if ( ~MAIN(#1) & VDOMAIN(#1,#2) & HEAD(#3,#4) & SUBJ[pre](#2,#3) )
	MAIN(#1)
//, LIXO(#1)

// AB 2012.01.04 complement of the previous rule, with no PP following the NP
// e.g. Many overseas Laotians who fled the country when the communist Lao People's Revolutionary Party (LPRP) seized power from the government do not appear. MAIN(appear)
| NP#4{?[startbis],?*,?[last,gen:~]}, ?[prep:~] |
if ( ~MAIN(?) & VDOMAIN(#1,#2) & HEAD(#3,#4) & SUBJ[pre](#2,#3) )
	MAIN(#1)
//, LIXO(#1,#1)

// ORIGINAL OF ABOVE RULE
// e.g. Many overseas Laotians who fled the country when the communist Lao People's Revolutionary Party (LPRP) seized power from the government do not appear. MAIN(appear)
//| NP#4{?[startbis,gen:~]} |
//if ( ~MAIN(#1) & VDOMAIN(#1,#2) & HEAD(#3,#4) & SUBJ[pre](#2,#3) )
//	MAIN(#1)

// Rule XXXX
// Very similar case as above but the main that has been calculated is erroneous
// e.g The versions we are releasing today have new features. *MAIN(releasing)
// AB 2012.01.11 the existing main verb is not an indspeech verb (i.e. keep the existing main if it is indspeech)
| NP#4{?[startbis]}, SC, ?*, ?[verb]{?*,#10[last]} |
	if ( ^MAIN(#11[indspeech:~]) & #11 < #10 & HEAD(#2,#4) & SUBJ[pre=+](#10,#2) & VDOMAIN(#20,#10)  )
	MAIN[features=~](#20)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//		MISSING LINKS FOR EMBEDDED SENTENCES
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//Rule XXXXX
// e.g The versions we are releasing today have new features. *MAIN(releasing)
//| SC{?*,FV{?*,#1[last]} |
//	if ( SUBJ(#1,#10) & VDOMAIN(#2,#1) & 



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//			PP's ATTACHMENTS HEURISTICS
// 
// Deciding if a PP is attached to a nominal head, an adjective or to a verb (NMOD vs. VMOD)
// Note : At this stage, taking away the PP's introduced by OF and the PP's 
//	  introduced by BY, all PP's have all possible attachments (to nouns and verbs)
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++






// A INTEGRER QQPART. les adverbes points cardinaux sous-categorisent des PP en of
// e.g. north of Newcastle 
// et donne des modifieurs avec le trait loc:+



// Rule 500
// If we have a PP that is just preceeded by an AP with a standalone adjective, then we create an ADJMOD dependency between the PP and the adjective
// At the same time, all NMOD or VMOD dependencies involving this PP are destroyed
| AP{?*,#1[adj,last]}, PP#2 |
	if ( HEAD(#3,#2) &  ( ^NMOD(?,#3) | ^VMOD(?,#3) ) )
	ADJMOD[post=+](#1,#3)

| ADV*, AP{?*,#1[adj,last]}, PP#2 |
  	if ( HEAD(#3,#2) &  ( ~NMOD(?,#3) | ~VMOD(?,#3) ) )
        	ADJMOD[post=+](#1,#3)
// for coord adjs
| AP{#4[adj],conj,#1[adj,last]}, PP#2 |
	if ( HEAD(#3,#2) &  ( ^NMOD(?,#3) | ^VMOD(?,#3) ) )
	ADJMOD[post=+](#1,#3), ADJMOD[post=+](#4,#3).

// Rule 501
// If we have a PP introduced by "across" or by "along" and if this PP is attached both to a movement verb and something else, then we prefer to have it attached to the movement verb
| SC{?*, FV{?*,verb#1[last,vmotion]}}; ?[verb]{?*,verb#1[last,vmotion]}, ?*[verb:~], PP#2{prep#3[p_across];prep#3[p_along]} |
	if ( HEAD(#4,#2) & VMOD(#1,#4) & ^NMOD[post](?,#4) )
	~




// Rule 502
// If a PP[in] is followed by a digit (date) and if the verb to which this PP is linked is a copula, then we destroy all 
// NMOD dependency between a nominal head and this date
| ?{?*,verb#3[cop]}, ?*[verb:~], PP#1{prep[form:fin], NP[dig,last]} |
	if ( HEAD(#2,#1) & VMOD(#3,#2) & ^NMOD(#4,#2) & #3 < #4 )
	~


// Rule 503
// if a PP is a post modifier of some nominal head that is a subjcompl (complement of a copula)
// then we attach this PP to the copula and not to the nominal head, if the preposition of this PP
// is not "of"
// e.g. He was mayor in Atlanta in 1993 -> VMOD(was,Atlanta) VMOD(was,1993)
// e.g. He was mayor of Atlanta in 1993 -> NMOD(mayor,Atlanta) VMOD(was,1993)
| PP#1{prep[form:~fof]} |
	if ( HEAD(#2,#1) & ^NMOD[post](#3,#2) & VMOD[post](#4,#2) & NUCL(#4,#3) )
	~



// Rule 504
// If a PP is a modifier[duration:+,post:+] that is attached both to a noun and a verb
// Then we prefer to have it attached to the verb
// e.g. for a few minutes...
//if ( VMOD[post,duration](#3,#1) & ^NMOD[post,duration](#2,#1) )
//	~


// Rule 505
// If a gerund verb introduced by the preposition OF is attached to different elements
// Then we choose the nearest attachment
// e.g It would provide means of enforcing the law   *VMOD(provide,enforcing)
// Note: for the PP's introduced by OF with a NP inside, only the nearest attachment had been applied
| prep[form:fof], GV{?*,#1[last,vprog]} |
if (  ( ^VMOD(#2,#1) | ^NMOD(#2,#1) ) & NMOD(#3,#1) & #2 < #3 )
	~


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// Missing main dependency - When the sentence starts with a subordinated clause
// And the main clause is not under a SC
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 506
| SC{BG{#1}}, ?*[verb:~], FV{?*,#2[last]} |
	if ( ~MAIN(?) & ~CONNECTOR(?,#2) & VDOMAIN(#3,#2) )
	MAIN(#3)
	
	

//////////////////////////////////////////////////////////////////////////////////////////

// NADJ and subcategorization

//////////////////////////////////////////////////////////////////////////////////////////

// 1) Deleting all features in relation with subcategorization of adjectives in the nadj used as noun

// Rule 507
// Deletig sc_pof for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[of_adj] & #1[sc_pof=~] )
	~ 

// Rule 508
// Deletig sc_pabout for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[about_adj] & #1[sc_pabout=~] )
	~

// Rule 509
// Deletig sc_pagains for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[against_adj] & #1[sc_pagainst=~] )
	~


// Rule 510
// Deletig sc_as for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[as_adj] & #1[sc_pas=~] )
	~

// Rule 511
// Deletig sc_pat for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[at_adj] & #1[sc_pat=~] )
	~

// Rule 512
// Deletig sc_pwith for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[with_adj] & #1[sc_pwith=~] )
	~

// Rule 513
// Deletig sc_pfor for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[for_adj] & #1[sc_pfor=~] )
	~

// Rule 514
// Deletig sc_pon for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[on_adj] & #1[sc_pon=~] )
	~

// Rule 515
// Deletig sc_pto for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[to_adj] & #1[sc_pto=~] )
	~


// Rule 516
// Deletig sc_pinto for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[into_adj] & #1[sc_pinto=~] )
	~


// Rule 517
// Deletig sc_pin for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[in_adj] & #1[sc_pin=~] )
	~


// Rule 518
// Deletig sc_ptowards for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[towards_adj] & #1[sc_ptowards=~] )
	~

// Rule 519
// Deletig sc_pfrom for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[from_adj] & #1[sc_pfrom=~] )
	~

// Rule 520
// Deletig sc_pover for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[over_adj] & #1[sc_pover=~] )
	~

// Rule 521
// Deletig sc_pupon for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[upon_adj] & #1[sc_pupon=~] )
	~


// Rule 522
// Deletig sc_pamong for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[among_adj] & #1[sc_pamong=~] )
	~

// Rule 523
// Deletig sc_pby for nadj used as nouns
| NP{?*,AP[last]{?*,nadj#1[last,sc_for_adj]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[by_adj] & #1[sc_pby=~] )
	~


// 2) Deleting all features in relation with subcategorization of noun in the nadj used as adjective
// In this case the AP containing the adjective is not under a NP but under something else.

// Rule 524
// Deleting sc_pabout for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[about_noun] & #1[sc_pabout=~] )
	~


// Rule 525
// Deleting sc_pagainst for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[against_noun] & #1[sc_pagainst=~] )
	~


// Rule 526
// Deleting sc_pas for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[as_noun] & #1[sc_pas=~] )
	~


// Rule 527
// Deleting sc_pat for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[at_noun] & #1[sc_pat=~] )
	~

// Rule 528
// Deleting sc_pwith for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[with_noun] & #1[sc_pwith=~] )
	~

// Rule 529
// Deleting sc_pfor for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[for_noun] & #1[sc_pfor=~] )
	~

// Rule 530
// Deleting sc_pon for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[on_noun] & #1[sc_pon=~] )
	~



// Rule 531
// Deleting sc_pto for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[to_noun] & #1[sc_pto=~] )
	~


// Rule 532
// Deleting sc_pinto for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( #1[into_noun] & #1[sc_pinto=~] )
	~


// Rule 533
// Deleting sc_pin for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[in_noun] & #1[sc_pin=~] )
	~

// Rule 534
// Deleting sc_pthrough for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[through_noun] & #1[sc_pthrough=~] )
	~

// Rule 535
// Deleting sc_ptowards for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[towards_noun] & #1[sc_ptowards=~] )
	~

// Rule 536
// Deleting sc_pfrom for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[from_noun] & #1[sc_pfrom=~] )
	~


// Rule 537
// Deleting sc_pover for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[over_noun] & #1[sc_pover=~] )
	~

// Rule 538
// Deleting sc_pupon for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[upon_noun] & #1[sc_pupon=~] )
	~

// Rule 539
// Deleting sc_pbetween for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[between_noun] & #1[sc_pbetween=~] )
	~


// Rule 540
// Deleting sc_pacross for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[across_noun] & #1[sc_pacross=~] )
	~

// Rule 541
// Deleting sc_pby for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[by_noun] & #1[sc_pby=~] )
	~

// Rule 542
// Deleting sc_pwithin for nadj used as adjective
| ?[noun:~]{?*,AP{adv*,nadj#1[last,sc_for_noun]}} |
	if ( ~NUCL[subjcompl](?,#1) & #1[within_noun] & #1[sc_pwithin=~] )
	~


/////////////////////////////////////////////////////////////////////////////////////////

// General rules for PP attachment

/////////////////////////////////////////////////////////////////////////////////////////


// Rule 543
// Deleting a PP attachment on a temporal expression when the preposion when the PP is not also a temporal expression
// e.g. avoids It will be held Sept. 8 in Savannah *MOD(Sept. 8, Savannah)
| NP#1[tempexpr]; PP#1{prep,NP[tempexpr]}, ?*, PP#2{prep, NP[tempexpr:~]} | 
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ^NMOD(#3,#4) & ( VMOD(#5,#4) | NMOD(#5,#4) ) )
	~


// Rule 544
// If we have the context NP of NP to + infinitive, then the infinitive is never attached to the second NP
// e.g. The capacity of intellectuals to contribute....
// An exception is possible if the first NP is a quantifier of the second (e.g. number of risks to be considered)
// Restriction with the QUANTD relation
// Verified in the BNC and biotip corpora
| NP#1; PP#1, PP#2{prep[form:fof]}, IV{prep[form:finfto], ?*, #3[last,verb]} |
	if ( HEAD(#4,#2) & ^NMOD(#4,#3) & ( HEAD(#5,#1) & ~QUANTD(#4,#5) ) )
//	if ( HEAD(#4,#2) & ^NMOD(#4,#3) & ( HEAD(#5,#1) & ~QUANTD(#4,#5) ) )
	~


// Rule 545
// In case of a bad attachment due to the wrong treatment of coordination, we destroy it
// e.g. Injection into cells arrested at G1 or late in G2 has no effect *NMOD(G1,G2)
| PP#1, (PP;adv)*, ?[coord], (PP;adv)*, PP#2 |
	if ( HEAD(#3,#1) & HEAD(#4,#2) & ^NMOD[post](#3,#4) )
	~



/////////////////////////////////////////////////////////////////////////////////////////

// PP Attachment using the information added to the fst (prepositions Collins Cobuild)

/////////////////////////////////////////////////////////////////////////////////////////

// Until this point each PP with preposition different of by and of are attached to each possible nominal head or to a verb.
// (PP[of] preposition are attached only to nouns, and PP[by] are attached to a contiguous verb in a passive form or to nothing."
// Note that no attachment to adjectives are made.
// Note also that some erroneous attachments have been deleted in the previous section



// Rule 546
// If we have an AP before the PP to attach that contains an ADJECTIVE (or NADJ) which can subcategorize the PP we attach to PP to it
| NP{AP[first,last]{?*,#6[adj:+,last]}};AP{?*,#6[adj:+,last]}, ?*[verb:~,noun:~,adj:~], PP#1{prep#5} |
	if ( #6[souscat]:#5[souscat] & HEAD(#2,#1) & ^NMOD[post](?,#2)  )
	ADJMOD[post=+](#6,#2)


// Rule 547
// Same as above to destroy possible VMOD dependencies
| NP{AP[first,last]{?*,#6[adj:+,last]}};AP{?*,#6[adj:+,last]}, ?*[verb:~,noun:~,adj:~], PP#1{prep#5} |
	if ( #6[souscat]:#5[souscat] & HEAD(#2,#1) & ^VMOD[post](?,#2) )
	ADJMOD[post=+](#6,#2)




// Rule 548
// If the VMOD dependency matches the feature subcat and the NMOD not, then we chose VMOD, independently of the distance from the PP
| PP#1{prep#5[form:~fof]} |
	if ( HEAD(#2,#1)  & #5[souscat] & VMOD[post](#3,#2) & ^NMOD[post](#4,#2) & #3[souscat]:#5[souscat] & #4[souscat]~:#5[souscat] )
	~


// Rule 549
// If the NMOD dependency matches for the feature subcat and the VMOD dependency doesn't, then we chose NMOD idependently of the distance of the modified heads from the PP
| PP#1{prep#5} |
	if ( HEAD(#2,#1)  & #5[souscat] & ^VMOD[post](#3,#2) & NMOD[post](#4,#2) & #3[souscat]~:#5[souscat] & #4[souscat]:#5[souscat] )
	~



// Rule 550
// Between two possible attachment as NMOD we choose the one for which subcat feature match.
| PP#1{prep#5} |
	if ( HEAD(#2,#1)  & ^NMOD[post](#3,#2) & NMOD[post](#4,#2) & #3[souscat]~:#5[souscat] & #4[souscat]:#5[souscat]  )
	~


// Rule 551
// If we have both VMOD and NMOD dependency and 
// If the PP is preceeded by a comma , and
// If the Verb envolved in the VMOD dependency preceedes the noun involved in the NMOD dependency, 
// Then we attach the PP to the verb
// e.g. There was a unanimous vote to enter a candidate, according to the Republicans *NMOD(candidate,Republicans)
| punct[comma], PP#1 |
	if ( HEAD(#2,#1) & ^NMOD[post](#4,#2) & VMOD[post](#3,#2) & #3 < #4 )
	~


// If we have a PP which is at the same time complement of a coordinated noun, then we destroy the attachment of this PP
// with the nouns that are not the last of the coordination and put the attachment in the last noun and in the coordination axis (can be ambiguous)
// e.g. Italy, Germany and Japan during the war
//| PP#1{prep#5} |
//	if ( HEAD(#2,#1) & NCOORD(?,#7) & NMOD[post](#7,#2) & COORD(#8,#6) & #6 < #7 & ^NMOD[post](#6,#2) )
//	NMOD[post=+](#8,#2)




// DUBIOUS DEFAULT RULE FOR PP ATTACHMENT
// IF WE WANT TO HAVE ONLY ONE ATTACHMENT
// If both a VMOD/NMOD and a NMOD matches for the subcat feature, then we choose the shortest dependency
// At the same time if both do not match we choose also the shortest dependency
// Constraint added in order to avoid the destruction of one of the dependency if we have a coordination
// Rule 552
//| PP#1 |
//	if ( HEAD(#2,#1)  &  NMOD[post,default=+](#4,#2) & ( ^VMOD[post](#3,#2) | ^NMOD[post](#3,#2) )  & #3 < #4 & ~NCOORD(#3,?) )
//	~

if ( ^NMOD[temp:~](#1[tempexpr:~],#2[tempexpr:+]) )
   NMOD[temp=+](#1,#2)


// Rule 553
// Adding another possibility
// If we have a Passive verb with an agent followed by a PP[form:~of] then this PP is also attached to the verb
| ?{?*,#1[last,verb]}, PP#2{prep[lemme:by]}, PP#3{prep[form:~fof]} |
	if ( VDOMAIN[passive](#1,?) & AGENT(#1,#5) & HEAD(#30,#3) & ^NMOD[!features:!](#5,#30) )
	VMOD(#1,#30)




// Rule 554
// If we have two NMOD[post] dependencies involving an adjective within a AP, then we choose the shortest dependency
// (Not always good) - tres douteux peut-etre l'enlever....
| AP{#1[adj,first,last]} |
	if ( ^NMOD(#2,#1) & NMOD(#3,#1) & #2 < #3 )
	~


// Sentencial direct object that are not completives

// Rule 555
// When the verb has the feature sc_whs (subcategorizes a sentence introduce by when or where) AND
// If this verb is a transitive verb (trans:+) that does not have any object complement
// Then we consider that the wh-sentence introduced by when or where is an object
// e.g. He knows when she comes.
| SC{?*, FV{?*,#1[last,trans,sc_whs]}}; FV{?*, #1[last,trans,sc_whs]}; NFV{?*,#1[last,trans,sc_whs]}; IV{?*,#1[last,trans,sc_whs]},   ?*[verb:~], 
SC{BG{#2[form:fwhen,last]}} |
	if ( VMOD[temp,pre](#3,#2) & ~OBJ(#1,?) )
	OBJ[post=+,sentence=+,temp=+](#1,#3)


// Rule 556
// An embedded sentence introduced by when but it is not an object
// e.g. I wonder when she comes (wonder -> trans:~) I am happy when it rains ... He eats an apple when it rains
| SC{?*, FV{?*,#1[last]}}; FV{?*, #1[last]}; NFV{?*,#1[last]}; IV{?*,#1[last]}, ?*[verb:~], SC{BG{#2[form:fwhen,last]}} |
	if ( VMOD[temp,pre](#3,#2) & ( ~OBJ(#1,#3) | ( OBJ(#1,#4) & #4 < #2 ) ) )
	VMOD[temp=+,post=+,sentence=+](#1,#3)

// AB 2011.12.13 as above with a progressive form
// e.g. He likes eating when he reads.
| GV{?*,#1[last]}, ?*[verb:~], SC{BG{#2[form:fwhen,last]}} |
	if ( VMOD[temp,pre](#3,#2) & ( ~OBJ(#1,#3) | ( OBJ(#1,#4) & #4 < #2 ) ) )
	VMOD[temp=+,post=+,sentence=+](#1,#3)

// AB 2011.12.13 as above but with while (conj)
// e.g. He likes eating while he reads.
| GV{?*,#1[last]}, ?*[verb:~], SC{BG{#2[form:fwhile,last]}} |
	if ( VMOD[pre](#3,#2) & ( ~OBJ(#1,#3) | ( OBJ(#1,#4) & #4 < #2 ) ) )
	VMOD[temp=+,post=+,sentence=+](#1,#3)

// Same as above with "where" (LOC feature)

// Rule 557
// He knows where she is OBJ(knows,is)
| SC{?*, FV{?*,#1[last,trans,sc_whs]}}; FV{?*, #1[last,trans,sc_whs]}; NFV{?*,#1[last,trans,sc_whs]}; IV{?*,#1[last,trans,sc_whs]}, ?*[verb:~], SC{BG{#2[form:fwhere,last]}} |
	if ( VMOD[loc,pre](#3,#2) & ~OBJ(#1,?) )
	OBJ[post=+,sentence=+,loc=+](#1,#3)


// Rule 558
// I wonder where she is MOD(wonder,is)
| SC{?*, FV{?*,#1[last]}}; FV{?*, #1[last]}; NFV{?*,#1[last]}; IV{?*,#1[last]}, ?*[verb:~], SC{BG{#2[form:fwhere,last]}} |
	if ( VMOD[loc,pre](#3,#2) & ( ~OBJ(#1,#3) | ( OBJ(#1,#4) & #4 < #2 ) ) )
	VMOD[loc=+,post=+,sentence=+](#1,#3)


// Subordinated sentences introduced by a connector.

// Rule 1685
// If we have a subordinated sentence introduced by a connector[subord]
// Then the main verb of this subordinated is linked to the verb on its left through a VMOD[post,sentence] dependency.
// e.g. He doesn't eat because he hates food.
| SC{?*[scbegin:~], FV{?*,#1[last]}}, IV{?,#4[last]}, ?*[verb:~,scbegin:~], SC{BG{?*,#2[last]}} |
        if ( CONNECTOR[subord](#2,#3) & ~?(#1,#3) & VDOMAIN(#4,#3))
	VMOD[post=+,sentence=+](#1,#4)
// e.g. He likes eating because he loves food.
| SC{?*[scbegin:~], FV{?*,#1[last]}}, (PP;prep), GV, ?*[verb:~,scbegin:~], SC{BG{?*,#2[last]}} |
	if ( CONNECTOR[subord](#2,#3) & ~?(#1,#3) )
	VMOD[post=+,sentence=+](#1,#3)
// e.g. Instruct them in handling errors because they resolve problems quicker. (nominal must be followed by PP or prep)
| SC{?*[scbegin:~], FV{?*,#1[last]}}, ?[noun];NP, PP;prep, GV, ?*[verb:~,scbegin:~], SC{BG{?*,#2[last]}} |
	if ( CONNECTOR[subord](#2,#3) & ~?(#1,#3) )
	VMOD[post=+,sentence=+](#1,#3)
// e.g. They are angry since he hasn't come.
| SC{?*[scbegin:~], FV{?*,#1[last]}}; FV{?*, #1[last]}; NFV{?*,#1[last]};IV{?*,#1[last]};GV, ?*[verb:~,scbegin:~], SC{BG{?*,#2[last]}} |
	if ( CONNECTOR[subord](#2,#3) & ~?(#1,#3) )
	VMOD[post=+,sentence=+](#1,#3)
// Equivalent to the above when the subordinated verb is not under an SC because there is another embedded clause in it
| SC{?*[scbegin:~], FV{?*,#1[last]}}; FV{?*, #1[last]}; NFV{?*,#1[last]};IV{?*,#1[last]}, ?*[verb:~,scbegin:~], BG{?*,#2[last]} |
	if ( CONNECTOR[subord](#2,#3) & ~?(#1,#3) )
	VMOD[post=+,sentence=+](#1,#3)

// AB 2011.12.19 same as above rules, but with a pre-posed subordinate clause introduced by a subordinating conjunction
// e.g. As he ate, John sang.
//      As he was sick, he didn't come.
| SC{BG{?*,#2[last]}, ?*, ?[verb]{?*,#3[last]}}, ?*[verb:~,scbegin:~], SC{?*[scbegin:~], FV{?*, #1[last]}};NFV{?*,#1[last]};IV{?*,#1[last]};(NP, FV{?*,#1[last]}) |
        if ( CONNECTOR[subord](#2,#3) & ~?(#1,#3) & VDOMAIN(#4,#1) )
	VMOD[pre=+,sentence=+](#4,#3)
// e.g. As he ate, John sang. (OBSOLETE since above rule)
//| SC{BG{?*,#2[last]}, ?*, ?[verb]{?*,#3[last]}}, ?*[verb:~,scbegin:~], SC{?*[scbegin:~], FV{?*, #1[last]}};NFV{?*,#1[last]};IV{?*,#1[last]};(NP, FV{?*,#1[last]}) |
//        if ( CONNECTOR[subord](#2,#3) & ~?(#1,#3) )
//	VMOD[pre=+,sentence=+](#1,#3)
// e.g. As he was eating, John sang.
| SC{BG{?*,#2[last]}, ?*, FV{?*,#3[last]}}, ?*[verb:~,scbegin:~], NFV{?*,#4[last]};GV{?*,#4[last]};IV{?*,#4[last]}, ?*[verb:~,scbegin:~], SC{?*[scbegin:~],FV{?*,#1[last]}};FV{?*,#1[last]};NFV{?*,#1[last]};IV{?*,#1[last]} |
        if ( ( CONNECTOR[subord](#2,#4) | CONNECTOR[subord](#2,#3) ) & ~?(#1,#4) & ~OBJ(#3,#4) )
	VMOD[pre=+,sentence=+](#1,#4)
// e.g. As he went shoppping, John sang.
// NB often shopping is analysed incorrectly as a vprog instead of a noun (hard to disambiguate though)
| SC{BG{?*,#2[last]}, ?*, FV{?*,#3[last]}}, ?*[verb:~,scbegin:~], NFV{?*,#4[last]};GV{?*,#4[last]};IV{?*,#4[last]}, ?*[verb:~,scbegin:~], SC{?*[scbegin:~],FV{?*,#1[last]}};FV{?*,#1[last]};NFV{?*,#1[last]};IV{?*,#1[last]} |
        if ( ( CONNECTOR[subord](#2,#4) | CONNECTOR[subord](#2,#3) ) & ~?(#1,#3) & OBJ(#3,#4) )
	VMOD[pre=+,sentence=+](#1,#3)

// Rule 560
// Same as above when the main verb is on the right of the subordinated sentence
// e.g. After he arrived, I left.
// add restriction verifying that #4 does not represent another already calculated sentential complement
| SC{?*,FV{?*,#3}}, (NFV;IV), ?*[verb:~,scbegin:~], FV{?*,#1[last]};SC{?*,FV{?*,#1[last]}} |
	if ( VDOMAIN(#2,#1) & MAIN(#2) & VDOMAIN(#4,#3) & CONNECTOR[subord](#5,#4) & ~OBJ[sentence,post](?,#4) & VMOD[sentence,post](?,#4) )
	VMOD[pre=+,sentence=+](#2,#4)


// For testing purpose only
// If a PP or a AP is attached to more than one element, then we crate a link LIXO in order to easily check it
//| PP#1; AP#1 |
//	if ( HEAD(#2,#1) & NMOD(#3,#2) & (VMOD(#4,#2) | NMOD(#4,#2) ) & #3 < #4)
//	LIXO(#2,#3,#4)



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// 
// Comparative - preliminary work 
// 

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// MOD[comparativ] between the MORE and the THAN (or the adj-ER and the THAN)
// MOD dependency between MORE and what follows the MORE
// COMPAR dependency between the THAN and what follows the THAN
// e.g. It is bigger than nice MOD_COMPARATIV(bigger,than), COMPAR(than,nice)
// more+adj -> mod[pre](adj,more)
// more XX than YY -> MOD[comparativ](more,than), MOD[pre](XX,more), COMPAR(than,YYY)
// ADJer than YY -> MOD[comparativ](nicer,than), COMPAR(than, YYY)

// Rule 561
// More suitable than this dress
| NP{AP[compar]{quant#4, AP{?*,#1[last]}}}, conj#2[form:fthan], NP#3, ?*[verb:~], ?[endbis] |
	if ( HEAD(#5,#3) )
	MOD[comparativ=+](#4,#2),
	COMPAR(#2,#5).

// Rule 562
// More vigorous than nice
| AP[compar]{quant#4, AP#1, conj#2[form:fthan], AP#3} |
	if ( HEAD(#5,#1) & HEAD(#6,#3) )
	MOD[pre=+](#5,#4),
	MOD[comparativ=+](#4,#2),
	COMPAR(#2,#6).

// Rule XXX
// Bigger than the neighbout
| AP[compar]{?*,#1[last]}, conj#2[form:fthan], NP#3, ?*[verb:~], ?[endbis] | 
  if ( HEAD(#5,#3) )
  MOD[comparativ=+](#1,#2),
  COMPAR(#2,#5).

// Bigger than taller
| AP[compar]{?*,#1[last]}, conj#2[form:fthan], AP#3 |
  if ( HEAD(#6,#3) )
  MOD[comparativ=+](#1,#2),
  COMPAR(#2,#6).

// Rule XXXX
// More ADJ + Something which is neither AP nor NP but simple form that can be attached to "than"
| AP[compar]{quant#1, AP{?*,#2[adj,last]}}, conj#4[form:fthan], ADV#3, punct |
  if ( ~COMPAR(#4,?) )
  MOD[comparativ=+](#1,#4),
  COMPAR(#4,#3).

| AP[compar]{?*,#2[adj,last]}, conj#4[form:fthan], ADV#3, punct |
  if ( ~COMPAR(#4,?) )
  MOD[comparativ=+](#2,#4),
  COMPAR(#4,#3).

// Default case they may be a complex sentence after the than
| AP[compar]{quant#1,AP{?*,#2[last]}}, conj#4[form:fthan] |
 if ( ~COMPAR(#4,?) )
 MOD[comparativ=+](#1,#4)


| AP[compar]{?*,#2[last]}, conj#4[form:fthan] |
 if ( ~COMPAR(#4,?) & ~MOD[comparativ](?,#4) )
 MOD[comparativ=+](#2,#4)


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// 
//	Better Organization of PP attachment - 
// 

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 563
// Projectivity for PP attachments
// If all possible dependencies are calculated (the same word can be dependent of more that one head), then we restricted the possibilities using projectivity
if ( (VMOD(#1,#3) | NMOD(#1,#3) ) &  ( ^NMOD(#2,#4) | ^VMOD(#2,#4) )
		& #1 < #2 
		& #2 < #3
		& ( VMOD(#5,#4) | NMOD(#5,#4) )
		& ( #3 < #5 | #3[lemme]:#5[lemme] )
	)
	~




// Rule XXXX
// If we have at the same time a VMOD[temp] or VMOD[dur] and NMOD[temp] or NMOD[duration], then we give the preference to the VMOD 
// Note that if the temporal complement was introduced by OF, then it is already attached to the noun only
if ( OBJ(#3,#2) & ^NMOD(#2,#1[tempexpr]) & VMOD[temp](#3,#1) )
	~

// TOTOT

// Rule 499
//if ( VMOD[dur](#3,#1) & ^NMOD[dur](#2,#1) )
//	~


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// COORDINATION (END) 
//		
//		Sharing syntactic functions between coordinated elements

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 564
// Coordination of finite verbs in a clause
// e.g. It dissolves easily and degrades into the air.
| SC[startbis]{?*,FV{?*,#4[last,verb]}}, ?*[verb:~], (punct[comma]), SC{conj#5[conj,coord], FV{?*,#3[last]} } |
if ( MAIN(#1) & VDOMAIN(#1,#3) & ~SUBJ[pre](#3,?) & SUBJ[pre](#4,#6) )
	SUBJ[pre=+](#3,#6),
	COORD(#5,#3),
	COORD(#5,#4).

// Rule 565
// If between the two verbs there is an embedded clause that modifies the first verb
| SC[startbis]{?*,FV{?*,#4[last,verb]}}, ?*[verb:~], SC{BG{#50}}, ?*[verb:~], (punct[comma]), SC{conj#5[coord], FV{?*,#3[last]}} |
	if ( VDOMAIN(#1,#3) & ~SUBJ[pre](#3,?) & NMOD[post,sentence](#60,#70) & #4 < #60 & #70 < #5 & SUBJ[pre](#4,#6) )
	SUBJ[pre=+](#3,#6),
	COORD(#5,#3),
	COORD(#5,#4).




// Rule 566
// Coordinated verbs that share the same subject
// e.g. Merrymakers tossed confetti, squawked horns and popped champagne corks
// e.g. He ate, played and drank
if ( SUBJ(#1,#2) & COORD(#4,#1) & COORD(#4,#3) & ~SUBJ(#3,?) )
	SUBJ[deduced=+](#3,#2)



// Rule 567
// If one of two coordinated adverbs are involved as dependents in some relation, then the other coordinated adverb is involved in the same relatation
// He speaks slowly anb gently
| ADVP{?*,#1[coord]} | 
	if ( COORD(#1,#2) & COORD(#1,#3) & $1[!features:!](#4,#3) & ~$1(?,#2) )
	$1[deduced=+](#4,#2)

// Rule 568
// If an NP HEAD is a member of a dependency (as dependent) and this NP head is coordinated to other NP heads
// Then the other NP heads are also involved in a similar dependency.
// In this case, this is the first coordinated element on the left that distributes the functions to the other coordinated
// e.g. When did Spain and Korea restart ambassadorial relations ?
// NOTE: Constraint added to ensure that the coordinator is not "but" (I don't want a car but a motorbike) which receives a special treatement
if ( NCOORD(#1,#2) & COORD(#4[form:~fbut],#1[noun]) & COORD(#4,#5) &  $1[!features:!](#3,#1) & ~$1(?,#5) )
	$1[deduced=+](#3,#5)



// Rule 569
// Special rule when the coordinator is "but" and the main verb is a copula (John is not a sailor but a butcher)
// In this case we do not want the feature NEG to be distributed to the deduced relations
// SUBJATTR_NEG(John,sailor) but not *SUBJATTR_DEDUCED_NEG(John,butchder)
if ( NCOORD(#1,#2) & COORD(#4[form:fbut],#1) & COORD(#4,#5) &  $1[!subjcompl:!](#3,#1) & ~$1(?,#5) ) 
	$1[deduced=+](#3,#5)


// Rule 570
// Same rule as above (coordinated NP head that are dependents) but in this case, this is the last coordinated element 
// that distributes the functions to the other coordinated (comment clause between the coordinated subject and the verb)
// e.g. The dog and the cat which are here are nice
// NOTE: This rule creates some undesirable deduced dependency that are cleaned in a later stage
// e.g. He did not visit Peter and Paul 
// from NCOORD(Peter,Paul) a dependency NCOORD_DEDUCED(Peter,Peter) is also created but later cleaned (see cleaning rules)
if ( COORD(#4,#1[noun]) & COORD(#4,#5) &  $1[!features:!](#3,#5) & ~$1(?,#1) )
	$1[deduced=+](#3,#1)
// this above rule is a problem because it only works when the most lefted coordinated element is involved in a dependency. 
if ( COORD(#4,#1[noun]) & COORD(#4,#5) &  $1[!features:!](#3,#1) & ~$1(?,#5) )
	$1[deduced=+](#3,#5)

// Rule 571
// If a verb in prog. or infinitive form is member of a dep. as a dependent then the coordinated verbs in prog. form are also involved in a similar dependencies
// e.g. new leverage for influencing debates and promoting anti-american policies.
// NOTE : feature post is percolated to the new dependency
if ( VCOORD[prog](#1,#2) & ?[!features:!](#3,#1) & COORD(#4,#1) & COORD(#4,#5) & ~?(#3,#5) )
	?[deduced=+](#3,#5)


// Rule 572
// If a verb in a prog form is member of a dep. as governor then all the dependents of one of these coordinated verb are also dependents of
// the other coordinated verbs
// This is true only if this is the last (in the linear order) vprog, that has the dependent and not the first
// These rules are duplicated for OBJ and VMOD relations
// e.g. he is sleeping and dreaming every night (OK, we share)
// e.g. he is sleeping every night and dreaming (not sharing)
// e.g. he is sleeping every night and dreaming every week (not sharing)
// REVOIR si ca marche bien
if ( VCOORD[prog](#1,#2) & $1(#2,#3) & COORD(#4,#2) & COORD(#4,#5) & ~?(#2,#5) & ~$1(#1,?) & ~$1(#5,?) )
	$1[post=+](#5,#3)




// Rule 573
// If some one of some coordinated elements are involved as modifier in a NMOD dependency, then all the other coordinated elements
// have also the NMOD dependency with the same element.
// eg. The legislators act to have these laws studied and revised 
if ( NMOD[!features:!](#1,#2) & COORD(#3,#2) & COORD(#3,#4) & ~NMOD(#1,#4) ) 
	NMOD[pre=+](#1,#4)


// Rule 574
// When two pastpart are coordinated, we have to distribute VDOMAIN
// e.g. It is made and found.
if ( COORD(#1,#2[partpas]) & COORD(#1,#3[partpas]) & VDOMAIN[!features:!](#2,#5) )
	VDOMAIN(#3,#5)


// Rule 575
// Coordination of adjectives
| AP#20{?*,#2} |
if ( COORD(#1,#2[adj]) & COORD(#1,#3[adj]) & $1(#4,#20) & ~$1(#4,#2) )
	$1(#4,#2)


// Rule 576
// When the sentence anchor is coordinated with another verb, we destroy the main(verb) dependency and create a main whith the coordinator.
// e.g. The dog eats and play --> main(and)
if ( ^MAIN(#1) & COORD(#2,#1) )
	MAIN(#2)




// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// DISAMBIGUATION ERRORS  -- Need a very large context and can not be dealt in previous stages
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Rule 577
// Bad tagging NOUN-VERB 
// Starting NP in which there is a plural noun and a sing noun[hmm_verb:+] followed by anything but verb or if it is verb it must be in an embedded clause (trying to save some dependencies that will not be calculated otherwise)
// e.g. The legislators work(*NOUN) with official to pass enabling the new legislation.
//| ?*[verb:~], NP#1{?*[noun:~], #3[noun,pl], #4[noun,sg,hmm_verb]}, ?*[fin:~];(?*[fin:~],?[scbegin],?*), ?[last] |
//	if ( $1(#4,#6) )
//	$1(#3,#6),
//	LIXO(#3),
//	HEAD(#3,#1),
//	SUBJ[pre=+](#4,#3).	

// TROP D EFFETS DE BORD A CE NIVEAU, REFLECHIR COMMENT TRAITER CES PROBLEMES




// Rule 578
// For short messages like "Failed to solve the problem" no links betwee "failed" and "solve". Analysis must be equivalent to "It is failed to solve the problem"
| SC[startbis]{FV[first]{#1[first,last,partpas]}}, IV{prep[lemme:to], #2[verb]} |
	if ( ~$1(#2,#1) & MAIN(#1) )
	MOD[post=+,infinit=+](#1,#2).





//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// 
//	CLEANING . Removing duplicate dependencies
//		For instance VMOD(talked,boys) is calculated twice in "He talked to none of the boys"
//		1) The PP "of the boys" is VMOD of the nearest verb on its left
//		2) The PP "of the boys" is in fact the head of the quantified expression "to none of the boys"
//			which is a VMOD of the first verb on its left
// 
//	PASSING FEATURES
//		Passing the feature neg to every dependency which envolves a verb when the feature negat is 
//		present in the dependency of the verb argument
// 
// 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


// Rule 580
// Cleaning rules for SUBJ[pre] dependency.
// If we have more than one SUBJ[pre] for a finite verb, and if between these two subjects there is a comma, and if the first "subj" is linked dependent on its left, then we destroy this dependency
// e.g. Although its molecular characteristics is unknown, the reactive antigen may prove to be good. *SUBJ(may,unknown)
| NP#20, punct[comma], NP#30 | 
if ( HEAD(#2,#20) & ^SUBJ[pre](#1,#2) & HEAD(#3,#30) & SUBJ[pre](#1,#3) & ?(#4,#2) & #4 < #2 )
	~

// Need to do the same for the SUBJATTR which ahs been calculated before
| NP#20, punct[comma], NP#30 | 
if ( HEAD(#2,#20) & ^SUBJATTR(#2,#1) & HEAD(#3,#30) & SUBJATTR(#3,#1))
   ~


// If we have a NP followed by an infinitive followed by another NP followed by a Finite Verb, if the first NP is neither OBJ nor MOD, nor SUBJ
// If the second NP is SUBJ of the finite VERB and if the non finite verb is transitive and has no direct object, then the first NP is in fact the subject of the FV and the second NP is the OBJ of the infinitive
// e.g. Iran's deal with Russia to start the Bushehr nuclear plant has been delayed over Russian insistence on payment for spent fuel.
| NP#1, (PP;adv)*, IV{prep[lemme:to],?*,#10[last,trans:+]}, (adv), NP#2, (PP;adv)*, FV{?*,#3[last,verb]} | 
if ( HEAD(#4,#1) & HEAD(#5,#2) & ~SUBJ(?,#4) & ~OBJ(?,#4) & ~VMOD[post](?,#4) &
      ^SUBJ[pre](#3,#5) & VDOMAIN(#6,#3) )
      OBJ[pre=~,post=+](#10,#5),
      SUBJ[pre=+](#3,#4)


// Rule 579
// Cleaning rule : All duplicated dependencies are deleted
if ( $1(#1,#2) & ^$1(#1,#2) )
	~
// NOTE: Check with Claude....




// Rule 581
// Cleaning rule that removes dependencies which are NCOORD with feature DEDUCED 
// Test He should visit John and Peter with or without this cleaning rule
if ( ^NCOORD[deduced](?,?) | ^VCOORD[deduced](?,?) )
	~

// Rule 582
// e.g He asked who is the best friend of Mary 
// Indirect interrogatives in case of who...
// Cleaning rule that removes the feature relativ to subject that are not relative pronouns
// Simple verbal forms
if ( ^SUBJ[relativ](#1,#2) & VDOMAIN(#1,#1) & ~NMOD[relativ](?,#1) )
	SUBJ[relativ=~](#1,#2)


// Rule 583
// Same as above for complex verbal form in the embedded sentence
if ( ^SUBJ[relativ](#1,#2) & VDOMAIN(#3,#1) & ~NMOD[relativ](?,#3) )
	SUBJ[relativ=~](#1,#2)


// Rule 584
// Cleaning rule that removes dependencies that are reflexives
// Due to corrections after bad chunking (temporal complements inserted within a NP)
// Disjonction in order to avoid to destroy the vdomain dependency in case of simple finite verbs.
if ( ^VDOMAIN(#1,#1) )
	VDOMAIN(#1)

// Cleaning rule which removes a TIMEX of the object of waste
// eg you're wasting time *TIMEX(time)
if ( OBJ(#1[lemme:waste],#2) & ^TIMEX3(#2) )
~


// Rule 585
if ( ~HEAD(#1,#1) & ^$1(#1,#1) )
	~
// REPRENDRE PAS CORRECT




// Rule 586
if ( ^VDOMAIN(#1) )
	VDOMAIN(#1,#1)


// Rule 587
// Passing feature neg:+ to all dep. envolving arguments with negat:+ feature
// e.g. There was no food . We have QUANTD[negat](food,no), NUCL[subjcomp](was,food) and we want NUCL[subjcompl,neg](was,food)
if ( ( $1[negat](#2[noun],?) | PREPD[negat](?,#2[noun]) ) & ^$2[neg:~](#1,#2) )
	$2[neg=+](#1,#2)




/// From file cosmetics. Rectification of some problems


// Rule 588
// Case of past-participle that are between adjectives and verbs.
// In this case they are just VERB under the TOP node (no verbal chunk is constructed)
// A Subject relation have been constructed between the preceeding NP and this "verb" but at the same time this NP can be OBJECT of another verb on the left that have not been previously calculated
// e.g. The system is used to inactivate the gene designated XXX
//TOP{SC{NP{The system} FV{is}} NFV{used} IV{to inactivate} NP{the gene} designated NP{dr1819}}
| IV{?*,#5[last,trans]}; FV{?*,#5[last,trans]}; NFV{?*,#5[last,trans]};GV{?*,#5[last,trans]}, ?*[verb:~], NP#1, verb#2[partpas,adj] |
	if ( HEAD(#3,#1) & SUBJ(#2,#3) & ~OBJ(#5,?) & ~OBJ(#5,#3) )
	OBJ(#5,#3)




// Rule 589
// Case of objects of Verb/Adj
// e.g. The system is used to inactivate the gene designated XXX
| verb#1[verb,partpas,adj,trans], adv*, NP#2 |
	if ( ~OBJ(#1,?) & HEAD(#3,#2) & ~SUBJ(?,#3) ) 
	OBJ(#1,#3)


// Rule 595
// If a verbal node has the feature inter:+ and if it is the projection of a main dependency,
// Then the feature inter:+ is added to the main dependency
| FV[inter]{?*,#1};IV[inter]{?*,#1};NFV[inter]{?*,#1};GV[inter]{?*,#1} |
	if ( ^MAIN[inter:~](#1) )
	MAIN[interrog=+](#1).

// Rule XXXX
// Rectification of VMOD introduced by about when "about" modifies a quantifier
// e.g. They met about 300 people
if ( ^VMOD[post](#1,#2) & ^PREPD(#3[lemme:about],#2) & QUANTD(#2,#4[card:+]) )
	OBJ[post=+](#1,#2),
	QUANTMOD(#4,#3).

// Rule 620
// If a verb has two object complement, the one that is nearer the verb is an indirect object
// e.g. I gave Mary a book
// test if the second NP is not determined to avoid problems like "to serve it plain" *IOBJ(serve,it)
if ( ^OBJ[post](#1,#2) & OBJ[post](#1,#3[noun:+]) & (DETD(#3,?) | QUANTD(#3,?)) & ~COORD(?,#3) & #2 < #3 )
	IOBJ(#1,#2)


// Rule XXXXXX
// If a verb has two object complements, and if the second one is a stand-alone adjective, then we create a SUBJCOMPL relation betwee the verb and this second complement 
// e.g. They served it cold -> OBJCOMPL(served,cold)
if ( OBJ[post](#1,#2) & ^OBJ[post](#1,#3[adj:+,first:+,last:+]) & ~COORD(?,#3) & #2 < #3 )
	OBJCOMPL(#1,#3)



// Rule XXXXX
// Pre-modifier that is not attached to the folowing verb
// e.g. During the period of October 2003, she was sick
| PP#3[startbis,tempexpr:~], (PP;adv)*, punct[comma], SC{?*,FV{?*,#2}} |
if(  HEAD(#4,#3) & VDOMAIN(#1,#2) & ~VMOD(?,#4) ) 
     VMOD[pre=+](#1,#4) 



// LATER, EARLIER alone, when they are in the configuration
// NP[period], PP[of], ADV
// e.g. four years of campaign later
| NP#1[period], PP{prep[lemme:of]}, adv#2[time,compar] |
  if ( ~?(?,#2) | (^VMOD(#3[verb],#2))  )
  ADVMOD(#1,#2)



// Bad subject-object calculation when embedded clauses are involved.
// correct them before calculating embedment
// e.g The man who lives next door greeted John. *SUBJ(greeted, door), 
| NP#1, SC, NP#2, FV |
if ( HEAD(#3,#1) & HEAD(#4,#2) & ^SUBJ(#5,#4) & OBJ(#6,#4) & #6 < #5 
     & ~SUBJ(?,#3) )
SUBJ(#5,#3) 


// Missing subject. In a context
// NP(is neither subject nor object of anything), SC(with calculated subject), SC(with calculated subjec) FV(verb without subject
// e.g The man who said that Mary came greeted the woman. (greet has no subject)
| NP#1, SC, SC, FV{?*,#3[last]} |
if ( HEAD(#2,#1) & ~SUBJ(?,#2) & ~OBJ(?,#2) 
     & ~SUBJ(#3,?) )
SUBJ(#3,#2) 

//<<<<<<< dependency_copy_for_temp.xip
     
//=======
////////////////////////////////////
// FIX MAIN VERB DETECTION ERRORS //
////////////////////////////////////

// AB 2011.12.22 the governor of a subordinated sentential or infinitival OBJ that is detected as the main verb is the main verb
if ( ^MAIN(#1) & OBJ(#2[verb],#1) )
	MAIN(#2)
