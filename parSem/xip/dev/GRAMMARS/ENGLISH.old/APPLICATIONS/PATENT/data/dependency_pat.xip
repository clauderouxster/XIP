DependencyRules:

/////////////////////////////////////////////////////////////
////////////////////////// TITLES //////////////////////////
///////////////////////////////////////////////////////////

///////////////////////// WHAT /////////////////////////////

//If there is no preposition/having/object in the title, WHAT is the last word

| prep#1 |
if ( ~LIXO(#1) )
  LIXO(#1).


| #1[featuremark] |
if ( ~LIXO(#1) )
  LIXO(#1).

//COATING A PERFORATED SURFACE.
//{NP{COATING} NP{A AP{PERFORATED} SURFACE} .}

| np{?*, #1[actionword]}, np{#2[det], ?+} |
if ( ~LIXO(#1) )
  LIXO(#1).

//GLOVE HAVING ENHANCED THUMB CROTCH PADDING.
| #1[lemme:have,prog] |
if ( ~LIXO(#1) )
  LIXO(#1).

//Combinable and Interchangeable Water Features.
//NP{NOUN{Combinable and Interchangeable Water} Features} ._END:+

| np{?+, #2[last]}, #3[end] |
if ( ~LIXO(#4) )
   WHAT(#2).

//Spinal Protective Device.

| ?{noun{?*,#1[last]}}, #2[end] |
if ( ~LIXO(#3) & ~WHAT(?) )
   WHAT(#1).

| ?{?*,#1[last]}, #2[end] |
if ( ~LIXO(#3) & ~WHAT(?) )
   WHAT(#1).




if ( ^LIXO(#1) )
   ~.

//Spinal Protective Device.
//WHAT(Protective Device)
//NOUN{Protective Device}}

| noun#1{?+, #2} |
if ( ^WHAT(#1) )
   WHAT(#2).


//If there is a prepositon WHAT is the head of the first NP


//AIRBAG DEVICE FOR THE BODY.
//{NP{NOUN{NOUN{AIRBAG DEVICE} FOR THE BODY}} .}

| noun{#1[start], #2[last]} |
if ( ~WHAT(?) )
  WHAT(#2). 

| np{?[start], ?*, #1noun[last]} |
if ( ~WHAT(?) )  
  WHAT(#1).

//Anti-met monoclonal antibody, fragments and vectors thereof , for the treatment of tumors and corresponding products.
//NP{AP{ADJ{Anti - met}} monoclonal antibody} 

| np{ap{?[start]}, ?*, #1noun[last]} |
if ( ~WHAT(?) )  
  WHAT(#1).


//SWIM CAP WITH POCKET.
//NP{SWIM} NP{CAP}

| NP{#1[start]}, NP{#2[last]}, ?[noun:~] |
if ( ~WHAT(?) )
  WHAT(#2).

| np{#1noun[start,last]} |
if ( ~WHAT(?) )
  WHAT(#1).

//Toilet Bowl Cleaning Device Including Dual Activation Mechanism.
//WHAT(Bowl)
//{NP{Toilet Bowl} NP{NOUN{Cleaning Device}}

| np{?*,#1}, np{noun{?*,#2[last]}} |
if ( ^WHAT(#1) )
   WHAT(#2).

//Systems And Methods For Multi-Wavelength SPR Biosensing With Reduced Chromatic Aberration.
//COORD(And,Methods)
//COORD(And,Systems)
//WHAT(Systems)

if ( WHAT(#1) & COORD(?,#1) & COORD(?,#2) & ~WHAT(#2) )
   WHAT(#2).

//PROVIDING MULTIPLE VIDEO PERSPECTIVES OF ACTIVITIES THROUGH A DATA NETWORK TO A REMOTE MULTIMEDIA SERVER FOR SELECTIVE DISPLAY BY REMOTE VIEWING AUDIENCES.

| #1[whatifstart,start] |
if ( ~WHAT(#1) )
   WHAT(#1).

  
////////////////////// two WHATs

//Aerodynamic Garment With Applied Surface Roughness And Method Of Manufacture.
//WHAT(Garment)

| ?[lemme:and], np{?*,#2[whatword,last]} |
if ( WHAT(#1) & ~WHAT(#2) )
   WHAT(#2)

| ?[comma], np{?*,#2[whatword,last]} |
if ( WHAT(#1) & ~WHAT(#2) )
   WHAT(#2)

//SENSE AMPLIFIER AND SENSE AMPLIFIER LATCH HAVING COMMON CONTROL.
//WHAT(AMPLIFIER)
//AND NP{SENSE AMPLIFIER LATCH} GV{HAVING}

| ?[lemme:and], np{?*,#2[last]}, gv{#3[featuremark]} |
if ( WHAT(#1) & ~WHAT(#2) )
   WHAT(#2)


//FASHION AND NURSING SCARF/SHAWL.
//WHAT(SHAWL)
//NP{FASHION} AND NP{AP{NURSING} SCARF} / NP{SHAWL} .

| np{?+, #2[last]}, ?[lemme:\/], np{?*,#1[last]} |
if ( WHAT(#1) & ~WHAT(#2) )
   WHAT(#2)
   

//PARTICLE BEAM IRRADIATION APPARATUS AND PARTICLE BEAM THERAPY SYSTEM.
//WHAT(SYSTEM)
//NP{PARTICLE BEAM IRRADIATION APPARATUS} AND

| np{?+, #1[whatword]}, ?[lemme:and] |
if ( ~WHAT(#1) & WHAT(#2) )
   WHAT(#1).

//////////////////////// preposition with 2nd WHAT /////////////////////


//Storage-Stable Aqueous Solutions of Chlorine Dioxide and Methods for Preparing and Using Them.
//WHAT(#4Storage)
//WHAT(#2Methods)
//NP{AP{Aqueous} NOUN#1{Solutions of Chlorine Dioxide}} and NP{#2Methods} #3for

| np{?*, #1[noun,last]}, ?[lemme:and], np{?*,#2[whatword,last]}, #3[lemme:for] |
if ( ^WHAT(#4) & WHAT(#2) & ~LIXO(#5) & #2 < #3 )
   WHAT(#1).



/////////////////////// three WHAT's /////////////////////

//MIST ELIMINATOR, MOISTURE REMOVAL SYSTEM, AND METHOD OF REMOVING WATER PARTICLES FROM INLET AIR.
//WHAT(#1ELIMINATOR)
//WHAT(#3METHOD)
//{NP{MIST #1ELIMINATOR} , NP{NOUN{MOISTURE REMOVAL #2SYSTEM}} , AND NP{#3METHOD} 

| np{?*,#1[last]}, ?[comma], np{noun{?*,#2[last]}}, (?[comma]), ?[lemme:and], np{?*,#3[last]} |
if ( WHAT(#1) & WHAT(#3) )
   WHAT(#2).


///////////////////// no WHAT

//POLYPEPTIDES AND POLYNUCLEOTIDES, AND USES THEREOF AS A DRUG TARGET FOR PRODUCING DRUGS AND BIOLOGICS.
//OBJ_POST(PRODUCING,DRUGS)
//OBJ_POST(PRODUCING,BIOLOGICS)
//WHAT(BIOLOGICS)
//WHAT(DRUGS)

if ( ^WHAT(#1) & OBJ[post](#2,#1) )
   ~.

//One or more computer-readable media ...

if ( ^WHAT(#1[num]) )
   ~.

///////////////////////// PURPOSE /////////////////////////////

/
// A blade engagement system for cleaning and/or metering a release agent onto an image forming machine moving surface, such as a photoreceptor.
//MOD_POST(system,cleaning)
//for GV{cleaning}

| #3[lemme:for], GV{#2}  | 
if ( $1(#1[noun],#2[vprog]) & ~PREPD(#1,#4) )
   PURPOSE(#1,#3,#2).
\

//Computer-readable media, computerized methods, and computer systems for conducting semantic processes
//OBJ_POST(conducting,processes)
//NP{computer systems} for GV{conducting}
//WHAT(systems)

| NP{?*,#1}, #2[lemme:for], GV{#3} |
if ( WHAT(#1) & OBJ[post](#3,#4) )
   PURPOSE(#1,#4).

| pp#1{?[lemme:for], ?+} |
 if ( WHAT(#2) )
  PURPOSE(#2,#1).

//PROVIDING MULTIPLE VIDEO PERSPECTIVES OF ACTIVITIES THROUGH A DATA NETWORK TO A REMOTE MULTIMEDIA SERVER FOR SELECTIVE DISPLAY BY REMOTE VIEWING AUDIENCES.
//WHAT(PROVIDING)
//OBJ_POST(PROVIDING,PERSPECTIVES)

if ( WHAT(#1) & OBJ[post](#1,#2) )
   PURPOSE(#1,#2).

//SPORTS GLOVE WITH 3-DIMENSIONAL FINGER PORTION.
//NP{SPORTS GLOVE}
//WHAT(GLOVE)

| np{#1[adj:~,det:~],#2} |
if ( WHAT(#2) )
   PURPOSE(#2,#1).

//SWIM CAP WITH POCKET.
//{NP{SWIM} NP{CAP}
//WHAT(CAP)

| np{#1}, np{#2} |
if ( WHAT(#2) )
   PURPOSE(#2,#1).
/
//Combinable and Interchangeable Water Features.
//PURPOSE(Features,Combinable and Interchangeable Water)
//WHAT(Features)
//{NP{NOUN{Combinable and Interchangeable Water} Features} 

| np{noun#3{?+, #1[last]}, #2} |
if ( WHAT(#2) & ^PURPOSE(#2,#3) )
    PURPOSE(#2,#1).
\

//Sheet Wafer Defect Mitigation.
//{NP{Sheet Wafer Defect Mitigation} 
//MOD_PRE(Mitigation,Sheet)
//MOD_PRE(Mitigation,Wafer)
//MOD_PRE(Mitigation,Defect)
//WHAT(Mitigation_ACTIONWORD:+)


if ( WHAT(#1[actionword]) & MOD[pre](#1,#2) & ~PURPOSE(#1,#2) )
   PURPOSE(#1,#2).

//REFRIGERATION CYCLE APPARATUS.

if ( WHAT(#1[whatword]) & MOD[pre](#1,#2) & ~PURPOSE(#1,#2) )
   PURPOSE(#1,#2).

//PARKING SHELTER PROVIDED WITH PHOTOVOLTAIC SOLAR PANELS.
//MOD_PRE(SHELTER,PARKING)
//WHAT(SHELTER)

if ( WHAT(#1) & MOD[pre](#1,#2[vprog]) & ~PURPOSE(#1,#2) )
   PURPOSE(#1,#2).

///////////////////// PURPOSE of PURPOSE /////////////////

//GAS SAMPLING DEVICE.
//PURPOSE(#2DEVICE,#1SAMPLING)
//{NP{#3GAS} NP{AP{#1SAMPLING} #2DEVICE}

| NP{?*,#3[last]}, NP{AP{#1}, #2[last]} |
if ( PURPOSE(#2,#1) & ~PURPOSE(#1,#3) )
   PURPOSE(#1,#3).


//////////////////// order /////////////////////

//#1Sheet #2Wafer #3Defect #4Mitigation.
//PURPOSE(Mitigation,Sheet)
//PURPOSE(Mitigation,Wafer)
//PURPOSE(Mitigation,Defect)

if ( PURPOSE(#4,#1) & ^PURPOSE(#4,#2) & PURPOSE(#4,#3) & ~PURPOSE(#3,#2) & #1 < #2 & #2 < #3 )
   PURPOSE(#3,#2).

if ( ^PURPOSE(#4,#1) & PURPOSE(#3,#2) & PURPOSE(#4,#3) & ~PURPOSE(#2,#1) & #1 < #2 & #2 < #3 )
   PURPOSE(#2,#1).

//PROVIDING MULTIPLE VIDEO PERSPECTIVES OF ACTIVITIES THROUGH A DATA NETWORK TO A REMOTE MULTIMEDIA SERVER FOR SELECTIVE DISPLAY BY REMOTE VIEWING AUDIENCES.
//PURPOSE(PROVIDING,FOR SELECTIVE DISPLAY)
//PURPOSE(PROVIDING,PERSPECTIVES)
//OBJ_POST(PROVIDING,PERSPECTIVES)


if ( PURPOSE(#1,#2) & ^PURPOSE(#1,#3) & #2 < #3 & OBJ[post](#1,#2) )
   PURPOSE(#2,#3).

/
| #2[nofeature=+] |
if ( PURPOSE(#1,#2) )
   ~.
\

//////////////////// FEATURE //////////////////////

/////////////////// FEATURES OF WHAT //////////////

/////////////////// with //////////////////////

/
| pp#1{?[with], ?+} |
 if ( WHAT(#2)  )
  FEATURE(#2,#1).
\

//GLOVE WITH A TWO-PIECE WRIST GUARD.
//MOD_POST(#1GLOVE,#2WRIST GUARD)
//MOD_PRE(#2WRIST GUARD,#3TWO - PIECE)
//PREPD(#2WRIST GUARD,#4WITH)
//WHAT(#1GLOVE)

if ( WHAT(#1) & MOD[post](#1,#2) & MOD[pre](#2,#3) & PREPD(#2,#4[with]))
   FEATURE(#1,#4,#2), FEATURE(#2,#3).


//SWIM CAP WITH POCKET.
//WHAT(CAP)
//MOD_POST(CAP,POCKET)
//PREPD(POCKET,WITH)
if ( WHAT(#1) & MOD[post](#1,#2) & PREPD(#2,#4[with]) & ~FEATURE(#1,#4,#2) )
   FEATURE(#1,#4,#2).

/////////////////// adj ////////////////////////////


//VENTILATED GARMENTS.
//WHAT(GARMENTS)
//MOD_PRE(GARMENTS,VENTILATED)

//if ( WHAT(#1) & MOD[pre](#1,#2[adj,vprog:~]) )
//if ( WHAT(#1) & MOD[pre](#1,#2[adj]) )
if ( WHAT(#1) & MOD[pre](#1,#2) )
   FEATURE(#1,#2).

//HEAD ENCIRCLING SENSORY DEPRIVATION PILLOW.
//FEATURE(#3PILLOW,#5SENSORY)
//FEATURE(#3PILLOW,#4DEPRIVATION)
//WHAT(PILLOW)
//OBJ_POST(#2ENCIRCLING,#3PILLOW)
//NP{HEAD} GV{ENCIRCLING} NP{AP{SENSORY} DEPRIVATION PILLOW}

| np{?*,#1[last]}, gv{?*,#2[last]}, np{?*,#3[last]} |
if ( WHAT(#3) & FEATURE(#3,#4) & FEATURE(#3,#5) & OBJ[post](#2,#3) )
   FEATURE(#3,#1,#2).



////////////////// of ///////////////////////

//MAT OF MINERAL FIBERS INCLUDING AN AGENT CAPABLE OF TRAPPING FORMALDEHYDE AND MANUFACTURING PROCESSES.
//WHAT(MAT)
//MOD_POST(MAT,FIBERS)
//PREPD(FIBERS,OF)


if ( WHAT(#1) & MOD[post](#1,#2) & PREPD(#2,#3[lemme:of]) )
   FEATURE(#1,#3,#2).




/////////////////// featuremark (having, comprising, etc.) ////////////////////////////

//GLOVE HAVING ENHANCED THUMB CROTCH PADDING.
//OBJ_POST(#2HAVING,#3PADDING)
//WHAT(#1GLOVE)
//MOD_POST_GERUND(#1GLOVE,#2HAVING)


if ( WHAT(#1) & OBJ[post](#2,#3) & MOD[post,gerund](#1,#2) )
   FEATURE(#1,#2,#3).


//METAL ADSORBENT CONTAINING CHELATING POLYMER.
//OBJ_POST(#2CONTAINING,#3POLYMER)
//WHAT(#1ADSORBENT)
//{NP{METAL AP{#1ADSORBENT}} GV{#2CONTAINING}

| NP{?, AP#1}, GV{#2[vprog]} |
if ( WHAT(#1) & OBJ[post](#2,#3) )
   FEATURE(#1,#2,#3).


//MAT OF MINERAL FIBERS INCLUDING AN AGENT CAPABLE OF TRAPPING FORMALDEHYDE AND MANUFACTURING PROCESSES.
//WHAT(MAT)
//FEATURE(MAT,OF,FIBERS)
//PP{OF NP{MINERAL FIBERS}} GV{INCLUDING} 
//OBJ_POST(INCLUDING,AGENT)

| pp{#2, np{?*,#3[last]}}, gv{?*,#4[featuremark]} |
if ( WHAT(#1) & FEATURE(#1,#2,#3) & OBJ[post](#4,#5) )
   FEATURE(#3,#4,#5).






////////////////// FEATURE OF FEATURE //////////////////

//SPORTS GLOVE WITH AN ELASTICALLY JOINED PALM.
//FEATURE(#1PALM,#2JOINED)
//MOD_PRE(#2JOINED,#3ELASTICALLY)

if ( FEATURE(#1,#2) & MOD[pre](#2,#3) )
   FEATURE(#2,#3).

//GLOVE HAVING ENHANCED THUMB CROTCH PADDING.
//FEATURE(GLOVE,HAVING,PADDING)
//MOD_PRE(PADDING,ENHANCED)
//MOD_PRE(PADDING,THUMB)
//MOD_PRE(PADDING,CROTCH)

if ( FEATURE(#1,#2,#3) & MOD[pre](#3,#4) & ~FEATURE(#3,#4) )
   FEATURE(#3,#4).

//MAT OF MINERAL FIBERS INCLUDING AN AGENT CAPABLE OF TRAPPING FORMALDEHYDE AND MANUFACTURING PROCESSES.
//FEATURE(MAT,OF,FIBERS)
//MOD_PRE(FIBERS,MINERAL)


if ( FEATURE(#1,#2,#3) & MOD[pre](#3,#2) )
   FEATURE(#3,#2).

///////////////  exception  ///////////////

//One or more computer-readable media
//FEATURE(computer - readable,more)

if ( ^FEATURE(#1,#2[quant]) )
   ~.

//MOD_PRE(METHOD,DOUBLE - FEED)
//MOD_PRE(METHOD,KNITTING)
//DOUBLE-FEED KNITTING METHOD
//FEATURE_PROBA(METHOD,DOUBLE - FEED)


if ( ^FEATURE(#1,#2) & MOD[pre](#1,#3) & ~FEATURE(#1,#3) & #2 < #3 )
   ~.

//Aerodynamic Garment With Applied Surface Roughness And Method Of Manufacture.
//WHAT(Method)
//FEATURE(Garment,With,Method)

if ( WHAT(#1) & ^FEATURE(?,?,#1) )
   ~.

| np#2{?*,#1[last]} |
if ( WHAT(#2) & ^FEATURE(?,?,#1) )
   ~.

//DOUBLE-FEED KNITTING METHOD FOR A GARMENT SUCH AS TIGHTS OR THE LIKE, MACHINE TO IMPLEMENT SAID METHOD AND GARMENT PRODUCED THEREWITH.
//FEATURE(method,said_NOFEATURE:+)

if ( ^FEATURE(#1,#2[nofeature]) )
   ~.

//IDENTIFICATION APPARATUS
//FEATURE(APPARATUS,IDENTIFICATION)

if ( ^FEATURE(#1,#2[actionword]) & ~(MOD[pre](#3,#2) & WHAT(#3)) )
   ~.   

//////////// order of FEATURES ///////////////////////

//GLOVE HAVING ENHANCED THUMB CROTCH PADDING.
//FEATURE(#1PADDING,#2ENHANCED)
//FEATURE(PADDING,#3THUMB)
//FEATURE(PADDING,#4CROTCH)


if ( FEATURE(#1,#2) & ^FEATURE(#1,#3) & FEATURE(#1,#4) & #2 < #3 & #3 < #4 & #1 :: #1 )
   FEATURE(#4,#3).


if ( ^FEATURE(#1,#2) & FEATURE(#4,#3) & FEATURE(#1,#4) & #3 < #4 )
   FEATURE(#3,#2).


//SPORTS GLOVE WITH 3-DIMENSIONAL FINGER PORTION.
//EATURE(#1GLOVE,#5WITH,#4PORTION)
//FEATURE(#4PORTION,#23 - DIMENSIONAL)
//FEATURE(#4PORTION,#3FINGER)


if ( FEATURE(#1,#5,#4) & ^FEATURE(#4,#2) & FEATURE(#4,#3) & #2 < #3 & #3 < #4 )
   FEATURE(#3,#2).

//DOUBLE-FEED KNITTING METHOD
//FEATURE(METHOD,#3KNITTING)
//FEATURE(METHOD,#2DOUBLE - FEED)

if ( ^FEATURE(#1,#2) & FEATURE(#1,#3) & #2 < #3 )
   FEATURE(#3,#2).



/////////// marking WHAT ///////////////

if ( ^FEATURE(#1,#2) )
   FEATURE[what=+](#1,#2).

if ( ^FEATURE(#1,#2,#3) )
   FEATURE[what=+](#1,#2,#3).


/////////////////////////////////////////////////////////////
////////////////////////// CLAIMS //////////////////////////
///////////////////////////////////////////////////////////

