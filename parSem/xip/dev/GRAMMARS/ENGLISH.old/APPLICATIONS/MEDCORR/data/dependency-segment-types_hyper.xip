<DependencyRules:

// if the segment contains mentscopubl, it is not a biological fat
// 


//PERSON+PAST -> METHOD/RESULT

if ( ^SEGMENT[elspast](#1[mentscopubl,postat:~]) )
   SEGMENT[result=+,typed=+](#1).

if ( ^SEGMENT[elspast](#2,#1[mentscopubl,postat:~]) )
   SEGMENT[result=+,typed=+](#2,#1).

if ( ^SEGMENT[elspast](#2[mentscopubl,postat:~,md_person:~],#1) )
   SEGMENT[result=+,typed=+](#2,#1).

if ( ^SEGMENT[elspast](#2,#1[mentscopubl,postat:~],#3) )
   SEGMENT[result=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[elspast](#2[mentscopubl,postat:~,md_person:~],#1,#3) )
   SEGMENT[result=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[elspast](#2,#1,#3[mentscopubl,postat:~]) )
   SEGMENT[result=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[typed:~](#1[md_person],#2[mentscopubl:~]) )
   SEGMENT[method=+,typed=+](#1,#2).

if ( ^SEGMENT[typed:~](#1[md_person],#2[mentscopubl:~],#3[mentscopubl:~]) )
   SEGMENT[method=+,typed=+](#1,#2,#3).

if ( ^SEGMENT[typed:~,passive,elspast](#1[mentscopubl:~],#2[mentscopubl:~]) )
   SEGMENT[method=+,typed=+](#1,#2).

if ( ^SEGMENT[typed:~,passive,elspast](#1[mentscopubl:~],#2[mentscopubl:~],#3[mentscopubl:~]) )
   SEGMENT[method=+,typed=+](#1,#2,#3).


if ( ^SEGMENT[present,modal:~](#2,#1[mentscopubl,postat:~]) )
   SEGMENT[result=+,typed=+](#2,#1).

if ( ^SEGMENT[present,modal:~](#2[mentscopubl,postat:~],#1) )
   SEGMENT[result=+,typed=+](#2,#1).

if ( ^SEGMENT[present,modal:~](#2,#1[mentscopubl,postat:~],#3) )
   SEGMENT[result=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[present,modal:~](#2[mentscopubl,postat:~],#1,#3) )
   SEGMENT[result=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[present,modal:~](#2,#1,#3[mentscopubl,postat:~]) )
   SEGMENT[result=+,typed=+](#2,#1,#3).

/////////////

| #2[md_hedge=+] |
if ( $1(#1[md_hedge],#2) | $1(#2,#1[md_hedge]) )
   ~.


if ( ^SEGMENT[method:~](#2,#1[mentscopubl,postat]) )
   SEGMENT[hypothesis=+,typed=+](#2,#1).

if ( ^SEGMENT[method:~](#2,#1[md_hedge]) )
   SEGMENT[hypothesis=+,typed=+](#2,#1).

if ( ^SEGMENT[method:~](#2[mentscopubl,postat],#1) )
   SEGMENT[hypothesis=+,typed=+](#2,#1).

if ( ^SEGMENT[method:~](#2[md_hedge],#1) )
   SEGMENT[hypothesis=+,typed=+](#2,#1).

if ( ^SEGMENT[method:~](#2,#1[mentscopubl,postat],#3) )
   SEGMENT[hypothesis=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[method:~](#2,#1[md_hedge],#3) )
   SEGMENT[hypothesis=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[method:~](#2[mentscopubl,postat],#1,#3) )
   SEGMENT[hypothesis=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[method:~](#2[md_hedge],#1,#3) )
   SEGMENT[hypothesis=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[method:~](#2,#1,#3[mentscopubl,postat]) )
   SEGMENT[hypothesis=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[method:~](#2,#1,#3[md_hedge]) )
   SEGMENT[hypothesis=+,typed=+](#2,#1,#3).


if ( ^SEGMENT[modal,method:~](#1,#2) )
   SEGMENT[hypothesis=+,typed=+](#1,#2).

if ( ^SEGMENT[modal,method:~](#1,#2,#3) )
   SEGMENT[hypothesis=+,typed=+](#1,#2,#3).


//exc: EMBED_INFINIT(proliferate,allow)

if ( ^SEGMENT[infinitive](#2,#1) & ~EMBED[infinit](#1,?) )
   SEGMENT[goal=+,typed=+](#2,#1).

if ( ^SEGMENT[infinitive](#2,#1,#3) & ~EMBED[infinit](#1,?) )
   SEGMENT[goal=+,typed=+](#2,#1,#3).

if ( ^SEGMENT[present,modal:~,typed:~,elsprogress:~](#2,#1) )
   SEGMENT[fact=+,typed=+](#2,#1).

if ( ^SEGMENT[present,modal:~,typed:~,elsprogress:~](#2,#1,#3) )
   SEGMENT[fact=+,typed=+](#2,#1,#3).
   



//Problem
/
| #1[contr,nounary:~] |
  MARKER[problem=+](#1).

if ( $1(#1[contr],#2[mentscopubl]) | $1(#1[mentscopubl],#2[contr]) )
   MARKER[problem=+](#1).
   
if ( $1(#1[contr],#2[mentscopubl]) | $1(#1[mentscopubl],#2[contr]) )
   MARKER[problem=+](#2)
\

if ( BKDEP[contrast](#1) )
   MARKER[problem=+](#1).

if ( BKDEP[contr](#1) )
   MARKER[problem=+](#1).

if ( BKDEP[vis](#1) )
   MARKER[problem=+](#1).

if ( BKDEP[weakcontr](#1) )
   MARKER[problem=+](#1).

if ( BKDEP[contrast](#1,#2) )
   MARKER[problem=+](#1).

if ( BKDEP[contrast](#1,#2) )
   MARKER[problem=+](#2).

if ( BKDEP[contr](#1,#2) )
   MARKER[problem=+](#2).

if ( BKDEP[vis](#1[contr],#2) | BKDEP[vis](#1,#2[contr]) )
   MARKER[problem=+](#1).

if ( BKDEP[vis](#1[contr],#2) | BKDEP[vis](#1,#2[contr]) )
   MARKER[problem=+](#2).

if ( BKDEP[weakcontr](#1,#2) )
   MARKER[problem=+](#1).

if ( BKDEP[weakcontr](#1,#2) )
   MARKER[problem=+](#2).


if ( ^SEGMENT(#1) & MARKER[problem](#1) )
   SEGMENT[problem=+,typed=+](#1).
   
if ( ^SEGMENT(#1) & MARKER[problem](#2) & ( BKDEP[contrast](#2) | BKDEP[contr](#2) | BKDEP[weakcontr](#2) | BKDEP[vis](#2) ) )
   SEGMENT[problem=+,typed=+](#1).
   
if ( ^SEGMENT(#1,#2) & MARKER[problem](#1) | MARKER[problem](#2) )
   SEGMENT[problem=+,typed=+](#1,#2).
   
if ( ^SEGMENT(#1,#3) & MARKER[problem](#2) & ( BKDEP[contrast](#2) | BKDEP[contr](#2) | BKDEP[weakcontr](#2) | BKDEP[vis](#2) ) )
   SEGMENT[problem=+,typed=+](#1,#3).
   
if ( ^SEGMENT(#1,#2,#3) & MARKER[problem](#1) | MARKER[problem](#2) | MARKER[problem](#3) )
   SEGMENT[problem=+,typed=+](#1,#2).

if ( ^SEGMENT(#1,#3,#4) & MARKER[problem](#2) & ( BKDEP[contrast](#2) | BKDEP[contr](#2) | BKDEP[weakcontr](#2) | BKDEP[vis](#2) ) )
   SEGMENT[problem=+,typed=+](#1,#3,#4).

if ( LOGIC(#1) & ^SEGMENT(#1,#2) )
   SEGMENT[problem=+,typed=+](#1,#2)
   
if ( LOGIC(#1) & ^SEGMENT(#1,#2,#3) )
   SEGMENT[problem=+,typed=+](#1,#2,#3)
   
// contribution as result

if ( $1[contribution](#3) & ^SEGMENT(#1,#2,#3) )
   SEGMENT[result=+,typed=+](#1,#2).
   
if ( $1[contribution](#3) & ^SEGMENT(#1,#2,#3) )
   SEGMENT[result=+,typed=+](#1,#2).
   


//result as citation

if ( $1[md_evidential](?) & ^SEGMENT(#1,#2) )
   SEGMENT[typed=+,result=+](#1,#2).

if ( $1[md_evidential](?) & ^SEGMENT(#1,#2,#3) )
   SEGMENT[typed=+,result=+](#1,#2,#3).

if ( $1[md_evidential](?,?) & ^SEGMENT(#1,#2) )
   SEGMENT[typed=+,result=+](#1,#2).

if ( $1[md_evidential](?,?) & ^SEGMENT(#1,#2,#3) )
   SEGMENT[typed=+,result=+](#1,#2,#3).

/

//subjective fragments -> no facts

| #1[md_subj] |
  MARKER[md_subj=+](#1).


| TOP#1{ ?+ } |
if ( ~MARKER[md_subj](#2) )
   SENT[nomd_subj=+](#1).

| TOP#1{ ?+ } |
if ( MARKER[md_subj](#2) )
   SENT[md_subj=+](#1).

| #2[md_hedge] |
if ( ^SENT(#1) )
   SENT[hypothesis=+](#1).

\

//propagation

if ( SEGMENT[fact](#2) )
   SEGMENTVERB[fact=+,typed=+](#2).

if ( SEGMENT[result](#2) )
   SEGMENTVERB[result=+,typed=+](#2).

if ( SEGMENT[hypothesis](#2) )
   SEGMENTVERB[hypothesis=+,typed=+](#2).

if ( SEGMENT[method](#2) )
   SEGMENTVERB[method=+,typed=+](#2).

if ( SEGMENT[problem](#2) )
   SEGMENTVERB[problem=+,typed=+](#2).

if ( SEGMENT[goal](#2) )
   SEGMENTVERB[goal=+,typed=+](#2).

if ( SEGMENT[typed:~](#2) )
   SEGMENTVERB(#2).

////////////////////

if ( SEGMENT[fact](#1,#2[verb]) )
   SEGMENTVERB[fact=+,typed=+](#2).

if ( SEGMENT[result](#1,#2[verb]) )
   SEGMENTVERB[result=+,typed=+](#2).

if ( SEGMENT[hypothesis](#1,#2[verb]) )
   SEGMENTVERB[hypothesis=+,typed=+](#2).

if ( SEGMENT[method](#1,#2[verb]) )
   SEGMENTVERB[method=+,typed=+](#2).

if ( SEGMENT[problem](#1,#2[verb]) )
   SEGMENTVERB[problem=+,typed=+](#2).

if ( SEGMENT[goal](#1,#2[verb]) )
   SEGMENTVERB[goal=+,typed=+](#2).

if ( SEGMENT[typed:~](#1,#2[verb]) )
   SEGMENTVERB(#2).

////////////////////

if ( SEGMENT[fact](#1[verb],#2) )
   SEGMENTVERB[fact=+,typed=+](#1).

if ( SEGMENT[result](#1[verb],#2) )
   SEGMENTVERB[result=+,typed=+](#1).

if ( SEGMENT[hypothesis](#1[verb],#2) )
   SEGMENTVERB[hypothesis=+,typed=+](#1).

if ( SEGMENT[method](#1[verb],#2) )
   SEGMENTVERB[method=+,typed=+](#1).

if ( SEGMENT[problem](#1[verb],#2) )
   SEGMENTVERB[problem=+,typed=+](#1).

if ( SEGMENT[goal](#1[verb],#2) )
   SEGMENTVERB[goal=+,typed=+](#1).

if ( SEGMENT[typed:~](#1[verb],#2) )
   SEGMENTVERB(#1).


//////////

if ( SEGMENT[fact](#3,#1,#2) )
   SEGMENTVERB[fact=+,typed=+](#1).

if ( SEGMENT[result](#3,#1,#2) )
   SEGMENTVERB[result=+,typed=+](#1).

if ( SEGMENT[hypothesis](#3,#1,#2) )
   SEGMENTVERB[hypothesis=+,typed=+](#1).

if ( SEGMENT[method](#3,#1,#2) )
   SEGMENTVERB[method=+,typed=+](#1).

if ( SEGMENT[problem](#3,#1,#2) )
   SEGMENTVERB[problem=+,typed=+](#1).

if ( SEGMENT[goal](#3,#1,#2) )
   SEGMENTVERB[goal=+,typed=+](#1).

if ( SEGMENT[typed:~](#3,#1,#2) )
   SEGMENTVERB(#1).



///////////////

if ( SEGMENTVERB(#1) & SEGMENTVERB(#2) & #1 < #2 )
   CHAIN(#1,#2).

if ( ^CHAIN(#1,#2) & SEGMENTVERB(#3) & #1 < #3 & #3 < #2 )
   ~.


if ( ^SEGMENTVERB[typed:~](#1[vprog,first,korh_biomed-event:~]) & ~CHAIN(#2,#1) & ~MOD[post,gerund](?,#1) )
   SEGMENTVERB[typed=+,method=+](#1).

if ( CHAIN(#1,#2) & SEGMENTVERB[goal](#1) & ^SEGMENTVERB[typed:~](#2[vprog,korh_biomed-event:~]) )
   SEGMENTVERB[typed=+,method=+](#2).

if ( CHAIN(#1,#2) & SEGMENTVERB[result](#1) & ^SEGMENTVERB[typed:~](#2[vprog,korh_biomed-event:~]) )
   SEGMENTVERB[typed=+,method=+](#2).

if ( CHAIN(#1,#2) & SEGMENTVERB[fact](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[typed=+,fact=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[method](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[method=+,typed=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[result](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[result=+,typed=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[hypothesis](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[typed=+,hypothesis=+](#2)

///////////////

if ( CHAIN(#1,#2) & SEGMENTVERB[fact](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[typed=+,fact=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[method](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[method=+,typed=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[result](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[result=+,typed=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[hypothesis](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[typed=+,hypothesis=+](#2)

//////////////

if ( CHAIN(#1,#2) & SEGMENTVERB[fact](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[typed=+,fact=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[method](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[method=+,typed=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[result](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[result=+,typed=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[hypothesis](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[typed=+,hypothesis=+](#2)

if ( CHAIN(#1,#2) & SEGMENTVERB[problem](#1) & ^SEGMENTVERB[typed:~](#2) )
   SEGMENTVERB[typed=+,problem=+](#2)

/////////////////

if ( ^SEGMENT[typed:~](#1) & SEGMENTVERB[fact](#1) )
   SEGMENT[typed=+,fact=+](#1).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[fact](#1) )
   SEGMENT[typed=+,fact=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[fact](#2) )
   SEGMENT[typed=+,fact=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2,#3) & SEGMENTVERB[fact](#2) )
   SEGMENT[typed=+,fact=+](#1,#2,#3).

if ( ^SEGMENT[typed:~](#1) & SEGMENTVERB[method](#1) )
   SEGMENT[typed=+,method=+](#1).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[method](#1) )
   SEGMENT[typed=+,method=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[method](#2) )
   SEGMENT[typed=+,method=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2,#3) & SEGMENTVERB[method](#2) )
   SEGMENT[typed=+,method=+](#1,#2,#3).

if ( ^SEGMENT[typed:~](#1) & SEGMENTVERB[result](#1) )
   SEGMENT[typed=+,result=+](#1).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[result](#1) )
   SEGMENT[typed=+,result=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[result](#2) )
   SEGMENT[typed=+,result=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2,#3) & SEGMENTVERB[result](#2) )
   SEGMENT[typed=+,result=+](#1,#2,#3).

if ( ^SEGMENT[typed:~](#1) & SEGMENTVERB[hypothesis](#1) )
   SEGMENT[typed=+,hypothesis=+](#1).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[hypothesis](#1) )
   SEGMENT[typed=+,hypothesis=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[hypothesis](#2) )
   SEGMENT[typed=+,hypothesis=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2,#3) & SEGMENTVERB[hypothesis](#2) )
   SEGMENT[typed=+,hypothesis=+](#1,#2,#3).

if ( ^SEGMENT[typed:~](#1) & SEGMENTVERB[problem](#1) )
   SEGMENT[typed=+,problem=+](#1).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[problem](#1) )
   SEGMENT[typed=+,problem=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2) & SEGMENTVERB[problem](#2) )
   SEGMENT[typed=+,problem=+](#1,#2).

if ( ^SEGMENT[typed:~](#1,#2,#3) & SEGMENTVERB[problem](#2) )
   SEGMENT[typed=+,problem=+](#1,#2,#3).


//////////////////////////
//final
//////////////////////////

if ( ^$1[elspast](#1) )
   $1[past=+,elspast=~](#1)

if ( ^$1[elspast](#1,#2) )
   $1[past=+,elspast=~](#1,#2)

if ( ^$1[elspast](#1,#2,#3) )
   $1[past=+,elspast=~](#1,#2,#3)

if ( ^$1[elsprogress](#1) )
   $1[progress=+,elsprogress=~](#1)

if ( ^$1[elsprogress](#1,#2) )
   $1[progress=+,elsprogress=~](#1,#2)

if ( ^$1[elsprogress](#1,#2,#3) )
   $1[progress=+,elsprogress=~](#1,#2,#3)

if ( ^$1[elsperfect](#1) )
   $1[perfect=+,elsperfect=~](#1)

if ( ^$1[elsperfect](#1,#2) )
   $1[perfect=+,elsperfect=~](#1,#2)

if ( ^$1[elsperfect](#1,#2,#3) )
   $1[perfect=+,elsperfect=~](#1,#2,#3)




