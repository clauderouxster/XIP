DependencyRules:

//noconcept

//That readiness form was actually an attempt to think in an organized way about my career.
//MOD_SUBCAT_GRPR(attempt,think)
//PREPD(think,to)

| #1[noconcept=+] |
if ( $1(#1[noun],#2[verb]) & PREPD(#2,#3[lemme:to]) )
    ~.



//NUCL_SUBJCOMPL(are,low)

| #2[adj,noconcept=+] |
if ( NUCL[subjcompl](#1,#2) )
   ~.

| #1[adj,partpas,last,noconcept=+] |
  ~.


| #1[fam,proper,noconcept=+] |
  ~.

| #1[particlename,proper,noconcept=+] |
  ~.

| #1[let,noconcept=+] |
  ~.

| #1[transparent,noconcept=+] |
  ~.

| #1[initial,noconcept=+] |
  ~.

//NP{Tinto} , NP{1998}

| NP{#1[maj,noconcept=+]}, #2[comma], NP{#3} |
if ( DATE(#3) )
   ~.

//NP{Macfadyen} & NP{Dawson}

| NP{#1[maj,noconcept=+]}, #2[conj], NP{#3[noconcept=+]} |
  ~.

| #1[noconcept=+] |
if ( PREPD(#1[lemme:press],#2[lemme:in]) )
   ~.

| NP#1{#2[first,last,maj,noconcept=+]} |
  ~.

| ?[noconcept=+]{#1[first,last,noconcept]} |
  ~.

// using one tag for num, dig, quant

| ?[num,!enumer=+] |
  ~.

| ?[quant,!enumer=+] |
  ~.

| ?[dig,!enumer=+] |
  ~.





//NP{some}

| np{#1[quant,noconcept=+]} |
  ~.

//PP{in NP{order}} IV{to better integrate}

| PP{#1[lemme:in], NP{#2[noconcept=+,lemme:order]}}, IV{#3[lemme:to], ?+} |
  ~.

//NP{this AP{ADJ_ENUMER:+{3_ENUMER:+ - year}} research phase}}

| adj#1[enumer,!noconcept=+]{#2[first,enumer,!noconcept=+],?+} |
  ~. 

//

//| np#1{?*,#2[last,md:~,dig:~,num:~]} |
//if ( ~CONCEPT(#1) & ( $1(#2,#3[md]) | $1(#3[md],#2) ) )
//  CONCEPT(#1).

| np#1{?*,#2[last,md:~,enumer:~,tempexpr:~,noconcept:~]} |
if ( ~CONCEPT(#1) )
  CONCEPT(#1).



| np#1{?,#2[last,md,maj]} |
if ( ~CONCEPT(#1) )
  CONCEPT(#1).

//| noun#1 |
//if ( ~CONCEPT(#1) )
//  CONCEPT(#1).

//NP{a questionnaire survey}

| np#1{?[det],#2[last,md:~]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2).

| np#1{?[det],#2,#3[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2,#3).

if ( ^CONCEPT(#1[md],#2[md]) )
   ~.

| np#1{?[det],#2,#3,#4[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2,#3,#4).

if ( ^CONCEPT(#1[md],#2[md],#3[md]) )
   ~.

| np#1{?[det],#2,#3,#4,#5[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2,#3,#4,#5).


| np#1{?[det],#2[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2).   
//   ~.

| np#1{?[enumer],#2[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2).
//   ~.



//CONCEPT_IMPSENT_VIS(less effective schools)
//NP{less AP{effective} schools}

| NP#1{#2[enumer], #3, #4[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3,#4).


| NP#1{#2[enumer], #3, #4, #5[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3,#4,#5).


| np#1{?[pron],#2[last]} |
if ( ^CONCEPT(#1) )
//   ~.
   CONCEPT(#2).

| np#1{?[pron],#2, #3[last]} |
if ( ^CONCEPT(#1) )
//   ~.
   CONCEPT(#2,#3).

//NP{all our individual skills}
//CONCEPT(our,individual,skills)

| np#1{#2, #3[pron], #4, #5[last]} |
if ( ^CONCEPT(#3,#4,#5) )
    CONCEPT(#4,#5).

| np#1{#2, #3[pron], #4[last]} |
if ( ^CONCEPT(#3,#4) )
    CONCEPT(#4).

| np#1{#2[pron,last]} |
if ( ^CONCEPT(#1) )
   ~.

| np#1{#2[enumer,last]} |
if ( ^CONCEPT(#1) )
   ~.

| np#1{#2[enumer,last]} |
if ( ^CONCEPT(#1) )
   ~.

//NP{a AP{major} AP{current} public policy agenda}

| #1np{?[det],ap+,#2,#3,#4[last]} |
if ( ^CONCEPT(#1) & ( $1(#5[md],#4) | $1(#4,#5[md]) ) )
   CONCEPT(#2,#3,#4).

//NP{AP{ADV{perhaps} ADJ{Structural}} NOUN{Engineering}}

| #1np{ap{adv,#2adj}, #3np} |
if ( ^CONCEPT(#1) )
    CONCEPT(#2,#3).

//AP{generally positive} response}

| #1{#2adv,#3}, #4 |
if ( MOD(#4,#3) & ^CONCEPT(#1,#4) & ( $1(#5[md],#4) | $1(#4,#5[md]) ) )
   CONCEPT(#3,#4).

//NP{AP{such} AP{available} datasets}
//such available datasets

| NP#1{AP{#2[lemme:such]}, (?), #3[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3).

| NP#1{AP{#2[lemme:next]}, (?), #3[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3).

//CONCEPT_IMPSENT_CONTRIBUTION_VIS(such a highly decentralized institution)
//NP{AP{such} a AP{highly decentralized} institution}

| NP#1{AP{#2[lemme:such]}, det, #3, #4} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3,#4).


//other entities
//NP{AP{other} entities}

| NP#1{AP{#2[lemme:other]}, (?), #3[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3).



//CONCEPT_IMPSENT_CONTRIBUTION_VIS(numerous Faculties)
//NP{AP{numerous} Faculties}

| NP#1{AP{#2[lemme:numerous]}, #3} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3).


//CONCEPT_IMPSENT_VIS(an Institutional Strategic Plan)
//NP{an AP{Institutional} AP{Strategic} Plan}}

| NP#1{#2[det], AP#3, AP#5, #4[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3,#5,#4).


//CONCEPT_IMPSENT_VIS(a working group)
//NP{a AP{working} group}

| NP#1{#2[det], AP#3, #4[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3,#4).

//CONCEPT_IMPSENT_CONTRIBUTION(more comprehensive,overview)
//NP{a AP{more AP{comprehensive}} overview}

| AP#1{#2[enumer], ?[last]} |
if ( ^CONCEPT(#1,#3) )
   CONCEPT(#3).

//NP{AP{more AP{literal and utilitarian}} approaches}} 
//CONCEPT(more literal and utilitarian approaches)

| np#1{ap{#2[enumer], ap#3}, #4[last]} |
if ( ^CONCEPT(#1) )
    CONCEPT(#3,#4).


//NP{4,661 students}
//CONCEPT_IMPSENT_VIS(4,661 students)

| #1np{#2[enumer], #3[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3).

//CONCEPT_IMPSENT_VIS(at least one fully online course)
//NP{AP{at least one} AP{fully online} course}

| NP#1{AP{#2[lemme:at_least_one]}, #3,#4 } |
if ( ^CONCEPT(#1) )
   CONCEPT(#3,#4).

//35 doctoral degree programs
//NP{35 AP{doctoral} degree programs}
//CONCEPT_IMPSENT_CONTRIBUTION(35 doctoral degree programs)

| NP#1{?[enumer], AP{#2}, #3, #4[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2,#3,#4).

//CONCEPT_IMPSENT_CONTRIBUTION(60 master 's degree programs)
//NP{6,000 graduate students}

| NP#1{?[enumer], #2, #3[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2,#3).

//CONCEPT_IMPSENT_CONTRIBUTION(60 master 's degree programs)
//NP{60 master 's degree programs}

| NP#1{?[enumer], #2, #3, #4, #5[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2,#3,#4,#5).

//CONCEPT_IMPSENT_CONTRIBUTION(more than 70 bachelor 's degree programs)
//NP{NUMP{ADV{more than} 70} bachelor 's degree programs}

| NP#1{nump, #2, #3, #4, #5[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#2,#3,#4,#5).


//NP{AP{lesser[compar]} than Student E 's T} 
//CONCEPT_IMPSENT_CONTRIBUTION_VIS(lesser than Student E 's T)

| NP#1{AP{#2[compar]}, ?[lemme:than], ?+} |
if ( ^CONCEPT(#1) )
   ~.

//CONCEPT_IMPSENT_CONTRIBUTION_VIS(more,active,participant)

if ( ^CONCEPT(#1[enumer],#2,#3) )
   ~.

//CONCEPT_IMPSENT_CONTRIBUTION_VIS(Student D' s number)
//NP{Student D' s number}

| NP#1{?+, #2[particlename,proper], ?+} |
if ( ^CONCEPT(#1) )
   ~.


//When I was doing my bachelor on electrical engineering at UTS I thought doing only electrical subjects are not enough for my future career.
//NP{AP{only electrical} subjects}
//CONCEPT(only electrical subjects)


| np#1{ap{#2[degree],#3},#4[last]} |
if ( ^CONCEPT(#1) )
   CONCEPT(#3,#4).

////////////////////////////////
// refinements
//////////////////////////////


////various formulas

if ( ^CONCEPT(#1[lemme:various],#2) )
   CONCEPT(#2).

if ( ^CONCEPT(#1[lemme:diverse],#2) )
   CONCEPT(#2).

if ( ^CONCEPT(#1[lemme:other],#2) )
   CONCEPT(#2).

if ( ^CONCEPT(#1[lemme:different],#2) )
   CONCEPT(#2).

if ( ^CONCEPT(#1[lemme:major],#2) )
   CONCEPT(#2).

if ( ^CONCEPT(#1[lemme:own],#2) )
   CONCEPT(#2).




//add SUBCAT
//CONCEPT(ARG1,1,PRED,is,ARG2,of the major factors)

| pp#9{?,?{?*,#8[last]}} |
if ( ^CONCEPT(#6) &  HEAD(#7,#6) MOD[subcat](#7,#8) & HEAD(#8,#9) & ( $1(#10[md],#8) | $1(#8,#10[md]) ) )
   CONCEPT(#6,#9).

| pp#9{?,#10{?*,#8[last]}} |
if ( CONCEPT(#6,#9) &  HEAD(#7,#6) MOD[subcat](#7,#8) & HEAD(#8,#9) & ^CONCEPT(#10) & ( $1(#11[md],#8) | $1(#8,#11[md]) ) )
   ~.

| pp#8 |
if ( ^CONCEPT(#6) & MOD[subcat](#6,#7) & HEAD(#7,#8) )
   CONCEPT(#6,#8).

//PP#1{to NP{#2life}}
//MOD_SUBCAT_POST(#4right,#3life) MOD_SUBCAT_POST(focuses,children)
//CONCEPT(#2life)
//HEAD(#3life,#1to life)
//HEAD(#3,#2)

| pp#1 |
if ( ^CONCEPT(#2) & MOD[subcat](#4[noun],#3) & HEAD(#3,#1) & HEAD(#3,#2) )
   CONCEPT(#4,#1).

//in GV{protecting} NP{AP{prenatal} life} 
//CONCEPT(prenatal life)

| prep, GV{#1}, #2NP |
if ( ^CONCEPT(#2) & OBJ(#1,#3) & HEAD(#3,#2) )
   CONCEPT(#1,#2).


// Final cleanup



  
// CONCEPT(3_ENUMER:+_NOCONCEPT:+ - year,research,phase)
//AP{ADJ{3 - year}} 

| #1{#4[enumer]} |
if ( ^CONCEPT(#1,#2,#3) )
   CONCEPT(#2,#3).

//CONCEPT(first,priority)

if ( ^CONCEPT(#1[enumer],#2) )
   CONCEPT(#2).

if ( ^CONCEPT(#1[tempexpr],#2) )
   CONCEPT(#2).

//CONCEPT(2008,study,Reliability,statistics)

if ( ^CONCEPT(#1[enumer],#2,#3,#4) )
   CONCEPT(#2,#3,#4).]


//////////////////////// CONCEPT rules for the reflective parser \\\\\\\\\\\\\\

// CONCEPTS that are parts of REFLDEP are not CONCEPTS

if ( $1[refldep](#1,#2) & ^CONCEPT(#1) )
    ~.
if ( $1[refldep](#1,#2) & ^CONCEPT(#2) )
    ~.

if ( $1[otherrefldep](#1,#2) & ^CONCEPT(#1) )
    ~.
if ( $1[otherrefldep](#1,#2) & ^CONCEPT(#2) )
    ~.



/////////////////////

/////////////

| #1[conceptword=+] |
if ( CONCEPT(#1) )
    ~.

| #1[conceptword=+] |
if ( CONCEPT(#1,#2) )
    ~.

| #2[conceptword=+] |
if ( CONCEPT(#1,#2) )
    ~.

| #1[conceptword=+] |
if ( CONCEPT(#1,#2,#3) )
    ~.

| #2[conceptword=+] |
if ( CONCEPT(#1,#2,#3) )
    ~.

| #3[conceptword=+] |
if ( CONCEPT(#1,#2,#3) )
    ~.

| #1[conceptword=+] |
if ( CONCEPT(#1,#2,#3,#4) )
    ~.

| #2[conceptword=+] |
if ( CONCEPT(#1,#2,#3,#4) )
    ~.

| #3[conceptword=+] |
if ( CONCEPT(#1,#2,#3,#4) )
    ~.

| #4[conceptword=+] |
if ( CONCEPT(#1,#2,#3,#4) )
    ~.


//////////////////////////////////////

/////////////////// filter out noconcepts

if ( ^CONCEPT(#1[noconcept]) )
   ~.


/////////////////////////////////////////////////////////////////////////////
///////////////////////  MARK CONCEPTS \\\\\\\\\\\\\\\\\\\\\\\\\\\\\
/////////////////////////////////////////////////////////////////////////////


//CONTRIBUTION is not IMPSENT in the reflective parser


if ( SENT(#1) & ^CONCEPT[contribution](#2) )
    CONCEPT[contribution=~,impsent=~,reflsent=~](#2).

if ( SENT(#1) & ^CONCEPT[contribution](#2,#3) )
    CONCEPT[contribution=~,impsent=~,reflsent=~](#2,#3).

if ( SENT(#1) & ^CONCEPT[contribution](#2,#3,#4) )
    CONCEPT[contribution=~,impsent=~,reflsent=~](#2,#3,#4).

if ( SENT(#1) & ^CONCEPT[contribution](#2,#3,#4,#5) )
    CONCEPT[contribution=~,impsent=~,reflsent=~](#2,#3,#4,#5).

/////////////


if ( REFLSENT(#1) & ^CONCEPT(#2) )
   CONCEPT[reflsent=+](#2).

if ( REFLSENT(#1) & ^CONCEPT(#2,#3) )
   CONCEPT[reflsent=+](#2,#3).

if ( REFLSENT(#1) & ^CONCEPT(#2,#3,#4) )
   CONCEPT[reflsent=+](#2,#3,#4).

if ( REFLSENT(#1) & ^CONCEPT(#2,#3,#4,#5) )
   CONCEPT[reflsent=+](#2,#3,#4,#5).




| #1[conceptword=~] |
if ( CONCEPT[reflsent:~](#1) )
   ~.

| #1[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2) )
   ~.

| #2[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2) )
   ~.

| #1[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2,#3) )
   ~.

| #2[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2,#3) )
   ~.

| #3[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2,#3) )
   ~.

| #1[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2,#3,#4) )
   ~.

| #2[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2,#3,#4) )
   ~.

| #3[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2,#3,#4) )
   ~.

| #4[conceptword=~] |
if ( CONCEPT[reflsent:~](#1,#2,#3,#4) )
   ~.


/////////////////////////// CONCEPT SPECIFICINDICATOR  \\\\\\\\\\\\\\\\

/
if (^CONCEPT(#1[specificindicator]) )
   CONCEPT[specificindicator=+](#1)

if (^CONCEPT(#1[specificindicator],#2) )
   CONCEPT[specificindicator=+](#1,#2)

if (^CONCEPT(#1[specificindicator],#2,#3) )
   CONCEPT[specificindicator=+](#1,#2,#3)

if (^CONCEPT(#1[specificindicator],#2,#3,#4) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)


if (^CONCEPT(#1,#2[specificindicator]) )
   CONCEPT[specificindicator=+](#1,#2)

if (^CONCEPT(#1,#2[specificindicator],#3) )
   CONCEPT[specificindicator=+](#1,#2,#3)

if (^CONCEPT(#1,#2[specificindicator],#3,#4) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)

if (^CONCEPT(#1,#2,#3[specificindicator]) )
   CONCEPT[specificindicator=+](#1,#2,#3)

if (^CONCEPT(#1,#2,#3[specificindicator],#4) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)


if (^CONCEPT(#1,#2,#3,#4[specificindicator]) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)

\
/////////////////////////// CONCEPT CONTEXTINDICATOR  \\\\\\\\\\\\\\\\

/
if (^CONCEPT(#1[contextindicator]) )
   ~.

if (^CONCEPT(#1[contextindicator],#2) )
   ~.

if (^CONCEPT(#1[contextindicator],#2,#3) )
   ~.

if (^CONCEPT(#1[contextindicator],#2,#3,#4) )
   CONCEPT[contextindicator=+](#1,#2,#3,#4)


if (^CONCEPT(#1,#2[contextindicator]) )
   ~.

if (^CONCEPT(#1,#2[contextindicator],#3) )
   ~.

if (^CONCEPT(#1,#2[contextindicator],#3,#4) )
   ~.

if (^CONCEPT(#1,#2,#3[contextindicator]) )
   ~.

if (^CONCEPT(#1,#2,#3[contextindicator],#4) )
   ~.


if (^CONCEPT(#1,#2,#3,#4[contextindicator]) )
   ~.


\

/////////////////////////// CONCEPT SPECIFICINDICATOR  \\\\\\\\\\\\\\\\

/

if (^CONCEPT(#1[specificindicator]) )
   CONCEPT[specificindicator=+](#1)

if (^CONCEPT(#1[specificindicator],#2,#3) )
   CONCEPT[specificindicator=+](#1,#2,#3)

if (^CONCEPT(#1[specificindicator],#2,#3,#4) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)


if (^CONCEPT(#1,#2[specificindicator]) )
   CONCEPT[specificindicator=+](#1,#2)

if (^CONCEPT(#1,#2[specificindicator],#3) )
   CONCEPT[specificindicator=+](#1,#2,#3)

if (^CONCEPT(#1,#2[specificindicator],#3,#4) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)

if (^CONCEPT(#1,#2,#3[specificindicator]) )
   CONCEPT[specificindicator=+](#1,#2,#3)

if (^CONCEPT(#1,#2,#3[specificindicator],#4) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)

if (^CONCEPT(#1,#2,#3,#4[specificindicator]) )
   CONCEPT[specificindicator=+](#1,#2,#3,#4)
\
/////////////////////////// CONCEPT SHIFTINDICATOR  \\\\\\\\\\\\\\\\


/
if (^CONCEPT(#1[shiftindicator],#2[shiftindicator:~]) )
   CONCEPT[shiftindicator=+](#1,#2)

if (^CONCEPT(#1[shiftindicator],#2,#3) )
   CONCEPT[shiftindicator=+](#1,#2,#3)

if (^CONCEPT(#1[shiftindicator],#2,#3,#4) )
   CONCEPT[shiftindicator=+](#1,#2,#3,#4)


if (^CONCEPT(#1,#2[shiftindicator]) )
   CONCEPT[shiftindicator=+](#1,#2)

if (^CONCEPT(#1,#2[shiftindicator],#3) )
   CONCEPT[shiftindicator=+](#1,#2,#3)

if (^CONCEPT(#1,#2[shiftindicator],#3,#4) )
   CONCEPT[shiftindicator=+](#1,#2,#3,#4)

if (^CONCEPT(#1,#2,#3[shiftindicator]) )
   CONCEPT[shiftindicator=+](#1,#2,#3)

if (^CONCEPT(#1,#2,#3[shiftindicator],#4) )
   CONCEPT[shiftindicator=+](#1,#2,#3,#4)

if (^CONCEPT(#1,#2,#3,#4[shiftindicator]) )
   CONCEPT[shiftindicator=+](#1,#2,#3,#4)

\



//development of my skills
//CONCEPT_REFLSENT(#1skills)
//CONCEPT_REFLSENT(#2development)
//PREPD(#1skills,#3of)
//MOD_SUBCAT_POST(#2development,#1skills)

/
| #1{#2[first,last]} |
if ( ^CONCEPT(#1) )
    CONCEPT(#2)

if ( ^CONCEPT(#1) & CONCEPT(#2) & MOD(#2,#1) & PREPD(#1,#3[lemme:of]) )
    CONCEPT[proba=+](#2,#3,#1).

if ( CONCEPT(#2,#3,#1) & ^CONCEPT(#2) & MOD(#2,#1) & PREPD(#1,#3[lemme:of]) )
    ~.
\


////////////////// CONCEPTWORD + CONTEXTWORD \\\\\\\\\\\\\\\\\

if ( ^CONCEPT(#1[contextword]) )
    ~.

if ( ^CONCEPT(#1[contextword],#2) )
    ~.

if ( ^CONCEPT(#1[contextword],#2,#3) )
    ~.

if ( ^CONCEPT(#1[contextword],#2,#3,#4) )
    ~.

if ( ^CONCEPT(#1,#2[contextword]) )
    ~.

if ( ^CONCEPT(#1,#2[contextword],#3) )
    ~.

if ( ^CONCEPT(#1,#2[contextword],#3,#4) )
    ~.

if ( ^CONCEPT(#1,#2,#3[contextword]) )
    ~.

if ( ^CONCEPT(#1,#2,#3[contextword],#4) )
    ~.

if ( ^CONCEPT(#1,#2,#3,#4[contextword]) )
    ~.

////////////////// CONCEPTWORD + AUTHREFL \\\\\\\\\\\\\\\\\


if ( ^CONCEPT(#1[authrefl]) )
    ~.

if ( ^CONCEPT(#1[authrefl],#2) )
    ~.

if ( ^CONCEPT(#1[authrefl],#2,#3) )
    ~.

if ( ^CONCEPT(#1[authrefl],#2,#3,#4) )
    ~.

if ( ^CONCEPT(#1,#2[authrefl]) )
    ~.

if ( ^CONCEPT(#1,#2[authrefl],#3) )
    ~.

if ( ^CONCEPT(#1,#2[authrefl],#3,#4) )
    ~.

if ( ^CONCEPT(#1,#2,#3[authrefl]) )
    ~.

if ( ^CONCEPT(#1,#2,#3[authrefl],#4) )
    ~.

if ( ^CONCEPT(#1,#2,#3,#4[authrefl]) )
    ~.