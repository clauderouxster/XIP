DependencyRules:




// new dependency PERSON


// HUNTINGTON's polemic theory
//MOD_PRE(theory,HUNTINGTON)
//PARTICLE(HUNTINGTON,'s)

if ( $1(#1[mentscopubl],#2[proper]) & PARTICLE(#2,?) & ~PERSON(#2) )
   PERSON(#2).

if ( ( $1(#1[mentscopubl],#2[c_person,maj]) | $1(#1[proper],#2[mentscopubl]) ) & PARTICLE(#2,?) & ~PERSON(#2) )
   PERSON(#2).

//the work of Lyn Henderson[fam]
//MOD_SUBCAT_POTCONCEPT_POST(work_MENTSCOPUBL:+,Lyn_PROPER:+)
//PREPD(#5Lyn_PROPER:+,#6of)

if ( $1(#1[mentscopubl],#2[proper,fam] ) & PREPD(#2,#3[lemme:of]) & ~PERSON(#2) )
   PERSON(#2).

if ( $1(#1[mentscopubl],#2[proper,fam] ) & PREPD(#2,#3[lemme:by]) & ~PERSON(#2) )
   PERSON(#2).

//MOD_PRE(2003,Connolly)
if ( MOD[pre](#1,#2[proper]) & DATE(#1) & ~PERSON(#2) )
   PERSON(#2).


//NP{NOUN{NOUN{John} NOUN{Dewey}}}
//SUBJ-N_POTCONCEPT_PRE(conducted,Dewey)
//HEAD(#2Dewey,#1John Dewey)
//PERSON_IMPORTANCE(#1John Dewey)
//MOD_PROPER(#2Dewey,#3John)

//| noun#1{noun{#2}, noun{#3}} |
| noun#1{#2noun, #3noun} |
if ( PERSON(#1) & MOD[proper](#3,#2) )
   PERSON(#3).

//Authors such as PRAKASH
//MOD_POTCONCEPT_POST(Authors,PRAKASH)
//PREPD(PRAKASH,such as)

if ( MOD(#1[lemme:author],#2[maj]) & ( PREPD(#2,#3[lemme:such_as]) | PREPD(#2,#3[lemme:as]) | PREPD(#2,#3[lemme:like]) ) & ~PERSON(#2) )
   PERSON(#2).

if ( MOD(#1[lemme:writer],#2[maj]) & ( PREPD(#2,#3[lemme:such_as]) | PREPD(#2,#3[lemme:as]) | PREPD(#2,#3[lemme:like]) ) & ~PERSON(#2) )
   PERSON(#2).

// according to Nash

if ( PREPD(#1[proper],#2[lemme:according_to])& ~PERSON(#1) )
   PERSON(#1).   

//Titles of publications

| #1[publtit] |	 
	 PUBLICATIONTITLE(#1).



//************Find reference markers in sentences**********************
   

//Richard Pring's paper on 'The Common School' (2007)
//MOD_PRE(paper,Richard Pring)
//PERSON(Richard Pring)

//Pring's approach

if ( PERSON(#1) & ^$1(#2[mentscopubl],#1) )
   $1[reference=+](#2).

if ( PERSON(#1) & ^$1(#1,#2[mentscopubl]) )
   $1[reference=+](#2,#1).

if ( PUBLICATIONTITLE(#1) & ^$1(#2[mentscopubl],#1) )
   $1[reference=+](#2,#1).

if ( PUBLICATIONTITLE(#1) & ^$1(#1,#2[mentscopubl]) )
   $1[reference=+](#2,#1).

// the paperÂ´s


if ( ^DETD(#1[publ],#2[lemme:the]) & PARTICLE(#1,?))
   DETD[reference=+](#1,#2).

/
//the paper
// NP{the paper}

| np{#1[lemme:the],#2[publ]} |
if ( ^DETD(#2,#1) )
   DETD[reference=+](#2,#1).

\
// his argument
//DETD(argument_OTHERPUBLICATION:+_TOCOLOR:+,his)
/
| #2[publ=+,mentscopubl=+,rf=+] |
if ( ^DETD(#1[mentscopubl],#2[lemme:he]) )
   DETD[reference=+](#1,#2).

| #2[publ=+,mentscopubl=+,rf=+] |
if ( ^DETD(#1[mentscopubl],#2[lemme:they]) )
   DETD[reference=+](#1,#2).
\

/
// ' INS{( NP{2007} 
//DATE(2007)

| INS{?, np{#1}, ? } |
if ( ^DATE(#1) )
   DATE[reference=+](#1).
\

// as H. D. Lewis would have it
// ASL(as,H. D. Lewis)
// AUTHOR(H. D. Lewis)

if ( ASL(#1,#2) & ^PERSON(#2) & ~PERSON(#2) )
   AUTHOR[reference=+](#2).

//(Carr and Hartnett, 1996, p. 57)
//INS{( NP{Carr} and NP{Hartnett} , NP{1996} , NP{p. 57} )} 
// DATE(1996)

| INS{ ?*, np{#2}, ?* } |
if ( ^DATE(#2) )
   DATE[reference=+](#2).

//(see Fielding 2005:129)
//( FV{see} NP{Fielding 2005} : NP{129} ) 

| punct[form:fopar], ?*[form:~fcpar], np{?*,#2}, ?*[form:~fcpar], punct[form:fcpar] |
if ( ^DATE(#2) & ~DATE[reference](#2) )
   DATE[reference=+](#2).

// ( FV{see}} NP{Hart et al.} , NP{2004} ) 
//TEMP_POST_T_ABSOLUT(see,2004)

|  np#3{#2[dig]}, punct[form:fcpar] |
if ( ^DATE(#2) & ~DATE[reference](#2) & TEMP(#1[lemme:see],#3) )
   DATE[reference=+](#2).

if ( $1[reference](#1,#2) & ^PERSON(#3) & ~AUTHOR(#3) )
   AUTHOR(#3).

if ( $1[reference](#1) & ^PERSON(#3) & ~AUTHOR(#3) )
   AUTHOR(#3).

//FV{see} NP{Fielding} , NP{2001} 
//DATE_REFERENCE(2001)
//OBJ_POST(see,Fielding)

| fv{#1[lemme:see]}, np{#2}, ?[comma], np{#3} |
if ( DATE[reference](#3) & OBJ(#1,#2) & ~AUTHOR(#2) )
   AUTHOR(#2).

Script:

iftest ( AUTHOR(#1) ) { #1[publ=+,rf=+,mentscopubl=+]; }

DependencyRules:

//************Mark dependencies that contain potentially relevant constituent concepts in reference sentences**********************

/

if ( ^$1(#1[mentsco],#2) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( ^$1(#1,#2[mentsco]) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( ^$1(#1[publ],#2) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( ^$1(#1,#2[publ]) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( ^$1(#1[attitude],#2) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( ^$1(#1,#2[attitude]) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( ^$1(#1[deict],#2) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( ^$1(#1,#2[deict]) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

if ( AUTHOR(#1) & ^$1(#1,#2) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).
   
if ( AUTHOR(#2) & ^$1(#1,#2) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

\

/   

if ( $1[potconcept](#1,#2) & HEAD(#1,#3) )
   $1[extension=+,potconcept=+](#3,#2).
  
if ( $1[potconcept](#1,#2) & HEAD(#2,#3) )
   $1[extension=+,potconcept=+](#1,#3).
  


\

/
if ( ( ^$1(#1[mentsco],#2[attitude]) | ^$1(#1[attitude],#2[mentsco]) ) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).


if ( ( ^$1(#1[mentsco],#2[importance]) | ^$1(#1[importance],#2[mentsco]) ) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).
\


if ( ( ^$1(#1[mentscopubl],#2) | ^$1(#1,#2[mentscopubl]) ) & ( $2[reference](?,?) | $2[reference](?) ) )
   $1[potconcept=+](#1,#2).

| #1[potconcept=+] |
if ( $1[potconcept](#1,#2) )
   ~.

| #2[potconcept=+] |
if ( $1[potconcept](#1,#2) )
   ~.

if ( ^EMBED[potconcept](#1,#2) )
   EMBED[potconcept=~](#1,#2).

//************Propagate features of modifiers to modified words**********************

//MOD_POTCONCEPT_PRE(field,academic)

Script:


iftest ( MOD[potconcept,pre](#1[verb:~],#2[scope]) ) { #1[rf=+,scope=+,mentsco=+,mentscopubl=+]; }

DependencyRules:

if ( ^MOD[potconcept,pre](#1[scope],#2[scope]) )
   MOD[potconcept=~](#1,#2).


Script:


iftest ( MOD[potconcept,pre](#1[verb:~],#2[mental]) ) { #1[rf=+,mental=+,mentsco=+,mentscopubl=+]; }

DependencyRules:

if ( ^MOD[potconcept,pre](#1[mental],#2[mental]) )
   MOD[potconcept=~](#1,#2).


Script:


iftest ( MOD[potconcept,pre](#1[verb:~],#2[publ]) ) { #1[rf=+,publ=+,mentscopubl=+]; }

DependencyRules:

if ( ^MOD[potconcept,pre](#1[publ],#2[publ]) )
   MOD[potconcept=~](#1,#2).


//************Subconcepts that are not defined in the lexicon but by structural positions**********************


Script:


//iftest ( QUALIF(#1[mentscopubl,noun],#2[timefact:~,deict:~,rf:~,noqualif:~]) ) { #2[qualification=+,rf=+] ; }

DependencyRules:

if ( SUBJ-N(#1[rf],#2[proper,guess]) ) 
   AUTHOR(#2).
   
//************Dependencies where both words are subconcepts are not potential any more**********************

DependencyRules:

if ( ^$1(#1[rf],#2[rf]) & ~$1[refdep](#1,#2) & #1~:#2 )
   $1[refdep=+,potconcept=~](#1,#2).

if ( ^EMBED[refdep](#1,#2) )
   EMBED[refdep=~](#1,#2).


/
//************Extend relevant dependencies to the whole chunk**********************

if ( $1[refdep](#1,#2) & HEAD(#2,#3) )
   $1[refdep,extension=+](#1,#3).

if ( $1[refdep,extension](#1,#2) & HEAD(#1,#3) )
    $1[refdep,extension=+](#3,#2).
\
///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////				mark REFDEP	        	///////////	
///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

if ( ( ^$1[refdep](#1[importance],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[importance]) ) )
   $1[refdep,importance=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[convergence],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[convergence]) ) )
   $1[refdep,convergence=+,firsttag=+](#1,#2).

//if ( ( ^$1[refdep](#1[qualification],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[qualification]) ) )
//   $1[refdep,qualification=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[nega],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[nega]) ) )
   $1[refdep,nega=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[posi],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[posi]) ) )
   $1[refdep,posi=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[surprise],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[surprise]) ) )
   $1[refdep,surprise=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[argumentation],#2[rf]) | ^$1[refdep](#1[rf],#2[argumentation]) ) )
   $1[refdep,argumentation=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[evidence],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[evidence]) ) )
   $1[refdep,evidence=+,firsttag=+](#1,#2).

// as illustrated

if ( ASL(#1,#2[evidence]) )
   ASL[refdep=+,evidence=+](#1,#2).


if ( ( ^$1[refdep](#1[relation],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[relation]) ) )
   $1[refdep,relation=+](#1,#2).

//if ( ( ^$1[refdep](#1[comp],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[comp]) ) )
//   $1[refdep,comp=+](#1,#2).


///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////				mark REFDEP	        	///////////	
///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////



//************Mark dependencies and sentences where the subconcepts are more likely to convey relevant contents: these sentences contain an author or a publication name in a dependency********************** 

if ( ^$1(#1[mentscopubl],#2[mentscopubl])  )
    $1[totag=+](#1,#2).

if ( ^$1(#1[mentscopubl],#2) & AUTHOR(#2) )
    $1[totag=+](#1,#2).

if ( ^$1(#1,#2[mentscopubl]) & AUTHOR(#1) )
    $1[totag=+](#1,#2).

//Evidence suggests

if ( ^SUBJ(#1[mentsco],#2[lemme:evidence]) )
   SUBJ[totag=+](#1,#2).

if ( ^SUBJ-N(#1[mentsco],#2[lemme:evidence]) )
   SUBJ-N[totag=+](#1,#2).

//ASL(As,studies)
if ( ^ASL(#1[maj],#2[mentscopubl]) )
   ASL[totag=+](#1,#2).

if ( ^HEAD[totag](#1,#2) )
   HEAD[totag=~](#1,#2).

if ( ^$1[totag](#1,#1) )
   $1[totag=~](#1,#1).

if ( ^NCOORD[totag](#1,#2) )
   NCOORD[totag=~](#1,#2)

//MOD_TOTAG_POTCONCEPT_PRE(et al.,Pellegrino)

if ( ^MOD[totag](#1[lemme:et_al\.],#2) )
   MOD[totag=~](#1,#2).

//study by Tenenbaum et al.
//MOD_TOTAG_REFDEP_POST(study_OTHERPUBLICATION:+_TOCOLOR:+,et al._OTHERPUBLICATION:+_TOCOLOR:+)
//MOD_POTCONCEPT_PRE(et al._OTHERPUBLICATION:+_TOCOLOR:+,Tenenbaum)

if ( $1[totag](#1,#2[lemme:et_al\.]) & ^MOD(#2,#3) )
   MOD[totag=+](#2,#3).



/

////////////////////////////////////////////////////
// propagation to other REFDEPs
///////////////////////////////////////////////////
//argumentation
//convergence
//contr+emotion+importance=suprise
//importance - posi
//importance - nega
//qualification - posi
//qualification - nega

//relation
//comp
//evidence



( if ( $1[firsttag](#1,#2) & ^$2(#1,#3[argumentation]) )
  $2[argumentation=+](#1,#3)

( if ( $1[firsttag](#1,#2) & ^$2(#3[argumentation],#1) )
  $2[argumentation=+](#1,#3)

( if ( $1[firsttag](#1,#2) & ^$2(#2,#3[argumentation]) )
  $2[argumentation=+](#1,#3)

( if ( $1[firsttag](#1,#2) & ^$2(#3[argumentation],#2) )
  $2[argumentation=+](#1,#3)
\


//************Label persons**********************


//if ( ( $1[accordingto](#1,#2) | $1[accordingto](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[accordingto](#2) )
//   AUTHOR[accordingto=+](#2).

if ( ( $1[importance](#1,#2) | $1[importance](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[importance](#2) )
   AUTHOR[importance=+](#2).

if ( ( $1[convergence](#1,#2) | $1[convergence](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[convergence](#2) )
   AUTHOR[convergence=+](#2).

//if ( ( $1[qualification](#1,#2) | $1[qualification](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[qualification](#2) )
//   AUTHOR[qualification=+](#2).

if ( ( $1[nega](#1,#2) | $1[nega](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[nega](#2) )
   AUTHOR[nega=+](#2).

if ( ( $1[posi](#1,#2) | $1[posi](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[posi](#2) )
   AUTHOR[posi=+](#2).

if ( ( $1[surprise](#1,#2) | $1[surprise](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[surprise](#2) )
   AUTHOR[surprise=+](#2).

if ( ( $1[argumentation](#1,#2) | $1[argumentation](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[argumentation](#2) )
   AUTHOR[argumentation=+](#2).

if ( ( $1[evidence](#1,#2) | $1[evidence](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[evidence](#2) )
   AUTHOR[evidence=+](#2).

//if ( ( $1[relation](#1,#2) | $1[relation](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[relation](#2) )
//   AUTHOR[relation=+](#2).

//if ( ( $1[comp](#1,#2) | $1[comp](#2,#1) ) & ^AUTHOR(#2) & ~AUTHOR[comp](#2) )
//  AUTHOR[comp=+](#2).


if ( ^HEAD[potconcept](#1,#2) )
   HEAD[potconcept=~](#1,#2).

if ( ^PREPD[potconcept](#1,#2) )
   PREPD[potconcept=~](#1,#2).

if ( ^NUCL[potconcept](#1,#2) )
   NUCL[potconcept=~](#1,#2).

if ( ^DETD[potconcept](#1,#2) )
   DETD[potconcept=~](#1,#2).

if ( ^VDOMAIN[potconcept](#1,#2) )
   VDOMAIN[potconcept=~](#1,#2).


//************Mark labelled dependencies for coloration**********************

//argumentation
//convergence
//contr+emotion+importance=suprise
//importance - posi
//importance - nega
//qualification - posi
//qualification - nega

//relation
//comp
//evidence

/
Script:

iftest ( $1[importance](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }

iftest ( $1[argumentation](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }

iftest ( $1[convergence](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }

//iftest ( $1[qualification](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }

iftest ( $1[surprise](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }

iftest ( $1[relation](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }

iftest ( $1[comp](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }

iftest ( $1[evidence](#1,#2) ) { #1[tocolor=+];  #2[tocolor=+]; }


DependencyRules:

//| nadj#4[tocolor]{#1[tocolor=+],#2[tocolor=+],#3[tocolor=+] } |
| #4[tocolor]{#1[tocolor=+],#2[tocolor=+] } |
  ~.

| #4[tocolor]{#1[tocolor=+],#2[tocolor=+],#3[tocolor=+] } |
  ~.

| #4[tocolor]{#1[tocolor=+],#2[tocolor=+],#3[tocolor=+],#4[tocolor=+] } |
  ~.


| #1[tocolor,mentscopubl,otherpublication=+] |
  ~.

//{NOUN_OTHERPUBLICATION:+_TOCOLOR:+{Brian_TOCOLOR:+ Simon_TOCOLOR:+}}

| #1[otherpublication]{#2[tocolor,otherpublication=+],#3[tocolor,otherpublication=+]} |
  ~.

| #1[tocolor,otherpublication=~,argumentation] |
  ~.

\

