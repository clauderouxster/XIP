//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//! Xerox Research Centre Europe - Grenoble Laboratory
//!
//! Copyright (c) 2009 Xerox Corporation.  All Rights Reserved.
//!
//! --- CONTENTS ---
//!   Project    : English XIP grammar for EERQI
//!   filename   : dependency-irms_eerqi.xip
//!   Date       : 2009
//!   Author     : Agnes Sandor
//!  
//!
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

DependencyRules:

////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
///////                  CONTRIBUTION                    ///////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////



| TOP#1{ ?+ } |
if ( ~$1[contribution](#1) & $2[contribution](#34,#4) )
   SUMMARY[contribution=+](#1).

if ( ^IMPSENT(#1) & SUMMARY(#1) )
   IMPSUMMARY[contribution=+](#1).

if ( IMPSUMMARY(#1) & ^SUMMARY(#1) )
   ~.

////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
///////                  SENT                            ///////
////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////

| TOP#1{ ?+ } |
if ( ~SENT(#1) )
   SENT(#1).

if ( ^SENT(#1) & $1[reference](#2) )
   SENT[reference=+](#1).

if ( ^SENT(#1) & $1[reference](#2,#3) )
   SENT[reference=+](#1).



////////////////////////////////////////////////

//if ( DATE[reference](#1) & ^SUMMARY[contribution](#2) )
//   SENT[contribution=~](#2)




//************Label sentences**********************

//if ( ^SENT(#1) & $1[accordingto](#3,#4) )
//   SENT[accordingto=+](#1).

if ( ^SENT(#1) & $1[importance](#3,#4) )
   SENT[importance=+](#1).

if ( ^SENT(#1) & $1[convergence](#3,#4) )
   SENT[convergence=+](#1).

if ( ^SENT(#1) & $1[qualification](#3,#4) )
   SENT[qualification=+](#1).

if ( ^SENT(#1) & $1[nega](#3,#4) )
   SENT[nega=+](#1).

if ( ^SENT(#1) & $1[posi](#3,#4) )
   SENT[posi=+](#1).

if ( ^SENT(#1) & $1[surprise](#3,#4) )
   SENT[surprise=+](#1).

if ( ^SENT(#1) & $1[argumentation](#3,#4) )
   SENT[argumentation=+](#1).

if ( ^SENT(#1) & $1[evidence](#3,#4) )
   SENT[evidence=+](#1).

| #1[surprise,adv,tocolor=+] |
if ( ^SENT(#2) )
   SENT[surprise=+](#2).

| #1[surprise,vprog,tocolor=+] |
if ( ^SENT(#2) )
   SENT[surprise=+](#2).


//| #1[argumentation,adv,tocolor=+] |
//if ( ( $1[reference](#2) | $1[reference](#2,#3) ) & ^SENT[totag](#4) )
//   SENT[argumentation=+](#4).


| #1[surface:~first,importance,adv,tocolor=+] |
if ( ( $1[reference](#2) | $1[reference](#2,#3) ) & ^SENT[totag](#4)  )
   SENT[importance=+](#4).



//if ( ^SENT(#1) & $1[relation](#3,#4) )
//   SENT[relation=+](#1).

//if ( ^SENT(#1) & $1[comp](#3,#4) )
//   SENT[comp=+](#1).


/////////////

//if ( SENT[accordingto](#1) & ^AUTHOR(#2) & ~AUTHOR[accordingto](#2) )
//   AUTHOR[accordingto=+](#2).


if ( SENT[importance](#1) & ^AUTHOR(#2) & ~AUTHOR[importance](#2) )
   AUTHOR[importance=+](#2).

if ( SENT[convergence](#1) & ^AUTHOR(#2) & ~AUTHOR[convergence](#2) )
   AUTHOR[convergence=+](#2).

if ( SENT[qualification](#1) & ^AUTHOR(#2) & ~AUTHOR[qualification](#2) )
   AUTHOR[qualification=+](#2).

if ( SENT[nega](#1) & ^AUTHOR(#2) & ~AUTHOR[nega](#2) )
   AUTHOR[nega=+](#2).

if ( SENT[posi](#1) & ^AUTHOR(#2) & ~AUTHOR[posi](#2) )
   AUTHOR[posi=+](#2).

if ( SENT[surprise](#1) & ^AUTHOR(#2) & ~AUTHOR[surprise](#2) )
   AUTHOR[surprise=+](#2).

if ( SENT[argumentation](#1) & ^AUTHOR(#2) & ~AUTHOR[argumentation](#2) )
   AUTHOR[argumentation=+](#2).

if ( SENT[evidence](#1) & ^AUTHOR(#2) & ~AUTHOR[evidence](#2) )
   AUTHOR[evidence=+](#2).

if ( SENT[surprise](#1) & ^AUTHOR(#2) & ~AUTHOR[surprise](#2) )
   AUTHOR[surprise=+](#2).

//if ( SENT[relation](#1) & ^AUTHOR(#2) & ~AUTHOR[relation](#2) )
//   AUTHOR[relation=+](#2).

//if ( SENT[comp](#1) & ^AUTHOR(#2) & ~AUTHOR[comp](#2) )
//   AUTHOR[comp=+](#2).

/////////////////////////////



if ( $1[totag](#1,#2) & ^SENT(#3) )
   SENT[totag=+](#3).

//************Mark relevant words referring to the publication for coloration**********************

Script:


iftest ( SENT[totag](#3) & $1[totag](#1,#2) ) { #1[tocolor=+,otherpublication=+]; #2[tocolor=+,otherpublication=+]; }

DependencyRules:

| #4[tocolor,otherpublication]{#1[tocolor=+,otherpublication=+],#2[tocolor=+,otherpublication=+] } |
  ~.

| #4[tocolor,otherpublication]{#1[tocolor=+,otherpublication=+],#2[tocolor=+,otherpublication=+],#3[tocolor=+,otherpublication=+] } |
  ~.

| #4[tocolor,otherpublication]{#1[tocolor=+,otherpublication=+],#2[tocolor=+,otherpublication=+],#3[tocolor=+,otherpublication=+],#4[tocolor=+,otherpublication=+] } |
  ~.


DependencyRules:

 if ( SENT[totag:~](#3) & ^$1[refdep](#1,#2) )
 $1[refdep=~](#1,#2).
 
   
///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////				mark REFDEP	        	///////////	
///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////

if ( ( ^$1[refdep](#1[importance],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[importance]) ) )
   $1[refdep,importance=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[convergence],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[convergence]) ) )
   $1[refdep,convergence=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[qualification],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[qualification]) ) )
   $1[refdep,qualification=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[nega],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[nega]) ) )
   $1[refdep,nega=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[posi],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[posi]) ) )
   $1[refdep,posi=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[surprise],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[surprise]) ) )
   $1[refdep,surprise=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[argumentation],#2[rf]) | ^$1[refdep](#1[rf],#2[argumentation]) ) )
   $1[refdep,argumentation=+,firsttag=+](#1,#2).

if ( ( ^$1[refdep](#1[evidence],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[evidence]) ) )
   $1[refdep,evidence=+,firsttag=+](#1,#2).


//if ( ( ^$1[refdep](#1[relation],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[relation]) ) )
//   $1[refdep,relation=+](#1,#2).

//if ( ( ^$1[refdep](#1[comp],#2[mentscopubl]) | ^$1[refdep](#1[mentscopubl],#2[comp]) ) )
//   $1[refdep,comp=+](#1,#2).


///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////
//////				mark REFDEP	        	///////////	
///////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////


//SENT + IMPSENT

if ( SENT[qualification](#1) & ^IMPSENT(#1) )
   IMPSENT[qualification=+](#1)

if ( SENT[evidence](#1) & ^IMPSENT(#1) )
   IMPSENT[evidence=+](#1)

if ( SENT[posi](#1) & ^IMPSENT(#1) )
   IMPSENT[posi=+](#1)

if ( SENT[surprise](#1) & ^IMPSENT(#1) )
   IMPSENT[surprise=+](#1)

if ( SENT[argumentation](#1) & ^IMPSENT(#1) )
   IMPSENT[argumentation=+](#1)

if ( SENT[accordingto](#1) & ^IMPSENT(#1) )
   IMPSENT[accordingto=+](#1)

if ( SENT[nega](#1) & ^IMPSENT(#1) )
   IMPSENT[nega=+](#1)

if ( SENT[relation](#1) & ^IMPSENT(#1) )
   IMPSENT[relation=+](#1)

if ( SENT[comp](#1) & ^IMPSENT(#1) )
   IMPSENT[comp=+](#1)

if ( SENT[convergence](#1) & ^IMPSENT(#1) )
   IMPSENT[convergence=+](#1)

if ( SENT[totag](#1) & ^IMPSENT(#1) )
   IMPSENT[totag=+](#1)

if ( SENT[reference](#1) & ^IMPSENT(#1) )
   IMPSENT[reference=+](#1)


//SENT + IMPSUMMARY

if ( SENT[qualification](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[qualification=+](#1)

if ( SENT[evidence](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[evidence=+](#1)

if ( SENT[posi](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[posi=+](#1)

if ( SENT[surprise](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[surprise=+](#1)

if ( SENT[argumentation](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[argumentation=+](#1)

if ( SENT[accordingto](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[accordingto=+](#1)

if ( SENT[nega](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[nega=+](#1)

if ( SENT[relation](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[relation=+](#1)

if ( SENT[comp](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[comp=+](#1)

if ( SENT[convergence](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[convergence=+](#1)

if ( SENT[totag](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[totag=+](#1)

if ( SENT[reference](#1) & ^IMPSUMMARY(#1) )
   IMPSUMMARY[reference=+](#1)

//SENT + SUMMARY

if ( SENT[qualification](#1) & ^SUMMARY(#1) )
   SUMMARY[qualification=+](#1)

if ( SENT[evidence](#1) & ^SUMMARY(#1) )
   SUMMARY[evidence=+](#1)

if ( SENT[posi](#1) & ^SUMMARY(#1) )
   SUMMARY[posi=+](#1)

if ( SENT[surprise](#1) & ^SUMMARY(#1) )
   SUMMARY[surprise=+](#1)

if ( SENT[argumentation](#1) & ^SUMMARY(#1) )
   SUMMARY[argumentation=+](#1)

if ( SENT[accordingto](#1) & ^SUMMARY(#1) )
   SUMMARY[accordingto=+](#1)

if ( SENT[nega](#1) & ^SUMMARY(#1) )
   SUMMARY[nega=+](#1)

if ( SENT[relation](#1) & ^SUMMARY(#1) )
   SUMMARY[relation=+](#1)

if ( SENT[comp](#1) & ^SUMMARY(#1) )
   SUMMARY[comp=+](#1)

if ( SENT[convergence](#1) & ^SUMMARY(#1) )
   SUMMARY[convergence=+](#1)

if ( SENT[totag](#1) & ^SUMMARY(#1) )
   SUMMARY[totag=+](#1)

if ( SENT[reference](#1) & ^SUMMARY(#1) )
   SUMMARY[reference=+](#1)


//////////////////////////////////////////////

///KEYSENT

if ( IMPSENT[vis](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[emph](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[attitude](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[surprise](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[logic](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[question](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[negative](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[weakcontr](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[tempstat](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

if ( IMPSENT[nostat](#1) & ~PROBLEM(#1) )
   PROBLEM(#1)

//if ( IMPSENT[novstat](#1) & ~PROBLEM(#1) )
//   PROBLEM(#1)

if ( IMPSUMMARY[vis](#1) & ~PROBLEM-SUMMARY(#1) )
   PROBLEM-SUMMARY(#1)

if ( IMPSUMMARY[logic](#1) & ~PROBLEM-SUMMARY(#1) )
   PROBLEM-SUMMARY(#1)

if ( IMPSUMMARY[question](#1) & ~PROBLEM-SUMMARY(#1) )
   PROBLEM-SUMMARY(#1)

if ( IMPSUMMARY[negative](#1) & ~PROBLEM-SUMMARY(#1) )
   PROBLEM-SUMMARY(#1)

if ( IMPSUMMARY[weakcontr](#1) & ~PROBLEM-SUMMARY(#1) )
   PROBLEM-SUMMARY(#1)

if ( IMPSUMMARY[nostat](#1) & ~PROBLEM-SUMMARY(#1) )
   PROBLEM-SUMMARY(#1)

if ( IMPSUMMARY[emph](#1) & ~PROBLEM-SUMMARY(#1) )
   PROBLEM-SUMMARY(#1)

if ( IMPSUMMARY(#1) & ~PROBLEM-SUMMARY(#1) & ~SUMMARY(#1) )
   SUMMARY(#1).

if ( ^$1[weakcontr](#1) )
    $1[contrast=+,weakcontr=~,vis=+](#1).

if ( ^SENT(#1) & PROBLEM(#1) )
   ~.

if ( ^SENT(#1) & SUMMARY(#1) )
   ~.

if ( ^SENT(#1) & PROBLEM-SUMMARY(#1) )
   ~.


///////////////////////////
// for coloring metadiscourse words
///////////////////////////

| #1[md=+] |
if ( KSWDEP(#1,#2) & PROBLEM(#3))
   ~.

| #2[md=+] |
if ( KSWDEP(#1,#2) & PROBLEM(#3))
   ~.

| #1[md=+] |
if ( KSWDEP(#1) & PROBLEM(#3) & #1~:#3 )
   ~.


| #1[md=+] |
if ( KSWDEP(#1,#2) & PROBLEM-SUMMARY(#3) )
   ~.

| #2[md=+] |if ( KSWDEP(#1,#2) & PROBLEM-SUMMARY(#3) )
   ~.

| #1[md=+] |
if ( KSWDEP(#1) & PROBLEM-SUMMARY(#3) & #1~:#3 )
   ~.

| #1[md=+] |
if ( KSWDEP(#1,#2) & SUMMARY(#3) )
   ~.

| #2[md=+] |
if ( KSWDEP(#1,#2) & SUMMARY(#3) )
   ~.

| #1[md=+] |
if ( KSWDEP(#1) & SUMMARY(#3) & #1~:#3 )
   ~.

////////////

| #1[md=+] |
if ( $1[contribution](#1,#2) & PROBLEM-SUMMARY(#3) )
   ~.

| #2[md=+] |
if ( $1[contribution](#1,#2) & PROBLEM-SUMMARY(#3) )
   ~.

| #1[md=+] |
if ( $1[contribution](#1) & PROBLEM-SUMMARY(#3) & #1~:#3 )
   ~.

| #1[md=+] |
if ( $1[contribution](#1,#2) & SUMMARY(#3) )
   ~.

| #2[md=+] |
if ( $1[contribution](#1,#2) & SUMMARY(#3) )
   ~.

| #1[md=+] |
if ( $1[contribution](#1) & SUMMARY(#3) & #1~:#3 )
   ~.

//////////////


| #5noun[md]{#1[md=+],#2[md=+],#3[md=+],#4[md=+]} |
  ~.

| #4noun[md]{#1[md=+],#2[md=+],#3[md=+]} |
  ~.

| #4noun[md]{#1[md=+],#2[md=+]} |
  ~.

