DependencyRules:

//Beneficiary for-PP

//bnftest1
| PP#2{prep[lemme:for]} |
       if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1[a_vcreation],#3[date:~,tempexpr:~,time:~]) )
      BNF[rsn=~](#1,#3)
//OK a_vcreation

//| SC{?*, FV{?*, verb#1[vtransfer]}};?{?*,verb#1[vtransfer]}, ?*, PP#2{prep[lemme:for]} |
 //       if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1,#3) )
//        VMOD[rsn=~,bnf=+](#1,#3)
// NO

//| SC{?*, FV{?*, verb#1[vcost]}};?{?*,verb#1[vcost]}, ?*, PP#2{prep[lemme:for]} |
//      if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1,#3) )
//      VMOD[rsn=~,bnf=+](#1,#3)
// NO

// Rule 620
| PP#2{prep[lemme:for]} |
       if ( HEAD(#3,#2) & ^VMOD[bnf:~,loc:~](#1[a_vobtaining],#3) )
      BNF[rsn=~](#1,#3)
// OK a_vobtaining



//SC{?*, FV{?*, verb#1[vselection]}};?{?*,verb#1[vselection]}, ?*, PP#2{prep[lemme:for]} |
//      if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1,#3) )
//      VMOD[rsn=~,bnf=+](#1,#3)
// NO


| PP#2{prep[lemme:for]} |
        if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1[a_vsteal],#3) )
        BNF[rsn=~](#1,#3)
// OK a_vsteal


| PP#2{prep[lemme:for]} |
        if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1[a_vdestruction],#3) )
        BNF[rsn=~](#1,#3)
// OK a_vdestruction


//| SC{?*, FV{?*, verb#1[vconsumption]}};?{?*,verb#1[vconsumption]}, ?*, PP#2{prep[lemme:for]} |
//        if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1,#3) )
//        VMOD[rsn=~,bnf=+](#1,#3)
// NO


//| SC{?*, FV{?*, verb#1[vperception]}};?{?*,verb#1[vperception]}, ?*, PP#2{prep[lemme:for]} |
//        if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1,#3) )
//        VMOD[rsn=~,bnf=+](#1,#3)
// NO

//| SC{?*, FV{?*, verb#1[vsymbolicaction]}};?{?*,verb#1[vsymbolicaction]}, ?*, PP#2{prep[lemme:for]} |
//        if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1,#3) )
//        VMOD[rsn=~,bnf=+](#1,#3)
// NO


| PP#2{prep[lemme:for]} |
        if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1[a_kill],#3) )
        BNF[rsn=~](#1,#3)
// OK a_kill






if ( BNF[post:+](#1,#2) & ^NMOD[post](?,#2) )
	~

//| SC{?*, FV{?*, verb#1}};?{?*,verb#1}, ?*, PP#2{prep[lemme:for]} |
//        if ( HEAD(#3,#2) & ^VMOD[bnf:~](#1,#3) )
//        VMOD[rsn=~,bnf=+](#1,#3)

	if ( ^VMOD[dur,post](#2,#1))
		VMOD[bnf=~,dur=+](#2,#1)

	if ( ^VMOD[temp,post](#2,#1))
		VMOD[bnf=~,temp=+](#2,#1)



//Beneficiary IO
// Modified from effi's files

if ( ^IOBJ[bnf:~](#1[a_vcreation],#3) )
        BNF[rcp=~](#1,#3)

//| SC{?*, FV{?*, verb#1[vtransfer]}};?{?*,verb#1[vtransfer]}, NP#2 |
//        if ( HEAD(#3,#2) & ^IOBJ[bnf:~](#1,#3) )
//        IOBJ[rcp=~,bnf=+](#1,#3)

//| SC{?*, FV{?*, verb#1[vcost]}};?{?*,verb#1[vcost]}, NP#2 |
//        if ( HEAD(#3,#2) & ^IOBJ[bnf:~](#1,#3) )
//        IOBJ[rcp=~,bnf=+](#1,#3)

if ( ^IOBJ[bnf:~](#1[a_vobtaining],#3) )
        BNF[rcp=~](#1,#3)

//| SC{?*, FV{?*, verb#1[vselection]}};?{?*,verb#1[vselection]}, NP#2 |
//        if ( HEAD(#3,#2) & ^IOBJ[bnf:~](#1,#3) )
//        IOBJ[rcp=~,bnf=+](#1,#3)

if ( ^IOBJ[bnf:~](#1[a_vsteal],#3) )
        BNF[rcp=~](#1,#3)

if ( ^IOBJ[bnf:~](#1[a_vdestruction],#3) )
        BNF[rcp=~](#1,#3)

//| SC{?*, FV{?*, verb#1[vconsumption]}};?{?*,verb#1[vconsumption]}, NP#2 |
//        if ( HEAD(#3,#2) & ^IOBJ[bnf:~](#1,#3) )
//        IOBJ[rcp=~,bnf=+](#1,#3)

//| SC{?*, FV{?*, verb#1[vperception]}};?{?*,verb#1[vperception]}, NP#2 |
//        if ( HEAD(#3,#2) & ^IOBJ[bnf:~](#1,#3) )
//        IOBJ[rcp=~,bnf=+](#1,#3)

//| SC{?*, FV{?*, verb#1[vsymbolicaction]}};?{?*,verb#1[vsymbolicaction]}, NP#2 |
//        if ( HEAD(#3,#2) & ^IOBJ[bnf:~](#1,#3) )
//        IOBJ[rcp=~,bnf=+](#1,#3)


if ( ^IOBJ[bnf:~](#1[a_kill],#3) )
        BNF[rcp=~](#1,#3)




//if (BNF(#1,#2) )
//	LIXO(#1)


