[logger]
level=DEBUG

[config:]
file=${serverRoot}/conf/workers2.properties
debug=255
debugEnv=10

#[uriMap:]
#info=Maps the requests. Options: debug
#debug=255

[workerEnv:]
#info=Global server options
#timing=1
debug=255

# Define the comunication channel 
[channel.jni:jni]
info=The jni channel, used if tomcat is started inprocess

# Define the parameters for the Java Virtual Machine
[vm:]
info=Parameters used to load a JVM in the server process
#JVM=$(JAVA_HOME)/jre/lib/i386/server/libjvm.so
JVM=/home/grondeau/tools/j2sdk1.4.2/jre/lib/i386/client/libjvm.so
#OPT=-Djava.class.path=$(TOMCAT_HOME)/server/lib/tomcat-jni.jar;$(TOMCAT_HOME)/server/lib/tomcat-jk2.jar
OPT=-Djava.class.path=/home/grondeau/tools/apache/jakarta-tomcat-5.0.25/server/lib/tomcat-jni.jar;/home/grondeau/tools/apache/jakarta-tomcat-5.0.25/server/lib/tomcat-jk2.jar
#OPT=-Dtomcat.home=$(TOMCAT_HOME)
OPT=-Dtomcat.home=/home/grondeau/tools/apache/jakarta-tomcat-5.0.25
#OPT=-Dcatalina.home=$(TOMCAT_HOME)
OPT=-Dcatalina.home=/home/grondeau/tools/apache/jakarta-tomcat-5.0.25
OPT=-Xmx128M
#disabled=0

# JNI worker startup handler
[worker.jni:onStartup]
info=Command to be executed by the VM on startup. This one will start tomcat.
class=org/apache/jk/apr/TomcatStarter
ARG=stard
#ARG=start
#disabled=0
stdout=${serverRoot}/logs/stdout.log
stderr=${serverRoot}/logs/stderr.log

# JNI worker shutdown handler
[worker.jni:onShutdown]
info=Command to be executed by the VM on shutdown. This one will stop tomcat.
class=org/apache/jk/apr/TomcatStarter
ARG=stop
#disabled=0

# Map the Tomcat examples webapp to the Web server uri space
[uri:/examples/*]
info=Map the whole webapp

# Map XIP to the Web server uri space
[uri:/xip/*]
info=xip mapping
debug=255
