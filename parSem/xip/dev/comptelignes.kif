string fichiers=@"
varlibxml.cxx, avl.cxx, analyse.cxx, avlcat.cxx, avlreg.cxx, avltrait.cxx, avlvoc.cxx,
                  chainefr.cxx, chaineen.cxx, divers.cxx, lecttest.cxx, applique.cxx, indexation.cxx,
                  lire.cxx, noeud.cxx, pls.cxx, vecteur.cxx, traitement.cxx, initial.cxx, automate.cxx,
                  avlfonc.cxx, parseur.cxx, affiche.cxx, sinput.cxx, disamb.cxx, mathemat.cxx, transduct.cxx,
                  lliste.cxx, result.cxx, xmlxip.cxx, xipaxip.cxx, xiplibxml.cxx, ontologies.cxx,kifsparse.cxx,
                  tokenplus.cxx, graphe.cxx, createaut.cxx, generation.cxx, arbren.cxx, kiflibs.cxx, kifcontainer.cxx,kifpredicate.cxx,
                  kif.cxx, kifrulegen.cxx,kifn.cxx, stlresul.cxx,kifglobalthread.cxx,kifmaps.cxx,kifpmaps.cxx,treemaps.cxx,kifautomaton.cxx,
                  testutf8.cxx, xipkif.cxx, kifraw.cxx, 
		  kifsqlite/kifxml.cxx, kifsqlite/kifsocket.cxx,kifsqlite/kifsys.cxx
"@;


svector v=fichiers.split(",");

v=<x.trim() | x <- v>;

string s;
svector incs=kifsys.ls(_current+'/include');
int nb;
svector l;

for (s in incs) {
    if (s[-2:]==".h") {
        file f(_current+"/include/"+s,"r");
        l=f.read();
        l=<y | x <- l, let y=x.trim(), y.size()!=0 and y[0]!='/'>;
        nb+=l;
        f.close();
    }
}

for (s in v) {
    file f(_current+"/src/"+s,"r");
    l=f.read();
    l=<y | x <- l, let y=x.trim(), y.size()!=0 and y[0]!='/'>;
    nb+=l;
    f.close();
}

println("Fin:",nb);

//228347
