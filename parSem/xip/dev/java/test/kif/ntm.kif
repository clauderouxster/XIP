

map ntmtools;

// Sets any env variable
function set_env_variable(string varname, string value) {
	kifsys.env(varname,value);
}

/////////////////////////////////////////////////////////////////////
// This is how xfst sources can be compiled into FSTs 

function compileFstAndSave(fst terms, string filename, string fstname) {
	// println("####"+filename);
	terms.loadspacedtext(filename,true);
	terms.save(fstname);
}

//////////////////////////////////////////////
// init ntm (load the fsts from the ntm script)
function initntm(int ntm_id, string ntmscriptpath) {
	ntm ntm1(ntmscriptpath,true);
	ntmtools[ntm_id] = ntm1;
}

//
function analyze_string(int ntm_id, string str) {
	vector v = ntmtools[ntm_id].lookupstring(str);
	// println(v);
	return(v.json());
}

function analyze_file(int ntm_id, string str) {
	vector v = ntmtools[ntm_id].lookupfile(str);
	// println(v);
	return(v.json());
}



//initntm(0,'W:\users\Roux\xip\parSem\xip\dev\GRAMMARS\ENGLISH\NTMFILES\ntmkif');
//string vx=analyze_file(0,'W:\users\Roux\xip\parSem\xip\dev\GRAMMARS\ENGLISH\NTMFILES\tt.txt');
//println(vx);

