
<project name="" default="all" basedir=".">
    <property environment="env"/>
    <property name="common.dir"     location="${basedir}/../../../../../common" />
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="${common.dir}/ant-contrib.jar"/>
        </classpath>
    </taskdef>

    <property name="jxip.jar" location="../../dist/jxip.jar" />

    <target name="usage" >
        <echo message="ant:  launch ant jtop-1000, jtop-5000, jtop-50000, jtop-100000" />
        <echo message="ant test-1000  (or test-5000, test-50000, test-100000)" />
        <echo message="ant newRef    copy les resultats de test dans les fichiers de references (outputRef-1000,...)" />
        <echo message="ant clean" />
    </target>

    <target name="all" depends="jtop-1000, jtop-5000, jtop-50000, jtop-100000" />

    <target name="test-1000" depends=""  >
        <antcall target="test" >
            <param name="input" value="input-1000"/>
            <param name="output" value="output-1000"/>
        </antcall>
    </target>

    <target name="jtop-1000" depends=""  >
        <antcall target="jtop" >
            <param name="input" value="input-1000"/>
            <param name="output" value="output-1000"/>
            <param name="outputRes" value="outputRes-1000"/>
            <param name="iteration" value="25"/>
            <param name="delay" value="1"/>
        </antcall>
    </target>
    
    <target name="test-5000" depends=""  >
        <antcall target="test" >
            <param name="input" value="input-5000"/>
            <param name="output" value="output-5000"/>
        </antcall>
    </target>

    <target name="jtop-5000" depends=""  >
        <antcall target="jtop" >
            <param name="input" value="input-5000"/>
            <param name="output" value="output-5000"/>
            <param name="outputRes" value="outputRes-5000"/>
            <param name="iteration" value="15"/>
            <param name="delay" value="5"/>
        </antcall>
    </target>

    <target name="test-50000" depends=""  >
        <antcall target="test" >
            <param name="input" value="input-50000"/>
            <param name="output" value="output-50000"/>
        </antcall>
    </target>

    <target name="jtop-50000" depends=""  >
        <antcall target="jtop" >
            <param name="input" value="input-50000"/>
            <param name="output" value="output-50000"/>
            <param name="outputRes" value="outputRes-50000"/>
            <param name="iteration" value="220"/>    <!--test duration:  around 3h30 -->
            <param name="delay" value="60"/>
        </antcall>
    </target>

    <target name="test-100000" depends=""  >
        <antcall target="test" >
            <param name="input" value="input-100000"/>
            <param name="output" value="output-100000"/>
        </antcall>
    </target>

    <target name="jtop-100000" depends=""  >
        <antcall target="jtop" >
            <param name="input" value="input-100000"/>
            <param name="output" value="output-100000"/>
            <param name="outputRes" value="outputRes-100000"/>
            <param name="iteration" value="100"/> <!-- test duration: around 15h -->
            <param name="delay" value="600"/>
        </antcall>
    </target>

    <target name="test" depends=""  >
        <delete file="${output}" quiet="true"/>
        <antcall target="run" >
            <param name="input" value="${input}"/>
        </antcall>
        <loadfile  property="res"  srcfile="${output}" >
            <filterchain>
                <linecontains>
                    <contains value="---"/>
                </linecontains>
            </filterchain>
        </loadfile>
        <echo message="${res}" />
        <echo message="${res}" file="${output}"/>
    </target>

    <target name="jtop" >
        <parallel>
            <antcall target="test" >
                <param name="input" value="${input}"/>
            </antcall>
            <antcall target="jtopInt" >
                <param name="input" value="${input}"/>
            </antcall>
        </parallel>
    </target>
    
    <target name="jtopInt" depends="" >
        <!-- wait to be sure the test is running  -->
        <sleep seconds="3" />
        <!-- get the pid of the running test  -->
        <delete file="tmp" quiet="true" />
        <exec executable="ps" output="tmp">
            <arg line="-fu ${env.USER}"/>
        </exec>
        <loadfile srcfile="tmp" property="pid">
            <filterchain>
                <tokenfilter>
                    <containsstring contains="${input}"/>
                    <replaceregex pattern="[a-zA-Z0-9]+[ ]+([0-9]+)[ ]+.*" replace="\1"/>
                </tokenfilter>
                <deletecharacters chars="\n\r"/>
            </filterchain>
        </loadfile>
        <delete file="tmp" quiet="true" />
        <echo message="" file="${outputRes}" append="true"/>
        <delete file="tmp1" quiet="true" />
        <!-- launch top -->
        <exec executable="top" output="tmp1" >
            <arg line="-b -n ${iteration} -d ${delay} -p ${pid}"/>
        </exec>
        <!-- get only the line with info concerning the test process like :
        5671 grondeau  33  14  316m 101m 9.9m S 100.9  2.5   0:07.88 java
        -->
        <loadfile srcfile="tmp1" property="res">
            <filterchain>
                <tokenfilter>
                    <containsstring contains="${pid}"/>
                </tokenfilter>
            </filterchain>
        </loadfile>
        <delete file="tmp1" quiet="true" />
        <echo message="${env.COMPUTERNAME}${line.separator}"  file="${outputRes}" />
        <echo message="${env.HOST}${line.separator}" file="${outputRes}" append="true" />
        <echo message="pid=${pid}${line.separator}" file="${outputRes}" append="true"/>
        <!-- write the output of the test -->
        <echo message="" file="${outputRes}" append="true" />
        <loadfile srcfile="${output}" property="tmp2"/>
        <echo message="${tmp2}" file="${outputRes}" append="true" />
        <!-- write the info get from top -->
        <echo message="" file="${outputRes}" append="true" />
        <echo message="${res}" file="${outputRes}" append="true"/>
        <delete file="${output}" quiet="true" />
    </target>

    <target name="run" depends="compile"  >
        <tstamp>
            <format property="time.start" pattern="hh:mm:ss"/>
        </tstamp>
        <java classpath="${jxip.jar}:${basedir}/build"
            classname="testMem1.Test" fork="true" failonerror="true" maxmemory="512m"
            output="${output}" append="true" >
            <arg value="${basedir}/../../../GRAMMARS/ENGLISH/GRMFILES/GRAM_GEN/gram_gen_entit.grm"/>
            <arg value="${input}"/>
        </java>
        <tstamp>
            <format property="time.end" pattern="hh:mm:ss"/>
        </tstamp>
        <echo message="--- start: ${time.start}  end: ${time.end}${line.separator}" file="${output}" append="true" />
        <echo message="${output}" />
    </target>

    <target name="compile" depends="">
        <mkdir dir="build" />
        <javac srcdir="${basedir}"
		destdir="build" 
		classpath="${jxip.jar}"
                debug="true">
        </javac>
    </target>

    <target name="newRef" depends="" >
        <copy file="outputRes-1000" tofile="outputRef-1000" />
        <copy file="outputRes-5000" tofile="outputRef-5000" />
        <copy file="outputRes-50000" tofile="outputRef-50000" />
        <copy file="outputRes-100000" tofile="outputRef-100000" />
    </target>

    <target name="clean" depends="" >
        <delete dir="build" />
        <delete file="output-1000" />
        <delete file="output-5000" />
        <delete file="output-50000" />
        <delete file="output-100000" />
        <delete file="outputRes-1000" />
        <delete file="outputRes-5000" />
        <delete file="outputRes-50000" />
        <delete file="outputRes-100000" />
        <delete file="tmp" />
        <delete file="tmp1"/>
    </target>

</project>

