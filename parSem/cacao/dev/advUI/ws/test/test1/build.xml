
<project default="all" basedir=".">
    <taskdef resource="net/sf/antcontrib/antlib.xml">
        <classpath>
            <pathelement location="/opt/ParSem/tools/ant-contrib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>
    
    <target name="all" depends="clean, jar, mdiInst" />

    <target name="compile" depends="init">
        <mkdir dir="${classDir}"/>
        <javac srcdir="${srcDir}" destdir="${classDir}" failonerror="true" >
            <include name="**/*.java"/>
            <compilerarg value="-Xlint"/>
            <classpath refid="comp.class.path" />
        </javac>
    </target>

    <!-- ne fonctionne pas a cause du proxy cornillon: => fonctionne sur mdi -->
    <target name="run" depends="init" description="compile, and run">
        <java  classname="wsTest1.Ws_client1" fork="true" failonerror="true" maxmemory="512m">
            <arg value="-Dhttp.proxyHost=cornillon.grenoble.xrce.xerox.com"/>
            <arg value="-Dhttp.proxyPort=8000"/>
            <classpath refid="comp.class.path" />
        </java>
    </target>

    <target name="jar" depends="init, compile" description="compile, and build jar">
        <delete file="${jarFile}" />
        <jar basedir="${classDir}" destfile="${jarFile}" >
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-class" value="wsTest1.Ws_client1"/>
                <attribute name="Class-path" value="."/>
            </manifest>
            <fileset file="${configDir}/log4j.properties" />
            <zipfileset src="${cacao.jar}" />
        </jar>
    </target>

    <!-- ne fonctionne pas a cause du proxy cornillon: => fonctionne sur mdi -->
    <target name="runJar" depends="init" description="run using the jar" >
        <java  fork="true" failonerror="true" maxmemory="512m" classname="wsTest1.Ws_client1">
            <classpath>
                <pathelement location="${configDir}"/>
                <pathelement location="${jarFile}"/>
            </classpath>
        </java>
    </target>

    <target name="mdiDirs" depends="init" description="create dirs on the machine mdi">
        <sshexec host="${host}" username="${login}" password="${passwd}" command="mkdir c:/users/cacao"/>
        <sshexec host="${host}" username="${login}" password="${passwd}" command="mkdir c:/users/cacao/advUI"/>
        <sshexec host="${host}" username="${login}" password="${passwd}" command="mkdir c:/users/cacao/advUI/test"/>
        <sshexec host="${host}" username="${login}" password="${passwd}" command="mkdir c:/users/cacao/advUI/test/test1"/>
    </target>

    <target name="mdiInst" depends="init, jar" description="install ws_client1.jar and run.bat on the machine mdi">
        <scp todir="${login}:${passwd}@${host}:c:/users/cacao/advUI/test/test1" verbose="true" failonerror="true"
            file="${jarFile}" />
        <echo message="@echo on${line.separator}" append="false" file="run.bat" />
        <echo message="java -mx512m  -jar ${jarFileName}" append="true" file="run.bat" />
        <scp todir="${login}:${passwd}@${host}:c:/users/cacao/advUI/test/test1" verbose="true"  failonerror="true" >
            <fileset dir="${basedir}" includes="run.bat" />
        </scp>
        <scp todir="${login}:${passwd}@${host}:c:/users/cacao/advUI/test/test1" verbose="true"  failonerror="true" >
            <fileset dir="${configDir}" includes="log4j.properties" />
        </scp>
        <delete file="run.bat"/>
    </target>

    <target name="mdiRun" depends="init" description="run ws_client1.jar on the machine mdi">
        <sshexec host="${host}" username="${login}" password="${passwd}"
            command="cd c:\\\users\\\cacao\\\advUI\\\test\\\test1;ls -l;.\\\run.bat" failonerror="true"
                outputproperty="${out}" verbose="true" />
        <echo message="${out}" />
    </target>
    
    <target name="clean" depends="propertiesSetting">
        <delete dir="${buildDir}"/>
    </target>

    <target name="init" depends="propertiesSetting">
        <mkdir dir="${buildDir}"/>
        <mkdir dir="${classDir}"/>
    </target>
    
    <target name="propertiesSetting">
        <property name="srcDir" location="${basedir}/src" />
        <property name="buildDir" location="${basedir}/build" />
        <property name="configDir" location="${basedir}/config" />
        <property name="classDir" location="${buildDir}/classes" />
        <property name="libExt" location="${basedir}/../../../libExt" />
        <property name="jarFileName" value="ws_client1.jar" />
        <property name="jarFile" location="${buildDir}/${jarFileName}" />
       <!-- <property name="cacao.jar" location="${libExt}/ws/0.2/CACAO_WSclients.jar" /> -->
        <property name="cacao.jar" location="${libExt}/ws/0.2/cacao_client.jar" />
        <path id="comp.class.path">
            <pathelement location="${configDir}"/>
            <pathelement path="${classDir}"/>
            <pathelement location="${cacao.jar}"/>
        </path>
        <property name="host" value="217.109.185.152" /> <!-- IP mdi -->
        <property name="login" value="mdi" />
        <property name="passwd" value="dsmdi" />
    </target>
    
</project>
